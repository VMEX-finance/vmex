/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { GetUserTrancheData } from "./GetUserTrancheData";

export class GetUserTrancheDataFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    user: string,
    poolProvider: string,
    overrides?: Overrides
  ): Promise<GetUserTrancheData> {
    return super.deploy(
      user,
      poolProvider,
      overrides || {}
    ) as Promise<GetUserTrancheData>;
  }
  getDeployTransaction(
    user: string,
    poolProvider: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(user, poolProvider, overrides || {});
  }
  attach(address: string): GetUserTrancheData {
    return super.attach(address) as GetUserTrancheData;
  }
  connect(signer: Signer): GetUserTrancheDataFactory {
    return super.connect(signer) as GetUserTrancheDataFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GetUserTrancheData {
    return new Contract(address, _abi, signerOrProvider) as GetUserTrancheData;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "poolProvider",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getType",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalCollateralETH",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalDebtETH",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "availableBorrowsETH",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentLiquidationThreshold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ltv",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "healthFactor",
            type: "uint256",
          },
        ],
        internalType: "struct UserData[3]",
        name: "",
        type: "tuple[3]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516103be3803806103be83398101604081905261002f91610291565b60008190506000816001600160a01b0316630261bf8b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561006f57600080fd5b505afa158015610083573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100a79190610270565b90506100b16101f1565b60005b60038160ff1610156101c457600080600080600080886001600160a01b03166360e963898d896040518363ffffffff1660e01b81526004016100f792919061030c565b60c06040518083038186803b15801561010f57600080fd5b505afa158015610123573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061014791906102c3565b9550955095509550955095506040518060c0016040528087815260200186815260200185815260200184815260200183815260200182815250888860ff16600381106101a357634e487b7160e01b600052603260045260246000fd5b602002018190525050505050505080806101bc90610391565b9150506100b4565b506000816040516020016101d89190610328565b6040516020818303038152906040529050805181602001f35b60405180606001604052806003905b61020861021e565b8152602001906001900390816102005790505090565b6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b80516001600160a01b038116811461026b57600080fd5b919050565b600060208284031215610281578081fd5b61028a82610254565b9392505050565b600080604083850312156102a3578081fd5b6102ac83610254565b91506102ba60208401610254565b90509250929050565b60008060008060008060c087890312156102db578182fd5b865195506020870151945060408701519350606087015192506080870151915060a087015190509295509295509295565b6001600160a01b0392909216825260ff16602082015260400190565b6102408101818360005b6003811015610388578151805184526020808201518186015260408083015190860152606080830151908601526080808301519086015260a0918201519185019190915260c09093019290910190600101610332565b50505092915050565b600060ff821660ff8114156103b457634e487b7160e01b82526011600452602482fd5b6001019291505056fe";
