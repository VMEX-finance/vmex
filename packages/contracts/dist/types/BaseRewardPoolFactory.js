"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaseRewardPoolFactory = void 0;
const contracts_1 = require("@ethersproject/contracts");
class BaseRewardPoolFactory extends contracts_1.ContractFactory {
    constructor(signer) {
        super(_abi, _bytecode, signer);
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static connect(address, signerOrProvider) {
        return new contracts_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.BaseRewardPoolFactory = BaseRewardPoolFactory;
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "balanceOf",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "earned",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "extraRewards",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "extraRewardsLength",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getReward",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_account",
                type: "address",
            },
            {
                internalType: "bool",
                name: "_claimExtras",
                type: "bool",
            },
        ],
        name: "getReward",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_amount",
                type: "uint256",
            },
        ],
        name: "stake",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "stakeAll",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                internalType: "bool",
                name: "claim",
                type: "bool",
            },
        ],
        name: "withdraw",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bool",
                name: "claim",
                type: "bool",
            },
        ],
        name: "withdrawAll",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bool",
                name: "claim",
                type: "bool",
            },
        ],
        name: "withdrawAllAndUnwrap",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                internalType: "bool",
                name: "claim",
                type: "bool",
            },
        ],
        name: "withdrawAndUnwrap",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b506102ec806100206000396000f3fe608060405234801561001057600080fd5b50600436106100b35760003560e01c80637050ccd9116100715780637050ccd91461013e57806370a08231146100b85780638dcb406114610116578063a694fc3a1461014c578063c32e7202146100f6578063d55a23f41461015f576100b3565b80628cc262146100b85780631c1c6fe5146100e157806338d07436146100f65780633d18b9121461011657806340c354461461011e57806349f039a2146100e1575b600080fd5b6100cb6100c63660046101e7565b610167565b6040516100d891906102ad565b60405180910390f35b6100f46100ef36600461023a565b61016f565b005b61010961010436600461026c565b61017e565b6040516100d891906102a2565b610109610186565b61013161012c366004610254565b61018b565b6040516100d8919061028e565b610109610104366004610208565b61010961015a366004610254565b6101b5565b6100cb6101bb565b60005b919050565b61017a60008261017e565b5050565b600192915050565b600190565b6000818154811061019b57600080fd5b6000918252602090912001546001600160a01b0316905081565b50600190565b600090565b80356001600160a01b038116811461016a57600080fd5b8035801515811461016a57600080fd5b6000602082840312156101f8578081fd5b610201826101c0565b9392505050565b6000806040838503121561021a578081fd5b610223836101c0565b9150610231602084016101d7565b90509250929050565b60006020828403121561024b578081fd5b610201826101d7565b600060208284031215610265578081fd5b5035919050565b6000806040838503121561027e578182fd5b82359150610231602084016101d7565b6001600160a01b0391909116815260200190565b901515815260200190565b9081526020019056fea26469706673582212200929de8a5724bd3ec483066f71d845d2329f639f75aebb08f5ed7f526903571c64736f6c63430008000033";
//# sourceMappingURL=BaseRewardPoolFactory.js.map