{"id":"e99e404583f7ac3d7daebd9939803732","_format":"hh-sol-build-info-1","solcVersion":"0.8.0","solcLongVersion":"0.8.0+commit.c7dfd78e","input":{"language":"Solidity","sources":{"contracts/oracles/CurveWrapper.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity >=0.8.0;\n\nimport {Ownable} from \"../dependencies/openzeppelin/contracts/Ownable.sol\";\nimport {IERC20} from \"../dependencies/openzeppelin/contracts/IERC20.sol\";\n\nimport {IPriceOracleGetter} from \"../interfaces/IPriceOracleGetter.sol\";\nimport {SafeERC20} from \"../dependencies/openzeppelin/contracts/SafeERC20.sol\";\nimport {AaveOracle} from \"../misc/AaveOracle.sol\";\nimport {ILendingPoolAddressesProvider} from \"../interfaces/ILendingPoolAddressesProvider.sol\";\nimport {ICurveOracle} from \"./interfaces/ICurveOracle.sol\";\n\n// import {IPriceOracleGetter} from \"../interfaces/IPriceOracleGetter.sol\";\n// import {ICurveAddressProvider} from \"./interfaces/ICurveAddressProvider.sol\";\n// import {ICurveRegistry} from \"./interfaces/ICurveRegistry.sol\";\n\n/// @title AaveOracle\n/// @author Aave\n/// @notice Proxy smart contract to get the price of an asset from a price source, with Chainlink Aggregator\n///         smart contracts as primary option\n/// - If the returned price by a Chainlink aggregator is <= 0, the call is forwarded to a fallbackOracle\n/// - Owned by the Aave governance system, allowed to add sources for assets, replace them\n///   and change the fallbackOracle\n\n//TODO: this contract needs the addressprovider contract to get the addressprovider of the Curve pools (we don't know what network yet)\ncontract CurveWrapper is IPriceOracleGetter, Ownable {\n    using SafeERC20 for IERC20;\n\n    event BaseCurrencySet(\n        address indexed baseCurrency,\n        uint256 baseCurrencyUnit\n    );\n    event AssetSourceUpdated(address indexed asset, address indexed source);\n    event FallbackOracleUpdated(address indexed fallbackOracle);\n\n    ILendingPoolAddressesProvider internal _addressesProvider;\n    IPriceOracleGetter private _fallbackOracle; //fallback oracle for the entire price\n    // ICurveOracle private _fallbackCurvePoolOracle; //fallback oracle for curve pool, to get_virtual_price\n    address public immutable BASE_CURRENCY;\n    uint256 public immutable BASE_CURRENCY_UNIT;\n    mapping(address => address) internal lpTokenToPool;\n    mapping(address => uint256) internal numCoins; //pool address to number of coins\n    //underlyingCoins[tricrypto2 pool add][0] gets the address of the first underlying coin\n    mapping(address => mapping(uint256 => address)) internal underlyingCoins;\n\n    /// @notice Constructor\n    /// @param addressProvider The address of the vmex address provider (not the curve address provider)\n    /// @param fallbackOracle The address of the fallback oracle to use if the data of an\n    ///        aggregator is not consistent\n    /// @param baseCurrency the base currency used for the price quotes. If USD is used, base currency is 0x0\n    /// @param baseCurrencyUnit the unit of the base currency\n    constructor(\n        address addressProvider,\n        address fallbackOracle, //this will likely not be set for the Curve wrappers, maybe can use the fallback oracles from AaveOracle, but if the pool price cannot be determined then it doesn't matter if the other asset prices can be determined\n        // address fallbackCurvePoolOracle,\n        address baseCurrency,\n        uint256 baseCurrencyUnit\n    ) public {\n        _addressesProvider = ILendingPoolAddressesProvider(addressProvider);\n        _setFallbackOracle(fallbackOracle);\n        // _fallbackCurvePoolOracle = ICurveOracle(fallbackCurvePoolOracle);\n        BASE_CURRENCY = baseCurrency;\n        BASE_CURRENCY_UNIT = baseCurrencyUnit;\n        initializeMappings();\n\n        emit BaseCurrencySet(baseCurrency, baseCurrencyUnit);\n    }\n\n    function setAddressProvider(address addressProvider) external onlyOwner {\n        _addressesProvider = ILendingPoolAddressesProvider(addressProvider);\n    }\n\n    function initializeMappings() internal {\n        //Tricrypto2\n        lpTokenToPool[\n            0xc4AD29ba4B3c580e6D59105FFf484999997675Ff\n        ] = 0xD51a44d3FaE010294C616388b506AcdA1bfAAE46; //Tricrypto2\n        numCoins[0xD51a44d3FaE010294C616388b506AcdA1bfAAE46] = 3; //3 coins in tricrypto2\n        underlyingCoins[0xD51a44d3FaE010294C616388b506AcdA1bfAAE46][\n            0\n        ] = 0xdAC17F958D2ee523a2206206994597C13D831ec7; //first underlying coin is USDT\n        underlyingCoins[0xD51a44d3FaE010294C616388b506AcdA1bfAAE46][\n            1\n        ] = 0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599; //first underlying coin is WBTC\n        underlyingCoins[0xD51a44d3FaE010294C616388b506AcdA1bfAAE46][\n            2\n        ] = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2; //first underlying coin is WETH\n\n        //3pool\n        lpTokenToPool[\n            0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490\n        ] = 0xbEbc44782C7dB0a1A60Cb6fe97d0b483032FF1C7;\n        numCoins[0xbEbc44782C7dB0a1A60Cb6fe97d0b483032FF1C7] = 3; //3 coins in tricrypto2\n        underlyingCoins[0xbEbc44782C7dB0a1A60Cb6fe97d0b483032FF1C7][\n            0\n        ] = 0x6B175474E89094C44Da98b954EedeAC495271d0F; //first underlying coin is DAI\n        underlyingCoins[0xbEbc44782C7dB0a1A60Cb6fe97d0b483032FF1C7][\n            1\n        ] = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48; //first underlying coin is USDC\n        underlyingCoins[0xbEbc44782C7dB0a1A60Cb6fe97d0b483032FF1C7][\n            2\n        ] = 0xdAC17F958D2ee523a2206206994597C13D831ec7; //first underlying coin is USDT\n\n        //StethEth\n        lpTokenToPool[\n            0x06325440D014e39736583c165C2963BA99fAf14E\n        ] = 0xDC24316b9AE028F1497c275EB9192a3Ea0f67022;\n        numCoins[0xDC24316b9AE028F1497c275EB9192a3Ea0f67022] = 2; //2 coins in StethEth\n        underlyingCoins[0xDC24316b9AE028F1497c275EB9192a3Ea0f67022][\n            0\n        ] = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2; //first underlying coin is WETH\n        underlyingCoins[0xDC24316b9AE028F1497c275EB9192a3Ea0f67022][\n            1\n        ] = 0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84; //first underlying coin is Steth\n\n        //fraxusdc\n        lpTokenToPool[\n            0x3175Df0976dFA876431C2E9eE6Bc45b65d3473CC\n        ] = 0xDcEF968d416a41Cdac0ED8702fAC8128A64241A2;\n        numCoins[0xDcEF968d416a41Cdac0ED8702fAC8128A64241A2] = 2; //2 coins in fraxusdc\n        underlyingCoins[0xDcEF968d416a41Cdac0ED8702fAC8128A64241A2][\n            0\n        ] = 0x853d955aCEf822Db058eb8505911ED77F175b99e; //first underlying coin is frax\n        underlyingCoins[0xDcEF968d416a41Cdac0ED8702fAC8128A64241A2][\n            1\n        ] = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48; //first underlying coin is usdc\n\n        //frax3crv\n        lpTokenToPool[\n            0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B\n        ] = 0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B; //same pool and token addresses\n        numCoins[0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B] = 2; //2 coins in frax + 3crv\n        underlyingCoins[0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B][\n            0\n        ] = 0x853d955aCEf822Db058eb8505911ED77F175b99e; //first underlying coin is frax\n        underlyingCoins[0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B][\n            1\n        ] = 0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490; //first underlying coin is 3crv\n    }\n\n    /// @notice Sets the fallbackOracle\n    /// - Callable only by the Aave governance\n    /// @param fallbackOracle The address of the fallbackOracle\n    function setFallbackOracle(address fallbackOracle) external onlyOwner {\n        _setFallbackOracle(fallbackOracle);\n    }\n\n    /// @notice Internal function to set the fallbackOracle\n    /// @param fallbackOracle The address of the fallbackOracle\n    function _setFallbackOracle(address fallbackOracle) internal {\n        _fallbackOracle = IPriceOracleGetter(fallbackOracle);\n        emit FallbackOracleUpdated(fallbackOracle);\n    }\n\n    /// @notice Gets an asset price by address\n    /// @param asset The asset address\n    function getAssetPrice(\n        address asset //this will be the token address, not the pool address\n    ) public view override returns (uint256) {\n        if (asset == BASE_CURRENCY) {\n            return BASE_CURRENCY_UNIT;\n        }\n        //need to import the curve address provider interface X\n        // ICurveAddressProvider provider =\n        //     ICurveAddressProvider(_addressesProvider.getCurveAddressProvider());\n        //need to import the registry interface Y\n        // ICurveRegistry registry = ICurveRegistry(provider.get_registry()); //registry contains the addresses for the pools\n\n        address pool = lpTokenToPool[asset]; //asset is the LP token\n\n        if (pool == address(0)) {\n            return _fallbackOracle.getAssetPrice(asset);\n        }\n\n        //TODO: check if we should use underlying or not. [0] is not underlying, [1] includes underlying\n        uint256 num_coins = numCoins[pool];\n\n        uint256[] memory prices = new uint256[](num_coins);\n\n        for (uint256 i = 0; i < num_coins; i++) {\n            address underlying = underlyingCoins[pool][i];\n            IPriceOracleGetter aave_oracle;\n            if (underlying == 0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490) {\n                //this is the only underlying in our supported assets that is a curve token instead of aave token\n                aave_oracle = IPriceOracleGetter(\n                    _addressesProvider.getCurvePriceOracleWrapper()\n                );\n            } else {\n                aave_oracle = IPriceOracleGetter(\n                    _addressesProvider.getAavePriceOracle()\n                );\n            }\n\n            require(underlying != address(0), \"underlying token is null\");\n            prices[i] = aave_oracle.getAssetPrice(underlying);\n            require(prices[i] > 0, \"aave oracle encountered an error\");\n        }\n\n        ICurveOracle oracle = ICurveOracle(\n            _addressesProvider.getCurvePriceOracle()\n        );\n\n        uint256 price = oracle.get_price(pool, prices);\n        //TODO: incorporate backup oracles here?\n        require(price > 0, \"Curve oracle encountered an error\");\n        return price;\n    }\n\n    /// @notice Gets a list of prices from a list of assets addresses\n    /// @param assets The list of assets addresses\n    function getAssetsPrices(address[] calldata assets)\n        external\n        view\n        returns (uint256[] memory)\n    {\n        uint256[] memory prices = new uint256[](assets.length);\n        for (uint256 i = 0; i < assets.length; i++) {\n            prices[i] = getAssetPrice(assets[i]);\n        }\n        return prices;\n    }\n\n    /// @notice Gets the address of the fallback oracle\n    /// @return address The addres of the fallback oracle\n    function getFallbackOracle() external view returns (address) {\n        return address(_fallbackOracle);\n    }\n}\n"},"contracts/dependencies/openzeppelin/contracts/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity >=0.8.0;\n\nimport \"./Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\ncontract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(\n        address indexed previousOwner,\n        address indexed newOwner\n    );\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(\n            newOwner != address(0),\n            \"Ownable: new owner is the zero address\"\n        );\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n"},"contracts/dependencies/openzeppelin/contracts/IERC20.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity >=0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount)\n        external\n        returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender)\n        external\n        view\n        returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n}\n"},"contracts/interfaces/IPriceOracleGetter.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity >=0.8.0;\n\n/**\n * @title IPriceOracleGetter interface\n * @notice Interface for the Aave price oracle.\n **/\n\ninterface IPriceOracleGetter {\n    /**\n     * @dev returns the asset price in ETH\n     * @param asset the address of the asset\n     * @return the ETH price of the asset\n     **/\n    function getAssetPrice(address asset) external view returns (uint256);\n}\n"},"contracts/dependencies/openzeppelin/contracts/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.8.0;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {SafeMath} from \"./SafeMath.sol\";\nimport {Address} from \"./Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        callOptionalReturn(\n            token,\n            abi.encodeWithSelector(token.transfer.selector, to, value)\n        );\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        callOptionalReturn(\n            token,\n            abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\n        );\n    }\n\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        callOptionalReturn(\n            token,\n            abi.encodeWithSelector(token.approve.selector, spender, value)\n        );\n    }\n\n    function callOptionalReturn(IERC20 token, bytes memory data) private {\n        require(address(token).isContract(), \"SafeERC20: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = address(token).call(data);\n        require(success, \"SafeERC20: low-level call failed\");\n\n        if (returndata.length > 0) {\n            // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(\n                abi.decode(returndata, (bool)),\n                \"SafeERC20: ERC20 operation did not succeed\"\n            );\n        }\n    }\n}\n"},"contracts/misc/AaveOracle.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity >=0.8.0;\n\nimport {Ownable} from \"../dependencies/openzeppelin/contracts/Ownable.sol\";\nimport {IERC20} from \"../dependencies/openzeppelin/contracts/IERC20.sol\";\n\nimport {IPriceOracleGetter} from \"../interfaces/IPriceOracleGetter.sol\";\nimport {IChainlinkAggregator} from \"../interfaces/IChainlinkAggregator.sol\";\nimport {SafeERC20} from \"../dependencies/openzeppelin/contracts/SafeERC20.sol\";\n\n/// @title AaveOracle\n/// @author Aave\n/// @notice Proxy smart contract to get the price of an asset from a price source, with Chainlink Aggregator\n///         smart contracts as primary option\n/// - If the returned price by a Chainlink aggregator is <= 0, the call is forwarded to a fallbackOracle\n/// - Owned by the Aave governance system, allowed to add sources for assets, replace them\n///   and change the fallbackOracle\ncontract AaveOracle is IPriceOracleGetter, Ownable {\n    using SafeERC20 for IERC20;\n\n    event BaseCurrencySet(\n        address indexed baseCurrency,\n        uint256 baseCurrencyUnit\n    );\n    event AssetSourceUpdated(address indexed asset, address indexed source);\n    event FallbackOracleUpdated(address indexed fallbackOracle);\n\n    mapping(address => IChainlinkAggregator) private assetsSources;\n    IPriceOracleGetter private _fallbackOracle;\n    address public immutable BASE_CURRENCY;\n    uint256 public immutable BASE_CURRENCY_UNIT;\n\n    /// @notice Constructor\n    /// @param assets The addresses of the assets\n    /// @param sources The address of the source of each asset\n    /// @param fallbackOracle The address of the fallback oracle to use if the data of an\n    ///        aggregator is not consistent\n    /// @param baseCurrency the base currency used for the price quotes. If USD is used, base currency is 0x0\n    /// @param baseCurrencyUnit the unit of the base currency\n    constructor(\n        address[] memory assets,\n        address[] memory sources,\n        address fallbackOracle,\n        address baseCurrency,\n        uint256 baseCurrencyUnit\n    ) public {\n        _setFallbackOracle(fallbackOracle);\n        _setAssetsSources(assets, sources);\n        BASE_CURRENCY = baseCurrency;\n        BASE_CURRENCY_UNIT = baseCurrencyUnit;\n        emit BaseCurrencySet(baseCurrency, baseCurrencyUnit);\n    }\n\n    /// @notice External function called by the Aave governance to set or replace sources of assets\n    /// @param assets The addresses of the assets\n    /// @param sources The address of the source of each asset\n    function setAssetSources(\n        address[] calldata assets,\n        address[] calldata sources\n    ) external onlyOwner {\n        _setAssetsSources(assets, sources);\n    }\n\n    /// @notice Sets the fallbackOracle\n    /// - Callable only by the Aave governance\n    /// @param fallbackOracle The address of the fallbackOracle\n    function setFallbackOracle(address fallbackOracle) external onlyOwner {\n        _setFallbackOracle(fallbackOracle);\n    }\n\n    /// @notice Internal function to set the sources for each asset\n    /// @param assets The addresses of the assets\n    /// @param sources The address of the source of each asset\n    function _setAssetsSources(\n        address[] memory assets,\n        address[] memory sources\n    ) internal {\n        require(assets.length == sources.length, \"INCONSISTENT_PARAMS_LENGTH\");\n        for (uint256 i = 0; i < assets.length; i++) {\n            assetsSources[assets[i]] = IChainlinkAggregator(sources[i]);\n            emit AssetSourceUpdated(assets[i], sources[i]);\n        }\n    }\n\n    /// @notice Internal function to set the fallbackOracle\n    /// @param fallbackOracle The address of the fallbackOracle\n    function _setFallbackOracle(address fallbackOracle) internal {\n        _fallbackOracle = IPriceOracleGetter(fallbackOracle);\n        emit FallbackOracleUpdated(fallbackOracle);\n    }\n\n    /// @notice Gets an asset price by address\n    /// @param asset The asset address\n    function getAssetPrice(address asset)\n        public\n        view\n        override\n        returns (uint256)\n    {\n        IChainlinkAggregator source = assetsSources[asset];\n\n        if (asset == BASE_CURRENCY) {\n            return BASE_CURRENCY_UNIT;\n        } else if (address(source) == address(0)) {\n            return _fallbackOracle.getAssetPrice(asset);\n        } else {\n            int256 price = IChainlinkAggregator(source).latestAnswer();\n            if (price > 0) {\n                return uint256(price);\n            } else {\n                return _fallbackOracle.getAssetPrice(asset);\n            }\n        }\n    }\n\n    /// @notice Gets a list of prices from a list of assets addresses\n    /// @param assets The list of assets addresses\n    function getAssetsPrices(address[] calldata assets)\n        external\n        view\n        returns (uint256[] memory)\n    {\n        uint256[] memory prices = new uint256[](assets.length);\n        for (uint256 i = 0; i < assets.length; i++) {\n            prices[i] = getAssetPrice(assets[i]);\n        }\n        return prices;\n    }\n\n    /// @notice Gets the address of the source for an asset address\n    /// @param asset The address of the asset\n    /// @return address The address of the source\n    function getSourceOfAsset(address asset) external view returns (address) {\n        return address(assetsSources[asset]);\n    }\n\n    /// @notice Gets the address of the fallback oracle\n    /// @return address The addres of the fallback oracle\n    function getFallbackOracle() external view returns (address) {\n        return address(_fallbackOracle);\n    }\n}\n"},"contracts/interfaces/ILendingPoolAddressesProvider.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity >=0.8.0;\n\nimport {DataTypes} from \"../protocol/libraries/types/DataTypes.sol\";\n\n/**\n * @title LendingPoolAddressesProvider contract\n * @dev Main registry of addresses part of or connected to the protocol, including permissioned roles\n * - Acting also as factory of proxies and admin of those, so with right to change its implementations\n * - Owned by the Aave Governance\n * @author Aave\n **/\ninterface ILendingPoolAddressesProvider {\n    event MarketIdSet(string newMarketId);\n    event LendingPoolUpdated(address indexed newAddress);\n    event ConfigurationAdminUpdated(\n        address indexed newAddress,\n        uint64 trancheId\n    );\n    event EmergencyAdminUpdated(address indexed newAddress, uint64 trancheId);\n    event LendingPoolConfiguratorUpdated(address indexed newAddress);\n    event LendingPoolCollateralManagerUpdated(address indexed newAddress);\n    event PriceOracleUpdated(address indexed newAddress);\n    event CurvePriceOracleUpdated(address indexed newAddress);\n    event CurvePriceOracleWrapperUpdated(address indexed newAddress);\n    event CurveAddressProviderUpdated(address indexed newAddress);\n    event LendingRateOracleUpdated(address indexed newAddress);\n    event ProxyCreated(bytes32 id, address indexed newAddress);\n    event AddressSet(bytes32 id, address indexed newAddress, bool hasProxy);\n\n    function getMarketId() external view returns (string memory);\n\n    function setMarketId(string calldata marketId) external;\n\n    function setAddress(bytes32 id, address newAddress) external;\n\n    function setAddressAsProxy(bytes32 id, address impl) external;\n\n    function getAddress(bytes32 id) external view returns (address);\n\n    function getLendingPool() external view returns (address);\n\n    function setLendingPoolImpl(address pool) external;\n\n    function getLendingPoolConfigurator() external view returns (address);\n\n    function setLendingPoolConfiguratorImpl(address configurator) external;\n\n    function getLendingPoolCollateralManager() external view returns (address);\n\n    function setLendingPoolCollateralManager(address manager) external;\n\n    //********************************************************** */\n    //permissionless tranches changes\n    function getPoolAdmin(uint64 trancheId) external view returns (address); //this depends on trancheId. Different admin for different tranches\n\n    function getGlobalAdmin() external view returns (address);\n\n    function setGlobalAdmin(address admin) external;\n\n    function setPoolAdmin(address admin, uint64 trancheId) external; //this depends on trancheId\n\n    function getEmergencyAdmin(uint64 trancheId)\n        external\n        view\n        returns (address); //this depends on trancheId\n\n    function setEmergencyAdmin(address admin, uint64 trancheId) external; //this depends on trancheId\n\n    function addPoolAdmin(address admin, uint64 trancheId) external;\n\n    function addEmergencyAdmin(address admin, uint64 trancheId) external;\n\n    function getAddressTranche(bytes32 id, uint64 trancheId)\n        external\n        view\n        returns (address);\n\n    function isWhitelistedAddress(address ad) external view returns (bool);\n\n    //********************************************************** */\n    function getPriceOracle(DataTypes.ReserveAssetType assetType)\n        external\n        view\n        returns (address); //this might also depend on trancheId if some configurators choose to\n\n    function getAavePriceOracle() external view returns (address);\n\n    function getCurvePriceOracle() external view returns (address);\n\n    function getCurvePriceOracleWrapper() external view returns (address);\n\n    // function getCurveAddressProvider() external view returns (address);\n\n    function setAavePriceOracle(address priceOracle) external;\n\n    // function setCurveAddressProvider(address addressProvider) external;\n\n    function setCurvePriceOracle(address priceOracle) external;\n\n    function setCurvePriceOracleWrapper(address priceOracle) external;\n\n    function getLendingRateOracle() external view returns (address); //this oracle determines the stable borrow rate for a reserve. Should only need one, since it is based off the address of the reserve, which is unique for every asset in each tranche in each pool. Governance manually sets this\n\n    function setLendingRateOracle(address lendingRateOracle) external;\n}\n"},"contracts/oracles/interfaces/ICurveOracle.sol":{"content":"pragma solidity >=0.8.0;\n\ninterface ICurveOracle {\n    function get_price(address curve_pool, uint256[] memory prices)\n        external\n        view\n        returns (uint256);\n}\n"},"contracts/dependencies/openzeppelin/contracts/Context.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity >=0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"},"contracts/dependencies/openzeppelin/contracts/SafeMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b)\n        internal\n        pure\n        returns (bool, uint256)\n    {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b)\n        internal\n        pure\n        returns (bool, uint256)\n    {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b)\n        internal\n        pure\n        returns (bool, uint256)\n    {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b)\n        internal\n        pure\n        returns (bool, uint256)\n    {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b)\n        internal\n        pure\n        returns (bool, uint256)\n    {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"},"contracts/dependencies/openzeppelin/contracts/Address.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity >=0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\n        // for accounts without code, i.e. `keccak256('')`\n        // bytes32 codehash;\n        // bytes32 accountHash =\n        //     0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\n        // // solhint-disable-next-line no-inline-assembly\n        // assembly {\n        //     codehash := extcodehash(account)\n        // }\n        // return (codehash != accountHash && codehash != 0x0);\n        return account.code.length > 0; //updated\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(\n            address(this).balance >= amount,\n            \"Address: insufficient balance\"\n        );\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(\n            success,\n            \"Address: unable to send value, recipient may have reverted\"\n        );\n    }\n}\n"},"contracts/interfaces/IChainlinkAggregator.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity >=0.8.0;\n\ninterface IChainlinkAggregator {\n    function decimals() external view returns (uint8);\n\n    function latestAnswer() external view returns (int256);\n\n    function latestTimestamp() external view returns (uint256);\n\n    function latestRound() external view returns (uint256);\n\n    function getAnswer(uint256 roundId) external view returns (int256);\n\n    function getTimestamp(uint256 roundId) external view returns (uint256);\n\n    event AnswerUpdated(\n        int256 indexed current,\n        uint256 indexed roundId,\n        uint256 timestamp\n    );\n    event NewRound(uint256 indexed roundId, address indexed startedBy);\n}\n"},"contracts/protocol/libraries/types/DataTypes.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity >=0.8.0;\n\nlibrary DataTypes {\n    // refer to the whitepaper, section 1.1 basic concepts for a formal description of these properties.\n\n    struct InitReserveInput {\n        address aTokenImpl;\n        address stableDebtTokenImpl;\n        address variableDebtTokenImpl;\n        uint8 underlyingAssetDecimals;\n        address interestRateStrategyAddress;\n        address underlyingAsset;\n        address treasury;\n        address incentivesController;\n        string underlyingAssetName;\n        string aTokenName;\n        string aTokenSymbol;\n        string variableDebtTokenName;\n        string variableDebtTokenSymbol;\n        string stableDebtTokenName;\n        string stableDebtTokenSymbol;\n        bytes params;\n        uint8 assetType;\n        uint256 collateralCap;\n        bool hasStrategy;\n        bool usingGovernanceSetInterestRate; //if true, then the reserves that has this asset will\n        uint256 governanceSetInterestRate;\n    }\n\n    struct InitReserveInputInternal {\n        InitReserveInput input;\n        uint64 trancheId;\n    }\n\n    enum ReserveAssetType {\n        AAVE,\n        CURVE\n    } //update with other possible types of the underlying asset\n    //AAVE is the original assets in the aave protocol\n    //CURVE is the new LP tokens we are providing support for\n    struct TrancheAddress {\n        uint64 trancheId;\n        address asset;\n    }\n    struct ReserveData {\n        //stores the reserve configuration\n        ReserveConfigurationMap configuration;\n        //the liquidity index. Expressed in ray\n        uint128 liquidityIndex; //not used for nonlendable assets\n        //variable borrow index. Expressed in ray\n        uint128 variableBorrowIndex; //not used for nonlendable assets\n        //the current supply rate. Expressed in ray\n        uint128 currentLiquidityRate; //deposit APR is defined as liquidityRate / RAY //not used for nonlendable assets\n        //the current variable borrow rate. Expressed in ray\n        uint128 currentVariableBorrowRate; //not used for nonlendable assets\n        //the current stable borrow rate. Expressed in ray\n        uint128 currentStableBorrowRate; //not used for nonlendable assets\n        uint40 lastUpdateTimestamp;\n        //tokens addresses\n        address aTokenAddress;\n        address stableDebtTokenAddress; //not used for nonlendable assets\n        address variableDebtTokenAddress; //not used for nonlendable assets\n        //address of the interest rate strategy\n        address interestRateStrategyAddress; //not used for nonlendable assets\n        //the id of the reserve. Represents the position in the list of the active reserves\n        uint8 id;\n        //maybe consider\n        uint64 trancheId;\n        uint256 collateralCap; //this can definitely be different per trancheId\n        bool hasStrategy; //this might be put as a property of a reserve rather than property of the asset since USDC might have a trancheId that has a strategy, but unlikely to happen\n        bool usingGovernanceSetInterestRate; //if true, then the reserves that has this asset will\n        uint256 governanceSetInterestRate;\n    }\n\n    // uint8 constant NUM_TRANCHES = 3;\n\n    struct ReserveConfigurationMap {\n        //bit 0-15: LTV\n        //bit 16-31: Liq. threshold\n        //bit 32-47: Liq. bonus\n        //bit 48-55: Decimals\n        //bit 56: Reserve is active\n        //bit 57: reserve is frozen\n        //bit 58: borrowing is enabled\n        //bit 59: stable rate borrowing enabled\n        //bit 60-63: reserved\n        //bit 64-79: reserve factor\n        uint256 data;\n    }\n\n    struct UserConfigurationMap {\n        uint256 data;\n    }\n\n    enum InterestRateMode {\n        NONE,\n        STABLE,\n        VARIABLE\n    }\n\n    struct AcctTranche {\n        address user;\n        uint64 trancheId;\n    }\n\n    struct DepositVars {\n        address asset;\n        uint64 trancheId;\n        address _addressesProvider;\n        uint256 amount;\n        address onBehalfOf;\n        uint16 referralCode;\n    }\n\n    struct ExecuteBorrowParams {\n        address asset;\n        uint64 trancheId; //trancheId the user wants to borrow out of\n        address user;\n        address onBehalfOf;\n        uint256 amount;\n        uint256 interestRateMode;\n        address aTokenAddress;\n        uint16 referralCode;\n        bool releaseUnderlying;\n        uint256 _maxStableRateBorrowSizePercent;\n        uint256 _reservesCount;\n    }\n\n    struct WithdrawParams {\n        uint256 _reservesCount;\n        address asset;\n        uint64 trancheId;\n        uint256 amount;\n        address to;\n    }\n\n    struct calculateInterestRatesVars {\n        address reserve;\n        address aToken;\n        uint256 liquidityAdded;\n        uint256 liquidityTaken;\n        uint256 reserveFactor;\n    }\n\n    struct flashLoanVars {\n        address receiverAddress;\n        address[] assets;\n        uint64 trancheId;\n        uint256[] amounts;\n        uint256[] modes;\n        address onBehalfOf;\n        bytes params;\n        uint16 referralCode;\n        uint256 _flashLoanPremiumTotal;\n        address oracle;\n        uint256 _maxStableRateBorrowSizePercent;\n        address _addressesprovider;\n        // mapping(uint8 => uint256) _reservesCount;\n    }\n}\n"},"contracts/oracles/CurveOracleV2.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity >=0.8.0;\n\nimport {ICurvePool} from \"./interfaces/ICurvePoolV1.sol\";\nimport {ICurveOracle} from \"./interfaces/ICurveOracle.sol\";\nimport {vMath} from \"./libs/vMath.sol\";\n\ncontract CurveOracleV2 is ICurveOracle {\n    function get_price(address curve_pool, uint256[] memory prices)\n        external\n        view\n        override\n        returns (uint256)\n    {\n        uint256 virtual_price = ICurvePool(curve_pool).get_virtual_price();\n\n        uint256 lp_price = calculate_v2_token_price(\n            uint8(prices.length),\n            virtual_price,\n            prices\n        );\n\n        return lp_price;\n    }\n\n    //returns n_token * vp * (p1 * p2 * p3) ^1/n\n    //n should only ever be 2, 3, or 4\n    //returns the lp_price scaled by 1e36, so scale down by 1e36\n    function calculate_v2_token_price(\n        uint8 n,\n        uint256 virtual_price,\n        uint256[] memory prices\n    ) internal pure returns (uint256) {\n        uint256 product = vMath.product(prices);\n        uint256 geo_mean = vMath.geometric_mean(n, product);\n        return (n * virtual_price * geo_mean) / 10**18; //since virtual price has 18 decimals\n    }\n}\n"},"contracts/oracles/interfaces/ICurvePoolV1.sol":{"content":"pragma solidity >=0.8.0;\n\ninterface ICurvePool {\n    function get_virtual_price() external view returns (uint256);\n}\n"},"contracts/oracles/libs/vMath.sol":{"content":"pragma solidity >=0.8.0;\n\nimport {FixedPointMathLib} from \"./FixedPointMathLib.sol\";\nimport {IntegralMath} from \"./IntegralMath.sol\";\n\nlibrary vMath {\n    uint256 internal constant WAD = 1e18; // The scalar of ETH and most ERC20s.\n\n    function min(uint256[] calldata array) external pure returns (uint256) {\n        uint256 min = array[0];\n        for (uint8 i = 1; i < array.length; i++) {\n            if (min > array[i]) {\n                min = array[i];\n            }\n        }\n        return min;\n    }\n\n    function product(uint256[] calldata nums) external pure returns (uint256) {\n        uint256 product = nums[0];\n        for (uint256 i = 1; i < nums.length; i++) {\n            product *= nums[i];\n        }\n        return product;\n    }\n\n    //limited to curve pools only, either 2 or 3 assets (mostly 2)\n    function geometric_mean(uint8 n, uint256 product)\n        external\n        pure\n        returns (uint256)\n    {\n        if (n == 2) {\n            return FixedPointMathLib.sqrt(product);\n        } else {\n            //n == 3\n            return IntegralMath.floorCbrt(product);\n        }\n    }\n}\n"},"contracts/oracles/libs/FixedPointMathLib.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity >=0.8.0;\n\n/// @notice Arithmetic library with operations for fixed-point numbers.\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/utils/FixedPointMathLib.sol)\n/// @author Inspired by USM (https://github.com/usmfum/USM/blob/master/contracts/WadMath.sol)\nlibrary FixedPointMathLib {\n    /*//////////////////////////////////////////////////////////////\n                    SIMPLIFIED FIXED POINT OPERATIONS\n    //////////////////////////////////////////////////////////////*/\n\n    uint256 internal constant WAD = 1e18; // The scalar of ETH and most ERC20s.\n\n    function mulWadDown(uint256 x, uint256 y) internal pure returns (uint256) {\n        return mulDivDown(x, y, WAD); // Equivalent to (x * y) / WAD rounded down.\n    }\n\n    function mulWadUp(uint256 x, uint256 y) internal pure returns (uint256) {\n        return mulDivUp(x, y, WAD); // Equivalent to (x * y) / WAD rounded up.\n    }\n\n    function divWadDown(uint256 x, uint256 y) internal pure returns (uint256) {\n        return mulDivDown(x, WAD, y); // Equivalent to (x * WAD) / y rounded down.\n    }\n\n    function divWadUp(uint256 x, uint256 y) internal pure returns (uint256) {\n        return mulDivUp(x, WAD, y); // Equivalent to (x * WAD) / y rounded up.\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                    LOW LEVEL FIXED POINT OPERATIONS\n    //////////////////////////////////////////////////////////////*/\n\n    function mulDivDown(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 z) {\n        assembly {\n            // Store x * y in z for now.\n            z := mul(x, y)\n\n            // Equivalent to require(denominator != 0 && (x == 0 || (x * y) / x == y))\n            if iszero(\n                and(\n                    iszero(iszero(denominator)),\n                    or(iszero(x), eq(div(z, x), y))\n                )\n            ) {\n                revert(0, 0)\n            }\n\n            // Divide z by the denominator.\n            z := div(z, denominator)\n        }\n    }\n\n    function mulDivUp(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 z) {\n        assembly {\n            // Store x * y in z for now.\n            z := mul(x, y)\n\n            // Equivalent to require(denominator != 0 && (x == 0 || (x * y) / x == y))\n            if iszero(\n                and(\n                    iszero(iszero(denominator)),\n                    or(iszero(x), eq(div(z, x), y))\n                )\n            ) {\n                revert(0, 0)\n            }\n\n            // First, divide z - 1 by the denominator and add 1.\n            // We allow z - 1 to underflow if z is 0, because we multiply the\n            // end result by 0 if z is zero, ensuring we return 0 if z is zero.\n            z := mul(iszero(iszero(z)), add(div(sub(z, 1), denominator), 1))\n        }\n    }\n\n    function rpow(\n        uint256 x,\n        uint256 n,\n        uint256 scalar\n    ) internal pure returns (uint256 z) {\n        assembly {\n            switch x\n            case 0 {\n                switch n\n                case 0 {\n                    // 0 ** 0 = 1\n                    z := scalar\n                }\n                default {\n                    // 0 ** n = 0\n                    z := 0\n                }\n            }\n            default {\n                switch mod(n, 2)\n                case 0 {\n                    // If n is even, store scalar in z for now.\n                    z := scalar\n                }\n                default {\n                    // If n is odd, store x in z for now.\n                    z := x\n                }\n\n                // Shifting right by 1 is like dividing by 2.\n                let half := shr(1, scalar)\n\n                for {\n                    // Shift n right by 1 before looping to halve it.\n                    n := shr(1, n)\n                } n {\n                    // Shift n right by 1 each iteration to halve it.\n                    n := shr(1, n)\n                } {\n                    // Revert immediately if x ** 2 would overflow.\n                    // Equivalent to iszero(eq(div(xx, x), x)) here.\n                    if shr(128, x) {\n                        revert(0, 0)\n                    }\n\n                    // Store x squared.\n                    let xx := mul(x, x)\n\n                    // Round to the nearest number.\n                    let xxRound := add(xx, half)\n\n                    // Revert if xx + half overflowed.\n                    if lt(xxRound, xx) {\n                        revert(0, 0)\n                    }\n\n                    // Set x to scaled xxRound.\n                    x := div(xxRound, scalar)\n\n                    // If n is even:\n                    if mod(n, 2) {\n                        // Compute z * x.\n                        let zx := mul(z, x)\n\n                        // If z * x overflowed:\n                        if iszero(eq(div(zx, x), z)) {\n                            // Revert if x is non-zero.\n                            if iszero(iszero(x)) {\n                                revert(0, 0)\n                            }\n                        }\n\n                        // Round to the nearest number.\n                        let zxRound := add(zx, half)\n\n                        // Revert if zx + half overflowed.\n                        if lt(zxRound, zx) {\n                            revert(0, 0)\n                        }\n\n                        // Return properly scaled zxRound.\n                        z := div(zxRound, scalar)\n                    }\n                }\n            }\n        }\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                        GENERAL NUMBER UTILITIES\n    //////////////////////////////////////////////////////////////*/\n\n    function sqrt(uint256 x) internal pure returns (uint256 z) {\n        assembly {\n            // Start off with z at 1.\n            z := 1\n\n            // Used below to help find a nearby power of 2.\n            let y := x\n\n            // Find the lowest power of 2 that is at least sqrt(x).\n            if iszero(lt(y, 0x100000000000000000000000000000000)) {\n                y := shr(128, y) // Like dividing by 2 ** 128.\n                z := shl(64, z) // Like multiplying by 2 ** 64.\n            }\n            if iszero(lt(y, 0x10000000000000000)) {\n                y := shr(64, y) // Like dividing by 2 ** 64.\n                z := shl(32, z) // Like multiplying by 2 ** 32.\n            }\n            if iszero(lt(y, 0x100000000)) {\n                y := shr(32, y) // Like dividing by 2 ** 32.\n                z := shl(16, z) // Like multiplying by 2 ** 16.\n            }\n            if iszero(lt(y, 0x10000)) {\n                y := shr(16, y) // Like dividing by 2 ** 16.\n                z := shl(8, z) // Like multiplying by 2 ** 8.\n            }\n            if iszero(lt(y, 0x100)) {\n                y := shr(8, y) // Like dividing by 2 ** 8.\n                z := shl(4, z) // Like multiplying by 2 ** 4.\n            }\n            if iszero(lt(y, 0x10)) {\n                y := shr(4, y) // Like dividing by 2 ** 4.\n                z := shl(2, z) // Like multiplying by 2 ** 2.\n            }\n            if iszero(lt(y, 0x8)) {\n                // Equivalent to 2 ** z.\n                z := shl(1, z)\n            }\n\n            // Shifting right by 1 is like dividing by 2.\n            z := shr(1, add(z, div(x, z)))\n            z := shr(1, add(z, div(x, z)))\n            z := shr(1, add(z, div(x, z)))\n            z := shr(1, add(z, div(x, z)))\n            z := shr(1, add(z, div(x, z)))\n            z := shr(1, add(z, div(x, z)))\n            z := shr(1, add(z, div(x, z)))\n\n            // Compute a rounded down version of z.\n            let zRoundDown := div(x, z)\n\n            // If zRoundDown is smaller, use it.\n            if lt(zRoundDown, z) {\n                z := zRoundDown\n            }\n        }\n    }\n}\n"},"contracts/oracles/libs/IntegralMath.sol":{"content":"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\npragma solidity >=0.8.0;\n\nimport \"./Uint.sol\";\n\nlibrary IntegralMath {\n    /**\n     * @dev Compute the largest integer smaller than or equal to the binary logarithm of `n`\n     */\n    function floorLog2(uint256 n) internal pure returns (uint8) {\n        unchecked {\n            uint8 res = 0;\n\n            if (n < 256) {\n                // at most 8 iterations\n                while (n > 1) {\n                    n >>= 1;\n                    res += 1;\n                }\n            } else {\n                // exactly 8 iterations\n                for (uint8 s = 128; s > 0; s >>= 1) {\n                    if (n >= 1 << s) {\n                        n >>= s;\n                        res |= s;\n                    }\n                }\n            }\n\n            return res;\n        }\n    }\n\n    /**\n     * @dev Compute the largest integer smaller than or equal to the square root of `n`\n     */\n    function floorSqrt(uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n > 0) {\n                uint256 x = n / 2 + 1;\n                uint256 y = (x + n / x) / 2;\n                while (x > y) {\n                    x = y;\n                    y = (x + n / x) / 2;\n                }\n                return x;\n            }\n            return 0;\n        }\n    }\n\n    /**\n     * @dev Compute the smallest integer larger than or equal to the square root of `n`\n     */\n    function ceilSqrt(uint256 n) internal pure returns (uint256) {\n        unchecked {\n            uint256 x = floorSqrt(n);\n            return x**2 == n ? x : x + 1;\n        }\n    }\n\n    /**\n     * @dev Compute the largest integer smaller than or equal to the cubic root of `n`\n     */\n    function floorCbrt(uint256 n) internal pure returns (uint256) {\n        unchecked {\n            uint256 x = 0;\n            for (uint256 y = 1 << 255; y > 0; y >>= 3) {\n                x <<= 1;\n                uint256 z = 3 * x * (x + 1) + 1;\n                if (n / y >= z) {\n                    n -= y * z;\n                    x += 1;\n                }\n            }\n            return x;\n        }\n    }\n\n    /**\n     * @dev Compute the smallest integer larger than or equal to the cubic root of `n`\n     */\n    function ceilCbrt(uint256 n) internal pure returns (uint256) {\n        unchecked {\n            uint256 x = floorCbrt(n);\n            return x**3 == n ? x : x + 1;\n        }\n    }\n\n    /**\n     * @dev Compute the nearest integer to the quotient of `n` and `d` (or `n / d`)\n     */\n    function roundDiv(uint256 n, uint256 d) internal pure returns (uint256) {\n        unchecked {\n            return n / d + (n % d) / (d - d / 2);\n        }\n    }\n\n    /**\n     * @dev Compute the largest integer smaller than or equal to `x * y / z`\n     */\n    function mulDivF(\n        uint256 x,\n        uint256 y,\n        uint256 z\n    ) internal pure returns (uint256) {\n        unchecked {\n            (uint256 xyh, uint256 xyl) = mul512(x, y);\n            if (xyh == 0) {\n                // `x * y < 2 ^ 256`\n                return xyl / z;\n            }\n            if (xyh < z) {\n                // `x * y / z < 2 ^ 256`\n                uint256 m = mulMod(x, y, z); // `m = x * y % z`\n                (uint256 nh, uint256 nl) = sub512(xyh, xyl, m); // `n = x * y - m` hence `n / z = floor(x * y / z)`\n                if (nh == 0) {\n                    // `n < 2 ^ 256`\n                    return nl / z;\n                }\n                uint256 p = unsafeSub(0, z) & z; // `p` is the largest power of 2 which `z` is divisible by\n                uint256 q = div512(nh, nl, p); // `n` is divisible by `p` because `n` is divisible by `z` and `z` is divisible by `p`\n                uint256 r = inv256(z / p); // `z / p = 1 mod 2` hence `inverse(z / p) = 1 mod 2 ^ 256`\n                return unsafeMul(q, r); // `q * r = (n / p) * inverse(z / p) = n / z`\n            }\n            revert(); // `x * y / z >= 2 ^ 256`\n        }\n    }\n\n    /**\n     * @dev Compute the smallest integer larger than or equal to `x * y / z`\n     */\n    function mulDivC(\n        uint256 x,\n        uint256 y,\n        uint256 z\n    ) internal pure returns (uint256) {\n        unchecked {\n            uint256 w = mulDivF(x, y, z);\n            if (mulMod(x, y, z) > 0) return safeAdd(w, 1);\n            return w;\n        }\n    }\n\n    /**\n     * @dev Compute the value of `x * y`\n     */\n    function mul512(uint256 x, uint256 y)\n        private\n        pure\n        returns (uint256, uint256)\n    {\n        unchecked {\n            uint256 p = mulModMax(x, y);\n            uint256 q = unsafeMul(x, y);\n            if (p >= q) return (p - q, q);\n            return (unsafeSub(p, q) - 1, q);\n        }\n    }\n\n    /**\n     * @dev Compute the value of `2 ^ 256 * xh + xl - y`, where `2 ^ 256 * xh + xl >= y`\n     */\n    function sub512(\n        uint256 xh,\n        uint256 xl,\n        uint256 y\n    ) private pure returns (uint256, uint256) {\n        unchecked {\n            if (xl >= y) return (xh, xl - y);\n            return (xh - 1, unsafeSub(xl, y));\n        }\n    }\n\n    /**\n     * @dev Compute the value of `(2 ^ 256 * xh + xl) / pow2n`, where `xl` is divisible by `pow2n`\n     */\n    function div512(\n        uint256 xh,\n        uint256 xl,\n        uint256 pow2n\n    ) private pure returns (uint256) {\n        unchecked {\n            uint256 pow2nInv = unsafeAdd(unsafeSub(0, pow2n) / pow2n, 1); // `1 << (256 - n)`\n            return unsafeMul(xh, pow2nInv) | (xl / pow2n); // `(xh << (256 - n)) | (xl >> n)`\n        }\n    }\n\n    /**\n     * @dev Compute the inverse of `d` modulo `2 ^ 256`, where `d` is congruent to `1` modulo `2`\n     */\n    function inv256(uint256 d) private pure returns (uint256) {\n        unchecked {\n            // approximate the root of `f(x) = 1 / x - d` using the newton–raphson convergence method\n            uint256 x = 1;\n            for (uint256 i = 0; i < 8; ++i)\n                x = unsafeMul(x, unsafeSub(2, unsafeMul(x, d))); // `x = x * (2 - x * d) mod 2 ^ 256`\n            return x;\n        }\n    }\n}\n"},"contracts/oracles/libs/Uint.sol":{"content":"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\npragma solidity >=0.8.0;\n\nuint256 constant MAX_VAL = type(uint256).max;\n\n// reverts on overflow\nfunction safeAdd(uint256 x, uint256 y) pure returns (uint256) {\n    return x + y;\n}\n\n// does not revert on overflow\nfunction unsafeAdd(uint256 x, uint256 y) pure returns (uint256) {\n    unchecked {\n        return x + y;\n    }\n}\n\n// does not revert on overflow\nfunction unsafeSub(uint256 x, uint256 y) pure returns (uint256) {\n    unchecked {\n        return x - y;\n    }\n}\n\n// does not revert on overflow\nfunction unsafeMul(uint256 x, uint256 y) pure returns (uint256) {\n    unchecked {\n        return x * y;\n    }\n}\n\n// does not overflow\nfunction mulModMax(uint256 x, uint256 y) pure returns (uint256) {\n    unchecked {\n        return mulmod(x, y, MAX_VAL);\n    }\n}\n\n// does not overflow\nfunction mulMod(\n    uint256 x,\n    uint256 y,\n    uint256 z\n) pure returns (uint256) {\n    unchecked {\n        return mulmod(x, y, z);\n    }\n}\n"},"contracts/oracles/ConvexOracleV2.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity >=0.8.0;\n\n//import {IBooster} from \"../utils/interfaces/IBooster.sol\";\nimport {CurveOracleV2} from \"./CurveOracleV2.sol\";\nimport {FixedPointMathLib} from \"./libs/FixedPointMathLib.sol\";\nimport {IERC20} from \"./interfaces/IERC20.sol\";\n\n//assuming we can price Convex pools like UniV2 pools more than like Curve pools\ncontract ConvexOracleV2 {\n    //address private constant BOOSTER = 0xF403C135812408BFbE8713b5A23a04b3D48AAE31; //convex deposit contract\n    CurveOracleV2 private curve_oracle;\n\n    //get total underlying in USD and divide by num of tokens\n    //use external script to get pid by curve lp token\n    constructor(CurveOracleV2 _curve_oracle) {\n        curve_oracle = _curve_oracle;\n    }\n\n    //get curve lp tokens price, get convex lp token \"depositToken\", divide\n    function get_convex_price(\n        address curve_pool,\n        uint256[] memory prices,\n        uint16 pid,\n        address convex_lp,\n        address curve_lp\n    ) external view returns (uint256) {\n        uint256 curve_lp_price = curve_oracle.get_price(curve_pool, prices); //returns 1e36 scaled uint\n        //\tuint256 curve_supply = IERC20(curve_lp).totalSupply();\n        //\tuint256 convex_supply = IERC20(convex_lp).totalSupply();\n\n        //\tuint256 convex_price = calculate_convex_price(\n        //\t\tcurve_lp_price,\n        //\t\tcurve_supply,\n        //\t\tconvex_supply\n        //\t);\n\n        return curve_lp_price;\n    }\n\n    //not sure how vulnerable this is, check back later\n    function calculate_convex_price(\n        uint256 curve_lp_price,\n        uint256 curve_supply,\n        uint256 convex_supply\n    ) internal pure returns (uint256) {\n        return (curve_lp_price * curve_supply) / convex_supply;\n    }\n}\n"},"contracts/oracles/interfaces/IERC20.sol":{"content":"pragma solidity >=0.8.0;\n\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the token decimals.\n     */\n    function decimals() external view returns (uint8);\n\n    /**\n     * @dev Returns the token symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the token name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the bep token owner.\n     */\n    function getOwner() external view returns (address);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount)\n        external\n        returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address _owner, address spender)\n        external\n        view\n        returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n}\n"},"contracts/mocks/tokens/CurvePoolMocked.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\n//not used yet\npragma solidity >=0.8.0;\n\nimport {ICurvePool} from \"../../oracles/interfaces/ICurvePoolV1.sol\";\n\n/**\n * @title ERC20Mintable\n * @dev ERC20 minting logic\n */\ncontract CurvePoolMocked is ICurvePool {\n    uint256 virtual_price;\n\n    constructor(uint256 _virtual_price) public {\n        if (_virtual_price == 0) {\n            _virtual_price = 1020000000000000000; //1.02 with 18 decimals\n        }\n        virtual_price = _virtual_price;\n    }\n\n    function get_virtual_price() external view override returns (uint256) {\n        return virtual_price;\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"istanbul","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/oracles/interfaces/ICurveOracle.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/oracles/interfaces/ICurveOracle.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/oracles/interfaces/ICurvePoolV1.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/oracles/interfaces/ICurvePoolV1.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/oracles/interfaces/IERC20.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/oracles/interfaces/IERC20.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/oracles/libs/vMath.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/oracles/libs/vMath.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"8760","formattedMessage":"Warning: This declaration has the same name as another declaration.\n  --> contracts/oracles/libs/vMath.sol:10:9:\n   |\n10 |         uint256 min = array[0];\n   |         ^^^^^^^^^^^\nNote: The other declaration is here:\n --> contracts/oracles/libs/vMath.sol:9:5:\n  |\n9 |     function min(uint256[] calldata array) external pure returns (uint256) {\n  |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"This declaration has the same name as another declaration.","secondarySourceLocations":[{"end":507,"file":"contracts/oracles/libs/vMath.sol","message":"The other declaration is here:","start":236}],"severity":"warning","sourceLocation":{"end":328,"file":"contracts/oracles/libs/vMath.sol","start":317},"type":"Warning"},{"component":"general","errorCode":"8760","formattedMessage":"Warning: This declaration has the same name as another declaration.\n  --> contracts/oracles/libs/vMath.sol:20:9:\n   |\n20 |         uint256 product = nums[0];\n   |         ^^^^^^^^^^^^^^^\nNote: The other declaration is here:\n  --> contracts/oracles/libs/vMath.sol:19:5:\n   |\n19 |     function product(uint256[] calldata nums) external pure returns (uint256) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"This declaration has the same name as another declaration.","secondarySourceLocations":[{"end":747,"file":"contracts/oracles/libs/vMath.sol","message":"The other declaration is here:","start":513}],"severity":"warning","sourceLocation":{"end":612,"file":"contracts/oracles/libs/vMath.sol","start":597},"type":"Warning"},{"component":"general","errorCode":"8760","formattedMessage":"Warning: This declaration has the same name as another declaration.\n  --> contracts/oracles/libs/vMath.sol:28:38:\n   |\n28 |     function geometric_mean(uint8 n, uint256 product)\n   |                                      ^^^^^^^^^^^^^^^\nNote: The other declaration is here:\n  --> contracts/oracles/libs/vMath.sol:19:5:\n   |\n19 |     function product(uint256[] calldata nums) external pure returns (uint256) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"This declaration has the same name as another declaration.","secondarySourceLocations":[{"end":747,"file":"contracts/oracles/libs/vMath.sol","message":"The other declaration is here:","start":513}],"severity":"warning","sourceLocation":{"end":868,"file":"contracts/oracles/libs/vMath.sol","start":853},"type":"Warning"},{"component":"general","errorCode":"2462","formattedMessage":"Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> contracts/misc/AaveOracle.sol:40:5:\n   |\n40 |     constructor(\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.","severity":"warning","sourceLocation":{"end":2296,"file":"contracts/misc/AaveOracle.sol","start":1866},"type":"Warning"},{"component":"general","errorCode":"2462","formattedMessage":"Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> contracts/mocks/tokens/CurvePoolMocked.sol:14:5:\n   |\n14 |     constructor(uint256 _virtual_price) public {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.","severity":"warning","sourceLocation":{"end":491,"file":"contracts/mocks/tokens/CurvePoolMocked.sol","start":282},"type":"Warning"},{"component":"general","errorCode":"2462","formattedMessage":"Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> contracts/oracles/CurveWrapper.sol:52:5:\n   |\n52 |     constructor(\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.","severity":"warning","sourceLocation":{"end":3602,"file":"contracts/oracles/CurveWrapper.sol","start":2805},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/oracles/ConvexOracleV2.sol:24:9:\n   |\n24 |         uint16 pid,\n   |         ^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":944,"file":"contracts/oracles/ConvexOracleV2.sol","start":934},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/oracles/ConvexOracleV2.sol:25:9:\n   |\n25 |         address convex_lp,\n   |         ^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":971,"file":"contracts/oracles/ConvexOracleV2.sol","start":954},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/oracles/ConvexOracleV2.sol:26:9:\n   |\n26 |         address curve_lp\n   |         ^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":997,"file":"contracts/oracles/ConvexOracleV2.sol","start":981},"type":"Warning"}],"sources":{"contracts/dependencies/openzeppelin/contracts/Address.sol":{"ast":{"absolutePath":"contracts/dependencies/openzeppelin/contracts/Address.sol","exportedSymbols":{"Address":[52]},"id":53,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"37:24:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"63:67:0","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":52,"linearizedBaseContracts":[52],"name":"Address","nodeType":"ContractDefinition","nodes":[{"body":{"id":16,"nodeType":"Block","src":"789:650:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":14,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":10,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5,"src":"1399:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":11,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1399:12:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":12,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1399:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":13,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1421:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1399:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9,"id":15,"nodeType":"Return","src":"1392:30:0"}]},"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"153:565:0","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="},"id":17,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nodeType":"FunctionDefinition","parameters":{"id":6,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":17,"src":"743:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4,"name":"address","nodeType":"ElementaryTypeName","src":"743:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"742:17:0"},"returnParameters":{"id":9,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":17,"src":"783:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7,"name":"bool","nodeType":"ElementaryTypeName","src":"783:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"782:6:0"},"scope":52,"src":"723:716:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":50,"nodeType":"Block","src":"2427:386:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":32,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":28,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2466:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$52","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$52","typeString":"library Address"}],"id":27,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2458:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"2458:7:0","typeDescriptions":{}}},"id":29,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2458:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":30,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2458:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":31,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22,"src":"2483:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2458:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2503:31:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":25,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2437:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2437:107:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":35,"nodeType":"ExpressionStatement","src":"2437:107:0"},{"assignments":[37,null],"declarations":[{"constant":false,"id":37,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":50,"src":"2633:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":36,"name":"bool","nodeType":"ElementaryTypeName","src":"2633:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":44,"initialValue":{"arguments":[{"hexValue":"","id":42,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2681:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":38,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20,"src":"2651:9:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":39,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2651:14:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":40,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22,"src":"2673:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2651:29:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":43,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2651:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2632:52:0"},{"expression":{"arguments":[{"id":46,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"2715:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":47,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2736:60:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":45,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2694:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2694:112:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":49,"nodeType":"ExpressionStatement","src":"2694:112:0"}]},"documentation":{"id":18,"nodeType":"StructuredDocumentation","src":"1445:906:0","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":51,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nodeType":"FunctionDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":51,"src":"2375:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"2375:15:0","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":22,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":51,"src":"2402:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":21,"name":"uint256","nodeType":"ElementaryTypeName","src":"2402:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2374:43:0"},"returnParameters":{"id":24,"nodeType":"ParameterList","parameters":[],"src":"2427:0:0"},"scope":52,"src":"2356:457:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":53,"src":"131:2684:0"}],"src":"37:2779:0"},"id":0},"contracts/dependencies/openzeppelin/contracts/Context.sol":{"ast":{"absolutePath":"contracts/dependencies/openzeppelin/contracts/Context.sol","exportedSymbols":{"Context":[75]},"id":76,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":54,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"32:24:1"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":75,"linearizedBaseContracts":[75],"name":"Context","nodeType":"ContractDefinition","nodes":[{"body":{"id":62,"nodeType":"Block","src":"652:34:1","statements":[{"expression":{"expression":{"id":59,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"669:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":60,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"669:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":58,"id":61,"nodeType":"Return","src":"662:17:1"}]},"id":63,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nodeType":"FunctionDefinition","parameters":{"id":55,"nodeType":"ParameterList","parameters":[],"src":"609:2:1"},"returnParameters":{"id":58,"nodeType":"ParameterList","parameters":[{"constant":false,"id":57,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":63,"src":"643:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":56,"name":"address","nodeType":"ElementaryTypeName","src":"643:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"642:9:1"},"scope":75,"src":"590:96:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":73,"nodeType":"Block","src":"757:165:1","statements":[{"expression":{"id":68,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"767:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Context_$75","typeString":"contract Context"}},"id":69,"nodeType":"ExpressionStatement","src":"767:4:1"},{"expression":{"expression":{"id":70,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"907:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":71,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"907:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":67,"id":72,"nodeType":"Return","src":"900:15:1"}]},"id":74,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nodeType":"FunctionDefinition","parameters":{"id":64,"nodeType":"ParameterList","parameters":[],"src":"709:2:1"},"returnParameters":{"id":67,"nodeType":"ParameterList","parameters":[{"constant":false,"id":66,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":74,"src":"743:12:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":65,"name":"bytes","nodeType":"ElementaryTypeName","src":"743:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"742:14:1"},"scope":75,"src":"692:230:1","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":76,"src":"558:366:1"}],"src":"32:893:1"},"id":1},"contracts/dependencies/openzeppelin/contracts/IERC20.sol":{"ast":{"absolutePath":"contracts/dependencies/openzeppelin/contracts/IERC20.sol","exportedSymbols":{"IERC20":[153]},"id":154,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":77,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"37:24:2"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":78,"nodeType":"StructuredDocumentation","src":"63:70:2","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":153,"linearizedBaseContracts":[153],"name":"IERC20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":79,"nodeType":"StructuredDocumentation","src":"157:66:2","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":84,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nodeType":"FunctionDefinition","parameters":{"id":80,"nodeType":"ParameterList","parameters":[],"src":"248:2:2"},"returnParameters":{"id":83,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":84,"src":"274:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":81,"name":"uint256","nodeType":"ElementaryTypeName","src":"274:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"273:9:2"},"scope":153,"src":"228:55:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"289:72:2","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":92,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nodeType":"FunctionDefinition","parameters":{"id":88,"nodeType":"ParameterList","parameters":[{"constant":false,"id":87,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":92,"src":"385:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":86,"name":"address","nodeType":"ElementaryTypeName","src":"385:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"384:17:2"},"returnParameters":{"id":91,"nodeType":"ParameterList","parameters":[{"constant":false,"id":90,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":92,"src":"425:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":89,"name":"uint256","nodeType":"ElementaryTypeName","src":"425:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"424:9:2"},"scope":153,"src":"366:68:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":93,"nodeType":"StructuredDocumentation","src":"440:209:2","text":" @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":102,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","parameters":{"id":98,"nodeType":"ParameterList","parameters":[{"constant":false,"id":95,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":102,"src":"672:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":94,"name":"address","nodeType":"ElementaryTypeName","src":"672:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":97,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":102,"src":"691:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":96,"name":"uint256","nodeType":"ElementaryTypeName","src":"691:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"671:35:2"},"returnParameters":{"id":101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":102,"src":"741:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":99,"name":"bool","nodeType":"ElementaryTypeName","src":"741:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"740:6:2"},"scope":153,"src":"654:93:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":103,"nodeType":"StructuredDocumentation","src":"753:264:2","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":112,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","parameters":{"id":108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":105,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":112,"src":"1041:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":104,"name":"address","nodeType":"ElementaryTypeName","src":"1041:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":107,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":112,"src":"1056:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":106,"name":"address","nodeType":"ElementaryTypeName","src":"1056:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1040:32:2"},"returnParameters":{"id":111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":110,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":112,"src":"1120:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":109,"name":"uint256","nodeType":"ElementaryTypeName","src":"1120:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1119:9:2"},"scope":153,"src":"1022:107:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":113,"nodeType":"StructuredDocumentation","src":"1135:642:2","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":122,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":115,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":122,"src":"1799:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":114,"name":"address","nodeType":"ElementaryTypeName","src":"1799:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":117,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":122,"src":"1816:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":116,"name":"uint256","nodeType":"ElementaryTypeName","src":"1816:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1798:33:2"},"returnParameters":{"id":121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":120,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":122,"src":"1850:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":119,"name":"bool","nodeType":"ElementaryTypeName","src":"1850:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1849:6:2"},"scope":153,"src":"1782:74:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":123,"nodeType":"StructuredDocumentation","src":"1862:296:2","text":" @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":134,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":125,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":134,"src":"2194:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":124,"name":"address","nodeType":"ElementaryTypeName","src":"2194:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":127,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":134,"src":"2218:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":126,"name":"address","nodeType":"ElementaryTypeName","src":"2218:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":129,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":134,"src":"2245:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":128,"name":"uint256","nodeType":"ElementaryTypeName","src":"2245:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2184:81:2"},"returnParameters":{"id":133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":134,"src":"2284:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":131,"name":"bool","nodeType":"ElementaryTypeName","src":"2284:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2283:6:2"},"scope":153,"src":"2163:127:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":135,"nodeType":"StructuredDocumentation","src":"2296:158:2","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":143,"name":"Transfer","nodeType":"EventDefinition","parameters":{"id":142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":137,"indexed":true,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":143,"src":"2474:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":136,"name":"address","nodeType":"ElementaryTypeName","src":"2474:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":139,"indexed":true,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":143,"src":"2496:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":138,"name":"address","nodeType":"ElementaryTypeName","src":"2496:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":141,"indexed":false,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":143,"src":"2516:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":140,"name":"uint256","nodeType":"ElementaryTypeName","src":"2516:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2473:57:2"},"src":"2459:72:2"},{"anonymous":false,"documentation":{"id":144,"nodeType":"StructuredDocumentation","src":"2537:148:2","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":152,"name":"Approval","nodeType":"EventDefinition","parameters":{"id":151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":146,"indexed":true,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":152,"src":"2714:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":145,"name":"address","nodeType":"ElementaryTypeName","src":"2714:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":148,"indexed":true,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":152,"src":"2745:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":147,"name":"address","nodeType":"ElementaryTypeName","src":"2745:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":150,"indexed":false,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":152,"src":"2778:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":149,"name":"uint256","nodeType":"ElementaryTypeName","src":"2778:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2704:93:2"},"src":"2690:108:2"}],"scope":154,"src":"134:2666:2"}],"src":"37:2764:2"},"id":2},"contracts/dependencies/openzeppelin/contracts/Ownable.sol":{"ast":{"absolutePath":"contracts/dependencies/openzeppelin/contracts/Ownable.sol","exportedSymbols":{"Context":[75],"Ownable":[262]},"id":263,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":155,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"32:24:3"},{"absolutePath":"contracts/dependencies/openzeppelin/contracts/Context.sol","file":"./Context.sol","id":156,"nodeType":"ImportDirective","scope":263,"sourceUnit":76,"src":"58:23:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":158,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":75,"src":"598:7:3"},"id":159,"nodeType":"InheritanceSpecifier","src":"598:7:3"}],"contractDependencies":[75],"contractKind":"contract","documentation":{"id":157,"nodeType":"StructuredDocumentation","src":"83:494:3","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":262,"linearizedBaseContracts":[262,75],"name":"Ownable","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":161,"mutability":"mutable","name":"_owner","nodeType":"VariableDeclaration","scope":262,"src":"612:22:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":160,"name":"address","nodeType":"ElementaryTypeName","src":"612:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":167,"name":"OwnershipTransferred","nodeType":"EventDefinition","parameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":163,"indexed":true,"mutability":"mutable","name":"previousOwner","nodeType":"VariableDeclaration","scope":167,"src":"677:29:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":162,"name":"address","nodeType":"ElementaryTypeName","src":"677:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":165,"indexed":true,"mutability":"mutable","name":"newOwner","nodeType":"VariableDeclaration","scope":167,"src":"716:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":164,"name":"address","nodeType":"ElementaryTypeName","src":"716:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"667:79:3"},"src":"641:106:3"},{"body":{"id":188,"nodeType":"Block","src":"863:135:3","statements":[{"assignments":[172],"declarations":[{"constant":false,"id":172,"mutability":"mutable","name":"msgSender","nodeType":"VariableDeclaration","scope":188,"src":"873:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"873:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":175,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":173,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"893:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"893:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"873:32:3"},{"expression":{"id":178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":176,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"915:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":177,"name":"msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"924:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"915:18:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":179,"nodeType":"ExpressionStatement","src":"915:18:3"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"977:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"969:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":181,"name":"address","nodeType":"ElementaryTypeName","src":"969:7:3","typeDescriptions":{}}},"id":184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"969:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":185,"name":"msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"981:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":180,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"948:20:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"948:43:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":187,"nodeType":"EmitStatement","src":"943:48:3"}]},"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"753:91:3","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":189,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"860:2:3"},"returnParameters":{"id":170,"nodeType":"ParameterList","parameters":[],"src":"863:0:3"},"scope":262,"src":"849:149:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":197,"nodeType":"Block","src":"1121:30:3","statements":[{"expression":{"id":195,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"1138:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":194,"id":196,"nodeType":"Return","src":"1131:13:3"}]},"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"1004:65:3","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":198,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nodeType":"FunctionDefinition","parameters":{"id":191,"nodeType":"ParameterList","parameters":[],"src":"1088:2:3"},"returnParameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":198,"src":"1112:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":192,"name":"address","nodeType":"ElementaryTypeName","src":"1112:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1111:9:3"},"scope":262,"src":"1074:77:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":210,"nodeType":"Block","src":"1260:95:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":202,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"1278:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":203,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"1288:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1288:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1278:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1302:34:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":201,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1270:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1270:67:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":208,"nodeType":"ExpressionStatement","src":"1270:67:3"},{"id":209,"nodeType":"PlaceholderStatement","src":"1347:1:3"}]},"documentation":{"id":199,"nodeType":"StructuredDocumentation","src":"1157:77:3","text":" @dev Throws if called by any account other than the owner."},"id":211,"name":"onlyOwner","nodeType":"ModifierDefinition","parameters":{"id":200,"nodeType":"ParameterList","parameters":[],"src":"1257:2:3"},"src":"1239:116:3","virtual":false,"visibility":"internal"},{"body":{"id":232,"nodeType":"Block","src":"1751:91:3","statements":[{"eventCall":{"arguments":[{"id":218,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"1787:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1803:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1795:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":219,"name":"address","nodeType":"ElementaryTypeName","src":"1795:7:3","typeDescriptions":{}}},"id":222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1795:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":217,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"1766:20:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1766:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":224,"nodeType":"EmitStatement","src":"1761:45:3"},{"expression":{"id":230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":225,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"1816:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1833:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1825:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":226,"name":"address","nodeType":"ElementaryTypeName","src":"1825:7:3","typeDescriptions":{}}},"id":229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1825:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1816:19:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":231,"nodeType":"ExpressionStatement","src":"1816:19:3"}]},"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"1361:331:3","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":233,"implemented":true,"kind":"function","modifiers":[{"id":215,"modifierName":{"id":214,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":211,"src":"1741:9:3"},"nodeType":"ModifierInvocation","src":"1741:9:3"}],"name":"renounceOwnership","nodeType":"FunctionDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[],"src":"1723:2:3"},"returnParameters":{"id":216,"nodeType":"ParameterList","parameters":[],"src":"1751:0:3"},"scope":262,"src":"1697:145:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":260,"nodeType":"Block","src":"2061:204:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":242,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"2092:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2112:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2104:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":243,"name":"address","nodeType":"ElementaryTypeName","src":"2104:7:3","typeDescriptions":{}}},"id":246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2104:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2092:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2128:40:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":241,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2071:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2071:107:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":250,"nodeType":"ExpressionStatement","src":"2071:107:3"},{"eventCall":{"arguments":[{"id":252,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"2214:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":253,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"2222:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":251,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"2193:20:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2193:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":255,"nodeType":"EmitStatement","src":"2188:43:3"},{"expression":{"id":258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":256,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"2241:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":257,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"2250:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2241:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":259,"nodeType":"ExpressionStatement","src":"2241:17:3"}]},"documentation":{"id":234,"nodeType":"StructuredDocumentation","src":"1848:138:3","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":261,"implemented":true,"kind":"function","modifiers":[{"id":239,"modifierName":{"id":238,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":211,"src":"2051:9:3"},"nodeType":"ModifierInvocation","src":"2051:9:3"}],"name":"transferOwnership","nodeType":"FunctionDefinition","parameters":{"id":237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":236,"mutability":"mutable","name":"newOwner","nodeType":"VariableDeclaration","scope":261,"src":"2018:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":235,"name":"address","nodeType":"ElementaryTypeName","src":"2018:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2017:18:3"},"returnParameters":{"id":240,"nodeType":"ParameterList","parameters":[],"src":"2061:0:3"},"scope":262,"src":"1991:274:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":263,"src":"578:1689:3"}],"src":"32:2236:3"},"id":3},"contracts/dependencies/openzeppelin/contracts/SafeERC20.sol":{"ast":{"absolutePath":"contracts/dependencies/openzeppelin/contracts/SafeERC20.sol","exportedSymbols":{"Address":[52],"IERC20":[153],"SafeERC20":[423],"SafeMath":[735]},"id":424,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":264,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"33:24:4"},{"absolutePath":"contracts/dependencies/openzeppelin/contracts/IERC20.sol","file":"./IERC20.sol","id":266,"nodeType":"ImportDirective","scope":424,"sourceUnit":154,"src":"59:36:4","symbolAliases":[{"foreign":{"id":265,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"src":"67:6:4","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/dependencies/openzeppelin/contracts/SafeMath.sol","file":"./SafeMath.sol","id":268,"nodeType":"ImportDirective","scope":424,"sourceUnit":736,"src":"96:40:4","symbolAliases":[{"foreign":{"id":267,"name":"SafeMath","nodeType":"Identifier","overloadedDeclarations":[],"src":"104:8:4","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/dependencies/openzeppelin/contracts/Address.sol","file":"./Address.sol","id":270,"nodeType":"ImportDirective","scope":424,"sourceUnit":53,"src":"137:38:4","symbolAliases":[{"foreign":{"id":269,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"src":"145:7:4","typeDescriptions":{}}}],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":271,"nodeType":"StructuredDocumentation","src":"177:457:4","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":423,"linearizedBaseContracts":[423],"name":"SafeERC20","nodeType":"ContractDefinition","nodes":[{"id":274,"libraryName":{"id":272,"name":"SafeMath","nodeType":"IdentifierPath","referencedDeclaration":735,"src":"665:8:4"},"nodeType":"UsingForDirective","src":"659:27:4","typeName":{"id":273,"name":"uint256","nodeType":"ElementaryTypeName","src":"678:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":277,"libraryName":{"id":275,"name":"Address","nodeType":"IdentifierPath","referencedDeclaration":52,"src":"697:7:4"},"nodeType":"UsingForDirective","src":"691:26:4","typeName":{"id":276,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":299,"nodeType":"Block","src":"825:136:4","statements":[{"expression":{"arguments":[{"id":288,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"867:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$153","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":291,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"909:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$153","typeString":"contract IERC20"}},"id":292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":102,"src":"909:14:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"909:23:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":294,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"934:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":295,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"938:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":289,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"886:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"886:22:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"886:58:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$153","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":287,"name":"callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"835:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$153_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"835:119:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"ExpressionStatement","src":"835:119:4"}]},"id":300,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nodeType":"FunctionDefinition","parameters":{"id":285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":280,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":300,"src":"754:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$153","typeString":"contract IERC20"},"typeName":{"id":279,"nodeType":"UserDefinedTypeName","pathNode":{"id":278,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":153,"src":"754:6:4"},"referencedDeclaration":153,"src":"754:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$153","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":282,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":300,"src":"776:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"776:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":284,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":300,"src":"796:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":283,"name":"uint256","nodeType":"ElementaryTypeName","src":"796:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"744:71:4"},"returnParameters":{"id":286,"nodeType":"ParameterList","parameters":[],"src":"825:0:4"},"scope":423,"src":"723:238:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":325,"nodeType":"Block","src":"1095:146:4","statements":[{"expression":{"arguments":[{"id":313,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"1137:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$153","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":316,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"1179:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$153","typeString":"contract IERC20"}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":134,"src":"1179:18:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1179:27:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":319,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"1208:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":320,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"1214:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"1218:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":314,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1156:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1156:22:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1156:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$153","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":312,"name":"callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"1105:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$153_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1105:129:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":324,"nodeType":"ExpressionStatement","src":"1105:129:4"}]},"id":326,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nodeType":"FunctionDefinition","parameters":{"id":310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":303,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":326,"src":"1002:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$153","typeString":"contract IERC20"},"typeName":{"id":302,"nodeType":"UserDefinedTypeName","pathNode":{"id":301,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":153,"src":"1002:6:4"},"referencedDeclaration":153,"src":"1002:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$153","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":305,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":326,"src":"1024:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":304,"name":"address","nodeType":"ElementaryTypeName","src":"1024:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":307,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":326,"src":"1046:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":306,"name":"address","nodeType":"ElementaryTypeName","src":"1046:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":309,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":326,"src":"1066:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":308,"name":"uint256","nodeType":"ElementaryTypeName","src":"1066:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"992:93:4"},"returnParameters":{"id":311,"nodeType":"ParameterList","parameters":[],"src":"1095:0:4"},"scope":423,"src":"967:274:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":368,"nodeType":"Block","src":"1353:313:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":337,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"1385:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1394:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1385:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":340,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1384:12:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":345,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1425:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$423","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$423","typeString":"library SafeERC20"}],"id":344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1417:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":343,"name":"address","nodeType":"ElementaryTypeName","src":"1417:7:4","typeDescriptions":{}}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1417:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":347,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"1432:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":341,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"1401:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$153","typeString":"contract IERC20"}},"id":342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":112,"src":"1401:15:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1401:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1444:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1401:44:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":351,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1400:46:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1384:62:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1460:56:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":336,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1363:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1363:163:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":355,"nodeType":"ExpressionStatement","src":"1363:163:4"},{"expression":{"arguments":[{"id":357,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"1568:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$153","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":360,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"1610:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$153","typeString":"contract IERC20"}},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":122,"src":"1610:13:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1610:22:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":363,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"1634:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"1643:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":358,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1587:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1587:22:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1587:62:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$153","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":356,"name":"callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"1536:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$153_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1536:123:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":367,"nodeType":"ExpressionStatement","src":"1536:123:4"}]},"id":369,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nodeType":"FunctionDefinition","parameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":369,"src":"1277:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$153","typeString":"contract IERC20"},"typeName":{"id":328,"nodeType":"UserDefinedTypeName","pathNode":{"id":327,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":153,"src":"1277:6:4"},"referencedDeclaration":153,"src":"1277:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$153","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":331,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":369,"src":"1299:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":330,"name":"address","nodeType":"ElementaryTypeName","src":"1299:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":333,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":369,"src":"1324:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":332,"name":"uint256","nodeType":"ElementaryTypeName","src":"1324:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1267:76:4"},"returnParameters":{"id":335,"nodeType":"ParameterList","parameters":[],"src":"1353:0:4"},"scope":423,"src":"1247:419:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":421,"nodeType":"Block","src":"1741:576:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":380,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"1767:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$153","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$153","typeString":"contract IERC20"}],"id":379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1759:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":378,"name":"address","nodeType":"ElementaryTypeName","src":"1759:7:4","typeDescriptions":{}}},"id":381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1759:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":17,"src":"1759:25:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1759:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2063616c6c20746f206e6f6e2d636f6e7472616374","id":384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1788:33:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_f6ce7bfd656f35145dec774d6f7e67f4cba158373d2dd7a0f8273e232f86148d","typeString":"literal_string \"SafeERC20: call to non-contract\""},"value":"SafeERC20: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f6ce7bfd656f35145dec774d6f7e67f4cba158373d2dd7a0f8273e232f86148d","typeString":"literal_string \"SafeERC20: call to non-contract\""}],"id":377,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1751:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1751:71:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":386,"nodeType":"ExpressionStatement","src":"1751:71:4"},{"assignments":[388,390],"declarations":[{"constant":false,"id":388,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":421,"src":"1893:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":387,"name":"bool","nodeType":"ElementaryTypeName","src":"1893:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":390,"mutability":"mutable","name":"returndata","nodeType":"VariableDeclaration","scope":421,"src":"1907:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":389,"name":"bytes","nodeType":"ElementaryTypeName","src":"1907:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":398,"initialValue":{"arguments":[{"id":396,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"1954:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":393,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"1942:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$153","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$153","typeString":"contract IERC20"}],"id":392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1934:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":391,"name":"address","nodeType":"ElementaryTypeName","src":"1934:7:4","typeDescriptions":{}}},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1934:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"1934:19:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1934:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1892:67:4"},{"expression":{"arguments":[{"id":400,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"1977:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1986:34:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"id":399,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1969:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1969:52:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":403,"nodeType":"ExpressionStatement","src":"1969:52:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":404,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"2036:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2036:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2056:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2036:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":420,"nodeType":"IfStatement","src":"2032:279:4","trueBody":{"id":419,"nodeType":"Block","src":"2059:252:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":411,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"2205:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2218:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":412,"name":"bool","nodeType":"ElementaryTypeName","src":"2218:4:4","typeDescriptions":{}}}],"id":414,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2217:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":409,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2194:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"2194:10:4","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2194:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2242:44:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":408,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2169:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2169:131:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":418,"nodeType":"ExpressionStatement","src":"2169:131:4"}]}}]},"id":422,"implemented":true,"kind":"function","modifiers":[],"name":"callOptionalReturn","nodeType":"FunctionDefinition","parameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":422,"src":"1700:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$153","typeString":"contract IERC20"},"typeName":{"id":371,"nodeType":"UserDefinedTypeName","pathNode":{"id":370,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":153,"src":"1700:6:4"},"referencedDeclaration":153,"src":"1700:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$153","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":374,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":422,"src":"1714:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":373,"name":"bytes","nodeType":"ElementaryTypeName","src":"1714:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1699:33:4"},"returnParameters":{"id":376,"nodeType":"ParameterList","parameters":[],"src":"1741:0:4"},"scope":423,"src":"1672:645:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":424,"src":"635:1684:4"}],"src":"33:2287:4"},"id":4},"contracts/dependencies/openzeppelin/contracts/SafeMath.sol":{"ast":{"absolutePath":"contracts/dependencies/openzeppelin/contracts/SafeMath.sol","exportedSymbols":{"SafeMath":[735]},"id":736,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":425,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:5"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":426,"nodeType":"StructuredDocumentation","src":"285:196:5","text":" @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."},"fullyImplemented":true,"id":735,"linearizedBaseContracts":[735],"name":"SafeMath","nodeType":"ContractDefinition","nodes":[{"body":{"id":457,"nodeType":"Block","src":"745:140:5","statements":[{"id":456,"nodeType":"UncheckedBlock","src":"755:124:5","statements":[{"assignments":[439],"declarations":[{"constant":false,"id":439,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":456,"src":"779:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":438,"name":"uint256","nodeType":"ElementaryTypeName","src":"779:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":443,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":440,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"791:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":441,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"795:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"791:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"779:17:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":444,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"814:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":445,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"818:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"814:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":451,"nodeType":"IfStatement","src":"810:28:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"829:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"836:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":449,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"828:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":437,"id":450,"nodeType":"Return","src":"821:17:5"}},{"expression":{"components":[{"hexValue":"74727565","id":452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"860:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":453,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"866:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":454,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"859:9:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":437,"id":455,"nodeType":"Return","src":"852:16:5"}]}]},"documentation":{"id":427,"nodeType":"StructuredDocumentation","src":"505:131:5","text":" @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":458,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nodeType":"FunctionDefinition","parameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":429,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":458,"src":"657:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":428,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":431,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":458,"src":"668:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":430,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:22:5"},"returnParameters":{"id":437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":434,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":458,"src":"726:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":433,"name":"bool","nodeType":"ElementaryTypeName","src":"726:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":436,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":458,"src":"732:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":435,"name":"uint256","nodeType":"ElementaryTypeName","src":"732:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"725:15:5"},"scope":735,"src":"641:244:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":485,"nodeType":"Block","src":"1134:113:5","statements":[{"id":484,"nodeType":"UncheckedBlock","src":"1144:97:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":470,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"1172:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":471,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"1176:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1172:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":477,"nodeType":"IfStatement","src":"1168:28:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1187:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1194:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":475,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1186:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":469,"id":476,"nodeType":"Return","src":"1179:17:5"}},{"expression":{"components":[{"hexValue":"74727565","id":478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1218:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":479,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"1224:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":480,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"1228:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1224:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":482,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1217:13:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":469,"id":483,"nodeType":"Return","src":"1210:20:5"}]}]},"documentation":{"id":459,"nodeType":"StructuredDocumentation","src":"891:134:5","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":486,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nodeType":"FunctionDefinition","parameters":{"id":464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":461,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":486,"src":"1046:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":460,"name":"uint256","nodeType":"ElementaryTypeName","src":"1046:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":463,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":486,"src":"1057:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":462,"name":"uint256","nodeType":"ElementaryTypeName","src":"1057:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1045:22:5"},"returnParameters":{"id":469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":466,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":486,"src":"1115:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":465,"name":"bool","nodeType":"ElementaryTypeName","src":"1115:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":468,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":486,"src":"1121:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":467,"name":"uint256","nodeType":"ElementaryTypeName","src":"1121:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1114:15:5"},"scope":735,"src":"1030:217:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":527,"nodeType":"Block","src":"1499:417:5","statements":[{"id":526,"nodeType":"UncheckedBlock","src":"1509:401:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":498,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"1767:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1772:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1767:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":505,"nodeType":"IfStatement","src":"1763:28:5","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1783:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1789:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":503,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1782:9:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":497,"id":504,"nodeType":"Return","src":"1775:16:5"}},{"assignments":[507],"declarations":[{"constant":false,"id":507,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":526,"src":"1805:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":506,"name":"uint256","nodeType":"ElementaryTypeName","src":"1805:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":511,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":508,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"1817:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":509,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"1821:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1817:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1805:17:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":512,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"1840:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":513,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"1844:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1840:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":515,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"1849:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1840:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":521,"nodeType":"IfStatement","src":"1836:33:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1860:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1867:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":519,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1859:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":497,"id":520,"nodeType":"Return","src":"1852:17:5"}},{"expression":{"components":[{"hexValue":"74727565","id":522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1891:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":523,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"1897:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":524,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1890:9:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":497,"id":525,"nodeType":"Return","src":"1883:16:5"}]}]},"documentation":{"id":487,"nodeType":"StructuredDocumentation","src":"1253:137:5","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":528,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nodeType":"FunctionDefinition","parameters":{"id":492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":489,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":528,"src":"1411:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":488,"name":"uint256","nodeType":"ElementaryTypeName","src":"1411:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":491,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":528,"src":"1422:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":490,"name":"uint256","nodeType":"ElementaryTypeName","src":"1422:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1410:22:5"},"returnParameters":{"id":497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":494,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":528,"src":"1480:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":493,"name":"bool","nodeType":"ElementaryTypeName","src":"1480:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":496,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":528,"src":"1486:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":495,"name":"uint256","nodeType":"ElementaryTypeName","src":"1486:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1479:15:5"},"scope":735,"src":"1395:521:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":555,"nodeType":"Block","src":"2169:114:5","statements":[{"id":554,"nodeType":"UncheckedBlock","src":"2179:98:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":540,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"2207:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2212:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2207:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":547,"nodeType":"IfStatement","src":"2203:29:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2223:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2230:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":545,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2222:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":539,"id":546,"nodeType":"Return","src":"2215:17:5"}},{"expression":{"components":[{"hexValue":"74727565","id":548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2254:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":549,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"2260:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":550,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"2264:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2260:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":552,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2253:13:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":539,"id":553,"nodeType":"Return","src":"2246:20:5"}]}]},"documentation":{"id":529,"nodeType":"StructuredDocumentation","src":"1922:138:5","text":" @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":556,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nodeType":"FunctionDefinition","parameters":{"id":534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":531,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":556,"src":"2081:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":530,"name":"uint256","nodeType":"ElementaryTypeName","src":"2081:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":533,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":556,"src":"2092:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":532,"name":"uint256","nodeType":"ElementaryTypeName","src":"2092:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2080:22:5"},"returnParameters":{"id":539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":536,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":556,"src":"2150:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":535,"name":"bool","nodeType":"ElementaryTypeName","src":"2150:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":538,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":556,"src":"2156:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":537,"name":"uint256","nodeType":"ElementaryTypeName","src":"2156:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2149:15:5"},"scope":735,"src":"2065:218:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":583,"nodeType":"Block","src":"2546:114:5","statements":[{"id":582,"nodeType":"UncheckedBlock","src":"2556:98:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":568,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"2584:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2589:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2584:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":575,"nodeType":"IfStatement","src":"2580:29:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2600:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2607:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":573,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2599:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":567,"id":574,"nodeType":"Return","src":"2592:17:5"}},{"expression":{"components":[{"hexValue":"74727565","id":576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2631:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":577,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"2637:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":578,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"2641:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2637:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":580,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2630:13:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":567,"id":581,"nodeType":"Return","src":"2623:20:5"}]}]},"documentation":{"id":557,"nodeType":"StructuredDocumentation","src":"2289:148:5","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":584,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nodeType":"FunctionDefinition","parameters":{"id":562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":559,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":584,"src":"2458:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":558,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":561,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":584,"src":"2469:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":560,"name":"uint256","nodeType":"ElementaryTypeName","src":"2469:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2457:22:5"},"returnParameters":{"id":567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":564,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":584,"src":"2527:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":563,"name":"bool","nodeType":"ElementaryTypeName","src":"2527:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":566,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":584,"src":"2533:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":565,"name":"uint256","nodeType":"ElementaryTypeName","src":"2533:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2526:15:5"},"scope":735,"src":"2442:218:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":598,"nodeType":"Block","src":"2962:29:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":594,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"2979:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":595,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"2983:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2979:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":593,"id":597,"nodeType":"Return","src":"2972:12:5"}]},"documentation":{"id":585,"nodeType":"StructuredDocumentation","src":"2666:224:5","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":599,"implemented":true,"kind":"function","modifiers":[],"name":"add","nodeType":"FunctionDefinition","parameters":{"id":590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":587,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":599,"src":"2908:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":586,"name":"uint256","nodeType":"ElementaryTypeName","src":"2908:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":589,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":599,"src":"2919:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":588,"name":"uint256","nodeType":"ElementaryTypeName","src":"2919:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2907:22:5"},"returnParameters":{"id":593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":592,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":599,"src":"2953:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":591,"name":"uint256","nodeType":"ElementaryTypeName","src":"2953:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2952:9:5"},"scope":735,"src":"2895:96:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":613,"nodeType":"Block","src":"3329:29:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":609,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"3346:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":610,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"3350:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3346:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":608,"id":612,"nodeType":"Return","src":"3339:12:5"}]},"documentation":{"id":600,"nodeType":"StructuredDocumentation","src":"2997:260:5","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":614,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nodeType":"FunctionDefinition","parameters":{"id":605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":602,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":614,"src":"3275:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":601,"name":"uint256","nodeType":"ElementaryTypeName","src":"3275:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":604,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":614,"src":"3286:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":603,"name":"uint256","nodeType":"ElementaryTypeName","src":"3286:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3274:22:5"},"returnParameters":{"id":608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":607,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":614,"src":"3320:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":606,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3319:9:5"},"scope":735,"src":"3262:96:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":628,"nodeType":"Block","src":"3672:29:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":624,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"3689:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":625,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"3693:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3689:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":623,"id":627,"nodeType":"Return","src":"3682:12:5"}]},"documentation":{"id":615,"nodeType":"StructuredDocumentation","src":"3364:236:5","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":629,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nodeType":"FunctionDefinition","parameters":{"id":620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":617,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":629,"src":"3618:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":616,"name":"uint256","nodeType":"ElementaryTypeName","src":"3618:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":619,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":629,"src":"3629:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":618,"name":"uint256","nodeType":"ElementaryTypeName","src":"3629:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3617:22:5"},"returnParameters":{"id":623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":622,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":629,"src":"3663:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":621,"name":"uint256","nodeType":"ElementaryTypeName","src":"3663:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3662:9:5"},"scope":735,"src":"3605:96:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":643,"nodeType":"Block","src":"4057:29:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":639,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"4074:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":640,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"4078:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4074:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":638,"id":642,"nodeType":"Return","src":"4067:12:5"}]},"documentation":{"id":630,"nodeType":"StructuredDocumentation","src":"3707:278:5","text":" @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."},"id":644,"implemented":true,"kind":"function","modifiers":[],"name":"div","nodeType":"FunctionDefinition","parameters":{"id":635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":632,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":644,"src":"4003:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":631,"name":"uint256","nodeType":"ElementaryTypeName","src":"4003:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":634,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":644,"src":"4014:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":633,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4002:22:5"},"returnParameters":{"id":638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":637,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":644,"src":"4048:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":636,"name":"uint256","nodeType":"ElementaryTypeName","src":"4048:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4047:9:5"},"scope":735,"src":"3990:96:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":658,"nodeType":"Block","src":"4606:29:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":654,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"4623:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":655,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"4627:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4623:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":653,"id":657,"nodeType":"Return","src":"4616:12:5"}]},"documentation":{"id":645,"nodeType":"StructuredDocumentation","src":"4092:442:5","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":659,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nodeType":"FunctionDefinition","parameters":{"id":650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":647,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":659,"src":"4552:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":646,"name":"uint256","nodeType":"ElementaryTypeName","src":"4552:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":649,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":659,"src":"4563:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":648,"name":"uint256","nodeType":"ElementaryTypeName","src":"4563:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4551:22:5"},"returnParameters":{"id":653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":652,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":659,"src":"4597:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":651,"name":"uint256","nodeType":"ElementaryTypeName","src":"4597:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4596:9:5"},"scope":735,"src":"4539:96:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":683,"nodeType":"Block","src":"5224:106:5","statements":[{"id":682,"nodeType":"UncheckedBlock","src":"5234:90:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":672,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"5266:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":673,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"5271:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5266:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":675,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"5274:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":671,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5258:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5258:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":677,"nodeType":"ExpressionStatement","src":"5258:29:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":678,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"5308:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":679,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"5312:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5308:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":670,"id":681,"nodeType":"Return","src":"5301:12:5"}]}]},"documentation":{"id":660,"nodeType":"StructuredDocumentation","src":"4641:453:5","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":684,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nodeType":"FunctionDefinition","parameters":{"id":667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":662,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":684,"src":"5121:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":661,"name":"uint256","nodeType":"ElementaryTypeName","src":"5121:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":664,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":684,"src":"5140:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":663,"name":"uint256","nodeType":"ElementaryTypeName","src":"5140:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":666,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":684,"src":"5159:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":665,"name":"string","nodeType":"ElementaryTypeName","src":"5159:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5111:80:5"},"returnParameters":{"id":670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":669,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":684,"src":"5215:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":668,"name":"uint256","nodeType":"ElementaryTypeName","src":"5215:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5214:9:5"},"scope":735,"src":"5099:231:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":708,"nodeType":"Block","src":"5939:105:5","statements":[{"id":707,"nodeType":"UncheckedBlock","src":"5949:89:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":697,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"5981:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5985:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5981:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":700,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"5988:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":696,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5973:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5973:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":702,"nodeType":"ExpressionStatement","src":"5973:28:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":703,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"6022:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":704,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"6026:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6022:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":695,"id":706,"nodeType":"Return","src":"6015:12:5"}]}]},"documentation":{"id":685,"nodeType":"StructuredDocumentation","src":"5336:473:5","text":" @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":709,"implemented":true,"kind":"function","modifiers":[],"name":"div","nodeType":"FunctionDefinition","parameters":{"id":692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":687,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":709,"src":"5836:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":686,"name":"uint256","nodeType":"ElementaryTypeName","src":"5836:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":689,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":709,"src":"5855:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":688,"name":"uint256","nodeType":"ElementaryTypeName","src":"5855:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":691,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":709,"src":"5874:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":690,"name":"string","nodeType":"ElementaryTypeName","src":"5874:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5826:80:5"},"returnParameters":{"id":695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":694,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":709,"src":"5930:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":693,"name":"uint256","nodeType":"ElementaryTypeName","src":"5930:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5929:9:5"},"scope":735,"src":"5814:230:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":733,"nodeType":"Block","src":"6815:105:5","statements":[{"id":732,"nodeType":"UncheckedBlock","src":"6825:89:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":722,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"6857:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6861:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6857:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":725,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"6864:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":721,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6849:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6849:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":727,"nodeType":"ExpressionStatement","src":"6849:28:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":728,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"6898:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":729,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"6902:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6898:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":720,"id":731,"nodeType":"Return","src":"6891:12:5"}]}]},"documentation":{"id":710,"nodeType":"StructuredDocumentation","src":"6050:635:5","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":734,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nodeType":"FunctionDefinition","parameters":{"id":717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":712,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":734,"src":"6712:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":711,"name":"uint256","nodeType":"ElementaryTypeName","src":"6712:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":714,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":734,"src":"6731:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":713,"name":"uint256","nodeType":"ElementaryTypeName","src":"6731:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":716,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":734,"src":"6750:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":715,"name":"string","nodeType":"ElementaryTypeName","src":"6750:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6702:80:5"},"returnParameters":{"id":720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":719,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":734,"src":"6806:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":718,"name":"uint256","nodeType":"ElementaryTypeName","src":"6806:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6805:9:5"},"scope":735,"src":"6690:230:5","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":736,"src":"482:6440:5"}],"src":"107:6816:5"},"id":5},"contracts/interfaces/IChainlinkAggregator.sol":{"ast":{"absolutePath":"contracts/interfaces/IChainlinkAggregator.sol","exportedSymbols":{"IChainlinkAggregator":[786]},"id":787,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":737,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"37:24:6"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":786,"linearizedBaseContracts":[786],"name":"IChainlinkAggregator","nodeType":"ContractDefinition","nodes":[{"functionSelector":"313ce567","id":742,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nodeType":"FunctionDefinition","parameters":{"id":738,"nodeType":"ParameterList","parameters":[],"src":"117:2:6"},"returnParameters":{"id":741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":740,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":742,"src":"143:5:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":739,"name":"uint8","nodeType":"ElementaryTypeName","src":"143:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"142:7:6"},"scope":786,"src":"100:50:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"50d25bcd","id":747,"implemented":false,"kind":"function","modifiers":[],"name":"latestAnswer","nodeType":"FunctionDefinition","parameters":{"id":743,"nodeType":"ParameterList","parameters":[],"src":"177:2:6"},"returnParameters":{"id":746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":745,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":747,"src":"203:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":744,"name":"int256","nodeType":"ElementaryTypeName","src":"203:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"202:8:6"},"scope":786,"src":"156:55:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8205bf6a","id":752,"implemented":false,"kind":"function","modifiers":[],"name":"latestTimestamp","nodeType":"FunctionDefinition","parameters":{"id":748,"nodeType":"ParameterList","parameters":[],"src":"241:2:6"},"returnParameters":{"id":751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":750,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":752,"src":"267:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":749,"name":"uint256","nodeType":"ElementaryTypeName","src":"267:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"266:9:6"},"scope":786,"src":"217:59:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"668a0f02","id":757,"implemented":false,"kind":"function","modifiers":[],"name":"latestRound","nodeType":"FunctionDefinition","parameters":{"id":753,"nodeType":"ParameterList","parameters":[],"src":"302:2:6"},"returnParameters":{"id":756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":755,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":757,"src":"328:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":754,"name":"uint256","nodeType":"ElementaryTypeName","src":"328:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"327:9:6"},"scope":786,"src":"282:55:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b5ab58dc","id":764,"implemented":false,"kind":"function","modifiers":[],"name":"getAnswer","nodeType":"FunctionDefinition","parameters":{"id":760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":759,"mutability":"mutable","name":"roundId","nodeType":"VariableDeclaration","scope":764,"src":"362:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":758,"name":"uint256","nodeType":"ElementaryTypeName","src":"362:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"361:17:6"},"returnParameters":{"id":763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":762,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":764,"src":"402:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":761,"name":"int256","nodeType":"ElementaryTypeName","src":"402:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"401:8:6"},"scope":786,"src":"343:67:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b633620c","id":771,"implemented":false,"kind":"function","modifiers":[],"name":"getTimestamp","nodeType":"FunctionDefinition","parameters":{"id":767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":766,"mutability":"mutable","name":"roundId","nodeType":"VariableDeclaration","scope":771,"src":"438:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":765,"name":"uint256","nodeType":"ElementaryTypeName","src":"438:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"437:17:6"},"returnParameters":{"id":770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":769,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":771,"src":"478:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":768,"name":"uint256","nodeType":"ElementaryTypeName","src":"478:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"477:9:6"},"scope":786,"src":"416:71:6","stateMutability":"view","virtual":false,"visibility":"external"},{"anonymous":false,"id":779,"name":"AnswerUpdated","nodeType":"EventDefinition","parameters":{"id":778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":773,"indexed":true,"mutability":"mutable","name":"current","nodeType":"VariableDeclaration","scope":779,"src":"522:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":772,"name":"int256","nodeType":"ElementaryTypeName","src":"522:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":775,"indexed":true,"mutability":"mutable","name":"roundId","nodeType":"VariableDeclaration","scope":779,"src":"554:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":774,"name":"uint256","nodeType":"ElementaryTypeName","src":"554:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":777,"indexed":false,"mutability":"mutable","name":"timestamp","nodeType":"VariableDeclaration","scope":779,"src":"587:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":776,"name":"uint256","nodeType":"ElementaryTypeName","src":"587:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"512:98:6"},"src":"493:118:6"},{"anonymous":false,"id":785,"name":"NewRound","nodeType":"EventDefinition","parameters":{"id":784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":781,"indexed":true,"mutability":"mutable","name":"roundId","nodeType":"VariableDeclaration","scope":785,"src":"631:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":780,"name":"uint256","nodeType":"ElementaryTypeName","src":"631:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":783,"indexed":true,"mutability":"mutable","name":"startedBy","nodeType":"VariableDeclaration","scope":785,"src":"656:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":782,"name":"address","nodeType":"ElementaryTypeName","src":"656:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"630:52:6"},"src":"616:67:6"}],"scope":787,"src":"63:622:6"}],"src":"37:649:6"},"id":6},"contracts/interfaces/ILendingPoolAddressesProvider.sol":{"ast":{"absolutePath":"contracts/interfaces/ILendingPoolAddressesProvider.sol","exportedSymbols":{"DataTypes":[3309],"ILendingPoolAddressesProvider":[1031]},"id":1032,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":788,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"37:24:7"},{"absolutePath":"contracts/protocol/libraries/types/DataTypes.sol","file":"../protocol/libraries/types/DataTypes.sol","id":790,"nodeType":"ImportDirective","scope":1032,"sourceUnit":3310,"src":"63:68:7","symbolAliases":[{"foreign":{"id":789,"name":"DataTypes","nodeType":"Identifier","overloadedDeclarations":[],"src":"71:9:7","typeDescriptions":{}}}],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":791,"nodeType":"StructuredDocumentation","src":"133:311:7","text":" @title LendingPoolAddressesProvider contract\n @dev Main registry of addresses part of or connected to the protocol, including permissioned roles\n - Acting also as factory of proxies and admin of those, so with right to change its implementations\n - Owned by the Aave Governance\n @author Aave*"},"fullyImplemented":false,"id":1031,"linearizedBaseContracts":[1031],"name":"ILendingPoolAddressesProvider","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"id":795,"name":"MarketIdSet","nodeType":"EventDefinition","parameters":{"id":794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":793,"indexed":false,"mutability":"mutable","name":"newMarketId","nodeType":"VariableDeclaration","scope":795,"src":"509:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":792,"name":"string","nodeType":"ElementaryTypeName","src":"509:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"508:20:7"},"src":"491:38:7"},{"anonymous":false,"id":799,"name":"LendingPoolUpdated","nodeType":"EventDefinition","parameters":{"id":798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":797,"indexed":true,"mutability":"mutable","name":"newAddress","nodeType":"VariableDeclaration","scope":799,"src":"559:26:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":796,"name":"address","nodeType":"ElementaryTypeName","src":"559:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"558:28:7"},"src":"534:53:7"},{"anonymous":false,"id":805,"name":"ConfigurationAdminUpdated","nodeType":"EventDefinition","parameters":{"id":804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":801,"indexed":true,"mutability":"mutable","name":"newAddress","nodeType":"VariableDeclaration","scope":805,"src":"633:26:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":800,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":803,"indexed":false,"mutability":"mutable","name":"trancheId","nodeType":"VariableDeclaration","scope":805,"src":"669:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":802,"name":"uint64","nodeType":"ElementaryTypeName","src":"669:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"623:68:7"},"src":"592:100:7"},{"anonymous":false,"id":811,"name":"EmergencyAdminUpdated","nodeType":"EventDefinition","parameters":{"id":810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":807,"indexed":true,"mutability":"mutable","name":"newAddress","nodeType":"VariableDeclaration","scope":811,"src":"725:26:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":806,"name":"address","nodeType":"ElementaryTypeName","src":"725:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":809,"indexed":false,"mutability":"mutable","name":"trancheId","nodeType":"VariableDeclaration","scope":811,"src":"753:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":808,"name":"uint64","nodeType":"ElementaryTypeName","src":"753:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"724:46:7"},"src":"697:74:7"},{"anonymous":false,"id":815,"name":"LendingPoolConfiguratorUpdated","nodeType":"EventDefinition","parameters":{"id":814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":813,"indexed":true,"mutability":"mutable","name":"newAddress","nodeType":"VariableDeclaration","scope":815,"src":"813:26:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":812,"name":"address","nodeType":"ElementaryTypeName","src":"813:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"812:28:7"},"src":"776:65:7"},{"anonymous":false,"id":819,"name":"LendingPoolCollateralManagerUpdated","nodeType":"EventDefinition","parameters":{"id":818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":817,"indexed":true,"mutability":"mutable","name":"newAddress","nodeType":"VariableDeclaration","scope":819,"src":"888:26:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":816,"name":"address","nodeType":"ElementaryTypeName","src":"888:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"887:28:7"},"src":"846:70:7"},{"anonymous":false,"id":823,"name":"PriceOracleUpdated","nodeType":"EventDefinition","parameters":{"id":822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":821,"indexed":true,"mutability":"mutable","name":"newAddress","nodeType":"VariableDeclaration","scope":823,"src":"946:26:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":820,"name":"address","nodeType":"ElementaryTypeName","src":"946:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"945:28:7"},"src":"921:53:7"},{"anonymous":false,"id":827,"name":"CurvePriceOracleUpdated","nodeType":"EventDefinition","parameters":{"id":826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":825,"indexed":true,"mutability":"mutable","name":"newAddress","nodeType":"VariableDeclaration","scope":827,"src":"1009:26:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":824,"name":"address","nodeType":"ElementaryTypeName","src":"1009:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1008:28:7"},"src":"979:58:7"},{"anonymous":false,"id":831,"name":"CurvePriceOracleWrapperUpdated","nodeType":"EventDefinition","parameters":{"id":830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":829,"indexed":true,"mutability":"mutable","name":"newAddress","nodeType":"VariableDeclaration","scope":831,"src":"1079:26:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":828,"name":"address","nodeType":"ElementaryTypeName","src":"1079:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1078:28:7"},"src":"1042:65:7"},{"anonymous":false,"id":835,"name":"CurveAddressProviderUpdated","nodeType":"EventDefinition","parameters":{"id":834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":833,"indexed":true,"mutability":"mutable","name":"newAddress","nodeType":"VariableDeclaration","scope":835,"src":"1146:26:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":832,"name":"address","nodeType":"ElementaryTypeName","src":"1146:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1145:28:7"},"src":"1112:62:7"},{"anonymous":false,"id":839,"name":"LendingRateOracleUpdated","nodeType":"EventDefinition","parameters":{"id":838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":837,"indexed":true,"mutability":"mutable","name":"newAddress","nodeType":"VariableDeclaration","scope":839,"src":"1210:26:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":836,"name":"address","nodeType":"ElementaryTypeName","src":"1210:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1209:28:7"},"src":"1179:59:7"},{"anonymous":false,"id":845,"name":"ProxyCreated","nodeType":"EventDefinition","parameters":{"id":844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":841,"indexed":false,"mutability":"mutable","name":"id","nodeType":"VariableDeclaration","scope":845,"src":"1262:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":840,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1262:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":843,"indexed":true,"mutability":"mutable","name":"newAddress","nodeType":"VariableDeclaration","scope":845,"src":"1274:26:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":842,"name":"address","nodeType":"ElementaryTypeName","src":"1274:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1261:40:7"},"src":"1243:59:7"},{"anonymous":false,"id":853,"name":"AddressSet","nodeType":"EventDefinition","parameters":{"id":852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":847,"indexed":false,"mutability":"mutable","name":"id","nodeType":"VariableDeclaration","scope":853,"src":"1324:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":846,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1324:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":849,"indexed":true,"mutability":"mutable","name":"newAddress","nodeType":"VariableDeclaration","scope":853,"src":"1336:26:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":848,"name":"address","nodeType":"ElementaryTypeName","src":"1336:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":851,"indexed":false,"mutability":"mutable","name":"hasProxy","nodeType":"VariableDeclaration","scope":853,"src":"1364:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":850,"name":"bool","nodeType":"ElementaryTypeName","src":"1364:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1323:55:7"},"src":"1307:72:7"},{"functionSelector":"568ef470","id":858,"implemented":false,"kind":"function","modifiers":[],"name":"getMarketId","nodeType":"FunctionDefinition","parameters":{"id":854,"nodeType":"ParameterList","parameters":[],"src":"1405:2:7"},"returnParameters":{"id":857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":856,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":858,"src":"1431:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":855,"name":"string","nodeType":"ElementaryTypeName","src":"1431:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1430:15:7"},"scope":1031,"src":"1385:61:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f67b1847","id":863,"implemented":false,"kind":"function","modifiers":[],"name":"setMarketId","nodeType":"FunctionDefinition","parameters":{"id":861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":860,"mutability":"mutable","name":"marketId","nodeType":"VariableDeclaration","scope":863,"src":"1473:24:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":859,"name":"string","nodeType":"ElementaryTypeName","src":"1473:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1472:26:7"},"returnParameters":{"id":862,"nodeType":"ParameterList","parameters":[],"src":"1507:0:7"},"scope":1031,"src":"1452:56:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"ca446dd9","id":870,"implemented":false,"kind":"function","modifiers":[],"name":"setAddress","nodeType":"FunctionDefinition","parameters":{"id":868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":865,"mutability":"mutable","name":"id","nodeType":"VariableDeclaration","scope":870,"src":"1534:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":864,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1534:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":867,"mutability":"mutable","name":"newAddress","nodeType":"VariableDeclaration","scope":870,"src":"1546:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":866,"name":"address","nodeType":"ElementaryTypeName","src":"1546:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1533:32:7"},"returnParameters":{"id":869,"nodeType":"ParameterList","parameters":[],"src":"1574:0:7"},"scope":1031,"src":"1514:61:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5dcc528c","id":877,"implemented":false,"kind":"function","modifiers":[],"name":"setAddressAsProxy","nodeType":"FunctionDefinition","parameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":872,"mutability":"mutable","name":"id","nodeType":"VariableDeclaration","scope":877,"src":"1608:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":871,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1608:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":874,"mutability":"mutable","name":"impl","nodeType":"VariableDeclaration","scope":877,"src":"1620:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":873,"name":"address","nodeType":"ElementaryTypeName","src":"1620:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1607:26:7"},"returnParameters":{"id":876,"nodeType":"ParameterList","parameters":[],"src":"1642:0:7"},"scope":1031,"src":"1581:62:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"21f8a721","id":884,"implemented":false,"kind":"function","modifiers":[],"name":"getAddress","nodeType":"FunctionDefinition","parameters":{"id":880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":879,"mutability":"mutable","name":"id","nodeType":"VariableDeclaration","scope":884,"src":"1669:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":878,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1669:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1668:12:7"},"returnParameters":{"id":883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":882,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":884,"src":"1704:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":881,"name":"address","nodeType":"ElementaryTypeName","src":"1704:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1703:9:7"},"scope":1031,"src":"1649:64:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0261bf8b","id":889,"implemented":false,"kind":"function","modifiers":[],"name":"getLendingPool","nodeType":"FunctionDefinition","parameters":{"id":885,"nodeType":"ParameterList","parameters":[],"src":"1742:2:7"},"returnParameters":{"id":888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":887,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":889,"src":"1768:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":886,"name":"address","nodeType":"ElementaryTypeName","src":"1768:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1767:9:7"},"scope":1031,"src":"1719:58:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"5aef021f","id":894,"implemented":false,"kind":"function","modifiers":[],"name":"setLendingPoolImpl","nodeType":"FunctionDefinition","parameters":{"id":892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":891,"mutability":"mutable","name":"pool","nodeType":"VariableDeclaration","scope":894,"src":"1811:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":890,"name":"address","nodeType":"ElementaryTypeName","src":"1811:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1810:14:7"},"returnParameters":{"id":893,"nodeType":"ParameterList","parameters":[],"src":"1833:0:7"},"scope":1031,"src":"1783:51:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"85c858b1","id":899,"implemented":false,"kind":"function","modifiers":[],"name":"getLendingPoolConfigurator","nodeType":"FunctionDefinition","parameters":{"id":895,"nodeType":"ParameterList","parameters":[],"src":"1875:2:7"},"returnParameters":{"id":898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":897,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":899,"src":"1901:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":896,"name":"address","nodeType":"ElementaryTypeName","src":"1901:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1900:9:7"},"scope":1031,"src":"1840:70:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"c12542df","id":904,"implemented":false,"kind":"function","modifiers":[],"name":"setLendingPoolConfiguratorImpl","nodeType":"FunctionDefinition","parameters":{"id":902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":901,"mutability":"mutable","name":"configurator","nodeType":"VariableDeclaration","scope":904,"src":"1956:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":900,"name":"address","nodeType":"ElementaryTypeName","src":"1956:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1955:22:7"},"returnParameters":{"id":903,"nodeType":"ParameterList","parameters":[],"src":"1986:0:7"},"scope":1031,"src":"1916:71:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"712d9171","id":909,"implemented":false,"kind":"function","modifiers":[],"name":"getLendingPoolCollateralManager","nodeType":"FunctionDefinition","parameters":{"id":905,"nodeType":"ParameterList","parameters":[],"src":"2033:2:7"},"returnParameters":{"id":908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":907,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":909,"src":"2059:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":906,"name":"address","nodeType":"ElementaryTypeName","src":"2059:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2058:9:7"},"scope":1031,"src":"1993:75:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"398e5553","id":914,"implemented":false,"kind":"function","modifiers":[],"name":"setLendingPoolCollateralManager","nodeType":"FunctionDefinition","parameters":{"id":912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":911,"mutability":"mutable","name":"manager","nodeType":"VariableDeclaration","scope":914,"src":"2115:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":910,"name":"address","nodeType":"ElementaryTypeName","src":"2115:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2114:17:7"},"returnParameters":{"id":913,"nodeType":"ParameterList","parameters":[],"src":"2140:0:7"},"scope":1031,"src":"2074:67:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"0847b4a3","id":921,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolAdmin","nodeType":"FunctionDefinition","parameters":{"id":917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":916,"mutability":"mutable","name":"trancheId","nodeType":"VariableDeclaration","scope":921,"src":"2275:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":915,"name":"uint64","nodeType":"ElementaryTypeName","src":"2275:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2274:18:7"},"returnParameters":{"id":920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":919,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":921,"src":"2316:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":918,"name":"address","nodeType":"ElementaryTypeName","src":"2316:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2315:9:7"},"scope":1031,"src":"2253:72:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d60ed267","id":926,"implemented":false,"kind":"function","modifiers":[],"name":"getGlobalAdmin","nodeType":"FunctionDefinition","parameters":{"id":922,"nodeType":"ParameterList","parameters":[],"src":"2422:2:7"},"returnParameters":{"id":925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":924,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":926,"src":"2448:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":923,"name":"address","nodeType":"ElementaryTypeName","src":"2448:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2447:9:7"},"scope":1031,"src":"2399:58:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"c52bc31d","id":931,"implemented":false,"kind":"function","modifiers":[],"name":"setGlobalAdmin","nodeType":"FunctionDefinition","parameters":{"id":929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":928,"mutability":"mutable","name":"admin","nodeType":"VariableDeclaration","scope":931,"src":"2487:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":927,"name":"address","nodeType":"ElementaryTypeName","src":"2487:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2486:15:7"},"returnParameters":{"id":930,"nodeType":"ParameterList","parameters":[],"src":"2510:0:7"},"scope":1031,"src":"2463:48:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"847276b8","id":938,"implemented":false,"kind":"function","modifiers":[],"name":"setPoolAdmin","nodeType":"FunctionDefinition","parameters":{"id":936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":933,"mutability":"mutable","name":"admin","nodeType":"VariableDeclaration","scope":938,"src":"2539:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":932,"name":"address","nodeType":"ElementaryTypeName","src":"2539:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":935,"mutability":"mutable","name":"trancheId","nodeType":"VariableDeclaration","scope":938,"src":"2554:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":934,"name":"uint64","nodeType":"ElementaryTypeName","src":"2554:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2538:33:7"},"returnParameters":{"id":937,"nodeType":"ParameterList","parameters":[],"src":"2580:0:7"},"scope":1031,"src":"2517:64:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a629f959","id":945,"implemented":false,"kind":"function","modifiers":[],"name":"getEmergencyAdmin","nodeType":"FunctionDefinition","parameters":{"id":941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":940,"mutability":"mutable","name":"trancheId","nodeType":"VariableDeclaration","scope":945,"src":"2642:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":939,"name":"uint64","nodeType":"ElementaryTypeName","src":"2642:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2641:18:7"},"returnParameters":{"id":944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":943,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":945,"src":"2707:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":942,"name":"address","nodeType":"ElementaryTypeName","src":"2707:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2706:9:7"},"scope":1031,"src":"2615:101:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"1cad0509","id":952,"implemented":false,"kind":"function","modifiers":[],"name":"setEmergencyAdmin","nodeType":"FunctionDefinition","parameters":{"id":950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":947,"mutability":"mutable","name":"admin","nodeType":"VariableDeclaration","scope":952,"src":"2777:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":946,"name":"address","nodeType":"ElementaryTypeName","src":"2777:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":949,"mutability":"mutable","name":"trancheId","nodeType":"VariableDeclaration","scope":952,"src":"2792:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":948,"name":"uint64","nodeType":"ElementaryTypeName","src":"2792:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2776:33:7"},"returnParameters":{"id":951,"nodeType":"ParameterList","parameters":[],"src":"2818:0:7"},"scope":1031,"src":"2750:69:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"ca7e6560","id":959,"implemented":false,"kind":"function","modifiers":[],"name":"addPoolAdmin","nodeType":"FunctionDefinition","parameters":{"id":957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":954,"mutability":"mutable","name":"admin","nodeType":"VariableDeclaration","scope":959,"src":"2875:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":953,"name":"address","nodeType":"ElementaryTypeName","src":"2875:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":956,"mutability":"mutable","name":"trancheId","nodeType":"VariableDeclaration","scope":959,"src":"2890:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":955,"name":"uint64","nodeType":"ElementaryTypeName","src":"2890:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2874:33:7"},"returnParameters":{"id":958,"nodeType":"ParameterList","parameters":[],"src":"2916:0:7"},"scope":1031,"src":"2853:64:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2b5f4e09","id":966,"implemented":false,"kind":"function","modifiers":[],"name":"addEmergencyAdmin","nodeType":"FunctionDefinition","parameters":{"id":964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":961,"mutability":"mutable","name":"admin","nodeType":"VariableDeclaration","scope":966,"src":"2950:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":960,"name":"address","nodeType":"ElementaryTypeName","src":"2950:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":963,"mutability":"mutable","name":"trancheId","nodeType":"VariableDeclaration","scope":966,"src":"2965:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":962,"name":"uint64","nodeType":"ElementaryTypeName","src":"2965:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2949:33:7"},"returnParameters":{"id":965,"nodeType":"ParameterList","parameters":[],"src":"2991:0:7"},"scope":1031,"src":"2923:69:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"96f13b22","id":975,"implemented":false,"kind":"function","modifiers":[],"name":"getAddressTranche","nodeType":"FunctionDefinition","parameters":{"id":971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":968,"mutability":"mutable","name":"id","nodeType":"VariableDeclaration","scope":975,"src":"3025:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":967,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3025:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":970,"mutability":"mutable","name":"trancheId","nodeType":"VariableDeclaration","scope":975,"src":"3037:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":969,"name":"uint64","nodeType":"ElementaryTypeName","src":"3037:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3024:30:7"},"returnParameters":{"id":974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":973,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":975,"src":"3102:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":972,"name":"address","nodeType":"ElementaryTypeName","src":"3102:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3101:9:7"},"scope":1031,"src":"2998:113:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"5fae0576","id":982,"implemented":false,"kind":"function","modifiers":[],"name":"isWhitelistedAddress","nodeType":"FunctionDefinition","parameters":{"id":978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":977,"mutability":"mutable","name":"ad","nodeType":"VariableDeclaration","scope":982,"src":"3147:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":976,"name":"address","nodeType":"ElementaryTypeName","src":"3147:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3146:12:7"},"returnParameters":{"id":981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":980,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":982,"src":"3182:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":979,"name":"bool","nodeType":"ElementaryTypeName","src":"3182:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3181:6:7"},"scope":1031,"src":"3117:71:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"1a9dffb3","id":990,"implemented":false,"kind":"function","modifiers":[],"name":"getPriceOracle","nodeType":"FunctionDefinition","parameters":{"id":986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":985,"mutability":"mutable","name":"assetType","nodeType":"VariableDeclaration","scope":990,"src":"3286:36:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ReserveAssetType_$3166","typeString":"enum DataTypes.ReserveAssetType"},"typeName":{"id":984,"nodeType":"UserDefinedTypeName","pathNode":{"id":983,"name":"DataTypes.ReserveAssetType","nodeType":"IdentifierPath","referencedDeclaration":3166,"src":"3286:26:7"},"referencedDeclaration":3166,"src":"3286:26:7","typeDescriptions":{"typeIdentifier":"t_enum$_ReserveAssetType_$3166","typeString":"enum DataTypes.ReserveAssetType"}},"visibility":"internal"}],"src":"3285:38:7"},"returnParameters":{"id":989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":988,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":990,"src":"3371:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":987,"name":"address","nodeType":"ElementaryTypeName","src":"3371:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3370:9:7"},"scope":1031,"src":"3262:118:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f139dc81","id":995,"implemented":false,"kind":"function","modifiers":[],"name":"getAavePriceOracle","nodeType":"FunctionDefinition","parameters":{"id":991,"nodeType":"ParameterList","parameters":[],"src":"3483:2:7"},"returnParameters":{"id":994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":993,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":995,"src":"3509:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":992,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3508:9:7"},"scope":1031,"src":"3456:62:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"ba61fe31","id":1000,"implemented":false,"kind":"function","modifiers":[],"name":"getCurvePriceOracle","nodeType":"FunctionDefinition","parameters":{"id":996,"nodeType":"ParameterList","parameters":[],"src":"3552:2:7"},"returnParameters":{"id":999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":998,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1000,"src":"3578:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":997,"name":"address","nodeType":"ElementaryTypeName","src":"3578:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3577:9:7"},"scope":1031,"src":"3524:63:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"992ecae7","id":1005,"implemented":false,"kind":"function","modifiers":[],"name":"getCurvePriceOracleWrapper","nodeType":"FunctionDefinition","parameters":{"id":1001,"nodeType":"ParameterList","parameters":[],"src":"3628:2:7"},"returnParameters":{"id":1004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1003,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1005,"src":"3654:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1002,"name":"address","nodeType":"ElementaryTypeName","src":"3654:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3653:9:7"},"scope":1031,"src":"3593:70:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"985420f4","id":1010,"implemented":false,"kind":"function","modifiers":[],"name":"setAavePriceOracle","nodeType":"FunctionDefinition","parameters":{"id":1008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1007,"mutability":"mutable","name":"priceOracle","nodeType":"VariableDeclaration","scope":1010,"src":"3773:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1006,"name":"address","nodeType":"ElementaryTypeName","src":"3773:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3772:21:7"},"returnParameters":{"id":1009,"nodeType":"ParameterList","parameters":[],"src":"3802:0:7"},"scope":1031,"src":"3745:58:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"0aafb34e","id":1015,"implemented":false,"kind":"function","modifiers":[],"name":"setCurvePriceOracle","nodeType":"FunctionDefinition","parameters":{"id":1013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1012,"mutability":"mutable","name":"priceOracle","nodeType":"VariableDeclaration","scope":1015,"src":"3914:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1011,"name":"address","nodeType":"ElementaryTypeName","src":"3914:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3913:21:7"},"returnParameters":{"id":1014,"nodeType":"ParameterList","parameters":[],"src":"3943:0:7"},"scope":1031,"src":"3885:59:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"e4bc9d64","id":1020,"implemented":false,"kind":"function","modifiers":[],"name":"setCurvePriceOracleWrapper","nodeType":"FunctionDefinition","parameters":{"id":1018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1017,"mutability":"mutable","name":"priceOracle","nodeType":"VariableDeclaration","scope":1020,"src":"3986:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1016,"name":"address","nodeType":"ElementaryTypeName","src":"3986:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3985:21:7"},"returnParameters":{"id":1019,"nodeType":"ParameterList","parameters":[],"src":"4015:0:7"},"scope":1031,"src":"3950:66:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"3618abba","id":1025,"implemented":false,"kind":"function","modifiers":[],"name":"getLendingRateOracle","nodeType":"FunctionDefinition","parameters":{"id":1021,"nodeType":"ParameterList","parameters":[],"src":"4051:2:7"},"returnParameters":{"id":1024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1023,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1025,"src":"4077:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1022,"name":"address","nodeType":"ElementaryTypeName","src":"4077:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4076:9:7"},"scope":1031,"src":"4022:64:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"820d1274","id":1030,"implemented":false,"kind":"function","modifiers":[],"name":"setLendingRateOracle","nodeType":"FunctionDefinition","parameters":{"id":1028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1027,"mutability":"mutable","name":"lendingRateOracle","nodeType":"VariableDeclaration","scope":1030,"src":"4349:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1026,"name":"address","nodeType":"ElementaryTypeName","src":"4349:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4348:27:7"},"returnParameters":{"id":1029,"nodeType":"ParameterList","parameters":[],"src":"4384:0:7"},"scope":1031,"src":"4319:66:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1032,"src":"445:3942:7"}],"src":"37:4351:7"},"id":7},"contracts/interfaces/IPriceOracleGetter.sol":{"ast":{"absolutePath":"contracts/interfaces/IPriceOracleGetter.sol","exportedSymbols":{"IPriceOracleGetter":[1043]},"id":1044,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":1033,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"37:24:8"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1034,"nodeType":"StructuredDocumentation","src":"63:95:8","text":" @title IPriceOracleGetter interface\n @notice Interface for the Aave price oracle.*"},"fullyImplemented":false,"id":1043,"linearizedBaseContracts":[1043],"name":"IPriceOracleGetter","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1035,"nodeType":"StructuredDocumentation","src":"195:142:8","text":" @dev returns the asset price in ETH\n @param asset the address of the asset\n @return the ETH price of the asset*"},"functionSelector":"b3596f07","id":1042,"implemented":false,"kind":"function","modifiers":[],"name":"getAssetPrice","nodeType":"FunctionDefinition","parameters":{"id":1038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1037,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":1042,"src":"365:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1036,"name":"address","nodeType":"ElementaryTypeName","src":"365:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"364:15:8"},"returnParameters":{"id":1041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1040,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1042,"src":"403:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1039,"name":"uint256","nodeType":"ElementaryTypeName","src":"403:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:9:8"},"scope":1043,"src":"342:70:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1044,"src":"160:254:8"}],"src":"37:378:8"},"id":8},"contracts/misc/AaveOracle.sol":{"ast":{"absolutePath":"contracts/misc/AaveOracle.sol","exportedSymbols":{"AaveOracle":[1375],"IChainlinkAggregator":[786],"IERC20":[153],"IPriceOracleGetter":[1043],"Ownable":[262],"SafeERC20":[423]},"id":1376,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":1045,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"37:24:9"},{"absolutePath":"contracts/dependencies/openzeppelin/contracts/Ownable.sol","file":"../dependencies/openzeppelin/contracts/Ownable.sol","id":1047,"nodeType":"ImportDirective","scope":1376,"sourceUnit":263,"src":"63:75:9","symbolAliases":[{"foreign":{"id":1046,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"src":"71:7:9","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/dependencies/openzeppelin/contracts/IERC20.sol","file":"../dependencies/openzeppelin/contracts/IERC20.sol","id":1049,"nodeType":"ImportDirective","scope":1376,"sourceUnit":154,"src":"139:73:9","symbolAliases":[{"foreign":{"id":1048,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"src":"147:6:9","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IPriceOracleGetter.sol","file":"../interfaces/IPriceOracleGetter.sol","id":1051,"nodeType":"ImportDirective","scope":1376,"sourceUnit":1044,"src":"214:72:9","symbolAliases":[{"foreign":{"id":1050,"name":"IPriceOracleGetter","nodeType":"Identifier","overloadedDeclarations":[],"src":"222:18:9","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IChainlinkAggregator.sol","file":"../interfaces/IChainlinkAggregator.sol","id":1053,"nodeType":"ImportDirective","scope":1376,"sourceUnit":787,"src":"287:76:9","symbolAliases":[{"foreign":{"id":1052,"name":"IChainlinkAggregator","nodeType":"Identifier","overloadedDeclarations":[],"src":"295:20:9","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/dependencies/openzeppelin/contracts/SafeERC20.sol","file":"../dependencies/openzeppelin/contracts/SafeERC20.sol","id":1055,"nodeType":"ImportDirective","scope":1376,"sourceUnit":424,"src":"364:79:9","symbolAliases":[{"foreign":{"id":1054,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"src":"372:9:9","typeDescriptions":{}}}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1057,"name":"IPriceOracleGetter","nodeType":"IdentifierPath","referencedDeclaration":1043,"src":"894:18:9"},"id":1058,"nodeType":"InheritanceSpecifier","src":"894:18:9"},{"baseName":{"id":1059,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":262,"src":"914:7:9"},"id":1060,"nodeType":"InheritanceSpecifier","src":"914:7:9"}],"contractDependencies":[75,262,1043],"contractKind":"contract","documentation":{"id":1056,"nodeType":"StructuredDocumentation","src":"445:426:9","text":"@title AaveOracle\n @author Aave\n @notice Proxy smart contract to get the price of an asset from a price source, with Chainlink Aggregator\n         smart contracts as primary option\n - If the returned price by a Chainlink aggregator is <= 0, the call is forwarded to a fallbackOracle\n - Owned by the Aave governance system, allowed to add sources for assets, replace them\n   and change the fallbackOracle"},"fullyImplemented":true,"id":1375,"linearizedBaseContracts":[1375,262,75,1043],"name":"AaveOracle","nodeType":"ContractDefinition","nodes":[{"id":1064,"libraryName":{"id":1061,"name":"SafeERC20","nodeType":"IdentifierPath","referencedDeclaration":423,"src":"934:9:9"},"nodeType":"UsingForDirective","src":"928:27:9","typeName":{"id":1063,"nodeType":"UserDefinedTypeName","pathNode":{"id":1062,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":153,"src":"948:6:9"},"referencedDeclaration":153,"src":"948:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$153","typeString":"contract IERC20"}}},{"anonymous":false,"id":1070,"name":"BaseCurrencySet","nodeType":"EventDefinition","parameters":{"id":1069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1066,"indexed":true,"mutability":"mutable","name":"baseCurrency","nodeType":"VariableDeclaration","scope":1070,"src":"992:28:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1065,"name":"address","nodeType":"ElementaryTypeName","src":"992:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1068,"indexed":false,"mutability":"mutable","name":"baseCurrencyUnit","nodeType":"VariableDeclaration","scope":1070,"src":"1030:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1067,"name":"uint256","nodeType":"ElementaryTypeName","src":"1030:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"982:78:9"},"src":"961:100:9"},{"anonymous":false,"id":1076,"name":"AssetSourceUpdated","nodeType":"EventDefinition","parameters":{"id":1075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1072,"indexed":true,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":1076,"src":"1091:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1071,"name":"address","nodeType":"ElementaryTypeName","src":"1091:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1074,"indexed":true,"mutability":"mutable","name":"source","nodeType":"VariableDeclaration","scope":1076,"src":"1114:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1073,"name":"address","nodeType":"ElementaryTypeName","src":"1114:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1090:47:9"},"src":"1066:72:9"},{"anonymous":false,"id":1080,"name":"FallbackOracleUpdated","nodeType":"EventDefinition","parameters":{"id":1079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1078,"indexed":true,"mutability":"mutable","name":"fallbackOracle","nodeType":"VariableDeclaration","scope":1080,"src":"1171:30:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1077,"name":"address","nodeType":"ElementaryTypeName","src":"1171:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1170:32:9"},"src":"1143:60:9"},{"constant":false,"id":1085,"mutability":"mutable","name":"assetsSources","nodeType":"VariableDeclaration","scope":1375,"src":"1209:62:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_contract$_IChainlinkAggregator_$786_$","typeString":"mapping(address => contract IChainlinkAggregator)"},"typeName":{"id":1084,"keyType":{"id":1081,"name":"address","nodeType":"ElementaryTypeName","src":"1217:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1209:40:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_contract$_IChainlinkAggregator_$786_$","typeString":"mapping(address => contract IChainlinkAggregator)"},"valueType":{"id":1083,"nodeType":"UserDefinedTypeName","pathNode":{"id":1082,"name":"IChainlinkAggregator","nodeType":"IdentifierPath","referencedDeclaration":786,"src":"1228:20:9"},"referencedDeclaration":786,"src":"1228:20:9","typeDescriptions":{"typeIdentifier":"t_contract$_IChainlinkAggregator_$786","typeString":"contract IChainlinkAggregator"}}},"visibility":"private"},{"constant":false,"id":1088,"mutability":"mutable","name":"_fallbackOracle","nodeType":"VariableDeclaration","scope":1375,"src":"1277:42:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1043","typeString":"contract IPriceOracleGetter"},"typeName":{"id":1087,"nodeType":"UserDefinedTypeName","pathNode":{"id":1086,"name":"IPriceOracleGetter","nodeType":"IdentifierPath","referencedDeclaration":1043,"src":"1277:18:9"},"referencedDeclaration":1043,"src":"1277:18:9","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1043","typeString":"contract IPriceOracleGetter"}},"visibility":"private"},{"constant":false,"functionSelector":"e19f4700","id":1090,"mutability":"immutable","name":"BASE_CURRENCY","nodeType":"VariableDeclaration","scope":1375,"src":"1325:38:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1089,"name":"address","nodeType":"ElementaryTypeName","src":"1325:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"8c89b64f","id":1092,"mutability":"immutable","name":"BASE_CURRENCY_UNIT","nodeType":"VariableDeclaration","scope":1375,"src":"1369:43:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1091,"name":"uint256","nodeType":"ElementaryTypeName","src":"1369:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"body":{"id":1130,"nodeType":"Block","src":"2054:242:9","statements":[{"expression":{"arguments":[{"id":1109,"name":"fallbackOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"2083:14:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1108,"name":"_setFallbackOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"2064:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2064:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1111,"nodeType":"ExpressionStatement","src":"2064:34:9"},{"expression":{"arguments":[{"id":1113,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"2126:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":1114,"name":"sources","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"2134:7:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":1112,"name":"_setAssetsSources","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"2108:17:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$","typeString":"function (address[] memory,address[] memory)"}},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2108:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1116,"nodeType":"ExpressionStatement","src":"2108:34:9"},{"expression":{"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1117,"name":"BASE_CURRENCY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"2152:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1118,"name":"baseCurrency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"2168:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2152:28:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1120,"nodeType":"ExpressionStatement","src":"2152:28:9"},{"expression":{"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1121,"name":"BASE_CURRENCY_UNIT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"2190:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1122,"name":"baseCurrencyUnit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"2211:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2190:37:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1124,"nodeType":"ExpressionStatement","src":"2190:37:9"},{"eventCall":{"arguments":[{"id":1126,"name":"baseCurrency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"2258:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1127,"name":"baseCurrencyUnit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"2272:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1125,"name":"BaseCurrencySet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"2242:15:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2242:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1129,"nodeType":"EmitStatement","src":"2237:52:9"}]},"documentation":{"id":1093,"nodeType":"StructuredDocumentation","src":"1419:442:9","text":"@notice Constructor\n @param assets The addresses of the assets\n @param sources The address of the source of each asset\n @param fallbackOracle The address of the fallback oracle to use if the data of an\n        aggregator is not consistent\n @param baseCurrency the base currency used for the price quotes. If USD is used, base currency is 0x0\n @param baseCurrencyUnit the unit of the base currency"},"id":1131,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":1106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1096,"mutability":"mutable","name":"assets","nodeType":"VariableDeclaration","scope":1131,"src":"1887:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1094,"name":"address","nodeType":"ElementaryTypeName","src":"1887:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1095,"nodeType":"ArrayTypeName","src":"1887:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1099,"mutability":"mutable","name":"sources","nodeType":"VariableDeclaration","scope":1131,"src":"1920:24:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1097,"name":"address","nodeType":"ElementaryTypeName","src":"1920:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1098,"nodeType":"ArrayTypeName","src":"1920:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1101,"mutability":"mutable","name":"fallbackOracle","nodeType":"VariableDeclaration","scope":1131,"src":"1954:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1100,"name":"address","nodeType":"ElementaryTypeName","src":"1954:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1103,"mutability":"mutable","name":"baseCurrency","nodeType":"VariableDeclaration","scope":1131,"src":"1986:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1102,"name":"address","nodeType":"ElementaryTypeName","src":"1986:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1105,"mutability":"mutable","name":"baseCurrencyUnit","nodeType":"VariableDeclaration","scope":1131,"src":"2016:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1104,"name":"uint256","nodeType":"ElementaryTypeName","src":"2016:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1877:169:9"},"returnParameters":{"id":1107,"nodeType":"ParameterList","parameters":[],"src":"2054:0:9"},"scope":1375,"src":"1866:430:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1148,"nodeType":"Block","src":"2636:51:9","statements":[{"expression":{"arguments":[{"id":1144,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"2664:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},{"id":1145,"name":"sources","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"2672:7:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"},{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}],"id":1143,"name":"_setAssetsSources","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"2646:17:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$","typeString":"function (address[] memory,address[] memory)"}},"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2646:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1147,"nodeType":"ExpressionStatement","src":"2646:34:9"}]},"documentation":{"id":1132,"nodeType":"StructuredDocumentation","src":"2302:208:9","text":"@notice External function called by the Aave governance to set or replace sources of assets\n @param assets The addresses of the assets\n @param sources The address of the source of each asset"},"functionSelector":"abfd5310","id":1149,"implemented":true,"kind":"function","modifiers":[{"id":1141,"modifierName":{"id":1140,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":211,"src":"2626:9:9"},"nodeType":"ModifierInvocation","src":"2626:9:9"}],"name":"setAssetSources","nodeType":"FunctionDefinition","parameters":{"id":1139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1135,"mutability":"mutable","name":"assets","nodeType":"VariableDeclaration","scope":1149,"src":"2549:25:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1133,"name":"address","nodeType":"ElementaryTypeName","src":"2549:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1134,"nodeType":"ArrayTypeName","src":"2549:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1138,"mutability":"mutable","name":"sources","nodeType":"VariableDeclaration","scope":1149,"src":"2584:26:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1136,"name":"address","nodeType":"ElementaryTypeName","src":"2584:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1137,"nodeType":"ArrayTypeName","src":"2584:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2539:77:9"},"returnParameters":{"id":1142,"nodeType":"ParameterList","parameters":[],"src":"2636:0:9"},"scope":1375,"src":"2515:172:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1161,"nodeType":"Block","src":"2914:51:9","statements":[{"expression":{"arguments":[{"id":1158,"name":"fallbackOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"2943:14:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1157,"name":"_setFallbackOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"2924:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2924:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1160,"nodeType":"ExpressionStatement","src":"2924:34:9"}]},"documentation":{"id":1150,"nodeType":"StructuredDocumentation","src":"2693:146:9","text":"@notice Sets the fallbackOracle\n - Callable only by the Aave governance\n @param fallbackOracle The address of the fallbackOracle"},"functionSelector":"170aee73","id":1162,"implemented":true,"kind":"function","modifiers":[{"id":1155,"modifierName":{"id":1154,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":211,"src":"2904:9:9"},"nodeType":"ModifierInvocation","src":"2904:9:9"}],"name":"setFallbackOracle","nodeType":"FunctionDefinition","parameters":{"id":1153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1152,"mutability":"mutable","name":"fallbackOracle","nodeType":"VariableDeclaration","scope":1162,"src":"2871:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1151,"name":"address","nodeType":"ElementaryTypeName","src":"2871:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2870:24:9"},"returnParameters":{"id":1156,"nodeType":"ParameterList","parameters":[],"src":"2914:0:9"},"scope":1375,"src":"2844:121:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1215,"nodeType":"Block","src":"3261:284:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1173,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"3279:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3279:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1175,"name":"sources","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"3296:7:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3296:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3279:31:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"494e434f4e53495354454e545f504152414d535f4c454e475448","id":1178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3312:28:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_a807dff59d3474096247bf1cf10d6df8b988b576943ecf8c7dd58f40a940e704","typeString":"literal_string \"INCONSISTENT_PARAMS_LENGTH\""},"value":"INCONSISTENT_PARAMS_LENGTH"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a807dff59d3474096247bf1cf10d6df8b988b576943ecf8c7dd58f40a940e704","typeString":"literal_string \"INCONSISTENT_PARAMS_LENGTH\""}],"id":1172,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3271:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3271:70:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1180,"nodeType":"ExpressionStatement","src":"3271:70:9"},{"body":{"id":1213,"nodeType":"Block","src":"3395:144:9","statements":[{"expression":{"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1192,"name":"assetsSources","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"3409:13:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_contract$_IChainlinkAggregator_$786_$","typeString":"mapping(address => contract IChainlinkAggregator)"}},"id":1196,"indexExpression":{"baseExpression":{"id":1193,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"3423:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1195,"indexExpression":{"id":1194,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"3430:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3423:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3409:24:9","typeDescriptions":{"typeIdentifier":"t_contract$_IChainlinkAggregator_$786","typeString":"contract IChainlinkAggregator"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":1198,"name":"sources","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"3457:7:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1200,"indexExpression":{"id":1199,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"3465:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3457:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1197,"name":"IChainlinkAggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"3436:20:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IChainlinkAggregator_$786_$","typeString":"type(contract IChainlinkAggregator)"}},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3436:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IChainlinkAggregator_$786","typeString":"contract IChainlinkAggregator"}},"src":"3409:59:9","typeDescriptions":{"typeIdentifier":"t_contract$_IChainlinkAggregator_$786","typeString":"contract IChainlinkAggregator"}},"id":1203,"nodeType":"ExpressionStatement","src":"3409:59:9"},{"eventCall":{"arguments":[{"baseExpression":{"id":1205,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"3506:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1207,"indexExpression":{"id":1206,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"3513:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3506:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":1208,"name":"sources","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"3517:7:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1210,"indexExpression":{"id":1209,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"3525:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3517:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1204,"name":"AssetSourceUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"3487:18:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3487:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1212,"nodeType":"EmitStatement","src":"3482:46:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1185,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"3371:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1186,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"3375:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3375:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3371:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1214,"initializationExpression":{"assignments":[1182],"declarations":[{"constant":false,"id":1182,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":1214,"src":"3356:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1181,"name":"uint256","nodeType":"ElementaryTypeName","src":"3356:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1184,"initialValue":{"hexValue":"30","id":1183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3368:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3356:13:9"},"loopExpression":{"expression":{"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3390:3:9","subExpression":{"id":1189,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"3390:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1191,"nodeType":"ExpressionStatement","src":"3390:3:9"},"nodeType":"ForStatement","src":"3351:188:9"}]},"documentation":{"id":1163,"nodeType":"StructuredDocumentation","src":"2971:176:9","text":"@notice Internal function to set the sources for each asset\n @param assets The addresses of the assets\n @param sources The address of the source of each asset"},"id":1216,"implemented":true,"kind":"function","modifiers":[],"name":"_setAssetsSources","nodeType":"FunctionDefinition","parameters":{"id":1170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1166,"mutability":"mutable","name":"assets","nodeType":"VariableDeclaration","scope":1216,"src":"3188:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1164,"name":"address","nodeType":"ElementaryTypeName","src":"3188:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1165,"nodeType":"ArrayTypeName","src":"3188:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1169,"mutability":"mutable","name":"sources","nodeType":"VariableDeclaration","scope":1216,"src":"3221:24:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1167,"name":"address","nodeType":"ElementaryTypeName","src":"3221:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1168,"nodeType":"ArrayTypeName","src":"3221:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3178:73:9"},"returnParameters":{"id":1171,"nodeType":"ParameterList","parameters":[],"src":"3261:0:9"},"scope":1375,"src":"3152:393:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1232,"nodeType":"Block","src":"3736:121:9","statements":[{"expression":{"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1222,"name":"_fallbackOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"3746:15:9","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1043","typeString":"contract IPriceOracleGetter"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1224,"name":"fallbackOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"3783:14:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1223,"name":"IPriceOracleGetter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"3764:18:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPriceOracleGetter_$1043_$","typeString":"type(contract IPriceOracleGetter)"}},"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3764:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1043","typeString":"contract IPriceOracleGetter"}},"src":"3746:52:9","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1043","typeString":"contract IPriceOracleGetter"}},"id":1227,"nodeType":"ExpressionStatement","src":"3746:52:9"},{"eventCall":{"arguments":[{"id":1229,"name":"fallbackOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"3835:14:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1228,"name":"FallbackOracleUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"3813:21:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3813:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1231,"nodeType":"EmitStatement","src":"3808:42:9"}]},"documentation":{"id":1217,"nodeType":"StructuredDocumentation","src":"3551:119:9","text":"@notice Internal function to set the fallbackOracle\n @param fallbackOracle The address of the fallbackOracle"},"id":1233,"implemented":true,"kind":"function","modifiers":[],"name":"_setFallbackOracle","nodeType":"FunctionDefinition","parameters":{"id":1220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1219,"mutability":"mutable","name":"fallbackOracle","nodeType":"VariableDeclaration","scope":1233,"src":"3703:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1218,"name":"address","nodeType":"ElementaryTypeName","src":"3703:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3702:24:9"},"returnParameters":{"id":1221,"nodeType":"ParameterList","parameters":[],"src":"3736:0:9"},"scope":1375,"src":"3675:182:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1042],"body":{"id":1297,"nodeType":"Block","src":"4062:517:9","statements":[{"assignments":[1244],"declarations":[{"constant":false,"id":1244,"mutability":"mutable","name":"source","nodeType":"VariableDeclaration","scope":1297,"src":"4072:27:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IChainlinkAggregator_$786","typeString":"contract IChainlinkAggregator"},"typeName":{"id":1243,"nodeType":"UserDefinedTypeName","pathNode":{"id":1242,"name":"IChainlinkAggregator","nodeType":"IdentifierPath","referencedDeclaration":786,"src":"4072:20:9"},"referencedDeclaration":786,"src":"4072:20:9","typeDescriptions":{"typeIdentifier":"t_contract$_IChainlinkAggregator_$786","typeString":"contract IChainlinkAggregator"}},"visibility":"internal"}],"id":1248,"initialValue":{"baseExpression":{"id":1245,"name":"assetsSources","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"4102:13:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_contract$_IChainlinkAggregator_$786_$","typeString":"mapping(address => contract IChainlinkAggregator)"}},"id":1247,"indexExpression":{"id":1246,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"4116:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:20:9","typeDescriptions":{"typeIdentifier":"t_contract$_IChainlinkAggregator_$786","typeString":"contract IChainlinkAggregator"}},"nodeType":"VariableDeclarationStatement","src":"4072:50:9"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1249,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"4137:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1250,"name":"BASE_CURRENCY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"4146:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4137:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1257,"name":"source","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"4229:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IChainlinkAggregator_$786","typeString":"contract IChainlinkAggregator"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IChainlinkAggregator_$786","typeString":"contract IChainlinkAggregator"}],"id":1256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4221:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1255,"name":"address","nodeType":"ElementaryTypeName","src":"4221:7:9","typeDescriptions":{}}},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4221:15:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4248:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4240:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1259,"name":"address","nodeType":"ElementaryTypeName","src":"4240:7:9","typeDescriptions":{}}},"id":1262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4240:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4221:29:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1294,"nodeType":"Block","src":"4326:247:9","statements":[{"assignments":[1271],"declarations":[{"constant":false,"id":1271,"mutability":"mutable","name":"price","nodeType":"VariableDeclaration","scope":1294,"src":"4340:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1270,"name":"int256","nodeType":"ElementaryTypeName","src":"4340:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1277,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1273,"name":"source","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"4376:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IChainlinkAggregator_$786","typeString":"contract IChainlinkAggregator"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IChainlinkAggregator_$786","typeString":"contract IChainlinkAggregator"}],"id":1272,"name":"IChainlinkAggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"4355:20:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IChainlinkAggregator_$786_$","typeString":"type(contract IChainlinkAggregator)"}},"id":1274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4355:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IChainlinkAggregator_$786","typeString":"contract IChainlinkAggregator"}},"id":1275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"latestAnswer","nodeType":"MemberAccess","referencedDeclaration":747,"src":"4355:41:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_int256_$","typeString":"function () view external returns (int256)"}},"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4355:43:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"4340:58:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1278,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"4416:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4424:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4416:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1292,"nodeType":"Block","src":"4487:76:9","statements":[{"expression":{"arguments":[{"id":1289,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"4542:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1287,"name":"_fallbackOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"4512:15:9","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1043","typeString":"contract IPriceOracleGetter"}},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAssetPrice","nodeType":"MemberAccess","referencedDeclaration":1042,"src":"4512:29:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4512:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1241,"id":1291,"nodeType":"Return","src":"4505:43:9"}]},"id":1293,"nodeType":"IfStatement","src":"4412:151:9","trueBody":{"id":1286,"nodeType":"Block","src":"4427:54:9","statements":[{"expression":{"arguments":[{"id":1283,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"4460:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4452:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1281,"name":"uint256","nodeType":"ElementaryTypeName","src":"4452:7:9","typeDescriptions":{}}},"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4452:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1241,"id":1285,"nodeType":"Return","src":"4445:21:9"}]}}]},"id":1295,"nodeType":"IfStatement","src":"4217:356:9","trueBody":{"id":1269,"nodeType":"Block","src":"4252:68:9","statements":[{"expression":{"arguments":[{"id":1266,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"4303:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1264,"name":"_fallbackOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"4273:15:9","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1043","typeString":"contract IPriceOracleGetter"}},"id":1265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAssetPrice","nodeType":"MemberAccess","referencedDeclaration":1042,"src":"4273:29:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4273:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1241,"id":1268,"nodeType":"Return","src":"4266:43:9"}]}},"id":1296,"nodeType":"IfStatement","src":"4133:440:9","trueBody":{"id":1254,"nodeType":"Block","src":"4161:50:9","statements":[{"expression":{"id":1252,"name":"BASE_CURRENCY_UNIT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"4182:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1241,"id":1253,"nodeType":"Return","src":"4175:25:9"}]}}]},"documentation":{"id":1234,"nodeType":"StructuredDocumentation","src":"3863:81:9","text":"@notice Gets an asset price by address\n @param asset The asset address"},"functionSelector":"b3596f07","id":1298,"implemented":true,"kind":"function","modifiers":[],"name":"getAssetPrice","nodeType":"FunctionDefinition","overrides":{"id":1238,"nodeType":"OverrideSpecifier","overrides":[],"src":"4023:8:9"},"parameters":{"id":1237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1236,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":1298,"src":"3972:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1235,"name":"address","nodeType":"ElementaryTypeName","src":"3972:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3971:15:9"},"returnParameters":{"id":1241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1240,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1298,"src":"4049:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1239,"name":"uint256","nodeType":"ElementaryTypeName","src":"4049:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4048:9:9"},"scope":1375,"src":"3949:630:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1345,"nodeType":"Block","src":"4827:208:9","statements":[{"assignments":[1312],"declarations":[{"constant":false,"id":1312,"mutability":"mutable","name":"prices","nodeType":"VariableDeclaration","scope":1345,"src":"4837:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1310,"name":"uint256","nodeType":"ElementaryTypeName","src":"4837:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1311,"nodeType":"ArrayTypeName","src":"4837:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1319,"initialValue":{"arguments":[{"expression":{"id":1316,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"4877:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4877:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4863:13:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":1313,"name":"uint256","nodeType":"ElementaryTypeName","src":"4867:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1314,"nodeType":"ArrayTypeName","src":"4867:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4863:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4837:54:9"},{"body":{"id":1341,"nodeType":"Block","src":"4945:61:9","statements":[{"expression":{"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1331,"name":"prices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"4959:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1333,"indexExpression":{"id":1332,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"4966:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4959:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":1335,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"4985:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1337,"indexExpression":{"id":1336,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"4992:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4985:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1334,"name":"getAssetPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"4971:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4971:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4959:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1340,"nodeType":"ExpressionStatement","src":"4959:36:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1324,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"4921:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1325,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"4925:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4925:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4921:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1342,"initializationExpression":{"assignments":[1321],"declarations":[{"constant":false,"id":1321,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":1342,"src":"4906:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1320,"name":"uint256","nodeType":"ElementaryTypeName","src":"4906:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1323,"initialValue":{"hexValue":"30","id":1322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4918:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4906:13:9"},"loopExpression":{"expression":{"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4940:3:9","subExpression":{"id":1328,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"4940:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1330,"nodeType":"ExpressionStatement","src":"4940:3:9"},"nodeType":"ForStatement","src":"4901:105:9"},{"expression":{"id":1343,"name":"prices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"5022:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":1307,"id":1344,"nodeType":"Return","src":"5015:13:9"}]},"documentation":{"id":1299,"nodeType":"StructuredDocumentation","src":"4585:116:9","text":"@notice Gets a list of prices from a list of assets addresses\n @param assets The list of assets addresses"},"functionSelector":"9d23d9f2","id":1346,"implemented":true,"kind":"function","modifiers":[],"name":"getAssetsPrices","nodeType":"FunctionDefinition","parameters":{"id":1303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1302,"mutability":"mutable","name":"assets","nodeType":"VariableDeclaration","scope":1346,"src":"4731:25:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1300,"name":"address","nodeType":"ElementaryTypeName","src":"4731:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1301,"nodeType":"ArrayTypeName","src":"4731:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"4730:27:9"},"returnParameters":{"id":1307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1306,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1346,"src":"4805:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1304,"name":"uint256","nodeType":"ElementaryTypeName","src":"4805:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1305,"nodeType":"ArrayTypeName","src":"4805:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"4804:18:9"},"scope":1375,"src":"4706:329:9","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1361,"nodeType":"Block","src":"5278:53:9","statements":[{"expression":{"arguments":[{"baseExpression":{"id":1356,"name":"assetsSources","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"5303:13:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_contract$_IChainlinkAggregator_$786_$","typeString":"mapping(address => contract IChainlinkAggregator)"}},"id":1358,"indexExpression":{"id":1357,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"5317:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5303:20:9","typeDescriptions":{"typeIdentifier":"t_contract$_IChainlinkAggregator_$786","typeString":"contract IChainlinkAggregator"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IChainlinkAggregator_$786","typeString":"contract IChainlinkAggregator"}],"id":1355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5295:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1354,"name":"address","nodeType":"ElementaryTypeName","src":"5295:7:9","typeDescriptions":{}}},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5295:29:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1353,"id":1360,"nodeType":"Return","src":"5288:36:9"}]},"documentation":{"id":1347,"nodeType":"StructuredDocumentation","src":"5041:159:9","text":"@notice Gets the address of the source for an asset address\n @param asset The address of the asset\n @return address The address of the source"},"functionSelector":"92bf2be0","id":1362,"implemented":true,"kind":"function","modifiers":[],"name":"getSourceOfAsset","nodeType":"FunctionDefinition","parameters":{"id":1350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1349,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":1362,"src":"5231:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1348,"name":"address","nodeType":"ElementaryTypeName","src":"5231:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5230:15:9"},"returnParameters":{"id":1353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1352,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1362,"src":"5269:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1351,"name":"address","nodeType":"ElementaryTypeName","src":"5269:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5268:9:9"},"scope":1375,"src":"5205:126:9","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1373,"nodeType":"Block","src":"5512:48:9","statements":[{"expression":{"arguments":[{"id":1370,"name":"_fallbackOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"5537:15:9","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1043","typeString":"contract IPriceOracleGetter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1043","typeString":"contract IPriceOracleGetter"}],"id":1369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5529:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1368,"name":"address","nodeType":"ElementaryTypeName","src":"5529:7:9","typeDescriptions":{}}},"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5529:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1367,"id":1372,"nodeType":"Return","src":"5522:31:9"}]},"documentation":{"id":1363,"nodeType":"StructuredDocumentation","src":"5337:109:9","text":"@notice Gets the address of the fallback oracle\n @return address The addres of the fallback oracle"},"functionSelector":"6210308c","id":1374,"implemented":true,"kind":"function","modifiers":[],"name":"getFallbackOracle","nodeType":"FunctionDefinition","parameters":{"id":1364,"nodeType":"ParameterList","parameters":[],"src":"5477:2:9"},"returnParameters":{"id":1367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1366,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1374,"src":"5503:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1365,"name":"address","nodeType":"ElementaryTypeName","src":"5503:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5502:9:9"},"scope":1375,"src":"5451:109:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1376,"src":"871:4691:9"}],"src":"37:5526:9"},"id":9},"contracts/mocks/tokens/CurvePoolMocked.sol":{"ast":{"absolutePath":"contracts/mocks/tokens/CurvePoolMocked.sol","exportedSymbols":{"CurvePoolMocked":[1413],"ICurvePool":[2109]},"id":1414,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":1377,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"52:24:10"},{"absolutePath":"contracts/oracles/interfaces/ICurvePoolV1.sol","file":"../../oracles/interfaces/ICurvePoolV1.sol","id":1379,"nodeType":"ImportDirective","scope":1414,"sourceUnit":2110,"src":"78:69:10","symbolAliases":[{"foreign":{"id":1378,"name":"ICurvePool","nodeType":"Identifier","overloadedDeclarations":[],"src":"86:10:10","typeDescriptions":{}}}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1381,"name":"ICurvePool","nodeType":"IdentifierPath","referencedDeclaration":2109,"src":"237:10:10"},"id":1382,"nodeType":"InheritanceSpecifier","src":"237:10:10"}],"contractDependencies":[2109],"contractKind":"contract","documentation":{"id":1380,"nodeType":"StructuredDocumentation","src":"149:59:10","text":" @title ERC20Mintable\n @dev ERC20 minting logic"},"fullyImplemented":true,"id":1413,"linearizedBaseContracts":[1413,2109],"name":"CurvePoolMocked","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1384,"mutability":"mutable","name":"virtual_price","nodeType":"VariableDeclaration","scope":1413,"src":"254:21:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1383,"name":"uint256","nodeType":"ElementaryTypeName","src":"254:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"body":{"id":1402,"nodeType":"Block","src":"325:166:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1389,"name":"_virtual_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"339:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"357:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"339:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1397,"nodeType":"IfStatement","src":"335:110:10","trueBody":{"id":1396,"nodeType":"Block","src":"360:85:10","statements":[{"expression":{"id":1394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1392,"name":"_virtual_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"374:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31303230303030303030303030303030303030","id":1393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"391:19:10","typeDescriptions":{"typeIdentifier":"t_rational_1020000000000000000_by_1","typeString":"int_const 1020000000000000000"},"value":"1020000000000000000"},"src":"374:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1395,"nodeType":"ExpressionStatement","src":"374:36:10"}]}},{"expression":{"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1398,"name":"virtual_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"454:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1399,"name":"_virtual_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"470:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"454:30:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1401,"nodeType":"ExpressionStatement","src":"454:30:10"}]},"id":1403,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":1387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1386,"mutability":"mutable","name":"_virtual_price","nodeType":"VariableDeclaration","scope":1403,"src":"294:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1385,"name":"uint256","nodeType":"ElementaryTypeName","src":"294:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"293:24:10"},"returnParameters":{"id":1388,"nodeType":"ParameterList","parameters":[],"src":"325:0:10"},"scope":1413,"src":"282:209:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2108],"body":{"id":1411,"nodeType":"Block","src":"567:37:10","statements":[{"expression":{"id":1409,"name":"virtual_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"584:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1408,"id":1410,"nodeType":"Return","src":"577:20:10"}]},"functionSelector":"bb7b8b80","id":1412,"implemented":true,"kind":"function","modifiers":[],"name":"get_virtual_price","nodeType":"FunctionDefinition","overrides":{"id":1405,"nodeType":"OverrideSpecifier","overrides":[],"src":"540:8:10"},"parameters":{"id":1404,"nodeType":"ParameterList","parameters":[],"src":"523:2:10"},"returnParameters":{"id":1408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1407,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1412,"src":"558:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1406,"name":"uint256","nodeType":"ElementaryTypeName","src":"558:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"557:9:10"},"scope":1413,"src":"497:107:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1414,"src":"209:397:10"}],"src":"52:555:10"},"id":10},"contracts/oracles/ConvexOracleV2.sol":{"ast":{"absolutePath":"contracts/oracles/ConvexOracleV2.sol","exportedSymbols":{"ConvexOracleV2":[1482],"CurveOracleV2":[1566],"FixedPointMathLib":[2329],"IERC20":[2210]},"id":1483,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":1415,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"39:24:11"},{"absolutePath":"contracts/oracles/CurveOracleV2.sol","file":"./CurveOracleV2.sol","id":1417,"nodeType":"ImportDirective","scope":1483,"sourceUnit":1567,"src":"126:50:11","symbolAliases":[{"foreign":{"id":1416,"name":"CurveOracleV2","nodeType":"Identifier","overloadedDeclarations":[],"src":"134:13:11","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/oracles/libs/FixedPointMathLib.sol","file":"./libs/FixedPointMathLib.sol","id":1419,"nodeType":"ImportDirective","scope":1483,"sourceUnit":2330,"src":"177:63:11","symbolAliases":[{"foreign":{"id":1418,"name":"FixedPointMathLib","nodeType":"Identifier","overloadedDeclarations":[],"src":"185:17:11","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/oracles/interfaces/IERC20.sol","file":"./interfaces/IERC20.sol","id":1421,"nodeType":"ImportDirective","scope":1483,"sourceUnit":2211,"src":"241:47:11","symbolAliases":[{"foreign":{"id":1420,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"src":"249:6:11","typeDescriptions":{}}}],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1482,"linearizedBaseContracts":[1482],"name":"ConvexOracleV2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1424,"mutability":"mutable","name":"curve_oracle","nodeType":"VariableDeclaration","scope":1482,"src":"512:34:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_CurveOracleV2_$1566","typeString":"contract CurveOracleV2"},"typeName":{"id":1423,"nodeType":"UserDefinedTypeName","pathNode":{"id":1422,"name":"CurveOracleV2","nodeType":"IdentifierPath","referencedDeclaration":1566,"src":"512:13:11"},"referencedDeclaration":1566,"src":"512:13:11","typeDescriptions":{"typeIdentifier":"t_contract$_CurveOracleV2_$1566","typeString":"contract CurveOracleV2"}},"visibility":"private"},{"body":{"id":1434,"nodeType":"Block","src":"711:45:11","statements":[{"expression":{"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1430,"name":"curve_oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"721:12:11","typeDescriptions":{"typeIdentifier":"t_contract$_CurveOracleV2_$1566","typeString":"contract CurveOracleV2"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1431,"name":"_curve_oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"736:13:11","typeDescriptions":{"typeIdentifier":"t_contract$_CurveOracleV2_$1566","typeString":"contract CurveOracleV2"}},"src":"721:28:11","typeDescriptions":{"typeIdentifier":"t_contract$_CurveOracleV2_$1566","typeString":"contract CurveOracleV2"}},"id":1433,"nodeType":"ExpressionStatement","src":"721:28:11"}]},"id":1435,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":1428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1427,"mutability":"mutable","name":"_curve_oracle","nodeType":"VariableDeclaration","scope":1435,"src":"682:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_CurveOracleV2_$1566","typeString":"contract CurveOracleV2"},"typeName":{"id":1426,"nodeType":"UserDefinedTypeName","pathNode":{"id":1425,"name":"CurveOracleV2","nodeType":"IdentifierPath","referencedDeclaration":1566,"src":"682:13:11"},"referencedDeclaration":1566,"src":"682:13:11","typeDescriptions":{"typeIdentifier":"t_contract$_CurveOracleV2_$1566","typeString":"contract CurveOracleV2"}},"visibility":"internal"}],"src":"681:29:11"},"returnParameters":{"id":1429,"nodeType":"ParameterList","parameters":[],"src":"711:0:11"},"scope":1482,"src":"670:86:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1461,"nodeType":"Block","src":"1036:430:11","statements":[{"assignments":[1452],"declarations":[{"constant":false,"id":1452,"mutability":"mutable","name":"curve_lp_price","nodeType":"VariableDeclaration","scope":1461,"src":"1046:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1451,"name":"uint256","nodeType":"ElementaryTypeName","src":"1046:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1458,"initialValue":{"arguments":[{"id":1455,"name":"curve_pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"1094:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1456,"name":"prices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"1106:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"expression":{"id":1453,"name":"curve_oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"1071:12:11","typeDescriptions":{"typeIdentifier":"t_contract$_CurveOracleV2_$1566","typeString":"contract CurveOracleV2"}},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"get_price","nodeType":"MemberAccess","referencedDeclaration":1526,"src":"1071:22:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,uint256[] memory) view external returns (uint256)"}},"id":1457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1071:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1046:67:11"},{"expression":{"id":1459,"name":"curve_lp_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"1445:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1450,"id":1460,"nodeType":"Return","src":"1438:21:11"}]},"functionSelector":"2a417cc7","id":1462,"implemented":true,"kind":"function","modifiers":[],"name":"get_convex_price","nodeType":"FunctionDefinition","parameters":{"id":1447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1437,"mutability":"mutable","name":"curve_pool","nodeType":"VariableDeclaration","scope":1462,"src":"873:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1436,"name":"address","nodeType":"ElementaryTypeName","src":"873:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1440,"mutability":"mutable","name":"prices","nodeType":"VariableDeclaration","scope":1462,"src":"901:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1438,"name":"uint256","nodeType":"ElementaryTypeName","src":"901:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1439,"nodeType":"ArrayTypeName","src":"901:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1442,"mutability":"mutable","name":"pid","nodeType":"VariableDeclaration","scope":1462,"src":"934:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1441,"name":"uint16","nodeType":"ElementaryTypeName","src":"934:6:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1444,"mutability":"mutable","name":"convex_lp","nodeType":"VariableDeclaration","scope":1462,"src":"954:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1443,"name":"address","nodeType":"ElementaryTypeName","src":"954:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1446,"mutability":"mutable","name":"curve_lp","nodeType":"VariableDeclaration","scope":1462,"src":"981:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1445,"name":"address","nodeType":"ElementaryTypeName","src":"981:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"863:140:11"},"returnParameters":{"id":1450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1449,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1462,"src":"1027:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1448,"name":"uint256","nodeType":"ElementaryTypeName","src":"1027:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1026:9:11"},"scope":1482,"src":"838:628:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1480,"nodeType":"Block","src":"1691:71:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1473,"name":"curve_lp_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"1709:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1474,"name":"curve_supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"1726:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1709:29:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1476,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1708:31:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1477,"name":"convex_supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"1742:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1708:47:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1472,"id":1479,"nodeType":"Return","src":"1701:54:11"}]},"id":1481,"implemented":true,"kind":"function","modifiers":[],"name":"calculate_convex_price","nodeType":"FunctionDefinition","parameters":{"id":1469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1464,"mutability":"mutable","name":"curve_lp_price","nodeType":"VariableDeclaration","scope":1481,"src":"1569:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1463,"name":"uint256","nodeType":"ElementaryTypeName","src":"1569:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1466,"mutability":"mutable","name":"curve_supply","nodeType":"VariableDeclaration","scope":1481,"src":"1601:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1465,"name":"uint256","nodeType":"ElementaryTypeName","src":"1601:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1468,"mutability":"mutable","name":"convex_supply","nodeType":"VariableDeclaration","scope":1481,"src":"1631:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1467,"name":"uint256","nodeType":"ElementaryTypeName","src":"1631:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1559:99:11"},"returnParameters":{"id":1472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1471,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1481,"src":"1682:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1470,"name":"uint256","nodeType":"ElementaryTypeName","src":"1682:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1681:9:11"},"scope":1482,"src":"1528:234:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1483,"src":"371:1393:11"}],"src":"39:1726:11"},"id":11},"contracts/oracles/CurveOracleV2.sol":{"ast":{"absolutePath":"contracts/oracles/CurveOracleV2.sol","exportedSymbols":{"CurveOracleV2":[1566],"ICurveOracle":[2101],"ICurvePool":[2109],"vMath":[3112]},"id":1567,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":1484,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"39:24:12"},{"absolutePath":"contracts/oracles/interfaces/ICurvePoolV1.sol","file":"./interfaces/ICurvePoolV1.sol","id":1486,"nodeType":"ImportDirective","scope":1567,"sourceUnit":2110,"src":"65:57:12","symbolAliases":[{"foreign":{"id":1485,"name":"ICurvePool","nodeType":"Identifier","overloadedDeclarations":[],"src":"73:10:12","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/oracles/interfaces/ICurveOracle.sol","file":"./interfaces/ICurveOracle.sol","id":1488,"nodeType":"ImportDirective","scope":1567,"sourceUnit":2102,"src":"123:59:12","symbolAliases":[{"foreign":{"id":1487,"name":"ICurveOracle","nodeType":"Identifier","overloadedDeclarations":[],"src":"131:12:12","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/oracles/libs/vMath.sol","file":"./libs/vMath.sol","id":1490,"nodeType":"ImportDirective","scope":1567,"sourceUnit":3113,"src":"183:39:12","symbolAliases":[{"foreign":{"id":1489,"name":"vMath","nodeType":"Identifier","overloadedDeclarations":[],"src":"191:5:12","typeDescriptions":{}}}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1491,"name":"ICurveOracle","nodeType":"IdentifierPath","referencedDeclaration":2101,"src":"250:12:12"},"id":1492,"nodeType":"InheritanceSpecifier","src":"250:12:12"}],"contractDependencies":[2101],"contractKind":"contract","fullyImplemented":true,"id":1566,"linearizedBaseContracts":[1566,2101],"name":"CurveOracleV2","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[2100],"body":{"id":1525,"nodeType":"Block","src":"410:254:12","statements":[{"assignments":[1504],"declarations":[{"constant":false,"id":1504,"mutability":"mutable","name":"virtual_price","nodeType":"VariableDeclaration","scope":1525,"src":"420:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1503,"name":"uint256","nodeType":"ElementaryTypeName","src":"420:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1510,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1506,"name":"curve_pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"455:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1505,"name":"ICurvePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"444:10:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ICurvePool_$2109_$","typeString":"type(contract ICurvePool)"}},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"444:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ICurvePool_$2109","typeString":"contract ICurvePool"}},"id":1508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"get_virtual_price","nodeType":"MemberAccess","referencedDeclaration":2108,"src":"444:40:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"444:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"420:66:12"},{"assignments":[1512],"declarations":[{"constant":false,"id":1512,"mutability":"mutable","name":"lp_price","nodeType":"VariableDeclaration","scope":1525,"src":"497:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1511,"name":"uint256","nodeType":"ElementaryTypeName","src":"497:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1522,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":1516,"name":"prices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"560:6:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"560:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"554:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1514,"name":"uint8","nodeType":"ElementaryTypeName","src":"554:5:12","typeDescriptions":{}}},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"554:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1519,"name":"virtual_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"588:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1520,"name":"prices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"615:6:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1513,"name":"calculate_v2_token_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"516:24:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint8_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint8,uint256,uint256[] memory) pure returns (uint256)"}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"516:115:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"497:134:12"},{"expression":{"id":1523,"name":"lp_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"649:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1502,"id":1524,"nodeType":"Return","src":"642:15:12"}]},"functionSelector":"6dcb6a32","id":1526,"implemented":true,"kind":"function","modifiers":[],"name":"get_price","nodeType":"FunctionDefinition","overrides":{"id":1499,"nodeType":"OverrideSpecifier","overrides":[],"src":"371:8:12"},"parameters":{"id":1498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1494,"mutability":"mutable","name":"curve_pool","nodeType":"VariableDeclaration","scope":1526,"src":"288:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1493,"name":"address","nodeType":"ElementaryTypeName","src":"288:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1497,"mutability":"mutable","name":"prices","nodeType":"VariableDeclaration","scope":1526,"src":"308:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1495,"name":"uint256","nodeType":"ElementaryTypeName","src":"308:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1496,"nodeType":"ArrayTypeName","src":"308:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"287:45:12"},"returnParameters":{"id":1502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1501,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1526,"src":"397:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1500,"name":"uint256","nodeType":"ElementaryTypeName","src":"397:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"396:9:12"},"scope":1566,"src":"269:395:12","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1564,"nodeType":"Block","src":"976:211:12","statements":[{"assignments":[1539],"declarations":[{"constant":false,"id":1539,"mutability":"mutable","name":"product","nodeType":"VariableDeclaration","scope":1564,"src":"986:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1538,"name":"uint256","nodeType":"ElementaryTypeName","src":"986:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1544,"initialValue":{"arguments":[{"id":1542,"name":"prices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"1018:6:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"expression":{"id":1540,"name":"vMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"1004:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_vMath_$3112_$","typeString":"type(library vMath)"}},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"product","nodeType":"MemberAccess","referencedDeclaration":3085,"src":"1004:13:12","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1004:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"986:39:12"},{"assignments":[1546],"declarations":[{"constant":false,"id":1546,"mutability":"mutable","name":"geo_mean","nodeType":"VariableDeclaration","scope":1564,"src":"1035:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1545,"name":"uint256","nodeType":"ElementaryTypeName","src":"1035:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1552,"initialValue":{"arguments":[{"id":1549,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"1075:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1550,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"1078:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1547,"name":"vMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"1054:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_vMath_$3112_$","typeString":"type(library vMath)"}},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"geometric_mean","nodeType":"MemberAccess","referencedDeclaration":3111,"src":"1054:20:12","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_pure$_t_uint8_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint8,uint256) pure returns (uint256)"}},"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1054:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1035:51:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1553,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"1104:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1554,"name":"virtual_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"1108:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1104:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1556,"name":"geo_mean","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"1124:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1104:28:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1558,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1103:30:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":1561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1136:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":1560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1140:2:12","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"1136:6:12","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"1103:39:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1537,"id":1563,"nodeType":"Return","src":"1096:46:12"}]},"id":1565,"implemented":true,"kind":"function","modifiers":[],"name":"calculate_v2_token_price","nodeType":"FunctionDefinition","parameters":{"id":1534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1528,"mutability":"mutable","name":"n","nodeType":"VariableDeclaration","scope":1565,"src":"866:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1527,"name":"uint8","nodeType":"ElementaryTypeName","src":"866:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1530,"mutability":"mutable","name":"virtual_price","nodeType":"VariableDeclaration","scope":1565,"src":"883:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1529,"name":"uint256","nodeType":"ElementaryTypeName","src":"883:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1533,"mutability":"mutable","name":"prices","nodeType":"VariableDeclaration","scope":1565,"src":"914:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1531,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1532,"nodeType":"ArrayTypeName","src":"914:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"856:87:12"},"returnParameters":{"id":1537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1536,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1565,"src":"967:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1535,"name":"uint256","nodeType":"ElementaryTypeName","src":"967:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"966:9:12"},"scope":1566,"src":"823:364:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1567,"src":"224:965:12"}],"src":"39:1151:12"},"id":12},"contracts/oracles/CurveWrapper.sol":{"ast":{"absolutePath":"contracts/oracles/CurveWrapper.sol","exportedSymbols":{"AaveOracle":[1375],"CurveWrapper":[2088],"ICurveOracle":[2101],"IERC20":[153],"ILendingPoolAddressesProvider":[1031],"IPriceOracleGetter":[1043],"Ownable":[262],"SafeERC20":[423]},"id":2089,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":1568,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"37:24:13"},{"absolutePath":"contracts/dependencies/openzeppelin/contracts/Ownable.sol","file":"../dependencies/openzeppelin/contracts/Ownable.sol","id":1570,"nodeType":"ImportDirective","scope":2089,"sourceUnit":263,"src":"63:75:13","symbolAliases":[{"foreign":{"id":1569,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"src":"71:7:13","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/dependencies/openzeppelin/contracts/IERC20.sol","file":"../dependencies/openzeppelin/contracts/IERC20.sol","id":1572,"nodeType":"ImportDirective","scope":2089,"sourceUnit":154,"src":"139:73:13","symbolAliases":[{"foreign":{"id":1571,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"src":"147:6:13","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IPriceOracleGetter.sol","file":"../interfaces/IPriceOracleGetter.sol","id":1574,"nodeType":"ImportDirective","scope":2089,"sourceUnit":1044,"src":"214:72:13","symbolAliases":[{"foreign":{"id":1573,"name":"IPriceOracleGetter","nodeType":"Identifier","overloadedDeclarations":[],"src":"222:18:13","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/dependencies/openzeppelin/contracts/SafeERC20.sol","file":"../dependencies/openzeppelin/contracts/SafeERC20.sol","id":1576,"nodeType":"ImportDirective","scope":2089,"sourceUnit":424,"src":"287:79:13","symbolAliases":[{"foreign":{"id":1575,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"src":"295:9:13","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/misc/AaveOracle.sol","file":"../misc/AaveOracle.sol","id":1578,"nodeType":"ImportDirective","scope":2089,"sourceUnit":1376,"src":"367:50:13","symbolAliases":[{"foreign":{"id":1577,"name":"AaveOracle","nodeType":"Identifier","overloadedDeclarations":[],"src":"375:10:13","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/interfaces/ILendingPoolAddressesProvider.sol","file":"../interfaces/ILendingPoolAddressesProvider.sol","id":1580,"nodeType":"ImportDirective","scope":2089,"sourceUnit":1032,"src":"418:94:13","symbolAliases":[{"foreign":{"id":1579,"name":"ILendingPoolAddressesProvider","nodeType":"Identifier","overloadedDeclarations":[],"src":"426:29:13","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/oracles/interfaces/ICurveOracle.sol","file":"./interfaces/ICurveOracle.sol","id":1582,"nodeType":"ImportDirective","scope":2089,"sourceUnit":2102,"src":"513:59:13","symbolAliases":[{"foreign":{"id":1581,"name":"ICurveOracle","nodeType":"Identifier","overloadedDeclarations":[],"src":"521:12:13","typeDescriptions":{}}}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1584,"name":"IPriceOracleGetter","nodeType":"IdentifierPath","referencedDeclaration":1043,"src":"1387:18:13"},"id":1585,"nodeType":"InheritanceSpecifier","src":"1387:18:13"},{"baseName":{"id":1586,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":262,"src":"1407:7:13"},"id":1587,"nodeType":"InheritanceSpecifier","src":"1407:7:13"}],"contractDependencies":[75,262,1043],"contractKind":"contract","documentation":{"id":1583,"nodeType":"StructuredDocumentation","src":"799:426:13","text":"@title AaveOracle\n @author Aave\n @notice Proxy smart contract to get the price of an asset from a price source, with Chainlink Aggregator\n         smart contracts as primary option\n - If the returned price by a Chainlink aggregator is <= 0, the call is forwarded to a fallbackOracle\n - Owned by the Aave governance system, allowed to add sources for assets, replace them\n   and change the fallbackOracle"},"fullyImplemented":true,"id":2088,"linearizedBaseContracts":[2088,262,75,1043],"name":"CurveWrapper","nodeType":"ContractDefinition","nodes":[{"id":1591,"libraryName":{"id":1588,"name":"SafeERC20","nodeType":"IdentifierPath","referencedDeclaration":423,"src":"1427:9:13"},"nodeType":"UsingForDirective","src":"1421:27:13","typeName":{"id":1590,"nodeType":"UserDefinedTypeName","pathNode":{"id":1589,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":153,"src":"1441:6:13"},"referencedDeclaration":153,"src":"1441:6:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$153","typeString":"contract IERC20"}}},{"anonymous":false,"id":1597,"name":"BaseCurrencySet","nodeType":"EventDefinition","parameters":{"id":1596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1593,"indexed":true,"mutability":"mutable","name":"baseCurrency","nodeType":"VariableDeclaration","scope":1597,"src":"1485:28:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1592,"name":"address","nodeType":"ElementaryTypeName","src":"1485:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1595,"indexed":false,"mutability":"mutable","name":"baseCurrencyUnit","nodeType":"VariableDeclaration","scope":1597,"src":"1523:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1594,"name":"uint256","nodeType":"ElementaryTypeName","src":"1523:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1475:78:13"},"src":"1454:100:13"},{"anonymous":false,"id":1603,"name":"AssetSourceUpdated","nodeType":"EventDefinition","parameters":{"id":1602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1599,"indexed":true,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":1603,"src":"1584:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1598,"name":"address","nodeType":"ElementaryTypeName","src":"1584:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1601,"indexed":true,"mutability":"mutable","name":"source","nodeType":"VariableDeclaration","scope":1603,"src":"1607:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1600,"name":"address","nodeType":"ElementaryTypeName","src":"1607:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1583:47:13"},"src":"1559:72:13"},{"anonymous":false,"id":1607,"name":"FallbackOracleUpdated","nodeType":"EventDefinition","parameters":{"id":1606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1605,"indexed":true,"mutability":"mutable","name":"fallbackOracle","nodeType":"VariableDeclaration","scope":1607,"src":"1664:30:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1604,"name":"address","nodeType":"ElementaryTypeName","src":"1664:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:32:13"},"src":"1636:60:13"},{"constant":false,"id":1610,"mutability":"mutable","name":"_addressesProvider","nodeType":"VariableDeclaration","scope":2088,"src":"1702:57:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPoolAddressesProvider_$1031","typeString":"contract ILendingPoolAddressesProvider"},"typeName":{"id":1609,"nodeType":"UserDefinedTypeName","pathNode":{"id":1608,"name":"ILendingPoolAddressesProvider","nodeType":"IdentifierPath","referencedDeclaration":1031,"src":"1702:29:13"},"referencedDeclaration":1031,"src":"1702:29:13","typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPoolAddressesProvider_$1031","typeString":"contract ILendingPoolAddressesProvider"}},"visibility":"internal"},{"constant":false,"id":1613,"mutability":"mutable","name":"_fallbackOracle","nodeType":"VariableDeclaration","scope":2088,"src":"1765:42:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1043","typeString":"contract IPriceOracleGetter"},"typeName":{"id":1612,"nodeType":"UserDefinedTypeName","pathNode":{"id":1611,"name":"IPriceOracleGetter","nodeType":"IdentifierPath","referencedDeclaration":1043,"src":"1765:18:13"},"referencedDeclaration":1043,"src":"1765:18:13","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1043","typeString":"contract IPriceOracleGetter"}},"visibility":"private"},{"constant":false,"functionSelector":"e19f4700","id":1615,"mutability":"immutable","name":"BASE_CURRENCY","nodeType":"VariableDeclaration","scope":2088,"src":"1961:38:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1614,"name":"address","nodeType":"ElementaryTypeName","src":"1961:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"8c89b64f","id":1617,"mutability":"immutable","name":"BASE_CURRENCY_UNIT","nodeType":"VariableDeclaration","scope":2088,"src":"2005:43:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1616,"name":"uint256","nodeType":"ElementaryTypeName","src":"2005:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"id":1621,"mutability":"mutable","name":"lpTokenToPool","nodeType":"VariableDeclaration","scope":2088,"src":"2054:50:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":1620,"keyType":{"id":1618,"name":"address","nodeType":"ElementaryTypeName","src":"2062:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2054:27:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueType":{"id":1619,"name":"address","nodeType":"ElementaryTypeName","src":"2073:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"internal"},{"constant":false,"id":1625,"mutability":"mutable","name":"numCoins","nodeType":"VariableDeclaration","scope":2088,"src":"2110:45:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1624,"keyType":{"id":1622,"name":"address","nodeType":"ElementaryTypeName","src":"2118:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2110:27:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1623,"name":"uint256","nodeType":"ElementaryTypeName","src":"2129:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":1631,"mutability":"mutable","name":"underlyingCoins","nodeType":"VariableDeclaration","scope":2088,"src":"2287:72:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$","typeString":"mapping(address => mapping(uint256 => address))"},"typeName":{"id":1630,"keyType":{"id":1626,"name":"address","nodeType":"ElementaryTypeName","src":"2295:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2287:47:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$","typeString":"mapping(address => mapping(uint256 => address))"},"valueType":{"id":1629,"keyType":{"id":1627,"name":"uint256","nodeType":"ElementaryTypeName","src":"2314:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2306:27:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":1628,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}}},"visibility":"internal"},{"body":{"id":1669,"nodeType":"Block","src":"3219:383:13","statements":[{"expression":{"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1643,"name":"_addressesProvider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1610,"src":"3229:18:13","typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPoolAddressesProvider_$1031","typeString":"contract ILendingPoolAddressesProvider"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1645,"name":"addressProvider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"3280:15:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1644,"name":"ILendingPoolAddressesProvider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"3250:29:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILendingPoolAddressesProvider_$1031_$","typeString":"type(contract ILendingPoolAddressesProvider)"}},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3250:46:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPoolAddressesProvider_$1031","typeString":"contract ILendingPoolAddressesProvider"}},"src":"3229:67:13","typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPoolAddressesProvider_$1031","typeString":"contract ILendingPoolAddressesProvider"}},"id":1648,"nodeType":"ExpressionStatement","src":"3229:67:13"},{"expression":{"arguments":[{"id":1650,"name":"fallbackOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"3325:14:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1649,"name":"_setFallbackOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"3306:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3306:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1652,"nodeType":"ExpressionStatement","src":"3306:34:13"},{"expression":{"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1653,"name":"BASE_CURRENCY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"3427:13:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1654,"name":"baseCurrency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"3443:12:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3427:28:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1656,"nodeType":"ExpressionStatement","src":"3427:28:13"},{"expression":{"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1657,"name":"BASE_CURRENCY_UNIT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"3465:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1658,"name":"baseCurrencyUnit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"3486:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3465:37:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1660,"nodeType":"ExpressionStatement","src":"3465:37:13"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1661,"name":"initializeMappings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"3512:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3512:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1663,"nodeType":"ExpressionStatement","src":"3512:20:13"},{"eventCall":{"arguments":[{"id":1665,"name":"baseCurrency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"3564:12:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1666,"name":"baseCurrencyUnit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"3578:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1664,"name":"BaseCurrencySet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"3548:15:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3548:47:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1668,"nodeType":"EmitStatement","src":"3543:52:13"}]},"documentation":{"id":1632,"nodeType":"StructuredDocumentation","src":"2366:434:13","text":"@notice Constructor\n @param addressProvider The address of the vmex address provider (not the curve address provider)\n @param fallbackOracle The address of the fallback oracle to use if the data of an\n        aggregator is not consistent\n @param baseCurrency the base currency used for the price quotes. If USD is used, base currency is 0x0\n @param baseCurrencyUnit the unit of the base currency"},"id":1670,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":1641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1634,"mutability":"mutable","name":"addressProvider","nodeType":"VariableDeclaration","scope":1670,"src":"2826:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1633,"name":"address","nodeType":"ElementaryTypeName","src":"2826:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1636,"mutability":"mutable","name":"fallbackOracle","nodeType":"VariableDeclaration","scope":1670,"src":"2859:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1635,"name":"address","nodeType":"ElementaryTypeName","src":"2859:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1638,"mutability":"mutable","name":"baseCurrency","nodeType":"VariableDeclaration","scope":1670,"src":"3151:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1637,"name":"address","nodeType":"ElementaryTypeName","src":"3151:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1640,"mutability":"mutable","name":"baseCurrencyUnit","nodeType":"VariableDeclaration","scope":1670,"src":"3181:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1639,"name":"uint256","nodeType":"ElementaryTypeName","src":"3181:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2816:395:13"},"returnParameters":{"id":1642,"nodeType":"ParameterList","parameters":[],"src":"3219:0:13"},"scope":2088,"src":"2805:797:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1683,"nodeType":"Block","src":"3680:84:13","statements":[{"expression":{"id":1681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1677,"name":"_addressesProvider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1610,"src":"3690:18:13","typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPoolAddressesProvider_$1031","typeString":"contract ILendingPoolAddressesProvider"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1679,"name":"addressProvider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"3741:15:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1678,"name":"ILendingPoolAddressesProvider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"3711:29:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILendingPoolAddressesProvider_$1031_$","typeString":"type(contract ILendingPoolAddressesProvider)"}},"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3711:46:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPoolAddressesProvider_$1031","typeString":"contract ILendingPoolAddressesProvider"}},"src":"3690:67:13","typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPoolAddressesProvider_$1031","typeString":"contract ILendingPoolAddressesProvider"}},"id":1682,"nodeType":"ExpressionStatement","src":"3690:67:13"}]},"functionSelector":"1a5fa2e3","id":1684,"implemented":true,"kind":"function","modifiers":[{"id":1675,"modifierName":{"id":1674,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":211,"src":"3670:9:13"},"nodeType":"ModifierInvocation","src":"3670:9:13"}],"name":"setAddressProvider","nodeType":"FunctionDefinition","parameters":{"id":1673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1672,"mutability":"mutable","name":"addressProvider","nodeType":"VariableDeclaration","scope":1684,"src":"3636:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1671,"name":"address","nodeType":"ElementaryTypeName","src":"3636:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3635:25:13"},"returnParameters":{"id":1676,"nodeType":"ParameterList","parameters":[],"src":"3680:0:13"},"scope":2088,"src":"3608:156:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1843,"nodeType":"Block","src":"3809:3319:13","statements":[{"expression":{"id":1691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1687,"name":"lpTokenToPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"3840:13:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":1689,"indexExpression":{"hexValue":"307863344144323962613442336335383065364435393130354646663438343939393939373637354666","id":1688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3867:42:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xc4AD29ba4B3c580e6D59105FFf484999997675Ff"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3840:79:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"307844353161343464334661453031303239344336313633383862353036416364413162664141453436","id":1690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3922:42:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xD51a44d3FaE010294C616388b506AcdA1bfAAE46"},"src":"3840:124:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1692,"nodeType":"ExpressionStatement","src":"3840:124:13"},{"expression":{"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1693,"name":"numCoins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"3987:8:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1695,"indexExpression":{"hexValue":"307844353161343464334661453031303239344336313633383862353036416364413162664141453436","id":1694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3996:42:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xD51a44d3FaE010294C616388b506AcdA1bfAAE46"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3987:52:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"33","id":1696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4042:1:13","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"3987:56:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1698,"nodeType":"ExpressionStatement","src":"3987:56:13"},{"expression":{"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1699,"name":"underlyingCoins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"4077:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$","typeString":"mapping(address => mapping(uint256 => address))"}},"id":1702,"indexExpression":{"hexValue":"307844353161343464334661453031303239344336313633383862353036416364413162664141453436","id":1700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4093:42:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xD51a44d3FaE010294C616388b506AcdA1bfAAE46"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4077:59:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1703,"indexExpression":{"hexValue":"30","id":1701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4150:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4077:84:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"307864414331374639353844326565353233613232303632303639393435393743313344383331656337","id":1704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4164:42:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xdAC17F958D2ee523a2206206994597C13D831ec7"},"src":"4077:129:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1706,"nodeType":"ExpressionStatement","src":"4077:129:13"},{"expression":{"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1707,"name":"underlyingCoins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"4248:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$","typeString":"mapping(address => mapping(uint256 => address))"}},"id":1710,"indexExpression":{"hexValue":"307844353161343464334661453031303239344336313633383862353036416364413162664141453436","id":1708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4264:42:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xD51a44d3FaE010294C616388b506AcdA1bfAAE46"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4248:59:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1711,"indexExpression":{"hexValue":"31","id":1709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4321:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4248:84:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"307832323630464143354535353432613737334161343466424366654466374331393362633243353939","id":1712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4335:42:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599"},"src":"4248:129:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1714,"nodeType":"ExpressionStatement","src":"4248:129:13"},{"expression":{"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1715,"name":"underlyingCoins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"4419:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$","typeString":"mapping(address => mapping(uint256 => address))"}},"id":1718,"indexExpression":{"hexValue":"307844353161343464334661453031303239344336313633383862353036416364413162664141453436","id":1716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4435:42:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xD51a44d3FaE010294C616388b506AcdA1bfAAE46"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4419:59:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1719,"indexExpression":{"hexValue":"32","id":1717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4492:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4419:84:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"307843303261614133396232323346453844304130653543344632376541443930383343373536436332","id":1720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4506:42:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"},"src":"4419:129:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1722,"nodeType":"ExpressionStatement","src":"4419:129:13"},{"expression":{"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1723,"name":"lpTokenToPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"4607:13:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":1725,"indexExpression":{"hexValue":"307836633346393066303433613732464136313263626163383131354545376535324244653645343930","id":1724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4634:42:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4607:79:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"307862456263343437383243376442306131413630436236666539376430623438333033324646314337","id":1726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4689:42:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xbEbc44782C7dB0a1A60Cb6fe97d0b483032FF1C7"},"src":"4607:124:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1728,"nodeType":"ExpressionStatement","src":"4607:124:13"},{"expression":{"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1729,"name":"numCoins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"4741:8:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1731,"indexExpression":{"hexValue":"307862456263343437383243376442306131413630436236666539376430623438333033324646314337","id":1730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4750:42:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xbEbc44782C7dB0a1A60Cb6fe97d0b483032FF1C7"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4741:52:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"33","id":1732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4796:1:13","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"4741:56:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1734,"nodeType":"ExpressionStatement","src":"4741:56:13"},{"expression":{"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1735,"name":"underlyingCoins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"4831:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$","typeString":"mapping(address => mapping(uint256 => address))"}},"id":1738,"indexExpression":{"hexValue":"307862456263343437383243376442306131413630436236666539376430623438333033324646314337","id":1736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4847:42:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xbEbc44782C7dB0a1A60Cb6fe97d0b483032FF1C7"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4831:59:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1739,"indexExpression":{"hexValue":"30","id":1737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4904:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4831:84:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"307836423137353437344538393039344334344461393862393534456564654143343935323731643046","id":1740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4918:42:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x6B175474E89094C44Da98b954EedeAC495271d0F"},"src":"4831:129:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1742,"nodeType":"ExpressionStatement","src":"4831:129:13"},{"expression":{"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1743,"name":"underlyingCoins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"5001:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$","typeString":"mapping(address => mapping(uint256 => address))"}},"id":1746,"indexExpression":{"hexValue":"307862456263343437383243376442306131413630436236666539376430623438333033324646314337","id":1744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5017:42:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xbEbc44782C7dB0a1A60Cb6fe97d0b483032FF1C7"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5001:59:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1747,"indexExpression":{"hexValue":"31","id":1745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5074:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5001:84:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"307841306238363939316336323138623336633164313944346132653945623063453336303665423438","id":1748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5088:42:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"},"src":"5001:129:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1750,"nodeType":"ExpressionStatement","src":"5001:129:13"},{"expression":{"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1751,"name":"underlyingCoins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"5172:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$","typeString":"mapping(address => mapping(uint256 => address))"}},"id":1754,"indexExpression":{"hexValue":"307862456263343437383243376442306131413630436236666539376430623438333033324646314337","id":1752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5188:42:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xbEbc44782C7dB0a1A60Cb6fe97d0b483032FF1C7"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5172:59:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1755,"indexExpression":{"hexValue":"32","id":1753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5245:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5172:84:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"307864414331374639353844326565353233613232303632303639393435393743313344383331656337","id":1756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5259:42:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xdAC17F958D2ee523a2206206994597C13D831ec7"},"src":"5172:129:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1758,"nodeType":"ExpressionStatement","src":"5172:129:13"},{"expression":{"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1759,"name":"lpTokenToPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"5363:13:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":1761,"indexExpression":{"hexValue":"307830363332353434304430313465333937333635383363313635433239363342413939664166313445","id":1760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5390:42:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x06325440D014e39736583c165C2963BA99fAf14E"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5363:79:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"307844433234333136623941453032384631343937633237354542393139326133456130663637303232","id":1762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5445:42:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xDC24316b9AE028F1497c275EB9192a3Ea0f67022"},"src":"5363:124:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1764,"nodeType":"ExpressionStatement","src":"5363:124:13"},{"expression":{"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1765,"name":"numCoins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"5497:8:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1767,"indexExpression":{"hexValue":"307844433234333136623941453032384631343937633237354542393139326133456130663637303232","id":1766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5506:42:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xDC24316b9AE028F1497c275EB9192a3Ea0f67022"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5497:52:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"32","id":1768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5552:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5497:56:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1770,"nodeType":"ExpressionStatement","src":"5497:56:13"},{"expression":{"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1771,"name":"underlyingCoins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"5585:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$","typeString":"mapping(address => mapping(uint256 => address))"}},"id":1774,"indexExpression":{"hexValue":"307844433234333136623941453032384631343937633237354542393139326133456130663637303232","id":1772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5601:42:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xDC24316b9AE028F1497c275EB9192a3Ea0f67022"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5585:59:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1775,"indexExpression":{"hexValue":"30","id":1773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5658:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5585:84:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"307843303261614133396232323346453844304130653543344632376541443930383343373536436332","id":1776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5672:42:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"},"src":"5585:129:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1778,"nodeType":"ExpressionStatement","src":"5585:129:13"},{"expression":{"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1779,"name":"underlyingCoins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"5756:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$","typeString":"mapping(address => mapping(uint256 => address))"}},"id":1782,"indexExpression":{"hexValue":"307844433234333136623941453032384631343937633237354542393139326133456130663637303232","id":1780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5772:42:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xDC24316b9AE028F1497c275EB9192a3Ea0f67022"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5756:59:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1783,"indexExpression":{"hexValue":"31","id":1781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5829:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5756:84:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"307861653761623936353230444533413138453565313131423545614162303935333132443766453834","id":1784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5843:42:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84"},"src":"5756:129:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1786,"nodeType":"ExpressionStatement","src":"5756:129:13"},{"expression":{"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1787,"name":"lpTokenToPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"5948:13:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":1789,"indexExpression":{"hexValue":"307833313735446630393736644641383736343331433245396545364263343562363564333437334343","id":1788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5975:42:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x3175Df0976dFA876431C2E9eE6Bc45b65d3473CC"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5948:79:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"307844634546393638643431366134314364616330454438373032664143383132384136343234314132","id":1790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6030:42:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xDcEF968d416a41Cdac0ED8702fAC8128A64241A2"},"src":"5948:124:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1792,"nodeType":"ExpressionStatement","src":"5948:124:13"},{"expression":{"id":1797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1793,"name":"numCoins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"6082:8:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1795,"indexExpression":{"hexValue":"307844634546393638643431366134314364616330454438373032664143383132384136343234314132","id":1794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6091:42:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xDcEF968d416a41Cdac0ED8702fAC8128A64241A2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6082:52:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"32","id":1796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6137:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6082:56:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1798,"nodeType":"ExpressionStatement","src":"6082:56:13"},{"expression":{"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1799,"name":"underlyingCoins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"6170:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$","typeString":"mapping(address => mapping(uint256 => address))"}},"id":1802,"indexExpression":{"hexValue":"307844634546393638643431366134314364616330454438373032664143383132384136343234314132","id":1800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6186:42:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xDcEF968d416a41Cdac0ED8702fAC8128A64241A2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6170:59:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1803,"indexExpression":{"hexValue":"30","id":1801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6170:84:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"307838353364393535614345663832324462303538656238353035393131454437374631373562393965","id":1804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6257:42:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x853d955aCEf822Db058eb8505911ED77F175b99e"},"src":"6170:129:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1806,"nodeType":"ExpressionStatement","src":"6170:129:13"},{"expression":{"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1807,"name":"underlyingCoins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"6341:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$","typeString":"mapping(address => mapping(uint256 => address))"}},"id":1810,"indexExpression":{"hexValue":"307844634546393638643431366134314364616330454438373032664143383132384136343234314132","id":1808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6357:42:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xDcEF968d416a41Cdac0ED8702fAC8128A64241A2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6341:59:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1811,"indexExpression":{"hexValue":"31","id":1809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6414:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6341:84:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"307841306238363939316336323138623336633164313944346132653945623063453336303665423438","id":1812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6428:42:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"},"src":"6341:129:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1814,"nodeType":"ExpressionStatement","src":"6341:129:13"},{"expression":{"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1815,"name":"lpTokenToPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"6532:13:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":1817,"indexExpression":{"hexValue":"307864363332663232363932466143373631316432414131433044353532393330443433434145643342","id":1816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6559:42:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6532:79:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"307864363332663232363932466143373631316432414131433044353532393330443433434145643342","id":1818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6614:42:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B"},"src":"6532:124:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1820,"nodeType":"ExpressionStatement","src":"6532:124:13"},{"expression":{"id":1825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1821,"name":"numCoins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"6698:8:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1823,"indexExpression":{"hexValue":"307864363332663232363932466143373631316432414131433044353532393330443433434145643342","id":1822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6707:42:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6698:52:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"32","id":1824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6753:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6698:56:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1826,"nodeType":"ExpressionStatement","src":"6698:56:13"},{"expression":{"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1827,"name":"underlyingCoins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"6789:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$","typeString":"mapping(address => mapping(uint256 => address))"}},"id":1830,"indexExpression":{"hexValue":"307864363332663232363932466143373631316432414131433044353532393330443433434145643342","id":1828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6805:42:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6789:59:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1831,"indexExpression":{"hexValue":"30","id":1829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6862:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6789:84:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"307838353364393535614345663832324462303538656238353035393131454437374631373562393965","id":1832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6876:42:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x853d955aCEf822Db058eb8505911ED77F175b99e"},"src":"6789:129:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1834,"nodeType":"ExpressionStatement","src":"6789:129:13"},{"expression":{"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1835,"name":"underlyingCoins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"6960:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$","typeString":"mapping(address => mapping(uint256 => address))"}},"id":1838,"indexExpression":{"hexValue":"307864363332663232363932466143373631316432414131433044353532393330443433434145643342","id":1836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6976:42:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6960:59:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1839,"indexExpression":{"hexValue":"31","id":1837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7033:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6960:84:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"307836633346393066303433613732464136313263626163383131354545376535324244653645343930","id":1840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7047:42:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490"},"src":"6960:129:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1842,"nodeType":"ExpressionStatement","src":"6960:129:13"}]},"id":1844,"implemented":true,"kind":"function","modifiers":[],"name":"initializeMappings","nodeType":"FunctionDefinition","parameters":{"id":1685,"nodeType":"ParameterList","parameters":[],"src":"3797:2:13"},"returnParameters":{"id":1686,"nodeType":"ParameterList","parameters":[],"src":"3809:0:13"},"scope":2088,"src":"3770:3358:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1856,"nodeType":"Block","src":"7355:51:13","statements":[{"expression":{"arguments":[{"id":1853,"name":"fallbackOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"7384:14:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1852,"name":"_setFallbackOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"7365:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7365:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1855,"nodeType":"ExpressionStatement","src":"7365:34:13"}]},"documentation":{"id":1845,"nodeType":"StructuredDocumentation","src":"7134:146:13","text":"@notice Sets the fallbackOracle\n - Callable only by the Aave governance\n @param fallbackOracle The address of the fallbackOracle"},"functionSelector":"170aee73","id":1857,"implemented":true,"kind":"function","modifiers":[{"id":1850,"modifierName":{"id":1849,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":211,"src":"7345:9:13"},"nodeType":"ModifierInvocation","src":"7345:9:13"}],"name":"setFallbackOracle","nodeType":"FunctionDefinition","parameters":{"id":1848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1847,"mutability":"mutable","name":"fallbackOracle","nodeType":"VariableDeclaration","scope":1857,"src":"7312:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1846,"name":"address","nodeType":"ElementaryTypeName","src":"7312:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7311:24:13"},"returnParameters":{"id":1851,"nodeType":"ParameterList","parameters":[],"src":"7355:0:13"},"scope":2088,"src":"7285:121:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1873,"nodeType":"Block","src":"7597:121:13","statements":[{"expression":{"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1863,"name":"_fallbackOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"7607:15:13","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1043","typeString":"contract IPriceOracleGetter"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1865,"name":"fallbackOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"7644:14:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1864,"name":"IPriceOracleGetter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"7625:18:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPriceOracleGetter_$1043_$","typeString":"type(contract IPriceOracleGetter)"}},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7625:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1043","typeString":"contract IPriceOracleGetter"}},"src":"7607:52:13","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1043","typeString":"contract IPriceOracleGetter"}},"id":1868,"nodeType":"ExpressionStatement","src":"7607:52:13"},{"eventCall":{"arguments":[{"id":1870,"name":"fallbackOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"7696:14:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1869,"name":"FallbackOracleUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"7674:21:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7674:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1872,"nodeType":"EmitStatement","src":"7669:42:13"}]},"documentation":{"id":1858,"nodeType":"StructuredDocumentation","src":"7412:119:13","text":"@notice Internal function to set the fallbackOracle\n @param fallbackOracle The address of the fallbackOracle"},"id":1874,"implemented":true,"kind":"function","modifiers":[],"name":"_setFallbackOracle","nodeType":"FunctionDefinition","parameters":{"id":1861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1860,"mutability":"mutable","name":"fallbackOracle","nodeType":"VariableDeclaration","scope":1874,"src":"7564:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1859,"name":"address","nodeType":"ElementaryTypeName","src":"7564:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7563:24:13"},"returnParameters":{"id":1862,"nodeType":"ParameterList","parameters":[],"src":"7597:0:13"},"scope":2088,"src":"7536:182:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1042],"body":{"id":2026,"nodeType":"Block","src":"7956:2013:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1883,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"7970:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1884,"name":"BASE_CURRENCY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"7979:13:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7970:22:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1889,"nodeType":"IfStatement","src":"7966:78:13","trueBody":{"id":1888,"nodeType":"Block","src":"7994:50:13","statements":[{"expression":{"id":1886,"name":"BASE_CURRENCY_UNIT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"8015:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1882,"id":1887,"nodeType":"Return","src":"8008:25:13"}]}},{"assignments":[1891],"declarations":[{"constant":false,"id":1891,"mutability":"mutable","name":"pool","nodeType":"VariableDeclaration","scope":2026,"src":"8422:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1890,"name":"address","nodeType":"ElementaryTypeName","src":"8422:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1895,"initialValue":{"baseExpression":{"id":1892,"name":"lpTokenToPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"8437:13:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":1894,"indexExpression":{"id":1893,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"8451:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8437:20:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8422:35:13"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1896,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"8496:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8512:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8504:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1897,"name":"address","nodeType":"ElementaryTypeName","src":"8504:7:13","typeDescriptions":{}}},"id":1900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8504:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8496:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1908,"nodeType":"IfStatement","src":"8492:92:13","trueBody":{"id":1907,"nodeType":"Block","src":"8516:68:13","statements":[{"expression":{"arguments":[{"id":1904,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"8567:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1902,"name":"_fallbackOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"8537:15:13","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1043","typeString":"contract IPriceOracleGetter"}},"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAssetPrice","nodeType":"MemberAccess","referencedDeclaration":1042,"src":"8537:29:13","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8537:36:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1882,"id":1906,"nodeType":"Return","src":"8530:43:13"}]}},{"assignments":[1910],"declarations":[{"constant":false,"id":1910,"mutability":"mutable","name":"num_coins","nodeType":"VariableDeclaration","scope":2026,"src":"8699:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1909,"name":"uint256","nodeType":"ElementaryTypeName","src":"8699:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1914,"initialValue":{"baseExpression":{"id":1911,"name":"numCoins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"8719:8:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1913,"indexExpression":{"id":1912,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"8728:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8719:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8699:34:13"},{"assignments":[1919],"declarations":[{"constant":false,"id":1919,"mutability":"mutable","name":"prices","nodeType":"VariableDeclaration","scope":2026,"src":"8744:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1917,"name":"uint256","nodeType":"ElementaryTypeName","src":"8744:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1918,"nodeType":"ArrayTypeName","src":"8744:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1925,"initialValue":{"arguments":[{"id":1923,"name":"num_coins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"8784:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8770:13:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":1920,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1921,"nodeType":"ArrayTypeName","src":"8774:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8770:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8744:50:13"},{"body":{"id":1998,"nodeType":"Block","src":"8845:816:13","statements":[{"assignments":[1937],"declarations":[{"constant":false,"id":1937,"mutability":"mutable","name":"underlying","nodeType":"VariableDeclaration","scope":1998,"src":"8859:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1936,"name":"address","nodeType":"ElementaryTypeName","src":"8859:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1943,"initialValue":{"baseExpression":{"baseExpression":{"id":1938,"name":"underlyingCoins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"8880:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$","typeString":"mapping(address => mapping(uint256 => address))"}},"id":1940,"indexExpression":{"id":1939,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"8896:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8880:21:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1942,"indexExpression":{"id":1941,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"8902:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8880:24:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8859:45:13"},{"assignments":[1946],"declarations":[{"constant":false,"id":1946,"mutability":"mutable","name":"aave_oracle","nodeType":"VariableDeclaration","scope":1998,"src":"8918:30:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1043","typeString":"contract IPriceOracleGetter"},"typeName":{"id":1945,"nodeType":"UserDefinedTypeName","pathNode":{"id":1944,"name":"IPriceOracleGetter","nodeType":"IdentifierPath","referencedDeclaration":1043,"src":"8918:18:13"},"referencedDeclaration":1043,"src":"8918:18:13","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1043","typeString":"contract IPriceOracleGetter"}},"visibility":"internal"}],"id":1947,"nodeType":"VariableDeclarationStatement","src":"8918:30:13"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1948,"name":"underlying","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"8966:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"307836633346393066303433613732464136313263626163383131354545376535324244653645343930","id":1949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8980:42:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490"},"src":"8966:56:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1968,"nodeType":"Block","src":"9296:144:13","statements":[{"expression":{"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1960,"name":"aave_oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"9314:11:13","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1043","typeString":"contract IPriceOracleGetter"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1962,"name":"_addressesProvider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1610,"src":"9368:18:13","typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPoolAddressesProvider_$1031","typeString":"contract ILendingPoolAddressesProvider"}},"id":1963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAavePriceOracle","nodeType":"MemberAccess","referencedDeclaration":995,"src":"9368:37:13","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9368:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1961,"name":"IPriceOracleGetter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"9328:18:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPriceOracleGetter_$1043_$","typeString":"type(contract IPriceOracleGetter)"}},"id":1965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9328:97:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1043","typeString":"contract IPriceOracleGetter"}},"src":"9314:111:13","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1043","typeString":"contract IPriceOracleGetter"}},"id":1967,"nodeType":"ExpressionStatement","src":"9314:111:13"}]},"id":1969,"nodeType":"IfStatement","src":"8962:478:13","trueBody":{"id":1959,"nodeType":"Block","src":"9024:266:13","statements":[{"expression":{"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1951,"name":"aave_oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"9156:11:13","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1043","typeString":"contract IPriceOracleGetter"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1953,"name":"_addressesProvider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1610,"src":"9210:18:13","typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPoolAddressesProvider_$1031","typeString":"contract ILendingPoolAddressesProvider"}},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getCurvePriceOracleWrapper","nodeType":"MemberAccess","referencedDeclaration":1005,"src":"9210:45:13","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9210:47:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1952,"name":"IPriceOracleGetter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"9170:18:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPriceOracleGetter_$1043_$","typeString":"type(contract IPriceOracleGetter)"}},"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9170:105:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1043","typeString":"contract IPriceOracleGetter"}},"src":"9156:119:13","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1043","typeString":"contract IPriceOracleGetter"}},"id":1958,"nodeType":"ExpressionStatement","src":"9156:119:13"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1971,"name":"underlying","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"9462:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9476:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1972,"name":"address","nodeType":"ElementaryTypeName","src":"9476:7:13","typeDescriptions":{}}},"id":1975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9476:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9462:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"756e6465726c79696e6720746f6b656e206973206e756c6c","id":1977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9488:26:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_b4e8d318e521cf88468394cc0c9b8c9007ea07e1e8e63b993c5168c9f567f309","typeString":"literal_string \"underlying token is null\""},"value":"underlying token is null"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b4e8d318e521cf88468394cc0c9b8c9007ea07e1e8e63b993c5168c9f567f309","typeString":"literal_string \"underlying token is null\""}],"id":1970,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9454:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9454:61:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1979,"nodeType":"ExpressionStatement","src":"9454:61:13"},{"expression":{"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1980,"name":"prices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"9529:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1982,"indexExpression":{"id":1981,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"9536:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9529:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1985,"name":"underlying","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"9567:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1983,"name":"aave_oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"9541:11:13","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1043","typeString":"contract IPriceOracleGetter"}},"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAssetPrice","nodeType":"MemberAccess","referencedDeclaration":1042,"src":"9541:25:13","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9541:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9529:49:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1988,"nodeType":"ExpressionStatement","src":"9529:49:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1990,"name":"prices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"9600:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1992,"indexExpression":{"id":1991,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"9607:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9600:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9612:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9600:13:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"61617665206f7261636c6520656e636f756e746572656420616e206572726f72","id":1995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9615:34:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_49a2bac861dd4380d6fd0d823ee0721ff11ba3d1e715eb7ddae8f9170b277ab1","typeString":"literal_string \"aave oracle encountered an error\""},"value":"aave oracle encountered an error"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_49a2bac861dd4380d6fd0d823ee0721ff11ba3d1e715eb7ddae8f9170b277ab1","typeString":"literal_string \"aave oracle encountered an error\""}],"id":1989,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9592:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9592:58:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1997,"nodeType":"ExpressionStatement","src":"9592:58:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1930,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"8825:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1931,"name":"num_coins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"8829:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8825:13:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1999,"initializationExpression":{"assignments":[1927],"declarations":[{"constant":false,"id":1927,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":1999,"src":"8810:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1926,"name":"uint256","nodeType":"ElementaryTypeName","src":"8810:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1929,"initialValue":{"hexValue":"30","id":1928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8822:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8810:13:13"},"loopExpression":{"expression":{"id":1934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8840:3:13","subExpression":{"id":1933,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"8840:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1935,"nodeType":"ExpressionStatement","src":"8840:3:13"},"nodeType":"ForStatement","src":"8805:856:13"},{"assignments":[2002],"declarations":[{"constant":false,"id":2002,"mutability":"mutable","name":"oracle","nodeType":"VariableDeclaration","scope":2026,"src":"9671:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ICurveOracle_$2101","typeString":"contract ICurveOracle"},"typeName":{"id":2001,"nodeType":"UserDefinedTypeName","pathNode":{"id":2000,"name":"ICurveOracle","nodeType":"IdentifierPath","referencedDeclaration":2101,"src":"9671:12:13"},"referencedDeclaration":2101,"src":"9671:12:13","typeDescriptions":{"typeIdentifier":"t_contract$_ICurveOracle_$2101","typeString":"contract ICurveOracle"}},"visibility":"internal"}],"id":2008,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2004,"name":"_addressesProvider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1610,"src":"9719:18:13","typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPoolAddressesProvider_$1031","typeString":"contract ILendingPoolAddressesProvider"}},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getCurvePriceOracle","nodeType":"MemberAccess","referencedDeclaration":1000,"src":"9719:38:13","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9719:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2003,"name":"ICurveOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2101,"src":"9693:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ICurveOracle_$2101_$","typeString":"type(contract ICurveOracle)"}},"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9693:76:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ICurveOracle_$2101","typeString":"contract ICurveOracle"}},"nodeType":"VariableDeclarationStatement","src":"9671:98:13"},{"assignments":[2010],"declarations":[{"constant":false,"id":2010,"mutability":"mutable","name":"price","nodeType":"VariableDeclaration","scope":2026,"src":"9780:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2009,"name":"uint256","nodeType":"ElementaryTypeName","src":"9780:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2016,"initialValue":{"arguments":[{"id":2013,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"9813:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2014,"name":"prices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"9819:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"expression":{"id":2011,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"9796:6:13","typeDescriptions":{"typeIdentifier":"t_contract$_ICurveOracle_$2101","typeString":"contract ICurveOracle"}},"id":2012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"get_price","nodeType":"MemberAccess","referencedDeclaration":2100,"src":"9796:16:13","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,uint256[] memory) view external returns (uint256)"}},"id":2015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9796:30:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9780:46:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2018,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"9893:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9901:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9893:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4375727665206f7261636c6520656e636f756e746572656420616e206572726f72","id":2021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9904:35:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_8f9e5358d341b51c97b2a3f93978ab3e848c05bfd7a5c6e7622242ad80967edf","typeString":"literal_string \"Curve oracle encountered an error\""},"value":"Curve oracle encountered an error"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8f9e5358d341b51c97b2a3f93978ab3e848c05bfd7a5c6e7622242ad80967edf","typeString":"literal_string \"Curve oracle encountered an error\""}],"id":2017,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9885:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9885:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2023,"nodeType":"ExpressionStatement","src":"9885:55:13"},{"expression":{"id":2024,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"9957:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1882,"id":2025,"nodeType":"Return","src":"9950:12:13"}]},"documentation":{"id":1875,"nodeType":"StructuredDocumentation","src":"7724:81:13","text":"@notice Gets an asset price by address\n @param asset The asset address"},"functionSelector":"b3596f07","id":2027,"implemented":true,"kind":"function","modifiers":[],"name":"getAssetPrice","nodeType":"FunctionDefinition","overrides":{"id":1879,"nodeType":"OverrideSpecifier","overrides":[],"src":"7929:8:13"},"parameters":{"id":1878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1877,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":2027,"src":"7842:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1876,"name":"address","nodeType":"ElementaryTypeName","src":"7842:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7832:84:13"},"returnParameters":{"id":1882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1881,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2027,"src":"7947:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1880,"name":"uint256","nodeType":"ElementaryTypeName","src":"7947:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7946:9:13"},"scope":2088,"src":"7810:2159:13","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2074,"nodeType":"Block","src":"10217:208:13","statements":[{"assignments":[2041],"declarations":[{"constant":false,"id":2041,"mutability":"mutable","name":"prices","nodeType":"VariableDeclaration","scope":2074,"src":"10227:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2039,"name":"uint256","nodeType":"ElementaryTypeName","src":"10227:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2040,"nodeType":"ArrayTypeName","src":"10227:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2048,"initialValue":{"arguments":[{"expression":{"id":2045,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"10267:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"10267:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10253:13:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2042,"name":"uint256","nodeType":"ElementaryTypeName","src":"10257:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2043,"nodeType":"ArrayTypeName","src":"10257:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10253:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10227:54:13"},{"body":{"id":2070,"nodeType":"Block","src":"10335:61:13","statements":[{"expression":{"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2060,"name":"prices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"10349:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2062,"indexExpression":{"id":2061,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"10356:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10349:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":2064,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"10375:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2066,"indexExpression":{"id":2065,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"10382:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10375:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2063,"name":"getAssetPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"10361:13:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10361:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10349:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2069,"nodeType":"ExpressionStatement","src":"10349:36:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2053,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"10311:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2054,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"10315:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"10315:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10311:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2071,"initializationExpression":{"assignments":[2050],"declarations":[{"constant":false,"id":2050,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":2071,"src":"10296:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2049,"name":"uint256","nodeType":"ElementaryTypeName","src":"10296:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2052,"initialValue":{"hexValue":"30","id":2051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10308:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10296:13:13"},"loopExpression":{"expression":{"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10330:3:13","subExpression":{"id":2057,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"10330:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2059,"nodeType":"ExpressionStatement","src":"10330:3:13"},"nodeType":"ForStatement","src":"10291:105:13"},{"expression":{"id":2072,"name":"prices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"10412:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2036,"id":2073,"nodeType":"Return","src":"10405:13:13"}]},"documentation":{"id":2028,"nodeType":"StructuredDocumentation","src":"9975:116:13","text":"@notice Gets a list of prices from a list of assets addresses\n @param assets The list of assets addresses"},"functionSelector":"9d23d9f2","id":2075,"implemented":true,"kind":"function","modifiers":[],"name":"getAssetsPrices","nodeType":"FunctionDefinition","parameters":{"id":2032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2031,"mutability":"mutable","name":"assets","nodeType":"VariableDeclaration","scope":2075,"src":"10121:25:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2029,"name":"address","nodeType":"ElementaryTypeName","src":"10121:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2030,"nodeType":"ArrayTypeName","src":"10121:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10120:27:13"},"returnParameters":{"id":2036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2035,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2075,"src":"10195:16:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2033,"name":"uint256","nodeType":"ElementaryTypeName","src":"10195:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2034,"nodeType":"ArrayTypeName","src":"10195:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"10194:18:13"},"scope":2088,"src":"10096:329:13","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2086,"nodeType":"Block","src":"10606:48:13","statements":[{"expression":{"arguments":[{"id":2083,"name":"_fallbackOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"10631:15:13","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1043","typeString":"contract IPriceOracleGetter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1043","typeString":"contract IPriceOracleGetter"}],"id":2082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10623:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2081,"name":"address","nodeType":"ElementaryTypeName","src":"10623:7:13","typeDescriptions":{}}},"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10623:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2080,"id":2085,"nodeType":"Return","src":"10616:31:13"}]},"documentation":{"id":2076,"nodeType":"StructuredDocumentation","src":"10431:109:13","text":"@notice Gets the address of the fallback oracle\n @return address The addres of the fallback oracle"},"functionSelector":"6210308c","id":2087,"implemented":true,"kind":"function","modifiers":[],"name":"getFallbackOracle","nodeType":"FunctionDefinition","parameters":{"id":2077,"nodeType":"ParameterList","parameters":[],"src":"10571:2:13"},"returnParameters":{"id":2080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2079,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2087,"src":"10597:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2078,"name":"address","nodeType":"ElementaryTypeName","src":"10597:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10596:9:13"},"scope":2088,"src":"10545:109:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2089,"src":"1362:9294:13"}],"src":"37:10620:13"},"id":13},"contracts/oracles/interfaces/ICurveOracle.sol":{"ast":{"absolutePath":"contracts/oracles/interfaces/ICurveOracle.sol","exportedSymbols":{"ICurveOracle":[2101]},"id":2102,"nodeType":"SourceUnit","nodes":[{"id":2090,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"0:24:14"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2101,"linearizedBaseContracts":[2101],"name":"ICurveOracle","nodeType":"ContractDefinition","nodes":[{"functionSelector":"6dcb6a32","id":2100,"implemented":false,"kind":"function","modifiers":[],"name":"get_price","nodeType":"FunctionDefinition","parameters":{"id":2096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2092,"mutability":"mutable","name":"curve_pool","nodeType":"VariableDeclaration","scope":2100,"src":"74:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2091,"name":"address","nodeType":"ElementaryTypeName","src":"74:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2095,"mutability":"mutable","name":"prices","nodeType":"VariableDeclaration","scope":2100,"src":"94:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2093,"name":"uint256","nodeType":"ElementaryTypeName","src":"94:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2094,"nodeType":"ArrayTypeName","src":"94:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"73:45:14"},"returnParameters":{"id":2099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2098,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2100,"src":"166:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2097,"name":"uint256","nodeType":"ElementaryTypeName","src":"166:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"165:9:14"},"scope":2101,"src":"55:120:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2102,"src":"26:151:14"}],"src":"0:178:14"},"id":14},"contracts/oracles/interfaces/ICurvePoolV1.sol":{"ast":{"absolutePath":"contracts/oracles/interfaces/ICurvePoolV1.sol","exportedSymbols":{"ICurvePool":[2109]},"id":2110,"nodeType":"SourceUnit","nodes":[{"id":2103,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"0:24:15"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2109,"linearizedBaseContracts":[2109],"name":"ICurvePool","nodeType":"ContractDefinition","nodes":[{"functionSelector":"bb7b8b80","id":2108,"implemented":false,"kind":"function","modifiers":[],"name":"get_virtual_price","nodeType":"FunctionDefinition","parameters":{"id":2104,"nodeType":"ParameterList","parameters":[],"src":"79:2:15"},"returnParameters":{"id":2107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2106,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2108,"src":"105:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2105,"name":"uint256","nodeType":"ElementaryTypeName","src":"105:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"104:9:15"},"scope":2109,"src":"53:61:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2110,"src":"26:90:15"}],"src":"0:117:15"},"id":15},"contracts/oracles/interfaces/IERC20.sol":{"ast":{"absolutePath":"contracts/oracles/interfaces/IERC20.sol","exportedSymbols":{"IERC20":[2210]},"id":2211,"nodeType":"SourceUnit","nodes":[{"id":2111,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"0:24:16"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2210,"linearizedBaseContracts":[2210],"name":"IERC20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2112,"nodeType":"StructuredDocumentation","src":"49:66:16","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":2117,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nodeType":"FunctionDefinition","parameters":{"id":2113,"nodeType":"ParameterList","parameters":[],"src":"140:2:16"},"returnParameters":{"id":2116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2115,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2117,"src":"166:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2114,"name":"uint256","nodeType":"ElementaryTypeName","src":"166:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"165:9:16"},"scope":2210,"src":"120:55:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2118,"nodeType":"StructuredDocumentation","src":"181:51:16","text":" @dev Returns the token decimals."},"functionSelector":"313ce567","id":2123,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nodeType":"FunctionDefinition","parameters":{"id":2119,"nodeType":"ParameterList","parameters":[],"src":"254:2:16"},"returnParameters":{"id":2122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2121,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2123,"src":"280:5:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2120,"name":"uint8","nodeType":"ElementaryTypeName","src":"280:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"279:7:16"},"scope":2210,"src":"237:50:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2124,"nodeType":"StructuredDocumentation","src":"293:49:16","text":" @dev Returns the token symbol."},"functionSelector":"95d89b41","id":2129,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nodeType":"FunctionDefinition","parameters":{"id":2125,"nodeType":"ParameterList","parameters":[],"src":"362:2:16"},"returnParameters":{"id":2128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2127,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2129,"src":"388:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2126,"name":"string","nodeType":"ElementaryTypeName","src":"388:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"387:15:16"},"scope":2210,"src":"347:56:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2130,"nodeType":"StructuredDocumentation","src":"409:47:16","text":" @dev Returns the token name."},"functionSelector":"06fdde03","id":2135,"implemented":false,"kind":"function","modifiers":[],"name":"name","nodeType":"FunctionDefinition","parameters":{"id":2131,"nodeType":"ParameterList","parameters":[],"src":"474:2:16"},"returnParameters":{"id":2134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2133,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2135,"src":"500:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2132,"name":"string","nodeType":"ElementaryTypeName","src":"500:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"499:15:16"},"scope":2210,"src":"461:54:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2136,"nodeType":"StructuredDocumentation","src":"521:52:16","text":" @dev Returns the bep token owner."},"functionSelector":"893d20e8","id":2141,"implemented":false,"kind":"function","modifiers":[],"name":"getOwner","nodeType":"FunctionDefinition","parameters":{"id":2137,"nodeType":"ParameterList","parameters":[],"src":"595:2:16"},"returnParameters":{"id":2140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2139,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2141,"src":"621:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2138,"name":"address","nodeType":"ElementaryTypeName","src":"621:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"620:9:16"},"scope":2210,"src":"578:52:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2142,"nodeType":"StructuredDocumentation","src":"636:72:16","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":2149,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nodeType":"FunctionDefinition","parameters":{"id":2145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2144,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":2149,"src":"732:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2143,"name":"address","nodeType":"ElementaryTypeName","src":"732:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"731:17:16"},"returnParameters":{"id":2148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2147,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2149,"src":"772:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2146,"name":"uint256","nodeType":"ElementaryTypeName","src":"772:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"771:9:16"},"scope":2210,"src":"713:68:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2150,"nodeType":"StructuredDocumentation","src":"787:209:16","text":" @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":2159,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","parameters":{"id":2155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2152,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":2159,"src":"1019:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2151,"name":"address","nodeType":"ElementaryTypeName","src":"1019:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2154,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":2159,"src":"1038:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2153,"name":"uint256","nodeType":"ElementaryTypeName","src":"1038:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1018:35:16"},"returnParameters":{"id":2158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2157,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2159,"src":"1088:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2156,"name":"bool","nodeType":"ElementaryTypeName","src":"1088:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1087:6:16"},"scope":2210,"src":"1001:93:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2160,"nodeType":"StructuredDocumentation","src":"1100:264:16","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":2169,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","parameters":{"id":2165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2162,"mutability":"mutable","name":"_owner","nodeType":"VariableDeclaration","scope":2169,"src":"1388:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2161,"name":"address","nodeType":"ElementaryTypeName","src":"1388:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2164,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":2169,"src":"1404:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2163,"name":"address","nodeType":"ElementaryTypeName","src":"1404:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1387:33:16"},"returnParameters":{"id":2168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2167,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2169,"src":"1468:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2166,"name":"uint256","nodeType":"ElementaryTypeName","src":"1468:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1467:9:16"},"scope":2210,"src":"1369:108:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2170,"nodeType":"StructuredDocumentation","src":"1483:642:16","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2179,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":2175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2172,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":2179,"src":"2147:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2171,"name":"address","nodeType":"ElementaryTypeName","src":"2147:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2174,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":2179,"src":"2164:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2173,"name":"uint256","nodeType":"ElementaryTypeName","src":"2164:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2146:33:16"},"returnParameters":{"id":2178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2177,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2179,"src":"2198:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2176,"name":"bool","nodeType":"ElementaryTypeName","src":"2198:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2197:6:16"},"scope":2210,"src":"2130:74:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2180,"nodeType":"StructuredDocumentation","src":"2210:296:16","text":" @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2191,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":2187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2182,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":2191,"src":"2542:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2181,"name":"address","nodeType":"ElementaryTypeName","src":"2542:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2184,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":2191,"src":"2566:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2183,"name":"address","nodeType":"ElementaryTypeName","src":"2566:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2186,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":2191,"src":"2593:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2185,"name":"uint256","nodeType":"ElementaryTypeName","src":"2593:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2532:81:16"},"returnParameters":{"id":2190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2189,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2191,"src":"2632:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2188,"name":"bool","nodeType":"ElementaryTypeName","src":"2632:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2631:6:16"},"scope":2210,"src":"2511:127:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":2192,"nodeType":"StructuredDocumentation","src":"2644:158:16","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":2200,"name":"Transfer","nodeType":"EventDefinition","parameters":{"id":2199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2194,"indexed":true,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":2200,"src":"2822:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2193,"name":"address","nodeType":"ElementaryTypeName","src":"2822:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2196,"indexed":true,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":2200,"src":"2844:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2195,"name":"address","nodeType":"ElementaryTypeName","src":"2844:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2198,"indexed":false,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":2200,"src":"2864:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2197,"name":"uint256","nodeType":"ElementaryTypeName","src":"2864:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2821:57:16"},"src":"2807:72:16"},{"anonymous":false,"documentation":{"id":2201,"nodeType":"StructuredDocumentation","src":"2885:148:16","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":2209,"name":"Approval","nodeType":"EventDefinition","parameters":{"id":2208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2203,"indexed":true,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":2209,"src":"3062:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2202,"name":"address","nodeType":"ElementaryTypeName","src":"3062:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2205,"indexed":true,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":2209,"src":"3093:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2204,"name":"address","nodeType":"ElementaryTypeName","src":"3093:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2207,"indexed":false,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":2209,"src":"3126:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2206,"name":"uint256","nodeType":"ElementaryTypeName","src":"3126:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3052:93:16"},"src":"3038:108:16"}],"scope":2211,"src":"26:3122:16"}],"src":"0:3149:16"},"id":16},"contracts/oracles/libs/FixedPointMathLib.sol":{"ast":{"absolutePath":"contracts/oracles/libs/FixedPointMathLib.sol","exportedSymbols":{"FixedPointMathLib":[2329]},"id":2330,"license":"AGPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":2212,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"42:24:17"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2213,"nodeType":"StructuredDocumentation","src":"68:270:17","text":"@notice Arithmetic library with operations for fixed-point numbers.\n @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/utils/FixedPointMathLib.sol)\n @author Inspired by USM (https://github.com/usmfum/USM/blob/master/contracts/WadMath.sol)"},"fullyImplemented":true,"id":2329,"linearizedBaseContracts":[2329],"name":"FixedPointMathLib","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2216,"mutability":"constant","name":"WAD","nodeType":"VariableDeclaration","scope":2329,"src":"563:36:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2214,"name":"uint256","nodeType":"ElementaryTypeName","src":"563:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653138","id":2215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"595:4:17","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"visibility":"internal"},{"body":{"id":2231,"nodeType":"Block","src":"718:90:17","statements":[{"expression":{"arguments":[{"id":2226,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"746:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2227,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2220,"src":"749:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2228,"name":"WAD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"752:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2225,"name":"mulDivDown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2293,"src":"735:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"735:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2224,"id":2230,"nodeType":"Return","src":"728:28:17"}]},"id":2232,"implemented":true,"kind":"function","modifiers":[],"name":"mulWadDown","nodeType":"FunctionDefinition","parameters":{"id":2221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2218,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":2232,"src":"664:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2217,"name":"uint256","nodeType":"ElementaryTypeName","src":"664:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2220,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":2232,"src":"675:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2219,"name":"uint256","nodeType":"ElementaryTypeName","src":"675:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"663:22:17"},"returnParameters":{"id":2224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2223,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2232,"src":"709:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2222,"name":"uint256","nodeType":"ElementaryTypeName","src":"709:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"708:9:17"},"scope":2329,"src":"644:164:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2247,"nodeType":"Block","src":"886:86:17","statements":[{"expression":{"arguments":[{"id":2242,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"912:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2243,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"915:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2244,"name":"WAD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"918:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2241,"name":"mulDivUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"903:8:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"903:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2240,"id":2246,"nodeType":"Return","src":"896:26:17"}]},"id":2248,"implemented":true,"kind":"function","modifiers":[],"name":"mulWadUp","nodeType":"FunctionDefinition","parameters":{"id":2237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2234,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":2248,"src":"832:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2233,"name":"uint256","nodeType":"ElementaryTypeName","src":"832:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2236,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":2248,"src":"843:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2235,"name":"uint256","nodeType":"ElementaryTypeName","src":"843:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"831:22:17"},"returnParameters":{"id":2240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2239,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2248,"src":"877:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2238,"name":"uint256","nodeType":"ElementaryTypeName","src":"877:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"876:9:17"},"scope":2329,"src":"814:158:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2263,"nodeType":"Block","src":"1052:90:17","statements":[{"expression":{"arguments":[{"id":2258,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"1080:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2259,"name":"WAD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"1083:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2260,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"1088:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2257,"name":"mulDivDown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2293,"src":"1069:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1069:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2256,"id":2262,"nodeType":"Return","src":"1062:28:17"}]},"id":2264,"implemented":true,"kind":"function","modifiers":[],"name":"divWadDown","nodeType":"FunctionDefinition","parameters":{"id":2253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2250,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":2264,"src":"998:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2249,"name":"uint256","nodeType":"ElementaryTypeName","src":"998:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2252,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":2264,"src":"1009:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2251,"name":"uint256","nodeType":"ElementaryTypeName","src":"1009:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:22:17"},"returnParameters":{"id":2256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2255,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2264,"src":"1043:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2254,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:9:17"},"scope":2329,"src":"978:164:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2279,"nodeType":"Block","src":"1220:86:17","statements":[{"expression":{"arguments":[{"id":2274,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"1246:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2275,"name":"WAD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"1249:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2276,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"1254:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2273,"name":"mulDivUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"1237:8:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1237:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2272,"id":2278,"nodeType":"Return","src":"1230:26:17"}]},"id":2280,"implemented":true,"kind":"function","modifiers":[],"name":"divWadUp","nodeType":"FunctionDefinition","parameters":{"id":2269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2266,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":2280,"src":"1166:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2265,"name":"uint256","nodeType":"ElementaryTypeName","src":"1166:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2268,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":2280,"src":"1177:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2267,"name":"uint256","nodeType":"ElementaryTypeName","src":"1177:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1165:22:17"},"returnParameters":{"id":2272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2271,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2280,"src":"1211:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2270,"name":"uint256","nodeType":"ElementaryTypeName","src":"1211:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:9:17"},"scope":2329,"src":"1148:158:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2292,"nodeType":"Block","src":"1631:496:17","statements":[{"AST":{"nodeType":"YulBlock","src":"1650:471:17","statements":[{"nodeType":"YulAssignment","src":"1705:14:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"1714:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"1717:1:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1710:3:17"},"nodeType":"YulFunctionCall","src":"1710:9:17"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"1705:1:17"}]},{"body":{"nodeType":"YulBlock","src":"1985:44:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2010:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2013:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2003:6:17"},"nodeType":"YulFunctionCall","src":"2003:12:17"},"nodeType":"YulExpressionStatement","src":"2003:12:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"1886:11:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1879:6:17"},"nodeType":"YulFunctionCall","src":"1879:19:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1872:6:17"},"nodeType":"YulFunctionCall","src":"1872:27:17"},{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"1931:1:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1924:6:17"},"nodeType":"YulFunctionCall","src":"1924:9:17"},{"arguments":[{"arguments":[{"name":"z","nodeType":"YulIdentifier","src":"1942:1:17"},{"name":"x","nodeType":"YulIdentifier","src":"1945:1:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1938:3:17"},"nodeType":"YulFunctionCall","src":"1938:9:17"},{"name":"y","nodeType":"YulIdentifier","src":"1949:1:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1935:2:17"},"nodeType":"YulFunctionCall","src":"1935:16:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1921:2:17"},"nodeType":"YulFunctionCall","src":"1921:31:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1847:3:17"},"nodeType":"YulFunctionCall","src":"1847:123:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1823:6:17"},"nodeType":"YulFunctionCall","src":"1823:161:17"},"nodeType":"YulIf","src":"1820:2:17"},{"nodeType":"YulAssignment","src":"2087:24:17","value":{"arguments":[{"name":"z","nodeType":"YulIdentifier","src":"2096:1:17"},{"name":"denominator","nodeType":"YulIdentifier","src":"2099:11:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2092:3:17"},"nodeType":"YulFunctionCall","src":"2092:19:17"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"2087:1:17"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":2286,"isOffset":false,"isSlot":false,"src":"1886:11:17","valueSize":1},{"declaration":2286,"isOffset":false,"isSlot":false,"src":"2099:11:17","valueSize":1},{"declaration":2282,"isOffset":false,"isSlot":false,"src":"1714:1:17","valueSize":1},{"declaration":2282,"isOffset":false,"isSlot":false,"src":"1931:1:17","valueSize":1},{"declaration":2282,"isOffset":false,"isSlot":false,"src":"1945:1:17","valueSize":1},{"declaration":2284,"isOffset":false,"isSlot":false,"src":"1717:1:17","valueSize":1},{"declaration":2284,"isOffset":false,"isSlot":false,"src":"1949:1:17","valueSize":1},{"declaration":2289,"isOffset":false,"isSlot":false,"src":"1705:1:17","valueSize":1},{"declaration":2289,"isOffset":false,"isSlot":false,"src":"1942:1:17","valueSize":1},{"declaration":2289,"isOffset":false,"isSlot":false,"src":"2087:1:17","valueSize":1},{"declaration":2289,"isOffset":false,"isSlot":false,"src":"2096:1:17","valueSize":1}],"id":2291,"nodeType":"InlineAssembly","src":"1641:480:17"}]},"id":2293,"implemented":true,"kind":"function","modifiers":[],"name":"mulDivDown","nodeType":"FunctionDefinition","parameters":{"id":2287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2282,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":2293,"src":"1533:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2281,"name":"uint256","nodeType":"ElementaryTypeName","src":"1533:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2284,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":2293,"src":"1552:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2283,"name":"uint256","nodeType":"ElementaryTypeName","src":"1552:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2286,"mutability":"mutable","name":"denominator","nodeType":"VariableDeclaration","scope":2293,"src":"1571:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2285,"name":"uint256","nodeType":"ElementaryTypeName","src":"1571:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1523:73:17"},"returnParameters":{"id":2290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2289,"mutability":"mutable","name":"z","nodeType":"VariableDeclaration","scope":2293,"src":"1620:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2288,"name":"uint256","nodeType":"ElementaryTypeName","src":"1620:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1619:11:17"},"scope":2329,"src":"1504:623:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2305,"nodeType":"Block","src":"2258:715:17","statements":[{"AST":{"nodeType":"YulBlock","src":"2277:690:17","statements":[{"nodeType":"YulAssignment","src":"2332:14:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2341:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"2344:1:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2337:3:17"},"nodeType":"YulFunctionCall","src":"2337:9:17"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"2332:1:17"}]},{"body":{"nodeType":"YulBlock","src":"2612:44:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2637:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2640:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2630:6:17"},"nodeType":"YulFunctionCall","src":"2630:12:17"},"nodeType":"YulExpressionStatement","src":"2630:12:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"2513:11:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2506:6:17"},"nodeType":"YulFunctionCall","src":"2506:19:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2499:6:17"},"nodeType":"YulFunctionCall","src":"2499:27:17"},{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2558:1:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2551:6:17"},"nodeType":"YulFunctionCall","src":"2551:9:17"},{"arguments":[{"arguments":[{"name":"z","nodeType":"YulIdentifier","src":"2569:1:17"},{"name":"x","nodeType":"YulIdentifier","src":"2572:1:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2565:3:17"},"nodeType":"YulFunctionCall","src":"2565:9:17"},{"name":"y","nodeType":"YulIdentifier","src":"2576:1:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2562:2:17"},"nodeType":"YulFunctionCall","src":"2562:16:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2548:2:17"},"nodeType":"YulFunctionCall","src":"2548:31:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2474:3:17"},"nodeType":"YulFunctionCall","src":"2474:123:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2450:6:17"},"nodeType":"YulFunctionCall","src":"2450:161:17"},"nodeType":"YulIf","src":"2447:2:17"},{"nodeType":"YulAssignment","src":"2893:64:17","value":{"arguments":[{"arguments":[{"arguments":[{"name":"z","nodeType":"YulIdentifier","src":"2916:1:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2909:6:17"},"nodeType":"YulFunctionCall","src":"2909:9:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2902:6:17"},"nodeType":"YulFunctionCall","src":"2902:17:17"},{"arguments":[{"arguments":[{"arguments":[{"name":"z","nodeType":"YulIdentifier","src":"2933:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"2936:1:17","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2929:3:17"},"nodeType":"YulFunctionCall","src":"2929:9:17"},{"name":"denominator","nodeType":"YulIdentifier","src":"2940:11:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2925:3:17"},"nodeType":"YulFunctionCall","src":"2925:27:17"},{"kind":"number","nodeType":"YulLiteral","src":"2954:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2921:3:17"},"nodeType":"YulFunctionCall","src":"2921:35:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2898:3:17"},"nodeType":"YulFunctionCall","src":"2898:59:17"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"2893:1:17"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":2299,"isOffset":false,"isSlot":false,"src":"2513:11:17","valueSize":1},{"declaration":2299,"isOffset":false,"isSlot":false,"src":"2940:11:17","valueSize":1},{"declaration":2295,"isOffset":false,"isSlot":false,"src":"2341:1:17","valueSize":1},{"declaration":2295,"isOffset":false,"isSlot":false,"src":"2558:1:17","valueSize":1},{"declaration":2295,"isOffset":false,"isSlot":false,"src":"2572:1:17","valueSize":1},{"declaration":2297,"isOffset":false,"isSlot":false,"src":"2344:1:17","valueSize":1},{"declaration":2297,"isOffset":false,"isSlot":false,"src":"2576:1:17","valueSize":1},{"declaration":2302,"isOffset":false,"isSlot":false,"src":"2332:1:17","valueSize":1},{"declaration":2302,"isOffset":false,"isSlot":false,"src":"2569:1:17","valueSize":1},{"declaration":2302,"isOffset":false,"isSlot":false,"src":"2893:1:17","valueSize":1},{"declaration":2302,"isOffset":false,"isSlot":false,"src":"2916:1:17","valueSize":1},{"declaration":2302,"isOffset":false,"isSlot":false,"src":"2933:1:17","valueSize":1}],"id":2304,"nodeType":"InlineAssembly","src":"2268:699:17"}]},"id":2306,"implemented":true,"kind":"function","modifiers":[],"name":"mulDivUp","nodeType":"FunctionDefinition","parameters":{"id":2300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2295,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":2306,"src":"2160:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2294,"name":"uint256","nodeType":"ElementaryTypeName","src":"2160:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2297,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":2306,"src":"2179:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2296,"name":"uint256","nodeType":"ElementaryTypeName","src":"2179:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2299,"mutability":"mutable","name":"denominator","nodeType":"VariableDeclaration","scope":2306,"src":"2198:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2298,"name":"uint256","nodeType":"ElementaryTypeName","src":"2198:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2150:73:17"},"returnParameters":{"id":2303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2302,"mutability":"mutable","name":"z","nodeType":"VariableDeclaration","scope":2306,"src":"2247:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2301,"name":"uint256","nodeType":"ElementaryTypeName","src":"2247:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2246:11:17"},"scope":2329,"src":"2133:840:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2318,"nodeType":"Block","src":"3095:2619:17","statements":[{"AST":{"nodeType":"YulBlock","src":"3114:2594:17","statements":[{"cases":[{"body":{"nodeType":"YulBlock","src":"3156:254:17","statements":[{"cases":[{"body":{"nodeType":"YulBlock","src":"3206:85:17","statements":[{"nodeType":"YulAssignment","src":"3262:11:17","value":{"name":"scalar","nodeType":"YulIdentifier","src":"3267:6:17"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"3262:1:17"}]}]},"nodeType":"YulCase","src":"3199:92:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3204:1:17","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"3316:80:17","statements":[{"nodeType":"YulAssignment","src":"3372:6:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3377:1:17","type":"","value":"0"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"3372:1:17"}]}]},"nodeType":"YulCase","src":"3308:88:17","value":"default"}],"expression":{"name":"n","nodeType":"YulIdentifier","src":"3181:1:17"},"nodeType":"YulSwitch","src":"3174:222:17"}]},"nodeType":"YulCase","src":"3149:261:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3154:1:17","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"3431:2267:17","statements":[{"cases":[{"body":{"nodeType":"YulBlock","src":"3489:115:17","statements":[{"nodeType":"YulAssignment","src":"3575:11:17","value":{"name":"scalar","nodeType":"YulIdentifier","src":"3580:6:17"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"3575:1:17"}]}]},"nodeType":"YulCase","src":"3482:122:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3487:1:17","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"3629:104:17","statements":[{"nodeType":"YulAssignment","src":"3709:6:17","value":{"name":"x","nodeType":"YulIdentifier","src":"3714:1:17"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"3709:1:17"}]}]},"nodeType":"YulCase","src":"3621:112:17","value":"default"}],"expression":{"arguments":[{"name":"n","nodeType":"YulIdentifier","src":"3460:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"3463:1:17","type":"","value":"2"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"3456:3:17"},"nodeType":"YulFunctionCall","src":"3456:9:17"},"nodeType":"YulSwitch","src":"3449:284:17"},{"nodeType":"YulVariableDeclaration","src":"3813:26:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3829:1:17","type":"","value":"1"},{"name":"scalar","nodeType":"YulIdentifier","src":"3832:6:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3825:3:17"},"nodeType":"YulFunctionCall","src":"3825:14:17"},"variables":[{"name":"half","nodeType":"YulTypedName","src":"3817:4:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"4113:1571:17","statements":[{"body":{"nodeType":"YulBlock","src":"4287:60:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4320:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4323:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4313:6:17"},"nodeType":"YulFunctionCall","src":"4313:12:17"},"nodeType":"YulExpressionStatement","src":"4313:12:17"}]},"condition":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4279:3:17","type":"","value":"128"},{"name":"x","nodeType":"YulIdentifier","src":"4284:1:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4275:3:17"},"nodeType":"YulFunctionCall","src":"4275:11:17"},"nodeType":"YulIf","src":"4272:2:17"},{"nodeType":"YulVariableDeclaration","src":"4409:19:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4423:1:17"},{"name":"x","nodeType":"YulIdentifier","src":"4426:1:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4419:3:17"},"nodeType":"YulFunctionCall","src":"4419:9:17"},"variables":[{"name":"xx","nodeType":"YulTypedName","src":"4413:2:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4502:28:17","value":{"arguments":[{"name":"xx","nodeType":"YulIdentifier","src":"4521:2:17"},{"name":"half","nodeType":"YulIdentifier","src":"4525:4:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4517:3:17"},"nodeType":"YulFunctionCall","src":"4517:13:17"},"variables":[{"name":"xxRound","nodeType":"YulTypedName","src":"4506:7:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"4626:60:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4659:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4662:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4652:6:17"},"nodeType":"YulFunctionCall","src":"4652:12:17"},"nodeType":"YulExpressionStatement","src":"4652:12:17"}]},"condition":{"arguments":[{"name":"xxRound","nodeType":"YulIdentifier","src":"4613:7:17"},{"name":"xx","nodeType":"YulIdentifier","src":"4622:2:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4610:2:17"},"nodeType":"YulFunctionCall","src":"4610:15:17"},"nodeType":"YulIf","src":"4607:2:17"},{"nodeType":"YulAssignment","src":"4756:25:17","value":{"arguments":[{"name":"xxRound","nodeType":"YulIdentifier","src":"4765:7:17"},{"name":"scalar","nodeType":"YulIdentifier","src":"4774:6:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4761:3:17"},"nodeType":"YulFunctionCall","src":"4761:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"4756:1:17"}]},{"body":{"nodeType":"YulBlock","src":"4853:813:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4921:19:17","value":{"arguments":[{"name":"z","nodeType":"YulIdentifier","src":"4935:1:17"},{"name":"x","nodeType":"YulIdentifier","src":"4938:1:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4931:3:17"},"nodeType":"YulFunctionCall","src":"4931:9:17"},"variables":[{"name":"zx","nodeType":"YulTypedName","src":"4925:2:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"5043:209:17","statements":[{"body":{"nodeType":"YulBlock","src":"5150:76:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5191:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5194:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5184:6:17"},"nodeType":"YulFunctionCall","src":"5184:12:17"},"nodeType":"YulExpressionStatement","src":"5184:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5146:1:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5139:6:17"},"nodeType":"YulFunctionCall","src":"5139:9:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5132:6:17"},"nodeType":"YulFunctionCall","src":"5132:17:17"},"nodeType":"YulIf","src":"5129:2:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"zx","nodeType":"YulIdentifier","src":"5031:2:17"},{"name":"x","nodeType":"YulIdentifier","src":"5035:1:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5027:3:17"},"nodeType":"YulFunctionCall","src":"5027:10:17"},{"name":"z","nodeType":"YulIdentifier","src":"5039:1:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5024:2:17"},"nodeType":"YulFunctionCall","src":"5024:17:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5017:6:17"},"nodeType":"YulFunctionCall","src":"5017:25:17"},"nodeType":"YulIf","src":"5014:2:17"},{"nodeType":"YulVariableDeclaration","src":"5334:28:17","value":{"arguments":[{"name":"zx","nodeType":"YulIdentifier","src":"5353:2:17"},{"name":"half","nodeType":"YulIdentifier","src":"5357:4:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5349:3:17"},"nodeType":"YulFunctionCall","src":"5349:13:17"},"variables":[{"name":"zxRound","nodeType":"YulTypedName","src":"5338:7:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"5466:68:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5503:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5506:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5496:6:17"},"nodeType":"YulFunctionCall","src":"5496:12:17"},"nodeType":"YulExpressionStatement","src":"5496:12:17"}]},"condition":{"arguments":[{"name":"zxRound","nodeType":"YulIdentifier","src":"5453:7:17"},{"name":"zx","nodeType":"YulIdentifier","src":"5462:2:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5450:2:17"},"nodeType":"YulFunctionCall","src":"5450:15:17"},"nodeType":"YulIf","src":"5447:2:17"},{"nodeType":"YulAssignment","src":"5619:25:17","value":{"arguments":[{"name":"zxRound","nodeType":"YulIdentifier","src":"5628:7:17"},{"name":"scalar","nodeType":"YulIdentifier","src":"5637:6:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5624:3:17"},"nodeType":"YulFunctionCall","src":"5624:20:17"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"5619:1:17"}]}]},"condition":{"arguments":[{"name":"n","nodeType":"YulIdentifier","src":"4847:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"4850:1:17","type":"","value":"2"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"4843:3:17"},"nodeType":"YulFunctionCall","src":"4843:9:17"},"nodeType":"YulIf","src":"4840:2:17"}]},"condition":{"name":"n","nodeType":"YulIdentifier","src":"3986:1:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3988:124:17","statements":[{"nodeType":"YulAssignment","src":"4080:14:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4089:1:17","type":"","value":"1"},{"name":"n","nodeType":"YulIdentifier","src":"4092:1:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4085:3:17"},"nodeType":"YulFunctionCall","src":"4085:9:17"},"variableNames":[{"name":"n","nodeType":"YulIdentifier","src":"4080:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"3861:124:17","statements":[{"nodeType":"YulAssignment","src":"3953:14:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3962:1:17","type":"","value":"1"},{"name":"n","nodeType":"YulIdentifier","src":"3965:1:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3958:3:17"},"nodeType":"YulFunctionCall","src":"3958:9:17"},"variableNames":[{"name":"n","nodeType":"YulIdentifier","src":"3953:1:17"}]}]},"src":"3857:1827:17"}]},"nodeType":"YulCase","src":"3423:2275:17","value":"default"}],"expression":{"name":"x","nodeType":"YulIdentifier","src":"3135:1:17"},"nodeType":"YulSwitch","src":"3128:2570:17"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":2310,"isOffset":false,"isSlot":false,"src":"3181:1:17","valueSize":1},{"declaration":2310,"isOffset":false,"isSlot":false,"src":"3460:1:17","valueSize":1},{"declaration":2310,"isOffset":false,"isSlot":false,"src":"3953:1:17","valueSize":1},{"declaration":2310,"isOffset":false,"isSlot":false,"src":"3965:1:17","valueSize":1},{"declaration":2310,"isOffset":false,"isSlot":false,"src":"3986:1:17","valueSize":1},{"declaration":2310,"isOffset":false,"isSlot":false,"src":"4080:1:17","valueSize":1},{"declaration":2310,"isOffset":false,"isSlot":false,"src":"4092:1:17","valueSize":1},{"declaration":2310,"isOffset":false,"isSlot":false,"src":"4847:1:17","valueSize":1},{"declaration":2312,"isOffset":false,"isSlot":false,"src":"3267:6:17","valueSize":1},{"declaration":2312,"isOffset":false,"isSlot":false,"src":"3580:6:17","valueSize":1},{"declaration":2312,"isOffset":false,"isSlot":false,"src":"3832:6:17","valueSize":1},{"declaration":2312,"isOffset":false,"isSlot":false,"src":"4774:6:17","valueSize":1},{"declaration":2312,"isOffset":false,"isSlot":false,"src":"5637:6:17","valueSize":1},{"declaration":2308,"isOffset":false,"isSlot":false,"src":"3135:1:17","valueSize":1},{"declaration":2308,"isOffset":false,"isSlot":false,"src":"3714:1:17","valueSize":1},{"declaration":2308,"isOffset":false,"isSlot":false,"src":"4284:1:17","valueSize":1},{"declaration":2308,"isOffset":false,"isSlot":false,"src":"4423:1:17","valueSize":1},{"declaration":2308,"isOffset":false,"isSlot":false,"src":"4426:1:17","valueSize":1},{"declaration":2308,"isOffset":false,"isSlot":false,"src":"4756:1:17","valueSize":1},{"declaration":2308,"isOffset":false,"isSlot":false,"src":"4938:1:17","valueSize":1},{"declaration":2308,"isOffset":false,"isSlot":false,"src":"5035:1:17","valueSize":1},{"declaration":2308,"isOffset":false,"isSlot":false,"src":"5146:1:17","valueSize":1},{"declaration":2315,"isOffset":false,"isSlot":false,"src":"3262:1:17","valueSize":1},{"declaration":2315,"isOffset":false,"isSlot":false,"src":"3372:1:17","valueSize":1},{"declaration":2315,"isOffset":false,"isSlot":false,"src":"3575:1:17","valueSize":1},{"declaration":2315,"isOffset":false,"isSlot":false,"src":"3709:1:17","valueSize":1},{"declaration":2315,"isOffset":false,"isSlot":false,"src":"4935:1:17","valueSize":1},{"declaration":2315,"isOffset":false,"isSlot":false,"src":"5039:1:17","valueSize":1},{"declaration":2315,"isOffset":false,"isSlot":false,"src":"5619:1:17","valueSize":1}],"id":2317,"nodeType":"InlineAssembly","src":"3105:2603:17"}]},"id":2319,"implemented":true,"kind":"function","modifiers":[],"name":"rpow","nodeType":"FunctionDefinition","parameters":{"id":2313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2308,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":2319,"src":"3002:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2307,"name":"uint256","nodeType":"ElementaryTypeName","src":"3002:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2310,"mutability":"mutable","name":"n","nodeType":"VariableDeclaration","scope":2319,"src":"3021:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2309,"name":"uint256","nodeType":"ElementaryTypeName","src":"3021:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2312,"mutability":"mutable","name":"scalar","nodeType":"VariableDeclaration","scope":2319,"src":"3040:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2311,"name":"uint256","nodeType":"ElementaryTypeName","src":"3040:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2992:68:17"},"returnParameters":{"id":2316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2315,"mutability":"mutable","name":"z","nodeType":"VariableDeclaration","scope":2319,"src":"3084:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2314,"name":"uint256","nodeType":"ElementaryTypeName","src":"3084:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3083:11:17"},"scope":2329,"src":"2979:2735:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2327,"nodeType":"Block","src":"5967:2057:17","statements":[{"AST":{"nodeType":"YulBlock","src":"5986:2032:17","statements":[{"nodeType":"YulAssignment","src":"6038:6:17","value":{"kind":"number","nodeType":"YulLiteral","src":"6043:1:17","type":"","value":"1"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"6038:1:17"}]},{"nodeType":"YulVariableDeclaration","src":"6118:10:17","value":{"name":"x","nodeType":"YulIdentifier","src":"6127:1:17"},"variables":[{"name":"y","nodeType":"YulTypedName","src":"6122:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"6264:142:17","statements":[{"nodeType":"YulAssignment","src":"6282:16:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6291:3:17","type":"","value":"128"},{"name":"y","nodeType":"YulIdentifier","src":"6296:1:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6287:3:17"},"nodeType":"YulFunctionCall","src":"6287:11:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6282:1:17"}]},{"nodeType":"YulAssignment","src":"6345:15:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6354:2:17","type":"","value":"64"},{"name":"z","nodeType":"YulIdentifier","src":"6358:1:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6350:3:17"},"nodeType":"YulFunctionCall","src":"6350:10:17"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"6345:1:17"}]}]},"condition":{"arguments":[{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6223:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"6226:35:17","type":"","value":"0x100000000000000000000000000000000"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6220:2:17"},"nodeType":"YulFunctionCall","src":"6220:42:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6213:6:17"},"nodeType":"YulFunctionCall","src":"6213:50:17"},"nodeType":"YulIf","src":"6210:2:17"},{"body":{"nodeType":"YulBlock","src":"6457:140:17","statements":[{"nodeType":"YulAssignment","src":"6475:15:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6484:2:17","type":"","value":"64"},{"name":"y","nodeType":"YulIdentifier","src":"6488:1:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6480:3:17"},"nodeType":"YulFunctionCall","src":"6480:10:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6475:1:17"}]},{"nodeType":"YulAssignment","src":"6536:15:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6545:2:17","type":"","value":"32"},{"name":"z","nodeType":"YulIdentifier","src":"6549:1:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6541:3:17"},"nodeType":"YulFunctionCall","src":"6541:10:17"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"6536:1:17"}]}]},"condition":{"arguments":[{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6432:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"6435:19:17","type":"","value":"0x10000000000000000"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6429:2:17"},"nodeType":"YulFunctionCall","src":"6429:26:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6422:6:17"},"nodeType":"YulFunctionCall","src":"6422:34:17"},"nodeType":"YulIf","src":"6419:2:17"},{"body":{"nodeType":"YulBlock","src":"6640:140:17","statements":[{"nodeType":"YulAssignment","src":"6658:15:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6667:2:17","type":"","value":"32"},{"name":"y","nodeType":"YulIdentifier","src":"6671:1:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6663:3:17"},"nodeType":"YulFunctionCall","src":"6663:10:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6658:1:17"}]},{"nodeType":"YulAssignment","src":"6719:15:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6728:2:17","type":"","value":"16"},{"name":"z","nodeType":"YulIdentifier","src":"6732:1:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6724:3:17"},"nodeType":"YulFunctionCall","src":"6724:10:17"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"6719:1:17"}]}]},"condition":{"arguments":[{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6623:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"6626:11:17","type":"","value":"0x100000000"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6620:2:17"},"nodeType":"YulFunctionCall","src":"6620:18:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6613:6:17"},"nodeType":"YulFunctionCall","src":"6613:26:17"},"nodeType":"YulIf","src":"6610:2:17"},{"body":{"nodeType":"YulBlock","src":"6819:138:17","statements":[{"nodeType":"YulAssignment","src":"6837:15:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6846:2:17","type":"","value":"16"},{"name":"y","nodeType":"YulIdentifier","src":"6850:1:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6842:3:17"},"nodeType":"YulFunctionCall","src":"6842:10:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6837:1:17"}]},{"nodeType":"YulAssignment","src":"6898:14:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6907:1:17","type":"","value":"8"},{"name":"z","nodeType":"YulIdentifier","src":"6910:1:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6903:3:17"},"nodeType":"YulFunctionCall","src":"6903:9:17"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"6898:1:17"}]}]},"condition":{"arguments":[{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6806:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"6809:7:17","type":"","value":"0x10000"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6803:2:17"},"nodeType":"YulFunctionCall","src":"6803:14:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6796:6:17"},"nodeType":"YulFunctionCall","src":"6796:22:17"},"nodeType":"YulIf","src":"6793:2:17"},{"body":{"nodeType":"YulBlock","src":"6994:136:17","statements":[{"nodeType":"YulAssignment","src":"7012:14:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7021:1:17","type":"","value":"8"},{"name":"y","nodeType":"YulIdentifier","src":"7024:1:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7017:3:17"},"nodeType":"YulFunctionCall","src":"7017:9:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"7012:1:17"}]},{"nodeType":"YulAssignment","src":"7071:14:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7080:1:17","type":"","value":"4"},{"name":"z","nodeType":"YulIdentifier","src":"7083:1:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7076:3:17"},"nodeType":"YulFunctionCall","src":"7076:9:17"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"7071:1:17"}]}]},"condition":{"arguments":[{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6983:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"6986:5:17","type":"","value":"0x100"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6980:2:17"},"nodeType":"YulFunctionCall","src":"6980:12:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6973:6:17"},"nodeType":"YulFunctionCall","src":"6973:20:17"},"nodeType":"YulIf","src":"6970:2:17"},{"body":{"nodeType":"YulBlock","src":"7166:136:17","statements":[{"nodeType":"YulAssignment","src":"7184:14:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7193:1:17","type":"","value":"4"},{"name":"y","nodeType":"YulIdentifier","src":"7196:1:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7189:3:17"},"nodeType":"YulFunctionCall","src":"7189:9:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"7184:1:17"}]},{"nodeType":"YulAssignment","src":"7243:14:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7252:1:17","type":"","value":"2"},{"name":"z","nodeType":"YulIdentifier","src":"7255:1:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7248:3:17"},"nodeType":"YulFunctionCall","src":"7248:9:17"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"7243:1:17"}]}]},"condition":{"arguments":[{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7156:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"7159:4:17","type":"","value":"0x10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7153:2:17"},"nodeType":"YulFunctionCall","src":"7153:11:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7146:6:17"},"nodeType":"YulFunctionCall","src":"7146:19:17"},"nodeType":"YulIf","src":"7143:2:17"},{"body":{"nodeType":"YulBlock","src":"7337:87:17","statements":[{"nodeType":"YulAssignment","src":"7396:14:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7405:1:17","type":"","value":"1"},{"name":"z","nodeType":"YulIdentifier","src":"7408:1:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7401:3:17"},"nodeType":"YulFunctionCall","src":"7401:9:17"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"7396:1:17"}]}]},"condition":{"arguments":[{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7328:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"7331:3:17","type":"","value":"0x8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7325:2:17"},"nodeType":"YulFunctionCall","src":"7325:10:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7318:6:17"},"nodeType":"YulFunctionCall","src":"7318:18:17"},"nodeType":"YulIf","src":"7315:2:17"},{"nodeType":"YulAssignment","src":"7496:30:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7505:1:17","type":"","value":"1"},{"arguments":[{"name":"z","nodeType":"YulIdentifier","src":"7512:1:17"},{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7519:1:17"},{"name":"z","nodeType":"YulIdentifier","src":"7522:1:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7515:3:17"},"nodeType":"YulFunctionCall","src":"7515:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7508:3:17"},"nodeType":"YulFunctionCall","src":"7508:17:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7501:3:17"},"nodeType":"YulFunctionCall","src":"7501:25:17"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"7496:1:17"}]},{"nodeType":"YulAssignment","src":"7539:30:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7548:1:17","type":"","value":"1"},{"arguments":[{"name":"z","nodeType":"YulIdentifier","src":"7555:1:17"},{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7562:1:17"},{"name":"z","nodeType":"YulIdentifier","src":"7565:1:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7558:3:17"},"nodeType":"YulFunctionCall","src":"7558:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7551:3:17"},"nodeType":"YulFunctionCall","src":"7551:17:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7544:3:17"},"nodeType":"YulFunctionCall","src":"7544:25:17"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"7539:1:17"}]},{"nodeType":"YulAssignment","src":"7582:30:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7591:1:17","type":"","value":"1"},{"arguments":[{"name":"z","nodeType":"YulIdentifier","src":"7598:1:17"},{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7605:1:17"},{"name":"z","nodeType":"YulIdentifier","src":"7608:1:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7601:3:17"},"nodeType":"YulFunctionCall","src":"7601:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7594:3:17"},"nodeType":"YulFunctionCall","src":"7594:17:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7587:3:17"},"nodeType":"YulFunctionCall","src":"7587:25:17"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"7582:1:17"}]},{"nodeType":"YulAssignment","src":"7625:30:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7634:1:17","type":"","value":"1"},{"arguments":[{"name":"z","nodeType":"YulIdentifier","src":"7641:1:17"},{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7648:1:17"},{"name":"z","nodeType":"YulIdentifier","src":"7651:1:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7644:3:17"},"nodeType":"YulFunctionCall","src":"7644:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7637:3:17"},"nodeType":"YulFunctionCall","src":"7637:17:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7630:3:17"},"nodeType":"YulFunctionCall","src":"7630:25:17"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"7625:1:17"}]},{"nodeType":"YulAssignment","src":"7668:30:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7677:1:17","type":"","value":"1"},{"arguments":[{"name":"z","nodeType":"YulIdentifier","src":"7684:1:17"},{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7691:1:17"},{"name":"z","nodeType":"YulIdentifier","src":"7694:1:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7687:3:17"},"nodeType":"YulFunctionCall","src":"7687:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7680:3:17"},"nodeType":"YulFunctionCall","src":"7680:17:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7673:3:17"},"nodeType":"YulFunctionCall","src":"7673:25:17"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"7668:1:17"}]},{"nodeType":"YulAssignment","src":"7711:30:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7720:1:17","type":"","value":"1"},{"arguments":[{"name":"z","nodeType":"YulIdentifier","src":"7727:1:17"},{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7734:1:17"},{"name":"z","nodeType":"YulIdentifier","src":"7737:1:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7730:3:17"},"nodeType":"YulFunctionCall","src":"7730:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7723:3:17"},"nodeType":"YulFunctionCall","src":"7723:17:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7716:3:17"},"nodeType":"YulFunctionCall","src":"7716:25:17"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"7711:1:17"}]},{"nodeType":"YulAssignment","src":"7754:30:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7763:1:17","type":"","value":"1"},{"arguments":[{"name":"z","nodeType":"YulIdentifier","src":"7770:1:17"},{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7777:1:17"},{"name":"z","nodeType":"YulIdentifier","src":"7780:1:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7773:3:17"},"nodeType":"YulFunctionCall","src":"7773:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7766:3:17"},"nodeType":"YulFunctionCall","src":"7766:17:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7759:3:17"},"nodeType":"YulFunctionCall","src":"7759:25:17"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"7754:1:17"}]},{"nodeType":"YulVariableDeclaration","src":"7850:27:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7872:1:17"},{"name":"z","nodeType":"YulIdentifier","src":"7875:1:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7868:3:17"},"nodeType":"YulFunctionCall","src":"7868:9:17"},"variables":[{"name":"zRoundDown","nodeType":"YulTypedName","src":"7854:10:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"7961:47:17","statements":[{"nodeType":"YulAssignment","src":"7979:15:17","value":{"name":"zRoundDown","nodeType":"YulIdentifier","src":"7984:10:17"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"7979:1:17"}]}]},"condition":{"arguments":[{"name":"zRoundDown","nodeType":"YulIdentifier","src":"7946:10:17"},{"name":"z","nodeType":"YulIdentifier","src":"7958:1:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7943:2:17"},"nodeType":"YulFunctionCall","src":"7943:17:17"},"nodeType":"YulIf","src":"7940:2:17"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":2321,"isOffset":false,"isSlot":false,"src":"6127:1:17","valueSize":1},{"declaration":2321,"isOffset":false,"isSlot":false,"src":"7519:1:17","valueSize":1},{"declaration":2321,"isOffset":false,"isSlot":false,"src":"7562:1:17","valueSize":1},{"declaration":2321,"isOffset":false,"isSlot":false,"src":"7605:1:17","valueSize":1},{"declaration":2321,"isOffset":false,"isSlot":false,"src":"7648:1:17","valueSize":1},{"declaration":2321,"isOffset":false,"isSlot":false,"src":"7691:1:17","valueSize":1},{"declaration":2321,"isOffset":false,"isSlot":false,"src":"7734:1:17","valueSize":1},{"declaration":2321,"isOffset":false,"isSlot":false,"src":"7777:1:17","valueSize":1},{"declaration":2321,"isOffset":false,"isSlot":false,"src":"7872:1:17","valueSize":1},{"declaration":2324,"isOffset":false,"isSlot":false,"src":"6038:1:17","valueSize":1},{"declaration":2324,"isOffset":false,"isSlot":false,"src":"6345:1:17","valueSize":1},{"declaration":2324,"isOffset":false,"isSlot":false,"src":"6358:1:17","valueSize":1},{"declaration":2324,"isOffset":false,"isSlot":false,"src":"6536:1:17","valueSize":1},{"declaration":2324,"isOffset":false,"isSlot":false,"src":"6549:1:17","valueSize":1},{"declaration":2324,"isOffset":false,"isSlot":false,"src":"6719:1:17","valueSize":1},{"declaration":2324,"isOffset":false,"isSlot":false,"src":"6732:1:17","valueSize":1},{"declaration":2324,"isOffset":false,"isSlot":false,"src":"6898:1:17","valueSize":1},{"declaration":2324,"isOffset":false,"isSlot":false,"src":"6910:1:17","valueSize":1},{"declaration":2324,"isOffset":false,"isSlot":false,"src":"7071:1:17","valueSize":1},{"declaration":2324,"isOffset":false,"isSlot":false,"src":"7083:1:17","valueSize":1},{"declaration":2324,"isOffset":false,"isSlot":false,"src":"7243:1:17","valueSize":1},{"declaration":2324,"isOffset":false,"isSlot":false,"src":"7255:1:17","valueSize":1},{"declaration":2324,"isOffset":false,"isSlot":false,"src":"7396:1:17","valueSize":1},{"declaration":2324,"isOffset":false,"isSlot":false,"src":"7408:1:17","valueSize":1},{"declaration":2324,"isOffset":false,"isSlot":false,"src":"7496:1:17","valueSize":1},{"declaration":2324,"isOffset":false,"isSlot":false,"src":"7512:1:17","valueSize":1},{"declaration":2324,"isOffset":false,"isSlot":false,"src":"7522:1:17","valueSize":1},{"declaration":2324,"isOffset":false,"isSlot":false,"src":"7539:1:17","valueSize":1},{"declaration":2324,"isOffset":false,"isSlot":false,"src":"7555:1:17","valueSize":1},{"declaration":2324,"isOffset":false,"isSlot":false,"src":"7565:1:17","valueSize":1},{"declaration":2324,"isOffset":false,"isSlot":false,"src":"7582:1:17","valueSize":1},{"declaration":2324,"isOffset":false,"isSlot":false,"src":"7598:1:17","valueSize":1},{"declaration":2324,"isOffset":false,"isSlot":false,"src":"7608:1:17","valueSize":1},{"declaration":2324,"isOffset":false,"isSlot":false,"src":"7625:1:17","valueSize":1},{"declaration":2324,"isOffset":false,"isSlot":false,"src":"7641:1:17","valueSize":1},{"declaration":2324,"isOffset":false,"isSlot":false,"src":"7651:1:17","valueSize":1},{"declaration":2324,"isOffset":false,"isSlot":false,"src":"7668:1:17","valueSize":1},{"declaration":2324,"isOffset":false,"isSlot":false,"src":"7684:1:17","valueSize":1},{"declaration":2324,"isOffset":false,"isSlot":false,"src":"7694:1:17","valueSize":1},{"declaration":2324,"isOffset":false,"isSlot":false,"src":"7711:1:17","valueSize":1},{"declaration":2324,"isOffset":false,"isSlot":false,"src":"7727:1:17","valueSize":1},{"declaration":2324,"isOffset":false,"isSlot":false,"src":"7737:1:17","valueSize":1},{"declaration":2324,"isOffset":false,"isSlot":false,"src":"7754:1:17","valueSize":1},{"declaration":2324,"isOffset":false,"isSlot":false,"src":"7770:1:17","valueSize":1},{"declaration":2324,"isOffset":false,"isSlot":false,"src":"7780:1:17","valueSize":1},{"declaration":2324,"isOffset":false,"isSlot":false,"src":"7875:1:17","valueSize":1},{"declaration":2324,"isOffset":false,"isSlot":false,"src":"7958:1:17","valueSize":1},{"declaration":2324,"isOffset":false,"isSlot":false,"src":"7979:1:17","valueSize":1}],"id":2326,"nodeType":"InlineAssembly","src":"5977:2041:17"}]},"id":2328,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nodeType":"FunctionDefinition","parameters":{"id":2322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2321,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":2328,"src":"5922:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2320,"name":"uint256","nodeType":"ElementaryTypeName","src":"5922:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5921:11:17"},"returnParameters":{"id":2325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2324,"mutability":"mutable","name":"z","nodeType":"VariableDeclaration","scope":2328,"src":"5956:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2323,"name":"uint256","nodeType":"ElementaryTypeName","src":"5956:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5955:11:17"},"scope":2329,"src":"5908:2116:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2330,"src":"338:7688:17"}],"src":"42:7985:17"},"id":17},"contracts/oracles/libs/IntegralMath.sol":{"ast":{"absolutePath":"contracts/oracles/libs/IntegralMath.sol","exportedSymbols":{"IntegralMath":[2893],"MAX_VAL":[2902],"mulMod":[2997],"mulModMax":[2978],"safeAdd":[2916],"unsafeAdd":[2931],"unsafeMul":[2961],"unsafeSub":[2946]},"id":2894,"license":"SEE LICENSE IN LICENSE","nodeType":"SourceUnit","nodes":[{"id":2331,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"51:24:18"},{"absolutePath":"contracts/oracles/libs/Uint.sol","file":"./Uint.sol","id":2332,"nodeType":"ImportDirective","scope":2894,"sourceUnit":2998,"src":"77:20:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":2893,"linearizedBaseContracts":[2893],"name":"IntegralMath","nodeType":"ContractDefinition","nodes":[{"body":{"id":2394,"nodeType":"Block","src":"295:541:18","statements":[{"id":2393,"nodeType":"UncheckedBlock","src":"305:525:18","statements":[{"assignments":[2341],"declarations":[{"constant":false,"id":2341,"mutability":"mutable","name":"res","nodeType":"VariableDeclaration","scope":2393,"src":"329:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2340,"name":"uint8","nodeType":"ElementaryTypeName","src":"329:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2343,"initialValue":{"hexValue":"30","id":2342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"341:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"329:13:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2344,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"361:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"323536","id":2345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"365:3:18","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"src":"361:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2389,"nodeType":"Block","src":"540:255:18","statements":[{"body":{"id":2387,"nodeType":"Block","src":"634:147:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2372,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"660:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"665:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2374,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"670:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"665:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"660:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2386,"nodeType":"IfStatement","src":"656:107:18","trueBody":{"id":2385,"nodeType":"Block","src":"673:90:18","statements":[{"expression":{"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2377,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"699:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":2378,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"705:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"699:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2380,"nodeType":"ExpressionStatement","src":"699:7:18"},{"expression":{"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2381,"name":"res","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"732:3:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"id":2382,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"739:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"732:8:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2384,"nodeType":"ExpressionStatement","src":"732:8:18"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2365,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"618:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"618:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2388,"initializationExpression":{"assignments":[2362],"declarations":[{"constant":false,"id":2362,"mutability":"mutable","name":"s","nodeType":"VariableDeclaration","scope":2388,"src":"603:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2361,"name":"uint8","nodeType":"ElementaryTypeName","src":"603:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2364,"initialValue":{"hexValue":"313238","id":2363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"613:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"VariableDeclarationStatement","src":"603:13:18"},"loopExpression":{"expression":{"id":2370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2368,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"625:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"31","id":2369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"631:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"625:7:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2371,"nodeType":"ExpressionStatement","src":"625:7:18"},"nodeType":"ForStatement","src":"598:183:18"}]},"id":2390,"nodeType":"IfStatement","src":"357:438:18","trueBody":{"id":2360,"nodeType":"Block","src":"370:164:18","statements":[{"body":{"id":2358,"nodeType":"Block","src":"442:78:18","statements":[{"expression":{"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2350,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"464:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"31","id":2351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"470:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"464:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2353,"nodeType":"ExpressionStatement","src":"464:7:18"},{"expression":{"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2354,"name":"res","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"493:3:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"500:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"493:8:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2357,"nodeType":"ExpressionStatement","src":"493:8:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2347,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"435:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"439:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"435:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2359,"nodeType":"WhileStatement","src":"428:92:18"}]}},{"expression":{"id":2391,"name":"res","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"816:3:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2339,"id":2392,"nodeType":"Return","src":"809:10:18"}]}]},"documentation":{"id":2333,"nodeType":"StructuredDocumentation","src":"126:104:18","text":" @dev Compute the largest integer smaller than or equal to the binary logarithm of `n`"},"id":2395,"implemented":true,"kind":"function","modifiers":[],"name":"floorLog2","nodeType":"FunctionDefinition","parameters":{"id":2336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2335,"mutability":"mutable","name":"n","nodeType":"VariableDeclaration","scope":2395,"src":"254:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2334,"name":"uint256","nodeType":"ElementaryTypeName","src":"254:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"253:11:18"},"returnParameters":{"id":2339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2338,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2395,"src":"288:5:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2337,"name":"uint8","nodeType":"ElementaryTypeName","src":"288:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"287:7:18"},"scope":2893,"src":"235:601:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2452,"nodeType":"Block","src":"1008:326:18","statements":[{"id":2451,"nodeType":"UncheckedBlock","src":"1018:310:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2403,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"1046:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1050:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1046:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2448,"nodeType":"IfStatement","src":"1042:254:18","trueBody":{"id":2447,"nodeType":"Block","src":"1053:243:18","statements":[{"assignments":[2407],"declarations":[{"constant":false,"id":2407,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":2447,"src":"1071:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2406,"name":"uint256","nodeType":"ElementaryTypeName","src":"1071:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2413,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2408,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"1083:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1087:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1083:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1091:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1083:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1071:21:18"},{"assignments":[2415],"declarations":[{"constant":false,"id":2415,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":2447,"src":"1110:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2414,"name":"uint256","nodeType":"ElementaryTypeName","src":"1110:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2424,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2416,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"1123:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2417,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"1127:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2418,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"1131:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1127:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1123:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2421,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1122:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1136:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1122:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1110:27:18"},{"body":{"id":2443,"nodeType":"Block","src":"1169:87:18","statements":[{"expression":{"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2428,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"1191:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2429,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"1195:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1191:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2431,"nodeType":"ExpressionStatement","src":"1191:5:18"},{"expression":{"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2432,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"1218:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2433,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"1223:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2434,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"1227:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2435,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"1231:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1227:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1223:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2438,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1222:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1236:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1222:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1218:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2442,"nodeType":"ExpressionStatement","src":"1218:19:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2425,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"1162:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2426,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"1166:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1162:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2444,"nodeType":"WhileStatement","src":"1155:101:18"},{"expression":{"id":2445,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"1280:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2402,"id":2446,"nodeType":"Return","src":"1273:8:18"}]}},{"expression":{"hexValue":"30","id":2449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1316:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2402,"id":2450,"nodeType":"Return","src":"1309:8:18"}]}]},"documentation":{"id":2396,"nodeType":"StructuredDocumentation","src":"842:99:18","text":" @dev Compute the largest integer smaller than or equal to the square root of `n`"},"id":2453,"implemented":true,"kind":"function","modifiers":[],"name":"floorSqrt","nodeType":"FunctionDefinition","parameters":{"id":2399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2398,"mutability":"mutable","name":"n","nodeType":"VariableDeclaration","scope":2453,"src":"965:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2397,"name":"uint256","nodeType":"ElementaryTypeName","src":"965:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"964:11:18"},"returnParameters":{"id":2402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2401,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2453,"src":"999:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2400,"name":"uint256","nodeType":"ElementaryTypeName","src":"999:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"998:9:18"},"scope":2893,"src":"946:388:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2479,"nodeType":"Block","src":"1505:117:18","statements":[{"id":2478,"nodeType":"UncheckedBlock","src":"1515:101:18","statements":[{"assignments":[2462],"declarations":[{"constant":false,"id":2462,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":2478,"src":"1539:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2461,"name":"uint256","nodeType":"ElementaryTypeName","src":"1539:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2466,"initialValue":{"arguments":[{"id":2464,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"1561:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2463,"name":"floorSqrt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"1551:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1551:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1539:24:18"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2467,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2462,"src":"1584:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1587:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1584:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2470,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"1592:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1584:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2473,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2462,"src":"1600:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1604:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1600:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1584:21:18","trueExpression":{"id":2472,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2462,"src":"1596:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2460,"id":2477,"nodeType":"Return","src":"1577:28:18"}]}]},"documentation":{"id":2454,"nodeType":"StructuredDocumentation","src":"1340:99:18","text":" @dev Compute the smallest integer larger than or equal to the square root of `n`"},"id":2480,"implemented":true,"kind":"function","modifiers":[],"name":"ceilSqrt","nodeType":"FunctionDefinition","parameters":{"id":2457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2456,"mutability":"mutable","name":"n","nodeType":"VariableDeclaration","scope":2480,"src":"1462:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2455,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1461:11:18"},"returnParameters":{"id":2460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2459,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2480,"src":"1496:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2458,"name":"uint256","nodeType":"ElementaryTypeName","src":"1496:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:9:18"},"scope":2893,"src":"1444:178:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2544,"nodeType":"Block","src":"1793:343:18","statements":[{"id":2543,"nodeType":"UncheckedBlock","src":"1803:327:18","statements":[{"assignments":[2489],"declarations":[{"constant":false,"id":2489,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":2543,"src":"1827:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2488,"name":"uint256","nodeType":"ElementaryTypeName","src":"1827:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2491,"initialValue":{"hexValue":"30","id":2490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1839:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1827:13:18"},{"body":{"id":2539,"nodeType":"Block","src":"1897:201:18","statements":[{"expression":{"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2505,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"1915:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":2506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1921:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1915:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2508,"nodeType":"ExpressionStatement","src":"1915:7:18"},{"assignments":[2510],"declarations":[{"constant":false,"id":2510,"mutability":"mutable","name":"z","nodeType":"VariableDeclaration","scope":2539,"src":"1940:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2509,"name":"uint256","nodeType":"ElementaryTypeName","src":"1940:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2521,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1952:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2512,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"1956:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1952:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2514,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"1961:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1965:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1961:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2517,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1960:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1952:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1970:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1952:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1940:31:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2522,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"1993:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2523,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2493,"src":"1997:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1993:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2525,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"2002:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1993:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2538,"nodeType":"IfStatement","src":"1989:95:18","trueBody":{"id":2537,"nodeType":"Block","src":"2005:79:18","statements":[{"expression":{"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2527,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"2027:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2528,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2493,"src":"2032:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2529,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"2036:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2032:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2027:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2532,"nodeType":"ExpressionStatement","src":"2027:10:18"},{"expression":{"id":2535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2533,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"2059:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2064:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2059:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2536,"nodeType":"ExpressionStatement","src":"2059:6:18"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2498,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2493,"src":"1881:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1885:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1881:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2540,"initializationExpression":{"assignments":[2493],"declarations":[{"constant":false,"id":2493,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":2540,"src":"1859:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2492,"name":"uint256","nodeType":"ElementaryTypeName","src":"1859:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2497,"initialValue":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":2496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1871:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"323535","id":2495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:3:18","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1871:8:18","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"nodeType":"VariableDeclarationStatement","src":"1859:20:18"},"loopExpression":{"expression":{"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2501,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2493,"src":"1888:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"33","id":2502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1894:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"1888:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2504,"nodeType":"ExpressionStatement","src":"1888:7:18"},"nodeType":"ForStatement","src":"1854:244:18"},{"expression":{"id":2541,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"2118:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2487,"id":2542,"nodeType":"Return","src":"2111:8:18"}]}]},"documentation":{"id":2481,"nodeType":"StructuredDocumentation","src":"1628:98:18","text":" @dev Compute the largest integer smaller than or equal to the cubic root of `n`"},"id":2545,"implemented":true,"kind":"function","modifiers":[],"name":"floorCbrt","nodeType":"FunctionDefinition","parameters":{"id":2484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2483,"mutability":"mutable","name":"n","nodeType":"VariableDeclaration","scope":2545,"src":"1750:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2482,"name":"uint256","nodeType":"ElementaryTypeName","src":"1750:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1749:11:18"},"returnParameters":{"id":2487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2486,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2545,"src":"1784:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2485,"name":"uint256","nodeType":"ElementaryTypeName","src":"1784:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1783:9:18"},"scope":2893,"src":"1731:405:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2571,"nodeType":"Block","src":"2306:117:18","statements":[{"id":2570,"nodeType":"UncheckedBlock","src":"2316:101:18","statements":[{"assignments":[2554],"declarations":[{"constant":false,"id":2554,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":2570,"src":"2340:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2553,"name":"uint256","nodeType":"ElementaryTypeName","src":"2340:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2558,"initialValue":{"arguments":[{"id":2556,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"2362:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2555,"name":"floorCbrt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"2352:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2352:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2340:24:18"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2559,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2554,"src":"2385:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"33","id":2560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2388:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"2385:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2562,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"2393:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2385:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2565,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2554,"src":"2401:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2405:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2401:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2385:21:18","trueExpression":{"id":2564,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2554,"src":"2397:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2552,"id":2569,"nodeType":"Return","src":"2378:28:18"}]}]},"documentation":{"id":2546,"nodeType":"StructuredDocumentation","src":"2142:98:18","text":" @dev Compute the smallest integer larger than or equal to the cubic root of `n`"},"id":2572,"implemented":true,"kind":"function","modifiers":[],"name":"ceilCbrt","nodeType":"FunctionDefinition","parameters":{"id":2549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2548,"mutability":"mutable","name":"n","nodeType":"VariableDeclaration","scope":2572,"src":"2263:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2547,"name":"uint256","nodeType":"ElementaryTypeName","src":"2263:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2262:11:18"},"returnParameters":{"id":2552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2551,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2572,"src":"2297:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2550,"name":"uint256","nodeType":"ElementaryTypeName","src":"2297:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2296:9:18"},"scope":2893,"src":"2245:178:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2599,"nodeType":"Block","src":"2601:87:18","statements":[{"id":2598,"nodeType":"UncheckedBlock","src":"2611:71:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2582,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2575,"src":"2642:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2583,"name":"d","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2577,"src":"2646:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2642:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2585,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2575,"src":"2651:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":2586,"name":"d","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2577,"src":"2655:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2651:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2588,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2650:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2589,"name":"d","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2577,"src":"2661:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2590,"name":"d","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2577,"src":"2665:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2669:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2665:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2661:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2594,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2660:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2650:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2642:29:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2581,"id":2597,"nodeType":"Return","src":"2635:36:18"}]}]},"documentation":{"id":2573,"nodeType":"StructuredDocumentation","src":"2429:95:18","text":" @dev Compute the nearest integer to the quotient of `n` and `d` (or `n / d`)"},"id":2600,"implemented":true,"kind":"function","modifiers":[],"name":"roundDiv","nodeType":"FunctionDefinition","parameters":{"id":2578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2575,"mutability":"mutable","name":"n","nodeType":"VariableDeclaration","scope":2600,"src":"2547:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2574,"name":"uint256","nodeType":"ElementaryTypeName","src":"2547:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2577,"mutability":"mutable","name":"d","nodeType":"VariableDeclaration","scope":2600,"src":"2558:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2576,"name":"uint256","nodeType":"ElementaryTypeName","src":"2558:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2546:22:18"},"returnParameters":{"id":2581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2580,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2600,"src":"2592:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2579,"name":"uint256","nodeType":"ElementaryTypeName","src":"2592:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2591:9:18"},"scope":2893,"src":"2529:159:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2696,"nodeType":"Block","src":"2899:1065:18","statements":[{"id":2695,"nodeType":"UncheckedBlock","src":"2909:1049:18","statements":[{"assignments":[2613,2615],"declarations":[{"constant":false,"id":2613,"mutability":"mutable","name":"xyh","nodeType":"VariableDeclaration","scope":2695,"src":"2934:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2612,"name":"uint256","nodeType":"ElementaryTypeName","src":"2934:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2615,"mutability":"mutable","name":"xyl","nodeType":"VariableDeclaration","scope":2695,"src":"2947:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2614,"name":"uint256","nodeType":"ElementaryTypeName","src":"2947:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2620,"initialValue":{"arguments":[{"id":2617,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2603,"src":"2969:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2618,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"2972:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2616,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2781,"src":"2962:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":2619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2962:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"2933:41:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2621,"name":"xyh","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"2992:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2999:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2992:8:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2629,"nodeType":"IfStatement","src":"2988:98:18","trueBody":{"id":2628,"nodeType":"Block","src":"3002:84:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2624,"name":"xyl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"3064:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2625,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"3070:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3064:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2611,"id":2627,"nodeType":"Return","src":"3057:14:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2630,"name":"xyh","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"3103:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2631,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"3109:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3103:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2691,"nodeType":"IfStatement","src":"3099:801:18","trueBody":{"id":2690,"nodeType":"Block","src":"3112:788:18","statements":[{"assignments":[2634],"declarations":[{"constant":false,"id":2634,"mutability":"mutable","name":"m","nodeType":"VariableDeclaration","scope":2690,"src":"3171:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2633,"name":"uint256","nodeType":"ElementaryTypeName","src":"3171:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2640,"initialValue":{"arguments":[{"id":2636,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2603,"src":"3190:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2637,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"3193:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2638,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"3196:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2635,"name":"mulMod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"3183:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3183:15:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3171:27:18"},{"assignments":[2642,2644],"declarations":[{"constant":false,"id":2642,"mutability":"mutable","name":"nh","nodeType":"VariableDeclaration","scope":2690,"src":"3236:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2641,"name":"uint256","nodeType":"ElementaryTypeName","src":"3236:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2644,"mutability":"mutable","name":"nl","nodeType":"VariableDeclaration","scope":2690,"src":"3248:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2643,"name":"uint256","nodeType":"ElementaryTypeName","src":"3248:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2650,"initialValue":{"arguments":[{"id":2646,"name":"xyh","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"3269:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2647,"name":"xyl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"3274:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2648,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"3279:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2645,"name":"sub512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"3262:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256,uint256)"}},"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3262:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3235:46:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2651,"name":"nh","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"3355:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3361:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3355:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2659,"nodeType":"IfStatement","src":"3351:104:18","trueBody":{"id":2658,"nodeType":"Block","src":"3364:91:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2654,"name":"nl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2644,"src":"3430:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2655,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"3435:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3430:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2611,"id":2657,"nodeType":"Return","src":"3423:13:18"}]}},{"assignments":[2661],"declarations":[{"constant":false,"id":2661,"mutability":"mutable","name":"p","nodeType":"VariableDeclaration","scope":2690,"src":"3472:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2660,"name":"uint256","nodeType":"ElementaryTypeName","src":"3472:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2668,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"hexValue":"30","id":2663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3494:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":2664,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"3497:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2662,"name":"unsafeSub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"3484:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3484:15:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2666,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"3502:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3484:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3472:31:18"},{"assignments":[2670],"declarations":[{"constant":false,"id":2670,"mutability":"mutable","name":"q","nodeType":"VariableDeclaration","scope":2690,"src":"3580:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2669,"name":"uint256","nodeType":"ElementaryTypeName","src":"3580:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2676,"initialValue":{"arguments":[{"id":2672,"name":"nh","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"3599:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2673,"name":"nl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2644,"src":"3603:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2674,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2661,"src":"3607:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2671,"name":"div512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"3592:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3592:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3580:29:18"},{"assignments":[2678],"declarations":[{"constant":false,"id":2678,"mutability":"mutable","name":"r","nodeType":"VariableDeclaration","scope":2690,"src":"3714:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2677,"name":"uint256","nodeType":"ElementaryTypeName","src":"3714:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2684,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2680,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"3733:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2681,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2661,"src":"3737:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3733:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2679,"name":"inv256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"3726:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3726:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3714:25:18"},{"expression":{"arguments":[{"id":2686,"name":"q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"3834:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2687,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"3837:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2685,"name":"unsafeMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"3824:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3824:15:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2611,"id":2689,"nodeType":"Return","src":"3817:22:18"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2692,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3913:6:18","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$__$returns$__$","typeString":"function () pure"}},"id":2693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3913:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2694,"nodeType":"ExpressionStatement","src":"3913:8:18"}]}]},"documentation":{"id":2601,"nodeType":"StructuredDocumentation","src":"2694:88:18","text":" @dev Compute the largest integer smaller than or equal to `x * y / z`"},"id":2697,"implemented":true,"kind":"function","modifiers":[],"name":"mulDivF","nodeType":"FunctionDefinition","parameters":{"id":2608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2603,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":2697,"src":"2813:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2602,"name":"uint256","nodeType":"ElementaryTypeName","src":"2813:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2605,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":2697,"src":"2832:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2604,"name":"uint256","nodeType":"ElementaryTypeName","src":"2832:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2607,"mutability":"mutable","name":"z","nodeType":"VariableDeclaration","scope":2697,"src":"2851:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2606,"name":"uint256","nodeType":"ElementaryTypeName","src":"2851:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2803:63:18"},"returnParameters":{"id":2611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2610,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2697,"src":"2890:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2609,"name":"uint256","nodeType":"ElementaryTypeName","src":"2890:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2889:9:18"},"scope":2893,"src":"2787:1177:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2733,"nodeType":"Block","src":"4175:160:18","statements":[{"id":2732,"nodeType":"UncheckedBlock","src":"4185:144:18","statements":[{"assignments":[2710],"declarations":[{"constant":false,"id":2710,"mutability":"mutable","name":"w","nodeType":"VariableDeclaration","scope":2732,"src":"4209:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2709,"name":"uint256","nodeType":"ElementaryTypeName","src":"4209:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2716,"initialValue":{"arguments":[{"id":2712,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"4229:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2713,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"4232:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2714,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2704,"src":"4235:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2711,"name":"mulDivF","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"4221:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4221:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4209:28:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2718,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"4262:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2719,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"4265:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2720,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2704,"src":"4268:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2717,"name":"mulMod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"4255:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4255:15:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4273:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4255:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2729,"nodeType":"IfStatement","src":"4251:45:18","trueBody":{"expression":{"arguments":[{"id":2725,"name":"w","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"4291:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":2726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4294:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":2724,"name":"safeAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"4283:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4283:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2708,"id":2728,"nodeType":"Return","src":"4276:20:18"}},{"expression":{"id":2730,"name":"w","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"4317:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2708,"id":2731,"nodeType":"Return","src":"4310:8:18"}]}]},"documentation":{"id":2698,"nodeType":"StructuredDocumentation","src":"3970:88:18","text":" @dev Compute the smallest integer larger than or equal to `x * y / z`"},"id":2734,"implemented":true,"kind":"function","modifiers":[],"name":"mulDivC","nodeType":"FunctionDefinition","parameters":{"id":2705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2700,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":2734,"src":"4089:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2699,"name":"uint256","nodeType":"ElementaryTypeName","src":"4089:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2702,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":2734,"src":"4108:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2701,"name":"uint256","nodeType":"ElementaryTypeName","src":"4108:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2704,"mutability":"mutable","name":"z","nodeType":"VariableDeclaration","scope":2734,"src":"4127:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2703,"name":"uint256","nodeType":"ElementaryTypeName","src":"4127:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4079:63:18"},"returnParameters":{"id":2708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2707,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2734,"src":"4166:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2706,"name":"uint256","nodeType":"ElementaryTypeName","src":"4166:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4165:9:18"},"scope":2893,"src":"4063:272:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2780,"nodeType":"Block","src":"4504:207:18","statements":[{"id":2779,"nodeType":"UncheckedBlock","src":"4514:191:18","statements":[{"assignments":[2747],"declarations":[{"constant":false,"id":2747,"mutability":"mutable","name":"p","nodeType":"VariableDeclaration","scope":2779,"src":"4538:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2746,"name":"uint256","nodeType":"ElementaryTypeName","src":"4538:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2752,"initialValue":{"arguments":[{"id":2749,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"4560:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2750,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"4563:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2748,"name":"mulModMax","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2978,"src":"4550:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4550:15:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4538:27:18"},{"assignments":[2754],"declarations":[{"constant":false,"id":2754,"mutability":"mutable","name":"q","nodeType":"VariableDeclaration","scope":2779,"src":"4579:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2753,"name":"uint256","nodeType":"ElementaryTypeName","src":"4579:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2759,"initialValue":{"arguments":[{"id":2756,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"4601:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2757,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"4604:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2755,"name":"unsafeMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"4591:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4591:15:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4579:27:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2760,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"4624:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2761,"name":"q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"4629:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4624:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2769,"nodeType":"IfStatement","src":"4620:29:18","trueBody":{"expression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2763,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"4640:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2764,"name":"q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"4644:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2766,"name":"q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"4647:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2767,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4639:10:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":2745,"id":2768,"nodeType":"Return","src":"4632:17:18"}},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2771,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"4681:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2772,"name":"q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"4684:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2770,"name":"unsafeSub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"4671:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4671:15:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4689:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4671:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2776,"name":"q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"4692:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2777,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4670:24:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":2745,"id":2778,"nodeType":"Return","src":"4663:31:18"}]}]},"documentation":{"id":2735,"nodeType":"StructuredDocumentation","src":"4341:52:18","text":" @dev Compute the value of `x * y`"},"id":2781,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nodeType":"FunctionDefinition","parameters":{"id":2740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2737,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":2781,"src":"4414:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2736,"name":"uint256","nodeType":"ElementaryTypeName","src":"4414:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2739,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":2781,"src":"4425:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2738,"name":"uint256","nodeType":"ElementaryTypeName","src":"4425:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4413:22:18"},"returnParameters":{"id":2745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2742,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2781,"src":"4482:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2741,"name":"uint256","nodeType":"ElementaryTypeName","src":"4482:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2744,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2781,"src":"4491:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2743,"name":"uint256","nodeType":"ElementaryTypeName","src":"4491:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4481:18:18"},"scope":2893,"src":"4398:313:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2815,"nodeType":"Block","src":"4943:130:18","statements":[{"id":2814,"nodeType":"UncheckedBlock","src":"4953:114:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2795,"name":"xl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"4981:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2796,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2788,"src":"4987:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4981:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2804,"nodeType":"IfStatement","src":"4977:32:18","trueBody":{"expression":{"components":[{"id":2798,"name":"xh","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"4998:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2799,"name":"xl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"5002:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2800,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2788,"src":"5007:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5002:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2802,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4997:12:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":2794,"id":2803,"nodeType":"Return","src":"4990:19:18"}},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2805,"name":"xh","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"5031:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5036:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5031:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2809,"name":"xl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"5049:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2810,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2788,"src":"5053:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2808,"name":"unsafeSub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"5039:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5039:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2812,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5030:26:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":2794,"id":2813,"nodeType":"Return","src":"5023:33:18"}]}]},"documentation":{"id":2782,"nodeType":"StructuredDocumentation","src":"4717:100:18","text":" @dev Compute the value of `2 ^ 256 * xh + xl - y`, where `2 ^ 256 * xh + xl >= y`"},"id":2816,"implemented":true,"kind":"function","modifiers":[],"name":"sub512","nodeType":"FunctionDefinition","parameters":{"id":2789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2784,"mutability":"mutable","name":"xh","nodeType":"VariableDeclaration","scope":2816,"src":"4847:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2783,"name":"uint256","nodeType":"ElementaryTypeName","src":"4847:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2786,"mutability":"mutable","name":"xl","nodeType":"VariableDeclaration","scope":2816,"src":"4867:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2785,"name":"uint256","nodeType":"ElementaryTypeName","src":"4867:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2788,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":2816,"src":"4887:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2787,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4837:65:18"},"returnParameters":{"id":2794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2791,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2816,"src":"4925:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2790,"name":"uint256","nodeType":"ElementaryTypeName","src":"4925:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2793,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2816,"src":"4934:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2792,"name":"uint256","nodeType":"ElementaryTypeName","src":"4934:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4924:18:18"},"scope":2893,"src":"4822:251:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2851,"nodeType":"Block","src":"5310:225:18","statements":[{"id":2850,"nodeType":"UncheckedBlock","src":"5320:209:18","statements":[{"assignments":[2829],"declarations":[{"constant":false,"id":2829,"mutability":"mutable","name":"pow2nInv","nodeType":"VariableDeclaration","scope":2850,"src":"5344:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2828,"name":"uint256","nodeType":"ElementaryTypeName","src":"5344:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2839,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"hexValue":"30","id":2832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5383:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":2833,"name":"pow2n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"5386:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2831,"name":"unsafeSub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"5373:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5373:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2835,"name":"pow2n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"5395:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5373:27:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":2837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5402:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":2830,"name":"unsafeAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2931,"src":"5363:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5363:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5344:60:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2841,"name":"xh","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2819,"src":"5455:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2842,"name":"pow2nInv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"5459:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2840,"name":"unsafeMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"5445:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5445:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2844,"name":"xl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"5472:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2845,"name":"pow2n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"5477:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5472:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2847,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5471:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5445:38:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2827,"id":2849,"nodeType":"Return","src":"5438:45:18"}]}]},"documentation":{"id":2817,"nodeType":"StructuredDocumentation","src":"5079:110:18","text":" @dev Compute the value of `(2 ^ 256 * xh + xl) / pow2n`, where `xl` is divisible by `pow2n`"},"id":2852,"implemented":true,"kind":"function","modifiers":[],"name":"div512","nodeType":"FunctionDefinition","parameters":{"id":2824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2819,"mutability":"mutable","name":"xh","nodeType":"VariableDeclaration","scope":2852,"src":"5219:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2818,"name":"uint256","nodeType":"ElementaryTypeName","src":"5219:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2821,"mutability":"mutable","name":"xl","nodeType":"VariableDeclaration","scope":2852,"src":"5239:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2820,"name":"uint256","nodeType":"ElementaryTypeName","src":"5239:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2823,"mutability":"mutable","name":"pow2n","nodeType":"VariableDeclaration","scope":2852,"src":"5259:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2822,"name":"uint256","nodeType":"ElementaryTypeName","src":"5259:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5209:69:18"},"returnParameters":{"id":2827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2826,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2852,"src":"5301:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2825,"name":"uint256","nodeType":"ElementaryTypeName","src":"5301:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5300:9:18"},"scope":2893,"src":"5194:341:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2891,"nodeType":"Block","src":"5713:336:18","statements":[{"id":2890,"nodeType":"UncheckedBlock","src":"5723:320:18","statements":[{"assignments":[2861],"declarations":[{"constant":false,"id":2861,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":2890,"src":"5851:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2860,"name":"uint256","nodeType":"ElementaryTypeName","src":"5851:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2863,"initialValue":{"hexValue":"31","id":2862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5863:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"5851:13:18"},{"body":{"expression":{"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2874,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"5926:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2876,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"5940:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"32","id":2878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5953:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},{"arguments":[{"id":2880,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"5966:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2881,"name":"d","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2855,"src":"5969:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2879,"name":"unsafeMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"5956:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5956:15:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2877,"name":"unsafeSub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"5943:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5943:29:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2875,"name":"unsafeMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"5930:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5930:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5926:47:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2886,"nodeType":"ExpressionStatement","src":"5926:47:18"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2868,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"5898:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"38","id":2869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5902:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"5898:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2887,"initializationExpression":{"assignments":[2865],"declarations":[{"constant":false,"id":2865,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":2887,"src":"5883:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2864,"name":"uint256","nodeType":"ElementaryTypeName","src":"5883:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2867,"initialValue":{"hexValue":"30","id":2866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5895:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5883:13:18"},"loopExpression":{"expression":{"id":2872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"5905:3:18","subExpression":{"id":2871,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"5907:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2873,"nodeType":"ExpressionStatement","src":"5905:3:18"},"nodeType":"ForStatement","src":"5878:95:18"},{"expression":{"id":2888,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"6031:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2859,"id":2889,"nodeType":"Return","src":"6024:8:18"}]}]},"documentation":{"id":2853,"nodeType":"StructuredDocumentation","src":"5541:109:18","text":" @dev Compute the inverse of `d` modulo `2 ^ 256`, where `d` is congruent to `1` modulo `2`"},"id":2892,"implemented":true,"kind":"function","modifiers":[],"name":"inv256","nodeType":"FunctionDefinition","parameters":{"id":2856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2855,"mutability":"mutable","name":"d","nodeType":"VariableDeclaration","scope":2892,"src":"5671:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2854,"name":"uint256","nodeType":"ElementaryTypeName","src":"5671:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5670:11:18"},"returnParameters":{"id":2859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2858,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2892,"src":"5704:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2857,"name":"uint256","nodeType":"ElementaryTypeName","src":"5704:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5703:9:18"},"scope":2893,"src":"5655:394:18","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2894,"src":"99:5952:18"}],"src":"51:6001:18"},"id":18},"contracts/oracles/libs/Uint.sol":{"ast":{"absolutePath":"contracts/oracles/libs/Uint.sol","exportedSymbols":{"MAX_VAL":[2902],"mulMod":[2997],"mulModMax":[2978],"safeAdd":[2916],"unsafeAdd":[2931],"unsafeMul":[2961],"unsafeSub":[2946]},"id":2998,"license":"SEE LICENSE IN LICENSE","nodeType":"SourceUnit","nodes":[{"id":2895,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"51:24:19"},{"constant":true,"id":2902,"mutability":"constant","name":"MAX_VAL","nodeType":"VariableDeclaration","scope":2998,"src":"77:44:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2896,"name":"uint256","nodeType":"ElementaryTypeName","src":"77:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"expression":{"arguments":[{"id":2899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"109:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2898,"name":"uint256","nodeType":"ElementaryTypeName","src":"109:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":2897,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"104:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"104:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":2901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"104:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"body":{"id":2915,"nodeType":"Block","src":"209:21:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2911,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2904,"src":"222:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2912,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2906,"src":"226:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"222:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2910,"id":2914,"nodeType":"Return","src":"215:12:19"}]},"id":2916,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"safeAdd","nodeType":"FunctionDefinition","parameters":{"id":2907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2904,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":2916,"src":"164:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2903,"name":"uint256","nodeType":"ElementaryTypeName","src":"164:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2906,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":2916,"src":"175:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2905,"name":"uint256","nodeType":"ElementaryTypeName","src":"175:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"163:22:19"},"returnParameters":{"id":2910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2909,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2916,"src":"200:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2908,"name":"uint256","nodeType":"ElementaryTypeName","src":"200:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"199:9:19"},"scope":2998,"src":"147:83:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2930,"nodeType":"Block","src":"327:47:19","statements":[{"id":2929,"nodeType":"UncheckedBlock","src":"333:39:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2925,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2918,"src":"360:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2926,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"364:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"360:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2924,"id":2928,"nodeType":"Return","src":"353:12:19"}]}]},"id":2931,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"unsafeAdd","nodeType":"FunctionDefinition","parameters":{"id":2921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2918,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":2931,"src":"282:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2917,"name":"uint256","nodeType":"ElementaryTypeName","src":"282:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2920,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":2931,"src":"293:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2919,"name":"uint256","nodeType":"ElementaryTypeName","src":"293:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"281:22:19"},"returnParameters":{"id":2924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2923,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2931,"src":"318:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2922,"name":"uint256","nodeType":"ElementaryTypeName","src":"318:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"317:9:19"},"scope":2998,"src":"263:111:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2945,"nodeType":"Block","src":"471:47:19","statements":[{"id":2944,"nodeType":"UncheckedBlock","src":"477:39:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2940,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"504:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2941,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"508:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"504:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2939,"id":2943,"nodeType":"Return","src":"497:12:19"}]}]},"id":2946,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"unsafeSub","nodeType":"FunctionDefinition","parameters":{"id":2936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2933,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":2946,"src":"426:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2932,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2935,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":2946,"src":"437:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2934,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:19"},"returnParameters":{"id":2939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2938,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2946,"src":"462:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2937,"name":"uint256","nodeType":"ElementaryTypeName","src":"462:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"461:9:19"},"scope":2998,"src":"407:111:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2960,"nodeType":"Block","src":"615:47:19","statements":[{"id":2959,"nodeType":"UncheckedBlock","src":"621:39:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2955,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2948,"src":"648:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2956,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"652:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"648:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2954,"id":2958,"nodeType":"Return","src":"641:12:19"}]}]},"id":2961,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"unsafeMul","nodeType":"FunctionDefinition","parameters":{"id":2951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2948,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":2961,"src":"570:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2947,"name":"uint256","nodeType":"ElementaryTypeName","src":"570:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2950,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":2961,"src":"581:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2949,"name":"uint256","nodeType":"ElementaryTypeName","src":"581:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"569:22:19"},"returnParameters":{"id":2954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2953,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2961,"src":"606:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2952,"name":"uint256","nodeType":"ElementaryTypeName","src":"606:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"605:9:19"},"scope":2998,"src":"551:111:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2977,"nodeType":"Block","src":"749:63:19","statements":[{"id":2976,"nodeType":"UncheckedBlock","src":"755:55:19","statements":[{"expression":{"arguments":[{"id":2971,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"789:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2972,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"792:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2973,"name":"MAX_VAL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"795:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2970,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"782:6:19","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"782:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2969,"id":2975,"nodeType":"Return","src":"775:28:19"}]}]},"id":2978,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"mulModMax","nodeType":"FunctionDefinition","parameters":{"id":2966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2963,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":2978,"src":"704:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2962,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2965,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":2978,"src":"715:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2964,"name":"uint256","nodeType":"ElementaryTypeName","src":"715:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:22:19"},"returnParameters":{"id":2969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2968,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2978,"src":"740:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2967,"name":"uint256","nodeType":"ElementaryTypeName","src":"740:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"739:9:19"},"scope":2998,"src":"685:127:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2996,"nodeType":"Block","src":"921:57:19","statements":[{"id":2995,"nodeType":"UncheckedBlock","src":"927:49:19","statements":[{"expression":{"arguments":[{"id":2990,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"961:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2991,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"964:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2992,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2984,"src":"967:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2989,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"954:6:19","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"954:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2988,"id":2994,"nodeType":"Return","src":"947:22:19"}]}]},"id":2997,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"mulMod","nodeType":"FunctionDefinition","parameters":{"id":2985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2980,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":2997,"src":"856:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2979,"name":"uint256","nodeType":"ElementaryTypeName","src":"856:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2982,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":2997,"src":"871:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2981,"name":"uint256","nodeType":"ElementaryTypeName","src":"871:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2984,"mutability":"mutable","name":"z","nodeType":"VariableDeclaration","scope":2997,"src":"886:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2983,"name":"uint256","nodeType":"ElementaryTypeName","src":"886:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"850:47:19"},"returnParameters":{"id":2988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2987,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2997,"src":"912:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2986,"name":"uint256","nodeType":"ElementaryTypeName","src":"912:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"911:9:19"},"scope":2998,"src":"835:143:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"src":"51:928:19"},"id":19},"contracts/oracles/libs/vMath.sol":{"ast":{"absolutePath":"contracts/oracles/libs/vMath.sol","exportedSymbols":{"FixedPointMathLib":[2329],"IntegralMath":[2893],"vMath":[3112]},"id":3113,"nodeType":"SourceUnit","nodes":[{"id":2999,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"0:24:20"},{"absolutePath":"contracts/oracles/libs/FixedPointMathLib.sol","file":"./FixedPointMathLib.sol","id":3001,"nodeType":"ImportDirective","scope":3113,"sourceUnit":2330,"src":"26:58:20","symbolAliases":[{"foreign":{"id":3000,"name":"FixedPointMathLib","nodeType":"Identifier","overloadedDeclarations":[],"src":"34:17:20","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/oracles/libs/IntegralMath.sol","file":"./IntegralMath.sol","id":3003,"nodeType":"ImportDirective","scope":3113,"sourceUnit":2894,"src":"85:48:20","symbolAliases":[{"foreign":{"id":3002,"name":"IntegralMath","nodeType":"Identifier","overloadedDeclarations":[],"src":"93:12:20","typeDescriptions":{}}}],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":3112,"linearizedBaseContracts":[3112],"name":"vMath","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3006,"mutability":"constant","name":"WAD","nodeType":"VariableDeclaration","scope":3112,"src":"155:36:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3004,"name":"uint256","nodeType":"ElementaryTypeName","src":"155:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653138","id":3005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"187:4:20","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"visibility":"internal"},{"body":{"id":3048,"nodeType":"Block","src":"307:200:20","statements":[{"assignments":[3015],"declarations":[{"constant":false,"id":3015,"mutability":"mutable","name":"min","nodeType":"VariableDeclaration","scope":3048,"src":"317:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3014,"name":"uint256","nodeType":"ElementaryTypeName","src":"317:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3019,"initialValue":{"baseExpression":{"id":3016,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"331:5:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":3018,"indexExpression":{"hexValue":"30","id":3017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"337:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"331:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"317:22:20"},{"body":{"id":3044,"nodeType":"Block","src":"390:91:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3031,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"408:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"baseExpression":{"id":3032,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"414:5:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":3034,"indexExpression":{"id":3033,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"420:1:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"414:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"408:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3043,"nodeType":"IfStatement","src":"404:67:20","trueBody":{"id":3042,"nodeType":"Block","src":"424:47:20","statements":[{"expression":{"id":3040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3036,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"442:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3037,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"448:5:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":3039,"indexExpression":{"id":3038,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"454:1:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"448:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"442:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3041,"nodeType":"ExpressionStatement","src":"442:14:20"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3024,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"367:1:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3025,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"371:5:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":3026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"371:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"367:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3045,"initializationExpression":{"assignments":[3021],"declarations":[{"constant":false,"id":3021,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":3045,"src":"354:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3020,"name":"uint8","nodeType":"ElementaryTypeName","src":"354:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3023,"initialValue":{"hexValue":"31","id":3022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"364:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"354:11:20"},"loopExpression":{"expression":{"id":3029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"385:3:20","subExpression":{"id":3028,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"385:1:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3030,"nodeType":"ExpressionStatement","src":"385:3:20"},"nodeType":"ForStatement","src":"349:132:20"},{"expression":{"id":3046,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"497:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3013,"id":3047,"nodeType":"Return","src":"490:10:20"}]},"functionSelector":"d834e619","id":3049,"implemented":true,"kind":"function","modifiers":[],"name":"min","nodeType":"FunctionDefinition","parameters":{"id":3010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3009,"mutability":"mutable","name":"array","nodeType":"VariableDeclaration","scope":3049,"src":"249:24:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3007,"name":"uint256","nodeType":"ElementaryTypeName","src":"249:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3008,"nodeType":"ArrayTypeName","src":"249:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"248:26:20"},"returnParameters":{"id":3013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3012,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3049,"src":"298:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3011,"name":"uint256","nodeType":"ElementaryTypeName","src":"298:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"297:9:20"},"scope":3112,"src":"236:271:20","stateMutability":"pure","virtual":false,"visibility":"external"},{"body":{"id":3084,"nodeType":"Block","src":"587:160:20","statements":[{"assignments":[3058],"declarations":[{"constant":false,"id":3058,"mutability":"mutable","name":"product","nodeType":"VariableDeclaration","scope":3084,"src":"597:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3057,"name":"uint256","nodeType":"ElementaryTypeName","src":"597:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3062,"initialValue":{"baseExpression":{"id":3059,"name":"nums","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3052,"src":"615:4:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":3061,"indexExpression":{"hexValue":"30","id":3060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"620:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"615:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"597:25:20"},{"body":{"id":3080,"nodeType":"Block","src":"674:43:20","statements":[{"expression":{"id":3078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3074,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"688:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"baseExpression":{"id":3075,"name":"nums","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3052,"src":"699:4:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":3077,"indexExpression":{"id":3076,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"704:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"699:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"688:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3079,"nodeType":"ExpressionStatement","src":"688:18:20"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3067,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"652:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3068,"name":"nums","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3052,"src":"656:4:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"656:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"652:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3081,"initializationExpression":{"assignments":[3064],"declarations":[{"constant":false,"id":3064,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":3081,"src":"637:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3063,"name":"uint256","nodeType":"ElementaryTypeName","src":"637:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3066,"initialValue":{"hexValue":"31","id":3065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"649:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"637:13:20"},"loopExpression":{"expression":{"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"669:3:20","subExpression":{"id":3071,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"669:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3073,"nodeType":"ExpressionStatement","src":"669:3:20"},"nodeType":"ForStatement","src":"632:85:20"},{"expression":{"id":3082,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"733:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3056,"id":3083,"nodeType":"Return","src":"726:14:20"}]},"functionSelector":"8e5fede8","id":3085,"implemented":true,"kind":"function","modifiers":[],"name":"product","nodeType":"FunctionDefinition","parameters":{"id":3053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3052,"mutability":"mutable","name":"nums","nodeType":"VariableDeclaration","scope":3085,"src":"530:23:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3050,"name":"uint256","nodeType":"ElementaryTypeName","src":"530:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3051,"nodeType":"ArrayTypeName","src":"530:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"529:25:20"},"returnParameters":{"id":3056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3055,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3085,"src":"578:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3054,"name":"uint256","nodeType":"ElementaryTypeName","src":"578:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"577:9:20"},"scope":3112,"src":"513:234:20","stateMutability":"pure","virtual":false,"visibility":"external"},{"body":{"id":3110,"nodeType":"Block","src":"930:181:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3094,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3087,"src":"944:1:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"32","id":3095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"949:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"944:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3108,"nodeType":"Block","src":"1021:84:20","statements":[{"expression":{"arguments":[{"id":3105,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3089,"src":"1086:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3103,"name":"IntegralMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"1063:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IntegralMath_$2893_$","typeString":"type(library IntegralMath)"}},"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"floorCbrt","nodeType":"MemberAccess","referencedDeclaration":2545,"src":"1063:22:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1063:31:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3093,"id":3107,"nodeType":"Return","src":"1056:38:20"}]},"id":3109,"nodeType":"IfStatement","src":"940:165:20","trueBody":{"id":3102,"nodeType":"Block","src":"952:63:20","statements":[{"expression":{"arguments":[{"id":3099,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3089,"src":"996:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3097,"name":"FixedPointMathLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"973:17:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FixedPointMathLib_$2329_$","typeString":"type(library FixedPointMathLib)"}},"id":3098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":2328,"src":"973:22:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"973:31:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3093,"id":3101,"nodeType":"Return","src":"966:38:20"}]}}]},"functionSelector":"f43b9abe","id":3111,"implemented":true,"kind":"function","modifiers":[],"name":"geometric_mean","nodeType":"FunctionDefinition","parameters":{"id":3090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3087,"mutability":"mutable","name":"n","nodeType":"VariableDeclaration","scope":3111,"src":"844:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3086,"name":"uint8","nodeType":"ElementaryTypeName","src":"844:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3089,"mutability":"mutable","name":"product","nodeType":"VariableDeclaration","scope":3111,"src":"853:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3088,"name":"uint256","nodeType":"ElementaryTypeName","src":"853:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"843:26:20"},"returnParameters":{"id":3093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3092,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3111,"src":"917:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3091,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"916:9:20"},"scope":3112,"src":"820:291:20","stateMutability":"pure","virtual":false,"visibility":"external"}],"scope":3113,"src":"135:978:20"}],"src":"0:1114:20"},"id":20},"contracts/protocol/libraries/types/DataTypes.sol":{"ast":{"absolutePath":"contracts/protocol/libraries/types/DataTypes.sol","exportedSymbols":{"DataTypes":[3309]},"id":3310,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":3114,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"37:24:21"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":3309,"linearizedBaseContracts":[3309],"name":"DataTypes","nodeType":"ContractDefinition","nodes":[{"canonicalName":"DataTypes.InitReserveInput","id":3157,"members":[{"constant":false,"id":3116,"mutability":"mutable","name":"aTokenImpl","nodeType":"VariableDeclaration","scope":3157,"src":"227:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3115,"name":"address","nodeType":"ElementaryTypeName","src":"227:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3118,"mutability":"mutable","name":"stableDebtTokenImpl","nodeType":"VariableDeclaration","scope":3157,"src":"255:27:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3117,"name":"address","nodeType":"ElementaryTypeName","src":"255:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3120,"mutability":"mutable","name":"variableDebtTokenImpl","nodeType":"VariableDeclaration","scope":3157,"src":"292:29:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3119,"name":"address","nodeType":"ElementaryTypeName","src":"292:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3122,"mutability":"mutable","name":"underlyingAssetDecimals","nodeType":"VariableDeclaration","scope":3157,"src":"331:29:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3121,"name":"uint8","nodeType":"ElementaryTypeName","src":"331:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3124,"mutability":"mutable","name":"interestRateStrategyAddress","nodeType":"VariableDeclaration","scope":3157,"src":"370:35:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3123,"name":"address","nodeType":"ElementaryTypeName","src":"370:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3126,"mutability":"mutable","name":"underlyingAsset","nodeType":"VariableDeclaration","scope":3157,"src":"415:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3125,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3128,"mutability":"mutable","name":"treasury","nodeType":"VariableDeclaration","scope":3157,"src":"448:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3127,"name":"address","nodeType":"ElementaryTypeName","src":"448:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3130,"mutability":"mutable","name":"incentivesController","nodeType":"VariableDeclaration","scope":3157,"src":"474:28:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3129,"name":"address","nodeType":"ElementaryTypeName","src":"474:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3132,"mutability":"mutable","name":"underlyingAssetName","nodeType":"VariableDeclaration","scope":3157,"src":"512:26:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3131,"name":"string","nodeType":"ElementaryTypeName","src":"512:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3134,"mutability":"mutable","name":"aTokenName","nodeType":"VariableDeclaration","scope":3157,"src":"548:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3133,"name":"string","nodeType":"ElementaryTypeName","src":"548:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3136,"mutability":"mutable","name":"aTokenSymbol","nodeType":"VariableDeclaration","scope":3157,"src":"575:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3135,"name":"string","nodeType":"ElementaryTypeName","src":"575:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3138,"mutability":"mutable","name":"variableDebtTokenName","nodeType":"VariableDeclaration","scope":3157,"src":"604:28:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3137,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3140,"mutability":"mutable","name":"variableDebtTokenSymbol","nodeType":"VariableDeclaration","scope":3157,"src":"642:30:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3139,"name":"string","nodeType":"ElementaryTypeName","src":"642:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3142,"mutability":"mutable","name":"stableDebtTokenName","nodeType":"VariableDeclaration","scope":3157,"src":"682:26:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3141,"name":"string","nodeType":"ElementaryTypeName","src":"682:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3144,"mutability":"mutable","name":"stableDebtTokenSymbol","nodeType":"VariableDeclaration","scope":3157,"src":"718:28:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3143,"name":"string","nodeType":"ElementaryTypeName","src":"718:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3146,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":3157,"src":"756:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3145,"name":"bytes","nodeType":"ElementaryTypeName","src":"756:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3148,"mutability":"mutable","name":"assetType","nodeType":"VariableDeclaration","scope":3157,"src":"778:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3147,"name":"uint8","nodeType":"ElementaryTypeName","src":"778:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3150,"mutability":"mutable","name":"collateralCap","nodeType":"VariableDeclaration","scope":3157,"src":"803:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3149,"name":"uint256","nodeType":"ElementaryTypeName","src":"803:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3152,"mutability":"mutable","name":"hasStrategy","nodeType":"VariableDeclaration","scope":3157,"src":"834:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3151,"name":"bool","nodeType":"ElementaryTypeName","src":"834:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3154,"mutability":"mutable","name":"usingGovernanceSetInterestRate","nodeType":"VariableDeclaration","scope":3157,"src":"860:35:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3153,"name":"bool","nodeType":"ElementaryTypeName","src":"860:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3156,"mutability":"mutable","name":"governanceSetInterestRate","nodeType":"VariableDeclaration","scope":3157,"src":"959:33:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3155,"name":"uint256","nodeType":"ElementaryTypeName","src":"959:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"InitReserveInput","nodeType":"StructDefinition","scope":3309,"src":"193:806:21","visibility":"public"},{"canonicalName":"DataTypes.InitReserveInputInternal","id":3163,"members":[{"constant":false,"id":3160,"mutability":"mutable","name":"input","nodeType":"VariableDeclaration","scope":3163,"src":"1047:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_InitReserveInput_$3157_storage_ptr","typeString":"struct DataTypes.InitReserveInput"},"typeName":{"id":3159,"nodeType":"UserDefinedTypeName","pathNode":{"id":3158,"name":"InitReserveInput","nodeType":"IdentifierPath","referencedDeclaration":3157,"src":"1047:16:21"},"referencedDeclaration":3157,"src":"1047:16:21","typeDescriptions":{"typeIdentifier":"t_struct$_InitReserveInput_$3157_storage_ptr","typeString":"struct DataTypes.InitReserveInput"}},"visibility":"internal"},{"constant":false,"id":3162,"mutability":"mutable","name":"trancheId","nodeType":"VariableDeclaration","scope":3163,"src":"1079:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3161,"name":"uint64","nodeType":"ElementaryTypeName","src":"1079:6:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"InitReserveInputInternal","nodeType":"StructDefinition","scope":3309,"src":"1005:97:21","visibility":"public"},{"canonicalName":"DataTypes.ReserveAssetType","id":3166,"members":[{"id":3164,"name":"AAVE","nodeType":"EnumValue","src":"1140:4:21"},{"id":3165,"name":"CURVE","nodeType":"EnumValue","src":"1154:5:21"}],"name":"ReserveAssetType","nodeType":"EnumDefinition","src":"1108:57:21"},{"canonicalName":"DataTypes.TrancheAddress","id":3171,"members":[{"constant":false,"id":3168,"mutability":"mutable","name":"trancheId","nodeType":"VariableDeclaration","scope":3171,"src":"1378:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3167,"name":"uint64","nodeType":"ElementaryTypeName","src":"1378:6:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3170,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":3171,"src":"1404:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3169,"name":"address","nodeType":"ElementaryTypeName","src":"1404:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"TrancheAddress","nodeType":"StructDefinition","scope":3309,"src":"1346:78:21","visibility":"public"},{"canonicalName":"DataTypes.ReserveData","id":3207,"members":[{"constant":false,"id":3174,"mutability":"mutable","name":"configuration","nodeType":"VariableDeclaration","scope":3207,"src":"1501:37:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$3210_storage_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"},"typeName":{"id":3173,"nodeType":"UserDefinedTypeName","pathNode":{"id":3172,"name":"ReserveConfigurationMap","nodeType":"IdentifierPath","referencedDeclaration":3210,"src":"1501:23:21"},"referencedDeclaration":3210,"src":"1501:23:21","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$3210_storage_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"}},"visibility":"internal"},{"constant":false,"id":3176,"mutability":"mutable","name":"liquidityIndex","nodeType":"VariableDeclaration","scope":3207,"src":"1596:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3175,"name":"uint128","nodeType":"ElementaryTypeName","src":"1596:7:21","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":3178,"mutability":"mutable","name":"variableBorrowIndex","nodeType":"VariableDeclaration","scope":3207,"src":"1712:27:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3177,"name":"uint128","nodeType":"ElementaryTypeName","src":"1712:7:21","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":3180,"mutability":"mutable","name":"currentLiquidityRate","nodeType":"VariableDeclaration","scope":3207,"src":"1835:28:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3179,"name":"uint128","nodeType":"ElementaryTypeName","src":"1835:7:21","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":3182,"mutability":"mutable","name":"currentVariableBorrowRate","nodeType":"VariableDeclaration","scope":3207,"src":"2016:33:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3181,"name":"uint128","nodeType":"ElementaryTypeName","src":"2016:7:21","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":3184,"mutability":"mutable","name":"currentStableBorrowRate","nodeType":"VariableDeclaration","scope":3207,"src":"2152:31:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3183,"name":"uint128","nodeType":"ElementaryTypeName","src":"2152:7:21","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":3186,"mutability":"mutable","name":"lastUpdateTimestamp","nodeType":"VariableDeclaration","scope":3207,"src":"2227:26:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":3185,"name":"uint40","nodeType":"ElementaryTypeName","src":"2227:6:21","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"},{"constant":false,"id":3188,"mutability":"mutable","name":"aTokenAddress","nodeType":"VariableDeclaration","scope":3207,"src":"2290:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3187,"name":"address","nodeType":"ElementaryTypeName","src":"2290:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3190,"mutability":"mutable","name":"stableDebtTokenAddress","nodeType":"VariableDeclaration","scope":3207,"src":"2321:30:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3189,"name":"address","nodeType":"ElementaryTypeName","src":"2321:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3192,"mutability":"mutable","name":"variableDebtTokenAddress","nodeType":"VariableDeclaration","scope":3207,"src":"2395:32:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3191,"name":"address","nodeType":"ElementaryTypeName","src":"2395:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3194,"mutability":"mutable","name":"interestRateStrategyAddress","nodeType":"VariableDeclaration","scope":3207,"src":"2519:35:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3193,"name":"address","nodeType":"ElementaryTypeName","src":"2519:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3196,"mutability":"mutable","name":"id","nodeType":"VariableDeclaration","scope":3207,"src":"2690:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3195,"name":"uint8","nodeType":"ElementaryTypeName","src":"2690:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3198,"mutability":"mutable","name":"trancheId","nodeType":"VariableDeclaration","scope":3207,"src":"2733:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3197,"name":"uint64","nodeType":"ElementaryTypeName","src":"2733:6:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3200,"mutability":"mutable","name":"collateralCap","nodeType":"VariableDeclaration","scope":3207,"src":"2759:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3199,"name":"uint256","nodeType":"ElementaryTypeName","src":"2759:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3202,"mutability":"mutable","name":"hasStrategy","nodeType":"VariableDeclaration","scope":3207,"src":"2839:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3201,"name":"bool","nodeType":"ElementaryTypeName","src":"2839:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3204,"mutability":"mutable","name":"usingGovernanceSetInterestRate","nodeType":"VariableDeclaration","scope":3207,"src":"3024:35:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3203,"name":"bool","nodeType":"ElementaryTypeName","src":"3024:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3206,"mutability":"mutable","name":"governanceSetInterestRate","nodeType":"VariableDeclaration","scope":3207,"src":"3123:33:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3205,"name":"uint256","nodeType":"ElementaryTypeName","src":"3123:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ReserveData","nodeType":"StructDefinition","scope":3309,"src":"1429:1734:21","visibility":"public"},{"canonicalName":"DataTypes.ReserveConfigurationMap","id":3210,"members":[{"constant":false,"id":3209,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":3210,"src":"3598:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3208,"name":"uint256","nodeType":"ElementaryTypeName","src":"3598:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ReserveConfigurationMap","nodeType":"StructDefinition","scope":3309,"src":"3210:407:21","visibility":"public"},{"canonicalName":"DataTypes.UserConfigurationMap","id":3213,"members":[{"constant":false,"id":3212,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":3213,"src":"3661:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3211,"name":"uint256","nodeType":"ElementaryTypeName","src":"3661:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"UserConfigurationMap","nodeType":"StructDefinition","scope":3309,"src":"3623:57:21","visibility":"public"},{"canonicalName":"DataTypes.InterestRateMode","id":3217,"members":[{"id":3214,"name":"NONE","nodeType":"EnumValue","src":"3718:4:21"},{"id":3215,"name":"STABLE","nodeType":"EnumValue","src":"3732:6:21"},{"id":3216,"name":"VARIABLE","nodeType":"EnumValue","src":"3748:8:21"}],"name":"InterestRateMode","nodeType":"EnumDefinition","src":"3686:76:21"},{"canonicalName":"DataTypes.AcctTranche","id":3222,"members":[{"constant":false,"id":3219,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":3222,"src":"3797:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3218,"name":"address","nodeType":"ElementaryTypeName","src":"3797:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3221,"mutability":"mutable","name":"trancheId","nodeType":"VariableDeclaration","scope":3222,"src":"3819:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3220,"name":"uint64","nodeType":"ElementaryTypeName","src":"3819:6:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"AcctTranche","nodeType":"StructDefinition","scope":3309,"src":"3768:74:21","visibility":"public"},{"canonicalName":"DataTypes.DepositVars","id":3235,"members":[{"constant":false,"id":3224,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":3235,"src":"3877:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3223,"name":"address","nodeType":"ElementaryTypeName","src":"3877:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3226,"mutability":"mutable","name":"trancheId","nodeType":"VariableDeclaration","scope":3235,"src":"3900:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3225,"name":"uint64","nodeType":"ElementaryTypeName","src":"3900:6:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3228,"mutability":"mutable","name":"_addressesProvider","nodeType":"VariableDeclaration","scope":3235,"src":"3926:26:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3227,"name":"address","nodeType":"ElementaryTypeName","src":"3926:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3230,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":3235,"src":"3962:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3229,"name":"uint256","nodeType":"ElementaryTypeName","src":"3962:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3232,"mutability":"mutable","name":"onBehalfOf","nodeType":"VariableDeclaration","scope":3235,"src":"3986:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3231,"name":"address","nodeType":"ElementaryTypeName","src":"3986:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3234,"mutability":"mutable","name":"referralCode","nodeType":"VariableDeclaration","scope":3235,"src":"4014:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3233,"name":"uint16","nodeType":"ElementaryTypeName","src":"4014:6:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"name":"DepositVars","nodeType":"StructDefinition","scope":3309,"src":"3848:192:21","visibility":"public"},{"canonicalName":"DataTypes.ExecuteBorrowParams","id":3258,"members":[{"constant":false,"id":3237,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":3258,"src":"4083:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3236,"name":"address","nodeType":"ElementaryTypeName","src":"4083:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3239,"mutability":"mutable","name":"trancheId","nodeType":"VariableDeclaration","scope":3258,"src":"4106:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3238,"name":"uint64","nodeType":"ElementaryTypeName","src":"4106:6:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3241,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":3258,"src":"4176:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3240,"name":"address","nodeType":"ElementaryTypeName","src":"4176:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3243,"mutability":"mutable","name":"onBehalfOf","nodeType":"VariableDeclaration","scope":3258,"src":"4198:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3242,"name":"address","nodeType":"ElementaryTypeName","src":"4198:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3245,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":3258,"src":"4226:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3244,"name":"uint256","nodeType":"ElementaryTypeName","src":"4226:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3247,"mutability":"mutable","name":"interestRateMode","nodeType":"VariableDeclaration","scope":3258,"src":"4250:24:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3246,"name":"uint256","nodeType":"ElementaryTypeName","src":"4250:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3249,"mutability":"mutable","name":"aTokenAddress","nodeType":"VariableDeclaration","scope":3258,"src":"4284:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3248,"name":"address","nodeType":"ElementaryTypeName","src":"4284:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3251,"mutability":"mutable","name":"referralCode","nodeType":"VariableDeclaration","scope":3258,"src":"4315:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3250,"name":"uint16","nodeType":"ElementaryTypeName","src":"4315:6:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3253,"mutability":"mutable","name":"releaseUnderlying","nodeType":"VariableDeclaration","scope":3258,"src":"4344:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3252,"name":"bool","nodeType":"ElementaryTypeName","src":"4344:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3255,"mutability":"mutable","name":"_maxStableRateBorrowSizePercent","nodeType":"VariableDeclaration","scope":3258,"src":"4376:39:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3254,"name":"uint256","nodeType":"ElementaryTypeName","src":"4376:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3257,"mutability":"mutable","name":"_reservesCount","nodeType":"VariableDeclaration","scope":3258,"src":"4425:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3256,"name":"uint256","nodeType":"ElementaryTypeName","src":"4425:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ExecuteBorrowParams","nodeType":"StructDefinition","scope":3309,"src":"4046:408:21","visibility":"public"},{"canonicalName":"DataTypes.WithdrawParams","id":3269,"members":[{"constant":false,"id":3260,"mutability":"mutable","name":"_reservesCount","nodeType":"VariableDeclaration","scope":3269,"src":"4492:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3259,"name":"uint256","nodeType":"ElementaryTypeName","src":"4492:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3262,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":3269,"src":"4524:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3261,"name":"address","nodeType":"ElementaryTypeName","src":"4524:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3264,"mutability":"mutable","name":"trancheId","nodeType":"VariableDeclaration","scope":3269,"src":"4547:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3263,"name":"uint64","nodeType":"ElementaryTypeName","src":"4547:6:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3266,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":3269,"src":"4573:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3265,"name":"uint256","nodeType":"ElementaryTypeName","src":"4573:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3268,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":3269,"src":"4597:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3267,"name":"address","nodeType":"ElementaryTypeName","src":"4597:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"WithdrawParams","nodeType":"StructDefinition","scope":3309,"src":"4460:154:21","visibility":"public"},{"canonicalName":"DataTypes.calculateInterestRatesVars","id":3280,"members":[{"constant":false,"id":3271,"mutability":"mutable","name":"reserve","nodeType":"VariableDeclaration","scope":3280,"src":"4664:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3270,"name":"address","nodeType":"ElementaryTypeName","src":"4664:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3273,"mutability":"mutable","name":"aToken","nodeType":"VariableDeclaration","scope":3280,"src":"4689:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3272,"name":"address","nodeType":"ElementaryTypeName","src":"4689:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3275,"mutability":"mutable","name":"liquidityAdded","nodeType":"VariableDeclaration","scope":3280,"src":"4713:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3274,"name":"uint256","nodeType":"ElementaryTypeName","src":"4713:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3277,"mutability":"mutable","name":"liquidityTaken","nodeType":"VariableDeclaration","scope":3280,"src":"4745:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3276,"name":"uint256","nodeType":"ElementaryTypeName","src":"4745:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3279,"mutability":"mutable","name":"reserveFactor","nodeType":"VariableDeclaration","scope":3280,"src":"4777:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3278,"name":"uint256","nodeType":"ElementaryTypeName","src":"4777:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"calculateInterestRatesVars","nodeType":"StructDefinition","scope":3309,"src":"4620:185:21","visibility":"public"},{"canonicalName":"DataTypes.flashLoanVars","id":3308,"members":[{"constant":false,"id":3282,"mutability":"mutable","name":"receiverAddress","nodeType":"VariableDeclaration","scope":3308,"src":"4842:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3281,"name":"address","nodeType":"ElementaryTypeName","src":"4842:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3285,"mutability":"mutable","name":"assets","nodeType":"VariableDeclaration","scope":3308,"src":"4875:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3283,"name":"address","nodeType":"ElementaryTypeName","src":"4875:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3284,"nodeType":"ArrayTypeName","src":"4875:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3287,"mutability":"mutable","name":"trancheId","nodeType":"VariableDeclaration","scope":3308,"src":"4901:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3286,"name":"uint64","nodeType":"ElementaryTypeName","src":"4901:6:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3290,"mutability":"mutable","name":"amounts","nodeType":"VariableDeclaration","scope":3308,"src":"4927:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3288,"name":"uint256","nodeType":"ElementaryTypeName","src":"4927:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3289,"nodeType":"ArrayTypeName","src":"4927:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3293,"mutability":"mutable","name":"modes","nodeType":"VariableDeclaration","scope":3308,"src":"4954:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3291,"name":"uint256","nodeType":"ElementaryTypeName","src":"4954:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3292,"nodeType":"ArrayTypeName","src":"4954:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3295,"mutability":"mutable","name":"onBehalfOf","nodeType":"VariableDeclaration","scope":3308,"src":"4979:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3294,"name":"address","nodeType":"ElementaryTypeName","src":"4979:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3297,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":3308,"src":"5007:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3296,"name":"bytes","nodeType":"ElementaryTypeName","src":"5007:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3299,"mutability":"mutable","name":"referralCode","nodeType":"VariableDeclaration","scope":3308,"src":"5029:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3298,"name":"uint16","nodeType":"ElementaryTypeName","src":"5029:6:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3301,"mutability":"mutable","name":"_flashLoanPremiumTotal","nodeType":"VariableDeclaration","scope":3308,"src":"5058:30:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3300,"name":"uint256","nodeType":"ElementaryTypeName","src":"5058:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3303,"mutability":"mutable","name":"oracle","nodeType":"VariableDeclaration","scope":3308,"src":"5098:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3302,"name":"address","nodeType":"ElementaryTypeName","src":"5098:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3305,"mutability":"mutable","name":"_maxStableRateBorrowSizePercent","nodeType":"VariableDeclaration","scope":3308,"src":"5122:39:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3304,"name":"uint256","nodeType":"ElementaryTypeName","src":"5122:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3307,"mutability":"mutable","name":"_addressesprovider","nodeType":"VariableDeclaration","scope":3308,"src":"5171:26:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3306,"name":"address","nodeType":"ElementaryTypeName","src":"5171:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"flashLoanVars","nodeType":"StructDefinition","scope":3309,"src":"4811:446:21","visibility":"public"}],"scope":3310,"src":"63:5196:21"}],"src":"37:5223:21"},"id":21}},"contracts":{"contracts/dependencies/openzeppelin/contracts/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206dae0a2b29d17c0d6dbe94cee41befcbb7588ebec1bef7cf3b0e8e209d388f2664736f6c63430008000033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0xAE0A2B29D17C0D6DBE94CEE41BEF 0xCB 0xB7 PC DUP15 0xBE 0xC1 0xBE 0xF7 0xCF EXTCODESIZE 0xE DUP15 KECCAK256 SWAP14 CODESIZE DUP16 0x26 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ","sourceMap":"131:2684:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;131:2684:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206dae0a2b29d17c0d6dbe94cee41befcbb7588ebec1bef7cf3b0e8e209d388f2664736f6c63430008000033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0xAE0A2B29D17C0D6DBE94CEE41BEF 0xCB 0xB7 PC DUP15 0xBE 0xC1 0xBE 0xF7 0xCF EXTCODESIZE 0xE DUP15 KECCAK256 SWAP14 CODESIZE DUP16 0x26 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ","sourceMap":"131:2684:0:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependencies/openzeppelin/contracts/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/Address.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\\n        // for accounts without code, i.e. `keccak256('')`\\n        // bytes32 codehash;\\n        // bytes32 accountHash =\\n        //     0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\n        // // solhint-disable-next-line no-inline-assembly\\n        // assembly {\\n        //     codehash := extcodehash(account)\\n        // }\\n        // return (codehash != accountHash && codehash != 0x0);\\n        return account.code.length > 0; //updated\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(\\n            address(this).balance >= amount,\\n            \\\"Address: insufficient balance\\\"\\n        );\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(\\n            success,\\n            \\\"Address: unable to send value, recipient may have reverted\\\"\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x37523692d5b121789b70f518a1639d6a978d5f863ae026b16cc45b823eecf157\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/dependencies/openzeppelin/contracts/Context.sol":{"Context":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependencies/openzeppelin/contracts/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x68bfa0a768a2c75bcc8ea4588200f8f78d5b20a785189855b4b301770db578cf\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/dependencies/openzeppelin/contracts/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependencies/openzeppelin/contracts/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount)\\n        external\\n        returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n}\\n\",\"keccak256\":\"0x6a0e7bdec11b28b6b88f25301cd51477bd0025846062465a158eee1144f10bd3\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/dependencies/openzeppelin/contracts/Ownable.sol":{"Ownable":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50600061001b61006a565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061006e565b3390565b6102c58061007d6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e610081565b005b610058610109565b6040516100659190610200565b60405180910390f35b61004e61007c3660046101d2565b610118565b6100896101ce565b6000546001600160a01b039081169116146100bf5760405162461bcd60e51b81526004016100b69061025a565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6101206101ce565b6000546001600160a01b0390811691161461014d5760405162461bcd60e51b81526004016100b69061025a565b6001600160a01b0381166101735760405162461bcd60e51b81526004016100b690610214565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b6000602082840312156101e3578081fd5b81356001600160a01b03811681146101f9578182fd5b9392505050565b6001600160a01b0391909116815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220f8ba0c146c58f60ab86dc71fea87685c4aab45eb5b67c516835c9c1cc184a20164736f6c63430008000033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH2 0x1B PUSH2 0x6A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH2 0x6E JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH2 0x2C5 DUP1 PUSH2 0x7D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x81 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x109 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x7C CALLDATASIZE PUSH1 0x4 PUSH2 0x1D2 JUMP JUMPDEST PUSH2 0x118 JUMP JUMPDEST PUSH2 0x89 PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xBF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6 SWAP1 PUSH2 0x25A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x14D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6 SWAP1 PUSH2 0x25A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x173 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6 SWAP1 PUSH2 0x214 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E3 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1F9 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 0xBA 0xC EQ PUSH13 0x58F60AB86DC71FEA87685C4AAB GASLIMIT 0xEB JUMPDEST PUSH8 0xC516835C9C1CC184 LOG2 ADD PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ","sourceMap":"578:1689:3:-:0;;;849:149;;;;;;;;;-1:-1:-1;873:17:3;893:12;:10;:12::i;:::-;915:6;:18;;-1:-1:-1;;;;;;915:18:3;-1:-1:-1;;;;;915:18:3;;;;;;;948:43;;915:18;;-1:-1:-1;915:18:3;948:43;;915:6;;948:43;849:149;578:1689;;590:96:1;669:10;590:96;:::o;578:1689:3:-;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1298:22","statements":[{"nodeType":"YulBlock","src":"6:3:22","statements":[]},{"body":{"nodeType":"YulBlock","src":"84:236:22","statements":[{"body":{"nodeType":"YulBlock","src":"130:26:22","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"139:6:22"},{"name":"value0","nodeType":"YulIdentifier","src":"147:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"132:6:22"},"nodeType":"YulFunctionCall","src":"132:22:22"},"nodeType":"YulExpressionStatement","src":"132:22:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"105:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"114:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"101:3:22"},"nodeType":"YulFunctionCall","src":"101:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"126:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"97:3:22"},"nodeType":"YulFunctionCall","src":"97:32:22"},"nodeType":"YulIf","src":"94:2:22"},{"nodeType":"YulVariableDeclaration","src":"165:36:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"191:9:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"178:12:22"},"nodeType":"YulFunctionCall","src":"178:23:22"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"169:5:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"264:26:22","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"273:6:22"},{"name":"value0","nodeType":"YulIdentifier","src":"281:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"266:6:22"},"nodeType":"YulFunctionCall","src":"266:22:22"},"nodeType":"YulExpressionStatement","src":"266:22:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"234:5:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"249:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"254:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"245:3:22"},"nodeType":"YulFunctionCall","src":"245:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"258:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"241:3:22"},"nodeType":"YulFunctionCall","src":"241:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"230:3:22"},"nodeType":"YulFunctionCall","src":"230:31:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"220:2:22"},"nodeType":"YulFunctionCall","src":"220:42:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"213:6:22"},"nodeType":"YulFunctionCall","src":"213:50:22"},"nodeType":"YulIf","src":"210:2:22"},{"nodeType":"YulAssignment","src":"299:15:22","value":{"name":"value","nodeType":"YulIdentifier","src":"309:5:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"299:6:22"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"50:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"61:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"73:6:22","type":""}],"src":"14:306:22"},{"body":{"nodeType":"YulBlock","src":"426:102:22","statements":[{"nodeType":"YulAssignment","src":"436:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"448:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"459:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"444:3:22"},"nodeType":"YulFunctionCall","src":"444:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"436:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"478:9:22"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"493:6:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"509:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"514:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"505:3:22"},"nodeType":"YulFunctionCall","src":"505:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"518:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"501:3:22"},"nodeType":"YulFunctionCall","src":"501:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"489:3:22"},"nodeType":"YulFunctionCall","src":"489:32:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"471:6:22"},"nodeType":"YulFunctionCall","src":"471:51:22"},"nodeType":"YulExpressionStatement","src":"471:51:22"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"395:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"406:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"417:4:22","type":""}],"src":"325:203:22"},{"body":{"nodeType":"YulBlock","src":"707:228:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"724:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"735:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"717:6:22"},"nodeType":"YulFunctionCall","src":"717:21:22"},"nodeType":"YulExpressionStatement","src":"717:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"758:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"769:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"754:3:22"},"nodeType":"YulFunctionCall","src":"754:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"774:2:22","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"747:6:22"},"nodeType":"YulFunctionCall","src":"747:30:22"},"nodeType":"YulExpressionStatement","src":"747:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"797:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"808:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"793:3:22"},"nodeType":"YulFunctionCall","src":"793:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"813:34:22","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"786:6:22"},"nodeType":"YulFunctionCall","src":"786:62:22"},"nodeType":"YulExpressionStatement","src":"786:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"868:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"879:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"864:3:22"},"nodeType":"YulFunctionCall","src":"864:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"884:8:22","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"857:6:22"},"nodeType":"YulFunctionCall","src":"857:36:22"},"nodeType":"YulExpressionStatement","src":"857:36:22"},{"nodeType":"YulAssignment","src":"902:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"914:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"925:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"910:3:22"},"nodeType":"YulFunctionCall","src":"910:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"902:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"684:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"698:4:22","type":""}],"src":"533:402:22"},{"body":{"nodeType":"YulBlock","src":"1114:182:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1131:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1142:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1124:6:22"},"nodeType":"YulFunctionCall","src":"1124:21:22"},"nodeType":"YulExpressionStatement","src":"1124:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1165:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1176:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1161:3:22"},"nodeType":"YulFunctionCall","src":"1161:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1154:6:22"},"nodeType":"YulFunctionCall","src":"1154:30:22"},"nodeType":"YulExpressionStatement","src":"1154:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1204:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1215:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1200:3:22"},"nodeType":"YulFunctionCall","src":"1200:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"1220:34:22","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1193:6:22"},"nodeType":"YulFunctionCall","src":"1193:62:22"},"nodeType":"YulExpressionStatement","src":"1193:62:22"},{"nodeType":"YulAssignment","src":"1264:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1276:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1287:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1272:3:22"},"nodeType":"YulFunctionCall","src":"1272:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1264:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1091:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1105:4:22","type":""}],"src":"940:356:22"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}","id":22,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e610081565b005b610058610109565b6040516100659190610200565b60405180910390f35b61004e61007c3660046101d2565b610118565b6100896101ce565b6000546001600160a01b039081169116146100bf5760405162461bcd60e51b81526004016100b69061025a565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6101206101ce565b6000546001600160a01b0390811691161461014d5760405162461bcd60e51b81526004016100b69061025a565b6001600160a01b0381166101735760405162461bcd60e51b81526004016100b690610214565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b6000602082840312156101e3578081fd5b81356001600160a01b03811681146101f9578182fd5b9392505050565b6001600160a01b0391909116815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220f8ba0c146c58f60ab86dc71fea87685c4aab45eb5b67c516835c9c1cc184a20164736f6c63430008000033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x81 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x109 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x7C CALLDATASIZE PUSH1 0x4 PUSH2 0x1D2 JUMP JUMPDEST PUSH2 0x118 JUMP JUMPDEST PUSH2 0x89 PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xBF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6 SWAP1 PUSH2 0x25A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x14D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6 SWAP1 PUSH2 0x25A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x173 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6 SWAP1 PUSH2 0x214 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E3 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1F9 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 0xBA 0xC EQ PUSH13 0x58F60AB86DC71FEA87685C4AAB GASLIMIT 0xEB JUMPDEST PUSH8 0xC516835C9C1CC184 LOG2 ADD PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ","sourceMap":"578:1689:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1697:145;;;:::i;:::-;;1074:77;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1991:274;;;;;;:::i;:::-;;:::i;1697:145::-;1288:12;:10;:12::i;:::-;1278:6;;-1:-1:-1;;;;;1278:6:3;;;:22;;;1270:67;;;;-1:-1:-1;;;1270:67:3;;;;;;;:::i;:::-;;;;;;;;;1803:1:::1;1787:6:::0;;1766:40:::1;::::0;-1:-1:-1;;;;;1787:6:3;;::::1;::::0;1766:40:::1;::::0;1803:1;;1766:40:::1;1833:1;1816:19:::0;;-1:-1:-1;;;;;;1816:19:3::1;::::0;;1697:145::o;1074:77::-;1112:7;1138:6;-1:-1:-1;;;;;1138:6:3;1074:77;:::o;1991:274::-;1288:12;:10;:12::i;:::-;1278:6;;-1:-1:-1;;;;;1278:6:3;;;:22;;;1270:67;;;;-1:-1:-1;;;1270:67:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;2092:22:3;::::1;2071:107;;;;-1:-1:-1::0;;;2071:107:3::1;;;;;;;:::i;:::-;2214:6;::::0;;2193:38:::1;::::0;-1:-1:-1;;;;;2193:38:3;;::::1;::::0;2214:6;::::1;::::0;2193:38:::1;::::0;::::1;2241:6;:17:::0;;-1:-1:-1;;;;;;2241:17:3::1;-1:-1:-1::0;;;;;2241:17:3;;;::::1;::::0;;;::::1;::::0;;1991:274::o;590:96:1:-;669:10;590:96;:::o;14:306:22:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;178:23;;-1:-1:-1;;;;;230:31:22;;220:42;;210:2;;281:6;273;266:22;210:2;309:5;84:236;-1:-1:-1;;;84:236:22:o;325:203::-;-1:-1:-1;;;;;489:32:22;;;;471:51;;459:2;444:18;;426:102::o;533:402::-;735:2;717:21;;;774:2;754:18;;;747:30;813:34;808:2;793:18;;786:62;-1:-1:-1;;;879:2:22;864:18;;857:36;925:3;910:19;;707:228::o;940:356::-;1142:2;1124:21;;;1161:18;;;1154:30;1220:34;1215:2;1200:18;;1193:62;1287:2;1272:18;;1114:182::o"},"gasEstimates":{"creation":{"codeDepositCost":"141800","executionCost":"22625","totalCost":"164425"},"external":{"owner()":"1070","renounceOwnership()":"24182","transferOwnership(address)":"24426"}},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x68bfa0a768a2c75bcc8ea4588200f8f78d5b20a785189855b4b301770db578cf\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0;\\n\\nimport \\\"./Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\ncontract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(\\n        address indexed previousOwner,\\n        address indexed newOwner\\n    );\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(\\n            newOwner != address(0),\\n            \\\"Ownable: new owner is the zero address\\\"\\n        );\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x27577f376012a863c1c6f74048b33a256a5521baa56167d27bc52d90a87fb1cb\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":161,"contract":"contracts/dependencies/openzeppelin/contracts/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/dependencies/openzeppelin/contracts/SafeERC20.sol":{"SafeERC20":{"abi":[],"devdoc":{"details":"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.","kind":"dev","methods":{},"title":"SafeERC20","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c1bdeb92bbd3f8d7b40c02ef9ae47ee05f24f6a949f6418f40ce5be454e0917a64736f6c63430008000033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 0xBD 0xEB SWAP3 0xBB 0xD3 0xF8 0xD7 0xB4 0xC MUL 0xEF SWAP11 0xE4 PUSH31 0xE05F24F6A949F6418F40CE5BE454E0917A64736F6C63430008000033000000 ","sourceMap":"635:1684:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;635:1684:4;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c1bdeb92bbd3f8d7b40c02ef9ae47ee05f24f6a949f6418f40ce5be454e0917a64736f6c63430008000033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 0xBD 0xEB SWAP3 0xBB 0xD3 0xF8 0xD7 0xB4 0xC MUL 0xEF SWAP11 0xE4 PUSH31 0xE05F24F6A949F6418F40CE5BE454E0917A64736F6C63430008000033000000 ","sourceMap":"635:1684:4:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"callOptionalReturn(contract IERC20,bytes memory)":"infinite","safeApprove(contract IERC20,address,uint256)":"infinite","safeTransfer(contract IERC20,address,uint256)":"infinite","safeTransferFrom(contract IERC20,address,address,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependencies/openzeppelin/contracts/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/Address.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\\n        // for accounts without code, i.e. `keccak256('')`\\n        // bytes32 codehash;\\n        // bytes32 accountHash =\\n        //     0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\n        // // solhint-disable-next-line no-inline-assembly\\n        // assembly {\\n        //     codehash := extcodehash(account)\\n        // }\\n        // return (codehash != accountHash && codehash != 0x0);\\n        return account.code.length > 0; //updated\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(\\n            address(this).balance >= amount,\\n            \\\"Address: insufficient balance\\\"\\n        );\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(\\n            success,\\n            \\\"Address: unable to send value, recipient may have reverted\\\"\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x37523692d5b121789b70f518a1639d6a978d5f863ae026b16cc45b823eecf157\",\"license\":\"agpl-3.0\"},\"contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount)\\n        external\\n        returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n}\\n\",\"keccak256\":\"0x6a0e7bdec11b28b6b88f25301cd51477bd0025846062465a158eee1144f10bd3\",\"license\":\"agpl-3.0\"},\"contracts/dependencies/openzeppelin/contracts/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {SafeMath} from \\\"./SafeMath.sol\\\";\\nimport {Address} from \\\"./Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        callOptionalReturn(\\n            token,\\n            abi.encodeWithSelector(token.transfer.selector, to, value)\\n        );\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        callOptionalReturn(\\n            token,\\n            abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\\n        );\\n    }\\n\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        callOptionalReturn(\\n            token,\\n            abi.encodeWithSelector(token.approve.selector, spender, value)\\n        );\\n    }\\n\\n    function callOptionalReturn(IERC20 token, bytes memory data) private {\\n        require(address(token).isContract(), \\\"SafeERC20: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        require(success, \\\"SafeERC20: low-level call failed\\\");\\n\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(\\n                abi.decode(returndata, (bool)),\\n                \\\"SafeERC20: ERC20 operation did not succeed\\\"\\n            );\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xb4f0a6930495daa6a124f1183b6caee5dc8283b230fa0d51ae90322f7ba24aad\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b)\\n        internal\\n        pure\\n        returns (bool, uint256)\\n    {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b)\\n        internal\\n        pure\\n        returns (bool, uint256)\\n    {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b)\\n        internal\\n        pure\\n        returns (bool, uint256)\\n    {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b)\\n        internal\\n        pure\\n        returns (bool, uint256)\\n    {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b)\\n        internal\\n        pure\\n        returns (bool, uint256)\\n    {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x92977dbde9b82328cac05a270258b1e93c9a0e1d4851786aac4d86e916bd54ca\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/dependencies/openzeppelin/contracts/SafeMath.sol":{"SafeMath":{"abi":[],"devdoc":{"details":"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220935574d0eac9dbfe747728dceb81136a274eb1ae8b922dacc301c243dc24409464736f6c63430008000033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 SSTORE PUSH21 0xD0EAC9DBFE747728DCEB81136A274EB1AE8B922DAC 0xC3 ADD 0xC2 NUMBER 0xDC 0x24 BLOCKHASH SWAP5 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ","sourceMap":"482:6440:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6440:5;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220935574d0eac9dbfe747728dceb81136a274eb1ae8b922dacc301c243dc24409464736f6c63430008000033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 SSTORE PUSH21 0xD0EAC9DBFE747728DCEB81136A274EB1AE8B922DAC 0xC3 ADD 0xC2 NUMBER 0xDC 0x24 BLOCKHASH SWAP5 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ","sourceMap":"482:6440:5:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"add(uint256,uint256)":"infinite","div(uint256,uint256)":"infinite","div(uint256,uint256,string memory)":"infinite","mod(uint256,uint256)":"infinite","mod(uint256,uint256,string memory)":"infinite","mul(uint256,uint256)":"infinite","sub(uint256,uint256)":"infinite","sub(uint256,uint256,string memory)":"infinite","tryAdd(uint256,uint256)":"infinite","tryDiv(uint256,uint256)":"infinite","tryMod(uint256,uint256)":"infinite","tryMul(uint256,uint256)":"infinite","trySub(uint256,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b)\\n        internal\\n        pure\\n        returns (bool, uint256)\\n    {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b)\\n        internal\\n        pure\\n        returns (bool, uint256)\\n    {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b)\\n        internal\\n        pure\\n        returns (bool, uint256)\\n    {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b)\\n        internal\\n        pure\\n        returns (bool, uint256)\\n    {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b)\\n        internal\\n        pure\\n        returns (bool, uint256)\\n    {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x92977dbde9b82328cac05a270258b1e93c9a0e1d4851786aac4d86e916bd54ca\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IChainlinkAggregator.sol":{"IChainlinkAggregator":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"int256","name":"current","type":"int256"},{"indexed":true,"internalType":"uint256","name":"roundId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"AnswerUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"roundId","type":"uint256"},{"indexed":true,"internalType":"address","name":"startedBy","type":"address"}],"name":"NewRound","type":"event"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"roundId","type":"uint256"}],"name":"getAnswer","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"roundId","type":"uint256"}],"name":"getTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestAnswer","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRound","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"decimals()":"313ce567","getAnswer(uint256)":"b5ab58dc","getTimestamp(uint256)":"b633620c","latestAnswer()":"50d25bcd","latestRound()":"668a0f02","latestTimestamp()":"8205bf6a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"int256\",\"name\":\"current\",\"type\":\"int256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"AnswerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"startedBy\",\"type\":\"address\"}],\"name\":\"NewRound\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"name\":\"getAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"name\":\"getTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IChainlinkAggregator.sol\":\"IChainlinkAggregator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IChainlinkAggregator.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\ninterface IChainlinkAggregator {\\n    function decimals() external view returns (uint8);\\n\\n    function latestAnswer() external view returns (int256);\\n\\n    function latestTimestamp() external view returns (uint256);\\n\\n    function latestRound() external view returns (uint256);\\n\\n    function getAnswer(uint256 roundId) external view returns (int256);\\n\\n    function getTimestamp(uint256 roundId) external view returns (uint256);\\n\\n    event AnswerUpdated(\\n        int256 indexed current,\\n        uint256 indexed roundId,\\n        uint256 timestamp\\n    );\\n    event NewRound(uint256 indexed roundId, address indexed startedBy);\\n}\\n\",\"keccak256\":\"0xe9b6c1724de16518dadf10284718004691a351a25b5348b81867f5ec58f67642\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/ILendingPoolAddressesProvider.sol":{"ILendingPoolAddressesProvider":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"id","type":"bytes32"},{"indexed":true,"internalType":"address","name":"newAddress","type":"address"},{"indexed":false,"internalType":"bool","name":"hasProxy","type":"bool"}],"name":"AddressSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newAddress","type":"address"},{"indexed":false,"internalType":"uint64","name":"trancheId","type":"uint64"}],"name":"ConfigurationAdminUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"CurveAddressProviderUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"CurvePriceOracleUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"CurvePriceOracleWrapperUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newAddress","type":"address"},{"indexed":false,"internalType":"uint64","name":"trancheId","type":"uint64"}],"name":"EmergencyAdminUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"LendingPoolCollateralManagerUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"LendingPoolConfiguratorUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"LendingPoolUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"LendingRateOracleUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"newMarketId","type":"string"}],"name":"MarketIdSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"PriceOracleUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"id","type":"bytes32"},{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"ProxyCreated","type":"event"},{"inputs":[{"internalType":"address","name":"admin","type":"address"},{"internalType":"uint64","name":"trancheId","type":"uint64"}],"name":"addEmergencyAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"admin","type":"address"},{"internalType":"uint64","name":"trancheId","type":"uint64"}],"name":"addPoolAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getAavePriceOracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"getAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"uint64","name":"trancheId","type":"uint64"}],"name":"getAddressTranche","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurvePriceOracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurvePriceOracleWrapper","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"trancheId","type":"uint64"}],"name":"getEmergencyAdmin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getGlobalAdmin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLendingPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLendingPoolCollateralManager","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLendingPoolConfigurator","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLendingRateOracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMarketId","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"trancheId","type":"uint64"}],"name":"getPoolAdmin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum DataTypes.ReserveAssetType","name":"assetType","type":"uint8"}],"name":"getPriceOracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"ad","type":"address"}],"name":"isWhitelistedAddress","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"priceOracle","type":"address"}],"name":"setAavePriceOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"address","name":"newAddress","type":"address"}],"name":"setAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"address","name":"impl","type":"address"}],"name":"setAddressAsProxy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"priceOracle","type":"address"}],"name":"setCurvePriceOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"priceOracle","type":"address"}],"name":"setCurvePriceOracleWrapper","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"admin","type":"address"},{"internalType":"uint64","name":"trancheId","type":"uint64"}],"name":"setEmergencyAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"setGlobalAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"manager","type":"address"}],"name":"setLendingPoolCollateralManager","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"configurator","type":"address"}],"name":"setLendingPoolConfiguratorImpl","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"setLendingPoolImpl","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"lendingRateOracle","type":"address"}],"name":"setLendingRateOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"marketId","type":"string"}],"name":"setMarketId","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"admin","type":"address"},{"internalType":"uint64","name":"trancheId","type":"uint64"}],"name":"setPoolAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Aave*","details":"Main registry of addresses part of or connected to the protocol, including permissioned roles - Acting also as factory of proxies and admin of those, so with right to change its implementations - Owned by the Aave Governance","kind":"dev","methods":{},"title":"LendingPoolAddressesProvider contract","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"addEmergencyAdmin(address,uint64)":"2b5f4e09","addPoolAdmin(address,uint64)":"ca7e6560","getAavePriceOracle()":"f139dc81","getAddress(bytes32)":"21f8a721","getAddressTranche(bytes32,uint64)":"96f13b22","getCurvePriceOracle()":"ba61fe31","getCurvePriceOracleWrapper()":"992ecae7","getEmergencyAdmin(uint64)":"a629f959","getGlobalAdmin()":"d60ed267","getLendingPool()":"0261bf8b","getLendingPoolCollateralManager()":"712d9171","getLendingPoolConfigurator()":"85c858b1","getLendingRateOracle()":"3618abba","getMarketId()":"568ef470","getPoolAdmin(uint64)":"0847b4a3","getPriceOracle(uint8)":"1a9dffb3","isWhitelistedAddress(address)":"5fae0576","setAavePriceOracle(address)":"985420f4","setAddress(bytes32,address)":"ca446dd9","setAddressAsProxy(bytes32,address)":"5dcc528c","setCurvePriceOracle(address)":"0aafb34e","setCurvePriceOracleWrapper(address)":"e4bc9d64","setEmergencyAdmin(address,uint64)":"1cad0509","setGlobalAdmin(address)":"c52bc31d","setLendingPoolCollateralManager(address)":"398e5553","setLendingPoolConfiguratorImpl(address)":"c12542df","setLendingPoolImpl(address)":"5aef021f","setLendingRateOracle(address)":"820d1274","setMarketId(string)":"f67b1847","setPoolAdmin(address,uint64)":"847276b8"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"hasProxy\",\"type\":\"bool\"}],\"name\":\"AddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"trancheId\",\"type\":\"uint64\"}],\"name\":\"ConfigurationAdminUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"CurveAddressProviderUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"CurvePriceOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"CurvePriceOracleWrapperUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"trancheId\",\"type\":\"uint64\"}],\"name\":\"EmergencyAdminUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingPoolCollateralManagerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingPoolConfiguratorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingPoolUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingRateOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newMarketId\",\"type\":\"string\"}],\"name\":\"MarketIdSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PriceOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ProxyCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"trancheId\",\"type\":\"uint64\"}],\"name\":\"addEmergencyAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"trancheId\",\"type\":\"uint64\"}],\"name\":\"addPoolAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAavePriceOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"trancheId\",\"type\":\"uint64\"}],\"name\":\"getAddressTranche\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurvePriceOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurvePriceOracleWrapper\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"trancheId\",\"type\":\"uint64\"}],\"name\":\"getEmergencyAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGlobalAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingPoolCollateralManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingPoolConfigurator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingRateOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMarketId\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"trancheId\",\"type\":\"uint64\"}],\"name\":\"getPoolAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum DataTypes.ReserveAssetType\",\"name\":\"assetType\",\"type\":\"uint8\"}],\"name\":\"getPriceOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ad\",\"type\":\"address\"}],\"name\":\"isWhitelistedAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceOracle\",\"type\":\"address\"}],\"name\":\"setAavePriceOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"impl\",\"type\":\"address\"}],\"name\":\"setAddressAsProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceOracle\",\"type\":\"address\"}],\"name\":\"setCurvePriceOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceOracle\",\"type\":\"address\"}],\"name\":\"setCurvePriceOracleWrapper\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"trancheId\",\"type\":\"uint64\"}],\"name\":\"setEmergencyAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"setGlobalAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"setLendingPoolCollateralManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"configurator\",\"type\":\"address\"}],\"name\":\"setLendingPoolConfiguratorImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"setLendingPoolImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lendingRateOracle\",\"type\":\"address\"}],\"name\":\"setLendingRateOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"marketId\",\"type\":\"string\"}],\"name\":\"setMarketId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"trancheId\",\"type\":\"uint64\"}],\"name\":\"setPoolAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave*\",\"details\":\"Main registry of addresses part of or connected to the protocol, including permissioned roles - Acting also as factory of proxies and admin of those, so with right to change its implementations - Owned by the Aave Governance\",\"kind\":\"dev\",\"methods\":{},\"title\":\"LendingPoolAddressesProvider contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ILendingPoolAddressesProvider.sol\":\"ILendingPoolAddressesProvider\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ILendingPoolAddressesProvider.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\nimport {DataTypes} from \\\"../protocol/libraries/types/DataTypes.sol\\\";\\n\\n/**\\n * @title LendingPoolAddressesProvider contract\\n * @dev Main registry of addresses part of or connected to the protocol, including permissioned roles\\n * - Acting also as factory of proxies and admin of those, so with right to change its implementations\\n * - Owned by the Aave Governance\\n * @author Aave\\n **/\\ninterface ILendingPoolAddressesProvider {\\n    event MarketIdSet(string newMarketId);\\n    event LendingPoolUpdated(address indexed newAddress);\\n    event ConfigurationAdminUpdated(\\n        address indexed newAddress,\\n        uint64 trancheId\\n    );\\n    event EmergencyAdminUpdated(address indexed newAddress, uint64 trancheId);\\n    event LendingPoolConfiguratorUpdated(address indexed newAddress);\\n    event LendingPoolCollateralManagerUpdated(address indexed newAddress);\\n    event PriceOracleUpdated(address indexed newAddress);\\n    event CurvePriceOracleUpdated(address indexed newAddress);\\n    event CurvePriceOracleWrapperUpdated(address indexed newAddress);\\n    event CurveAddressProviderUpdated(address indexed newAddress);\\n    event LendingRateOracleUpdated(address indexed newAddress);\\n    event ProxyCreated(bytes32 id, address indexed newAddress);\\n    event AddressSet(bytes32 id, address indexed newAddress, bool hasProxy);\\n\\n    function getMarketId() external view returns (string memory);\\n\\n    function setMarketId(string calldata marketId) external;\\n\\n    function setAddress(bytes32 id, address newAddress) external;\\n\\n    function setAddressAsProxy(bytes32 id, address impl) external;\\n\\n    function getAddress(bytes32 id) external view returns (address);\\n\\n    function getLendingPool() external view returns (address);\\n\\n    function setLendingPoolImpl(address pool) external;\\n\\n    function getLendingPoolConfigurator() external view returns (address);\\n\\n    function setLendingPoolConfiguratorImpl(address configurator) external;\\n\\n    function getLendingPoolCollateralManager() external view returns (address);\\n\\n    function setLendingPoolCollateralManager(address manager) external;\\n\\n    //********************************************************** */\\n    //permissionless tranches changes\\n    function getPoolAdmin(uint64 trancheId) external view returns (address); //this depends on trancheId. Different admin for different tranches\\n\\n    function getGlobalAdmin() external view returns (address);\\n\\n    function setGlobalAdmin(address admin) external;\\n\\n    function setPoolAdmin(address admin, uint64 trancheId) external; //this depends on trancheId\\n\\n    function getEmergencyAdmin(uint64 trancheId)\\n        external\\n        view\\n        returns (address); //this depends on trancheId\\n\\n    function setEmergencyAdmin(address admin, uint64 trancheId) external; //this depends on trancheId\\n\\n    function addPoolAdmin(address admin, uint64 trancheId) external;\\n\\n    function addEmergencyAdmin(address admin, uint64 trancheId) external;\\n\\n    function getAddressTranche(bytes32 id, uint64 trancheId)\\n        external\\n        view\\n        returns (address);\\n\\n    function isWhitelistedAddress(address ad) external view returns (bool);\\n\\n    //********************************************************** */\\n    function getPriceOracle(DataTypes.ReserveAssetType assetType)\\n        external\\n        view\\n        returns (address); //this might also depend on trancheId if some configurators choose to\\n\\n    function getAavePriceOracle() external view returns (address);\\n\\n    function getCurvePriceOracle() external view returns (address);\\n\\n    function getCurvePriceOracleWrapper() external view returns (address);\\n\\n    // function getCurveAddressProvider() external view returns (address);\\n\\n    function setAavePriceOracle(address priceOracle) external;\\n\\n    // function setCurveAddressProvider(address addressProvider) external;\\n\\n    function setCurvePriceOracle(address priceOracle) external;\\n\\n    function setCurvePriceOracleWrapper(address priceOracle) external;\\n\\n    function getLendingRateOracle() external view returns (address); //this oracle determines the stable borrow rate for a reserve. Should only need one, since it is based off the address of the reserve, which is unique for every asset in each tranche in each pool. Governance manually sets this\\n\\n    function setLendingRateOracle(address lendingRateOracle) external;\\n}\\n\",\"keccak256\":\"0x495bb7e0a6d1b3c75eb63efa7b95c704ccf3d81ed312dae75cc24633b266b08a\",\"license\":\"agpl-3.0\"},\"contracts/protocol/libraries/types/DataTypes.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\nlibrary DataTypes {\\n    // refer to the whitepaper, section 1.1 basic concepts for a formal description of these properties.\\n\\n    struct InitReserveInput {\\n        address aTokenImpl;\\n        address stableDebtTokenImpl;\\n        address variableDebtTokenImpl;\\n        uint8 underlyingAssetDecimals;\\n        address interestRateStrategyAddress;\\n        address underlyingAsset;\\n        address treasury;\\n        address incentivesController;\\n        string underlyingAssetName;\\n        string aTokenName;\\n        string aTokenSymbol;\\n        string variableDebtTokenName;\\n        string variableDebtTokenSymbol;\\n        string stableDebtTokenName;\\n        string stableDebtTokenSymbol;\\n        bytes params;\\n        uint8 assetType;\\n        uint256 collateralCap;\\n        bool hasStrategy;\\n        bool usingGovernanceSetInterestRate; //if true, then the reserves that has this asset will\\n        uint256 governanceSetInterestRate;\\n    }\\n\\n    struct InitReserveInputInternal {\\n        InitReserveInput input;\\n        uint64 trancheId;\\n    }\\n\\n    enum ReserveAssetType {\\n        AAVE,\\n        CURVE\\n    } //update with other possible types of the underlying asset\\n    //AAVE is the original assets in the aave protocol\\n    //CURVE is the new LP tokens we are providing support for\\n    struct TrancheAddress {\\n        uint64 trancheId;\\n        address asset;\\n    }\\n    struct ReserveData {\\n        //stores the reserve configuration\\n        ReserveConfigurationMap configuration;\\n        //the liquidity index. Expressed in ray\\n        uint128 liquidityIndex; //not used for nonlendable assets\\n        //variable borrow index. Expressed in ray\\n        uint128 variableBorrowIndex; //not used for nonlendable assets\\n        //the current supply rate. Expressed in ray\\n        uint128 currentLiquidityRate; //deposit APR is defined as liquidityRate / RAY //not used for nonlendable assets\\n        //the current variable borrow rate. Expressed in ray\\n        uint128 currentVariableBorrowRate; //not used for nonlendable assets\\n        //the current stable borrow rate. Expressed in ray\\n        uint128 currentStableBorrowRate; //not used for nonlendable assets\\n        uint40 lastUpdateTimestamp;\\n        //tokens addresses\\n        address aTokenAddress;\\n        address stableDebtTokenAddress; //not used for nonlendable assets\\n        address variableDebtTokenAddress; //not used for nonlendable assets\\n        //address of the interest rate strategy\\n        address interestRateStrategyAddress; //not used for nonlendable assets\\n        //the id of the reserve. Represents the position in the list of the active reserves\\n        uint8 id;\\n        //maybe consider\\n        uint64 trancheId;\\n        uint256 collateralCap; //this can definitely be different per trancheId\\n        bool hasStrategy; //this might be put as a property of a reserve rather than property of the asset since USDC might have a trancheId that has a strategy, but unlikely to happen\\n        bool usingGovernanceSetInterestRate; //if true, then the reserves that has this asset will\\n        uint256 governanceSetInterestRate;\\n    }\\n\\n    // uint8 constant NUM_TRANCHES = 3;\\n\\n    struct ReserveConfigurationMap {\\n        //bit 0-15: LTV\\n        //bit 16-31: Liq. threshold\\n        //bit 32-47: Liq. bonus\\n        //bit 48-55: Decimals\\n        //bit 56: Reserve is active\\n        //bit 57: reserve is frozen\\n        //bit 58: borrowing is enabled\\n        //bit 59: stable rate borrowing enabled\\n        //bit 60-63: reserved\\n        //bit 64-79: reserve factor\\n        uint256 data;\\n    }\\n\\n    struct UserConfigurationMap {\\n        uint256 data;\\n    }\\n\\n    enum InterestRateMode {\\n        NONE,\\n        STABLE,\\n        VARIABLE\\n    }\\n\\n    struct AcctTranche {\\n        address user;\\n        uint64 trancheId;\\n    }\\n\\n    struct DepositVars {\\n        address asset;\\n        uint64 trancheId;\\n        address _addressesProvider;\\n        uint256 amount;\\n        address onBehalfOf;\\n        uint16 referralCode;\\n    }\\n\\n    struct ExecuteBorrowParams {\\n        address asset;\\n        uint64 trancheId; //trancheId the user wants to borrow out of\\n        address user;\\n        address onBehalfOf;\\n        uint256 amount;\\n        uint256 interestRateMode;\\n        address aTokenAddress;\\n        uint16 referralCode;\\n        bool releaseUnderlying;\\n        uint256 _maxStableRateBorrowSizePercent;\\n        uint256 _reservesCount;\\n    }\\n\\n    struct WithdrawParams {\\n        uint256 _reservesCount;\\n        address asset;\\n        uint64 trancheId;\\n        uint256 amount;\\n        address to;\\n    }\\n\\n    struct calculateInterestRatesVars {\\n        address reserve;\\n        address aToken;\\n        uint256 liquidityAdded;\\n        uint256 liquidityTaken;\\n        uint256 reserveFactor;\\n    }\\n\\n    struct flashLoanVars {\\n        address receiverAddress;\\n        address[] assets;\\n        uint64 trancheId;\\n        uint256[] amounts;\\n        uint256[] modes;\\n        address onBehalfOf;\\n        bytes params;\\n        uint16 referralCode;\\n        uint256 _flashLoanPremiumTotal;\\n        address oracle;\\n        uint256 _maxStableRateBorrowSizePercent;\\n        address _addressesprovider;\\n        // mapping(uint8 => uint256) _reservesCount;\\n    }\\n}\\n\",\"keccak256\":\"0x6ffba536d5198c4ba1fe00a569f065823b6595f710b1baa920018612a35881d1\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IPriceOracleGetter.sol":{"IPriceOracleGetter":{"abi":[{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getAssetPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"getAssetPrice(address)":{"details":"returns the asset price in ETH","params":{"asset":"the address of the asset"},"returns":{"_0":"the ETH price of the asset*"}}},"title":"IPriceOracleGetter interface","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getAssetPrice(address)":"b3596f07"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getAssetPrice(address)\":{\"details\":\"returns the asset price in ETH\",\"params\":{\"asset\":\"the address of the asset\"},\"returns\":{\"_0\":\"the ETH price of the asset*\"}}},\"title\":\"IPriceOracleGetter interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Interface for the Aave price oracle.*\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IPriceOracleGetter.sol\":\"IPriceOracleGetter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IPriceOracleGetter.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\n/**\\n * @title IPriceOracleGetter interface\\n * @notice Interface for the Aave price oracle.\\n **/\\n\\ninterface IPriceOracleGetter {\\n    /**\\n     * @dev returns the asset price in ETH\\n     * @param asset the address of the asset\\n     * @return the ETH price of the asset\\n     **/\\n    function getAssetPrice(address asset) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xd0ddd343f94683ab5210c629a098a2d306433543e9ac0d6d3841672f8166f260\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"Interface for the Aave price oracle.*","version":1}}},"contracts/misc/AaveOracle.sol":{"AaveOracle":{"abi":[{"inputs":[{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"address[]","name":"sources","type":"address[]"},{"internalType":"address","name":"fallbackOracle","type":"address"},{"internalType":"address","name":"baseCurrency","type":"address"},{"internalType":"uint256","name":"baseCurrencyUnit","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"asset","type":"address"},{"indexed":true,"internalType":"address","name":"source","type":"address"}],"name":"AssetSourceUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"baseCurrency","type":"address"},{"indexed":false,"internalType":"uint256","name":"baseCurrencyUnit","type":"uint256"}],"name":"BaseCurrencySet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"fallbackOracle","type":"address"}],"name":"FallbackOracleUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"BASE_CURRENCY","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"BASE_CURRENCY_UNIT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getAssetPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"assets","type":"address[]"}],"name":"getAssetsPrices","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getFallbackOracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getSourceOfAsset","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"address[]","name":"sources","type":"address[]"}],"name":"setAssetSources","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"fallbackOracle","type":"address"}],"name":"setFallbackOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Aave","kind":"dev","methods":{"constructor":{"params":{"assets":"The addresses of the assets","baseCurrency":"the base currency used for the price quotes. If USD is used, base currency is 0x0","baseCurrencyUnit":"the unit of the base currency","fallbackOracle":"The address of the fallback oracle to use if the data of an        aggregator is not consistent","sources":"The address of the source of each asset"}},"getAssetPrice(address)":{"params":{"asset":"The asset address"}},"getAssetsPrices(address[])":{"params":{"assets":"The list of assets addresses"}},"getFallbackOracle()":{"returns":{"_0":"address The addres of the fallback oracle"}},"getSourceOfAsset(address)":{"params":{"asset":"The address of the asset"},"returns":{"_0":"address The address of the source"}},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setAssetSources(address[],address[])":{"params":{"assets":"The addresses of the assets","sources":"The address of the source of each asset"}},"setFallbackOracle(address)":{"params":{"fallbackOracle":"The address of the fallbackOracle"}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"title":"AaveOracle","version":1},"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2957:22","statements":[{"nodeType":"YulBlock","src":"6:3:22","statements":[]},{"body":{"nodeType":"YulBlock","src":"76:117:22","statements":[{"nodeType":"YulAssignment","src":"86:22:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"101:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"95:5:22"},"nodeType":"YulFunctionCall","src":"95:13:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"86:5:22"}]},{"body":{"nodeType":"YulBlock","src":"171:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"180:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"183:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"173:6:22"},"nodeType":"YulFunctionCall","src":"173:12:22"},"nodeType":"YulExpressionStatement","src":"173:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"130:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"141:5:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"156:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"161:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"152:3:22"},"nodeType":"YulFunctionCall","src":"152:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"165:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"148:3:22"},"nodeType":"YulFunctionCall","src":"148:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"137:3:22"},"nodeType":"YulFunctionCall","src":"137:31:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"127:2:22"},"nodeType":"YulFunctionCall","src":"127:42:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"120:6:22"},"nodeType":"YulFunctionCall","src":"120:50:22"},"nodeType":"YulIf","src":"117:2:22"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"55:6:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"66:5:22","type":""}],"src":"14:179:22"},{"body":{"nodeType":"YulBlock","src":"279:868:22","statements":[{"body":{"nodeType":"YulBlock","src":"328:24:22","statements":[{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"337:5:22"},{"name":"array","nodeType":"YulIdentifier","src":"344:5:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"330:6:22"},"nodeType":"YulFunctionCall","src":"330:20:22"},"nodeType":"YulExpressionStatement","src":"330:20:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"307:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"315:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"303:3:22"},"nodeType":"YulFunctionCall","src":"303:17:22"},{"name":"end","nodeType":"YulIdentifier","src":"322:3:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"299:3:22"},"nodeType":"YulFunctionCall","src":"299:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"292:6:22"},"nodeType":"YulFunctionCall","src":"292:35:22"},"nodeType":"YulIf","src":"289:2:22"},{"nodeType":"YulVariableDeclaration","src":"361:23:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"377:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"371:5:22"},"nodeType":"YulFunctionCall","src":"371:13:22"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"365:2:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"393:14:22","value":{"kind":"number","nodeType":"YulLiteral","src":"403:4:22","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"397:2:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"416:28:22","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"434:2:22","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"438:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"430:3:22"},"nodeType":"YulFunctionCall","src":"430:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"442:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"426:3:22"},"nodeType":"YulFunctionCall","src":"426:18:22"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"420:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"467:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"469:16:22"},"nodeType":"YulFunctionCall","src":"469:18:22"},"nodeType":"YulExpressionStatement","src":"469:18:22"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"459:2:22"},{"name":"_3","nodeType":"YulIdentifier","src":"463:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"456:2:22"},"nodeType":"YulFunctionCall","src":"456:10:22"},"nodeType":"YulIf","src":"453:2:22"},{"nodeType":"YulVariableDeclaration","src":"498:21:22","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"512:2:22"},{"name":"_2","nodeType":"YulIdentifier","src":"516:2:22"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"508:3:22"},"nodeType":"YulFunctionCall","src":"508:11:22"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"502:2:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"528:23:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"548:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"542:5:22"},"nodeType":"YulFunctionCall","src":"542:9:22"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"532:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"560:42:22","value":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"586:6:22"},{"name":"_4","nodeType":"YulIdentifier","src":"594:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"582:3:22"},"nodeType":"YulFunctionCall","src":"582:15:22"},{"name":"_2","nodeType":"YulIdentifier","src":"599:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"578:3:22"},"nodeType":"YulFunctionCall","src":"578:24:22"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"564:10:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"661:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"663:16:22"},"nodeType":"YulFunctionCall","src":"663:18:22"},"nodeType":"YulExpressionStatement","src":"663:18:22"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"620:10:22"},{"name":"_3","nodeType":"YulIdentifier","src":"632:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"617:2:22"},"nodeType":"YulFunctionCall","src":"617:18:22"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"640:10:22"},{"name":"memPtr","nodeType":"YulIdentifier","src":"652:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"637:2:22"},"nodeType":"YulFunctionCall","src":"637:22:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"614:2:22"},"nodeType":"YulFunctionCall","src":"614:46:22"},"nodeType":"YulIf","src":"611:2:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"699:2:22","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"703:10:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"692:6:22"},"nodeType":"YulFunctionCall","src":"692:22:22"},"nodeType":"YulExpressionStatement","src":"692:22:22"},{"nodeType":"YulVariableDeclaration","src":"723:17:22","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"734:6:22"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"727:3:22","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"756:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"764:2:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"749:6:22"},"nodeType":"YulFunctionCall","src":"749:18:22"},"nodeType":"YulExpressionStatement","src":"749:18:22"},{"nodeType":"YulAssignment","src":"776:22:22","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"787:6:22"},{"name":"_2","nodeType":"YulIdentifier","src":"795:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"783:3:22"},"nodeType":"YulFunctionCall","src":"783:15:22"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"776:3:22"}]},{"nodeType":"YulVariableDeclaration","src":"807:26:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"822:6:22"},{"name":"_2","nodeType":"YulIdentifier","src":"830:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"818:3:22"},"nodeType":"YulFunctionCall","src":"818:15:22"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"811:3:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"879:24:22","statements":[{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"888:5:22"},{"name":"array","nodeType":"YulIdentifier","src":"895:5:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"881:6:22"},"nodeType":"YulFunctionCall","src":"881:20:22"},"nodeType":"YulExpressionStatement","src":"881:20:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"856:6:22"},{"name":"_4","nodeType":"YulIdentifier","src":"864:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"852:3:22"},"nodeType":"YulFunctionCall","src":"852:15:22"},{"name":"_2","nodeType":"YulIdentifier","src":"869:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"848:3:22"},"nodeType":"YulFunctionCall","src":"848:24:22"},{"name":"end","nodeType":"YulIdentifier","src":"874:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"845:2:22"},"nodeType":"YulFunctionCall","src":"845:33:22"},"nodeType":"YulIf","src":"842:2:22"},{"nodeType":"YulVariableDeclaration","src":"912:14:22","value":{"name":"array","nodeType":"YulIdentifier","src":"921:5:22"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"916:1:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"980:137:22","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1001:3:22"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1038:3:22"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1006:31:22"},"nodeType":"YulFunctionCall","src":"1006:36:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"994:6:22"},"nodeType":"YulFunctionCall","src":"994:49:22"},"nodeType":"YulExpressionStatement","src":"994:49:22"},{"nodeType":"YulAssignment","src":"1056:19:22","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1067:3:22"},{"name":"_2","nodeType":"YulIdentifier","src":"1072:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1063:3:22"},"nodeType":"YulFunctionCall","src":"1063:12:22"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"1056:3:22"}]},{"nodeType":"YulAssignment","src":"1088:19:22","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1099:3:22"},{"name":"_2","nodeType":"YulIdentifier","src":"1104:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1095:3:22"},"nodeType":"YulFunctionCall","src":"1095:12:22"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"1088:3:22"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"946:1:22"},{"name":"_1","nodeType":"YulIdentifier","src":"949:2:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"943:2:22"},"nodeType":"YulFunctionCall","src":"943:9:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"953:18:22","statements":[{"nodeType":"YulAssignment","src":"955:14:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"964:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"967:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"960:3:22"},"nodeType":"YulFunctionCall","src":"960:9:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"955:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"939:3:22","statements":[]},"src":"935:182:22"},{"nodeType":"YulAssignment","src":"1126:15:22","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1135:6:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1126:5:22"}]}]},"name":"abi_decode_t_array$_t_address_$dyn_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"253:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"261:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"269:5:22","type":""}],"src":"198:949:22"},{"body":{"nodeType":"YulBlock","src":"1351:694:22","statements":[{"body":{"nodeType":"YulBlock","src":"1398:26:22","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"1407:6:22"},{"name":"value4","nodeType":"YulIdentifier","src":"1415:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1400:6:22"},"nodeType":"YulFunctionCall","src":"1400:22:22"},"nodeType":"YulExpressionStatement","src":"1400:22:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1372:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"1381:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1368:3:22"},"nodeType":"YulFunctionCall","src":"1368:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"1393:3:22","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1364:3:22"},"nodeType":"YulFunctionCall","src":"1364:33:22"},"nodeType":"YulIf","src":"1361:2:22"},{"nodeType":"YulVariableDeclaration","src":"1433:30:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1453:9:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1447:5:22"},"nodeType":"YulFunctionCall","src":"1447:16:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1437:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1472:28:22","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1490:2:22","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1494:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1486:3:22"},"nodeType":"YulFunctionCall","src":"1486:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"1498:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1482:3:22"},"nodeType":"YulFunctionCall","src":"1482:18:22"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1476:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"1527:26:22","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"1536:6:22"},{"name":"value4","nodeType":"YulIdentifier","src":"1544:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:22"},"nodeType":"YulFunctionCall","src":"1529:22:22"},"nodeType":"YulExpressionStatement","src":"1529:22:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1515:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"1523:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1512:2:22"},"nodeType":"YulFunctionCall","src":"1512:14:22"},"nodeType":"YulIf","src":"1509:2:22"},{"nodeType":"YulAssignment","src":"1562:88:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1622:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"1633:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1618:3:22"},"nodeType":"YulFunctionCall","src":"1618:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1642:7:22"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_fromMemory","nodeType":"YulIdentifier","src":"1572:45:22"},"nodeType":"YulFunctionCall","src":"1572:78:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1562:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"1659:41:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1685:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1696:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1681:3:22"},"nodeType":"YulFunctionCall","src":"1681:18:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1675:5:22"},"nodeType":"YulFunctionCall","src":"1675:25:22"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1663:8:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"1729:26:22","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"1738:6:22"},{"name":"value4","nodeType":"YulIdentifier","src":"1746:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1731:6:22"},"nodeType":"YulFunctionCall","src":"1731:22:22"},"nodeType":"YulExpressionStatement","src":"1731:22:22"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1715:8:22"},{"name":"_1","nodeType":"YulIdentifier","src":"1725:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1712:2:22"},"nodeType":"YulFunctionCall","src":"1712:16:22"},"nodeType":"YulIf","src":"1709:2:22"},{"nodeType":"YulAssignment","src":"1764:90:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1824:9:22"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1835:8:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1820:3:22"},"nodeType":"YulFunctionCall","src":"1820:24:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1846:7:22"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_fromMemory","nodeType":"YulIdentifier","src":"1774:45:22"},"nodeType":"YulFunctionCall","src":"1774:80:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1764:6:22"}]},{"nodeType":"YulAssignment","src":"1863:61:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1909:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1920:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1905:3:22"},"nodeType":"YulFunctionCall","src":"1905:18:22"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1873:31:22"},"nodeType":"YulFunctionCall","src":"1873:51:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1863:6:22"}]},{"nodeType":"YulAssignment","src":"1933:61:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1979:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1990:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1975:3:22"},"nodeType":"YulFunctionCall","src":"1975:18:22"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1943:31:22"},"nodeType":"YulFunctionCall","src":"1943:51:22"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1933:6:22"}]},{"nodeType":"YulAssignment","src":"2003:36:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2023:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2034:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2019:3:22"},"nodeType":"YulFunctionCall","src":"2019:19:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2013:5:22"},"nodeType":"YulFunctionCall","src":"2013:26:22"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"2003:6:22"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptrt_addresst_addresst_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1285:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1296:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1308:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1316:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1324:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1332:6:22","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1340:6:22","type":""}],"src":"1152:893:22"},{"body":{"nodeType":"YulBlock","src":"2224:176:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2241:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2252:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2234:6:22"},"nodeType":"YulFunctionCall","src":"2234:21:22"},"nodeType":"YulExpressionStatement","src":"2234:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2275:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2286:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2271:3:22"},"nodeType":"YulFunctionCall","src":"2271:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"2291:2:22","type":"","value":"26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2264:6:22"},"nodeType":"YulFunctionCall","src":"2264:30:22"},"nodeType":"YulExpressionStatement","src":"2264:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2314:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2325:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2310:3:22"},"nodeType":"YulFunctionCall","src":"2310:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"2330:28:22","type":"","value":"INCONSISTENT_PARAMS_LENGTH"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2303:6:22"},"nodeType":"YulFunctionCall","src":"2303:56:22"},"nodeType":"YulExpressionStatement","src":"2303:56:22"},{"nodeType":"YulAssignment","src":"2368:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2380:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2391:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2376:3:22"},"nodeType":"YulFunctionCall","src":"2376:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2368:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_a807dff59d3474096247bf1cf10d6df8b988b576943ecf8c7dd58f40a940e704__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2201:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2215:4:22","type":""}],"src":"2050:350:22"},{"body":{"nodeType":"YulBlock","src":"2506:76:22","statements":[{"nodeType":"YulAssignment","src":"2516:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2528:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2539:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2524:3:22"},"nodeType":"YulFunctionCall","src":"2524:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2516:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2558:9:22"},{"name":"value0","nodeType":"YulIdentifier","src":"2569:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2551:6:22"},"nodeType":"YulFunctionCall","src":"2551:25:22"},"nodeType":"YulExpressionStatement","src":"2551:25:22"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2475:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2486:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2497:4:22","type":""}],"src":"2405:177:22"},{"body":{"nodeType":"YulBlock","src":"2634:189:22","statements":[{"body":{"nodeType":"YulBlock","src":"2673:115:22","statements":[{"expression":{"arguments":[{"name":"ret","nodeType":"YulIdentifier","src":"2694:3:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2703:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2708:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2699:3:22"},"nodeType":"YulFunctionCall","src":"2699:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2687:6:22"},"nodeType":"YulFunctionCall","src":"2687:33:22"},"nodeType":"YulExpressionStatement","src":"2687:33:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2740:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2743:4:22","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2733:6:22"},"nodeType":"YulFunctionCall","src":"2733:15:22"},"nodeType":"YulExpressionStatement","src":"2733:15:22"},{"expression":{"arguments":[{"name":"ret","nodeType":"YulIdentifier","src":"2768:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"2773:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2761:6:22"},"nodeType":"YulFunctionCall","src":"2761:17:22"},"nodeType":"YulExpressionStatement","src":"2761:17:22"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2650:5:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2661:1:22","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2657:3:22"},"nodeType":"YulFunctionCall","src":"2657:6:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2647:2:22"},"nodeType":"YulFunctionCall","src":"2647:17:22"},"nodeType":"YulIf","src":"2644:2:22"},{"nodeType":"YulAssignment","src":"2797:20:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2808:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"2815:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2804:3:22"},"nodeType":"YulFunctionCall","src":"2804:13:22"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2797:3:22"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2616:5:22","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2626:3:22","type":""}],"src":"2587:236:22"},{"body":{"nodeType":"YulBlock","src":"2860:95:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2877:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2884:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2889:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2880:3:22"},"nodeType":"YulFunctionCall","src":"2880:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2870:6:22"},"nodeType":"YulFunctionCall","src":"2870:31:22"},"nodeType":"YulExpressionStatement","src":"2870:31:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2917:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2920:4:22","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2910:6:22"},"nodeType":"YulFunctionCall","src":"2910:15:22"},"nodeType":"YulExpressionStatement","src":"2910:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2941:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2944:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2934:6:22"},"nodeType":"YulFunctionCall","src":"2934:15:22"},"nodeType":"YulExpressionStatement","src":"2934:15:22"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2828:127:22"}]},"contents":"{\n    { }\n    function abi_decode_t_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_t_array$_t_address_$dyn_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := mload(offset)\n        let _2 := 0x20\n        let _3 := sub(shl(64, 1), 1)\n        if gt(_1, _3) { panic_error_0x41() }\n        let _4 := mul(_1, _2)\n        let memPtr := mload(64)\n        let newFreePtr := add(add(memPtr, _4), _2)\n        if or(gt(newFreePtr, _3), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let src := add(offset, _2)\n        if gt(add(add(offset, _4), _2), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, 1) }\n        {\n            mstore(dst, abi_decode_t_address_fromMemory(src))\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptrt_addresst_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value4, value4) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(value4, value4) }\n        value0 := abi_decode_t_array$_t_address_$dyn_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(value4, value4) }\n        value1 := abi_decode_t_array$_t_address_$dyn_fromMemory(add(headStart, offset_1), dataEnd)\n        value2 := abi_decode_t_address_fromMemory(add(headStart, 64))\n        value3 := abi_decode_t_address_fromMemory(add(headStart, 96))\n        value4 := mload(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_stringliteral_a807dff59d3474096247bf1cf10d6df8b988b576943ecf8c7dd58f40a940e704__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"INCONSISTENT_PARAMS_LENGTH\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(ret, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(ret, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}","id":22,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60c06040523480156200001157600080fd5b50604051620010663803806200106683398101604081905262000034916200039b565b60006200004062000108565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35062000095836200010c565b620000a1858562000156565b6001600160601b0319606083901b1660805260a08190526040516001600160a01b038316907fe27c4c1372396a3d15a9922f74f9dfc7c72b1ad6d63868470787249c356454c190620000f590849062000468565b60405180910390a25050505050620004af565b3390565b600280546001600160a01b0319166001600160a01b0383169081179091556040517fce7a780d33665b1ea097af5f155e3821b809ecbaa839d3b33aa83ba28168cefb90600090a250565b8051825114620001835760405162461bcd60e51b81526004016200017a9062000431565b60405180910390fd5b60005b8251811015620002cf57818181518110620001b157634e487b7160e01b600052603260045260246000fd5b602002602001015160016000858481518110620001de57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055508181815181106200024b57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03168382815181106200027d57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03167f22c5b7b2d8561d39f7f210b6b326a1aa69f15311163082308ac4877db6339dc160405160405180910390a380620002c68162000471565b91505062000186565b505050565b80516001600160a01b0381168114620002ec57600080fd5b919050565b600082601f83011262000302578081fd5b815160206001600160401b038083111562000321576200032162000499565b8183026040518382820101818110848211171562000343576200034362000499565b6040528481528381019250868401828801850189101562000362578687fd5b8692505b858310156200038f576200037a81620002d4565b84529284019260019290920191840162000366565b50979650505050505050565b600080600080600060a08688031215620003b3578081fd5b85516001600160401b0380821115620003ca578283fd5b620003d889838a01620002f1565b96506020880151915080821115620003ee578283fd5b50620003fd88828901620002f1565b9450506200040e60408701620002d4565b92506200041e60608701620002d4565b9150608086015190509295509295909350565b6020808252601a908201527f494e434f4e53495354454e545f504152414d535f4c454e475448000000000000604082015260600190565b90815260200190565b60006000198214156200049257634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b60805160601c60a051610b80620004e660003960008181610254015261047901526000818161044f01526106480152610b806000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806392bf2be01161007157806392bf2be0146101065780639d23d9f214610119578063abfd531014610139578063b3596f071461014c578063e19f47001461015f578063f2fde38b14610167576100a9565b8063170aee73146100ae5780636210308c146100c3578063715018a6146100e15780638c89b64f146100e95780638da5cb5b146100fe575b600080fd5b6100c16100bc366004610921565b61017a565b005b6100cb6101c4565b6040516100d89190610a10565b60405180910390f35b6100c16101d3565b6100f1610252565b6040516100d89190610b1a565b6100cb610276565b6100cb610114366004610921565b610285565b61012c61012736600461094f565b6102a6565b6040516100d89190610a24565b6100c161014736600461098f565b610385565b6100f161015a366004610921565b61042d565b6100cb610646565b6100c1610175366004610921565b61066a565b610182610720565b6000546001600160a01b039081169116146101b85760405162461bcd60e51b81526004016101af90610aae565b60405180910390fd5b6101c181610724565b50565b6002546001600160a01b031690565b6101db610720565b6000546001600160a01b039081169116146102085760405162461bcd60e51b81526004016101af90610aae565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b031690565b6001600160a01b03808216600090815260016020526040902054165b919050565b606060008267ffffffffffffffff8111156102d157634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156102fa578160200160208202803683370190505b50905060005b8381101561037d5761034085858381811061032b57634e487b7160e01b600052603260045260246000fd5b905060200201602081019061015a9190610921565b82828151811061036057634e487b7160e01b600052603260045260246000fd5b60209081029190910101528061037581610b23565b915050610300565b509392505050565b61038d610720565b6000546001600160a01b039081169116146103ba5760405162461bcd60e51b81526004016101af90610aae565b6104278484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505060408051602080880282810182019093528782529093508792508691829185019084908082843760009201919091525061076e92505050565b50505050565b6001600160a01b038082166000818152600160205260408120549092908116917f000000000000000000000000000000000000000000000000000000000000000090911614156104a0577f00000000000000000000000000000000000000000000000000000000000000009150506102a1565b6001600160a01b0381166105365760025460405163b3596f0760e01b81526001600160a01b039091169063b3596f07906104de908690600401610a10565b60206040518083038186803b1580156104f657600080fd5b505afa15801561050a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052e91906109f8565b9150506102a1565b6000816001600160a01b03166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561057157600080fd5b505afa158015610585573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a991906109f8565b905060008113156105bd5791506102a19050565b60025460405163b3596f0760e01b81526001600160a01b039091169063b3596f07906105ed908790600401610a10565b60206040518083038186803b15801561060557600080fd5b505afa158015610619573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063d91906109f8565b925050506102a1565b7f000000000000000000000000000000000000000000000000000000000000000081565b610672610720565b6000546001600160a01b0390811691161461069f5760405162461bcd60e51b81526004016101af90610aae565b6001600160a01b0381166106c55760405162461bcd60e51b81526004016101af90610a68565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b600280546001600160a01b0319166001600160a01b0383169081179091556040517fce7a780d33665b1ea097af5f155e3821b809ecbaa839d3b33aa83ba28168cefb90600090a250565b805182511461078f5760405162461bcd60e51b81526004016101af90610ae3565b60005b82518110156108d3578181815181106107bb57634e487b7160e01b600052603260045260246000fd5b6020026020010151600160008584815181106107e757634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b0316021790555081818151811061085357634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b031683828151811061088457634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03167f22c5b7b2d8561d39f7f210b6b326a1aa69f15311163082308ac4877db6339dc160405160405180910390a3806108cb81610b23565b915050610792565b505050565b60008083601f8401126108e9578182fd5b50813567ffffffffffffffff811115610900578182fd5b602083019150836020808302850101111561091a57600080fd5b9250929050565b600060208284031215610932578081fd5b81356001600160a01b0381168114610948578182fd5b9392505050565b60008060208385031215610961578081fd5b823567ffffffffffffffff811115610977578182fd5b610983858286016108d8565b90969095509350505050565b600080600080604085870312156109a4578182fd5b843567ffffffffffffffff808211156109bb578384fd5b6109c7888389016108d8565b909650945060208701359150808211156109df578384fd5b506109ec878288016108d8565b95989497509550505050565b600060208284031215610a09578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6020808252825182820181905260009190848201906040850190845b81811015610a5c57835183529284019291840191600101610a40565b50909695505050505050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601a908201527f494e434f4e53495354454e545f504152414d535f4c454e475448000000000000604082015260600190565b90815260200190565b6000600019821415610b4357634e487b7160e01b81526011600452602481fd5b506001019056fea26469706673582212208a0990bfedc825c8ec9f474683d99d002d3c25d6ac9e726924f2951f72b889f364736f6c63430008000033","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1066 CODESIZE SUB DUP1 PUSH3 0x1066 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x39B JUMP JUMPDEST PUSH1 0x0 PUSH3 0x40 PUSH3 0x108 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH3 0x95 DUP4 PUSH3 0x10C JUMP JUMPDEST PUSH3 0xA1 DUP6 DUP6 PUSH3 0x156 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP4 SWAP1 SHL AND PUSH1 0x80 MSTORE PUSH1 0xA0 DUP2 SWAP1 MSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xE27C4C1372396A3D15A9922F74F9DFC7C72B1AD6D63868470787249C356454C1 SWAP1 PUSH3 0xF5 SWAP1 DUP5 SWAP1 PUSH3 0x468 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP PUSH3 0x4AF JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xCE7A780D33665B1EA097AF5F155E3821B809ECBAA839D3B33AA83BA28168CEFB SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH3 0x183 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x17A SWAP1 PUSH3 0x431 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH3 0x2CF JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH3 0x1B1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH3 0x1DE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH3 0x24B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x27D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x22C5B7B2D8561D39F7F210B6B326A1AA69F15311163082308AC4877DB6339DC1 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH3 0x2C6 DUP2 PUSH3 0x471 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x186 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x2EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x302 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP4 GT ISZERO PUSH3 0x321 JUMPI PUSH3 0x321 PUSH3 0x499 JUMP JUMPDEST DUP2 DUP4 MUL PUSH1 0x40 MLOAD DUP4 DUP3 DUP3 ADD ADD DUP2 DUP2 LT DUP5 DUP3 GT OR ISZERO PUSH3 0x343 JUMPI PUSH3 0x343 PUSH3 0x499 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP5 DUP2 MSTORE DUP4 DUP2 ADD SWAP3 POP DUP7 DUP5 ADD DUP3 DUP9 ADD DUP6 ADD DUP10 LT ISZERO PUSH3 0x362 JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP3 POP JUMPDEST DUP6 DUP4 LT ISZERO PUSH3 0x38F JUMPI PUSH3 0x37A DUP2 PUSH3 0x2D4 JUMP JUMPDEST DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 DUP5 ADD PUSH3 0x366 JUMP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x3B3 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x3CA JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH3 0x3D8 DUP10 DUP4 DUP11 ADD PUSH3 0x2F1 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x3EE JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH3 0x3FD DUP9 DUP3 DUP10 ADD PUSH3 0x2F1 JUMP JUMPDEST SWAP5 POP POP PUSH3 0x40E PUSH1 0x40 DUP8 ADD PUSH3 0x2D4 JUMP JUMPDEST SWAP3 POP PUSH3 0x41E PUSH1 0x60 DUP8 ADD PUSH3 0x2D4 JUMP JUMPDEST SWAP2 POP PUSH1 0x80 DUP7 ADD MLOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x494E434F4E53495354454E545F504152414D535F4C454E475448000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH3 0x492 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH2 0xB80 PUSH3 0x4E6 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x254 ADD MSTORE PUSH2 0x479 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x44F ADD MSTORE PUSH2 0x648 ADD MSTORE PUSH2 0xB80 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x92BF2BE0 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x92BF2BE0 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x9D23D9F2 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0xABFD5310 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0xB3596F07 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0xE19F4700 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x167 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x170AEE73 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x6210308C EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE1 JUMPI DUP1 PUSH4 0x8C89B64F EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xFE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0xBC CALLDATASIZE PUSH1 0x4 PUSH2 0x921 JUMP JUMPDEST PUSH2 0x17A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCB PUSH2 0x1C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0xA10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC1 PUSH2 0x1D3 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x252 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0xB1A JUMP JUMPDEST PUSH2 0xCB PUSH2 0x276 JUMP JUMPDEST PUSH2 0xCB PUSH2 0x114 CALLDATASIZE PUSH1 0x4 PUSH2 0x921 JUMP JUMPDEST PUSH2 0x285 JUMP JUMPDEST PUSH2 0x12C PUSH2 0x127 CALLDATASIZE PUSH1 0x4 PUSH2 0x94F JUMP JUMPDEST PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0xA24 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x147 CALLDATASIZE PUSH1 0x4 PUSH2 0x98F JUMP JUMPDEST PUSH2 0x385 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0x921 JUMP JUMPDEST PUSH2 0x42D JUMP JUMPDEST PUSH2 0xCB PUSH2 0x646 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x921 JUMP JUMPDEST PUSH2 0x66A JUMP JUMPDEST PUSH2 0x182 PUSH2 0x720 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF SWAP1 PUSH2 0xAAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C1 DUP2 PUSH2 0x724 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x1DB PUSH2 0x720 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x208 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF SWAP1 PUSH2 0xAAE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2FA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x37D JUMPI PUSH2 0x340 DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x32B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x921 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x360 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x375 DUP2 PUSH2 0xB23 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x300 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x38D PUSH2 0x720 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF SWAP1 PUSH2 0xAAE JUMP JUMPDEST PUSH2 0x427 DUP5 DUP5 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP9 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP8 DUP3 MSTORE SWAP1 SWAP4 POP DUP8 SWAP3 POP DUP7 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x76E SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP3 SWAP1 DUP2 AND SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND EQ ISZERO PUSH2 0x4A0 JUMPI PUSH32 0x0 SWAP2 POP POP PUSH2 0x2A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x536 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB3596F07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xB3596F07 SWAP1 PUSH2 0x4DE SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0xA10 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x50A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x52E SWAP2 SWAP1 PUSH2 0x9F8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2A1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x50D25BCD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x571 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x585 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5A9 SWAP2 SWAP1 PUSH2 0x9F8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SGT ISZERO PUSH2 0x5BD JUMPI SWAP2 POP PUSH2 0x2A1 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB3596F07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xB3596F07 SWAP1 PUSH2 0x5ED SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0xA10 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x605 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x619 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x63D SWAP2 SWAP1 PUSH2 0x9F8 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x2A1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x672 PUSH2 0x720 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x69F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF SWAP1 PUSH2 0xAAE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x6C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF SWAP1 PUSH2 0xA68 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xCE7A780D33665B1EA097AF5F155E3821B809ECBAA839D3B33AA83BA28168CEFB SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x78F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF SWAP1 PUSH2 0xAE3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x8D3 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x7BB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x7E7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x853 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x884 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x22C5B7B2D8561D39F7F210B6B326A1AA69F15311163082308AC4877DB6339DC1 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH2 0x8CB DUP2 PUSH2 0xB23 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x792 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x8E9 JUMPI DUP2 DUP3 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x900 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP1 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x91A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x932 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x948 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x961 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x977 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x983 DUP6 DUP3 DUP7 ADD PUSH2 0x8D8 JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x9A4 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x9BB JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x9C7 DUP9 DUP4 DUP10 ADD PUSH2 0x8D8 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x9DF JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH2 0x9EC DUP8 DUP3 DUP9 ADD PUSH2 0x8D8 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA09 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA5C JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xA40 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x494E434F4E53495354454E545F504152414D535F4C454E475448000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0xB43 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 MULMOD SWAP1 0xBF 0xED 0xC8 0x25 0xC8 0xEC SWAP16 SELFBALANCE CHAINID DUP4 0xD9 SWAP14 STOP 0x2D EXTCODECOPY 0x25 0xD6 0xAC SWAP15 PUSH19 0x6924F2951F72B889F364736F6C634300080000 CALLER ","sourceMap":"871:4691:9:-:0;;;1866:430;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;873:17:3;893:12;:10;:12::i;:::-;915:6;:18;;-1:-1:-1;;;;;;915:18:3;-1:-1:-1;;;;;915:18:3;;;;;;;948:43;;915:18;;-1:-1:-1;915:18:3;948:43;;915:6;;948:43;-1:-1:-1;2064:34:9;2083:14;2064:18;:34::i;:::-;2108;2126:6;2134:7;2108:17;:34::i;:::-;-1:-1:-1;;;;;;2152:28:9;;;;;;;2190:37;;;;2242:47;;-1:-1:-1;;;;;2152:28:9;;;2242:47;;;;2211:16;;2242:47;:::i;:::-;;;;;;;;1866:430;;;;;871:4691;;590:96:1;669:10;590:96;:::o;3675:182:9:-;3746:15;:52;;-1:-1:-1;;;;;;3746:52:9;-1:-1:-1;;;;;3746:52:9;;;;;;;;3813:37;;;;-1:-1:-1;;3813:37:9;3675:182;:::o;3152:393::-;3296:7;:14;3279:6;:13;:31;3271:70;;;;-1:-1:-1;;;3271:70:9;;;;;;;:::i;:::-;;;;;;;;;3356:9;3351:188;3375:6;:13;3371:1;:17;3351:188;;;3457:7;3465:1;3457:10;;;;;;-1:-1:-1;;;3457:10:9;;;;;;;;;;;;;;;3409:13;:24;3423:6;3430:1;3423:9;;;;;;-1:-1:-1;;;3423:9:9;;;;;;;;;;;;;;;-1:-1:-1;;;;;3409:24:9;-1:-1:-1;;;;;3409:24:9;;;;;;;;;;;;;:59;;;;;-1:-1:-1;;;;;3409:59:9;;;;;-1:-1:-1;;;;;3409:59:9;;;;;;3517:7;3525:1;3517:10;;;;;;-1:-1:-1;;;3517:10:9;;;;;;;;;;;;;;;-1:-1:-1;;;;;3487:41:9;3506:6;3513:1;3506:9;;;;;;-1:-1:-1;;;3506:9:9;;;;;;;;;;;;;;;-1:-1:-1;;;;;3487:41:9;;;;;;;;;;;3390:3;;;;:::i;:::-;;;;3351:188;;;;3152:393;;:::o;14:179:22:-;95:13;;-1:-1:-1;;;;;137:31:22;;127:42;;117:2;;183:1;180;173:12;117:2;76:117;;;:::o;198:949::-;;322:3;315:4;307:6;303:17;299:27;289:2;;344:5;337;330:20;289:2;371:13;;403:4;-1:-1:-1;;;;;456:10:22;;;453:2;;;469:18;;:::i;:::-;516:2;512;508:11;548:2;542:9;599:2;594;586:6;582:15;578:24;652:6;640:10;637:22;632:2;620:10;617:18;614:46;611:2;;;663:18;;:::i;:::-;699:2;692:22;749:18;;;783:15;;;;-1:-1:-1;818:15:22;;;852;;;848:24;;845:33;-1:-1:-1;842:2:22;;;895:5;888;881:20;842:2;921:5;912:14;;935:182;949:2;946:1;943:9;935:182;;;1006:36;1038:3;1006:36;:::i;:::-;994:49;;1063:12;;;;967:1;960:9;;;;;1095:12;;935:182;;;-1:-1:-1;1135:6:22;279:868;-1:-1:-1;;;;;;;279:868:22:o;1152:893::-;;;;;;1393:3;1381:9;1372:7;1368:23;1364:33;1361:2;;;1415:6;1407;1400:22;1361:2;1447:16;;-1:-1:-1;;;;;1512:14:22;;;1509:2;;;1544:6;1536;1529:22;1509:2;1572:78;1642:7;1633:6;1622:9;1618:22;1572:78;:::i;:::-;1562:88;;1696:2;1685:9;1681:18;1675:25;1659:41;;1725:2;1715:8;1712:16;1709:2;;;1746:6;1738;1731:22;1709:2;;1774:80;1846:7;1835:8;1824:9;1820:24;1774:80;:::i;:::-;1764:90;;;1873:51;1920:2;1909:9;1905:18;1873:51;:::i;:::-;1863:61;;1943:51;1990:2;1979:9;1975:18;1943:51;:::i;:::-;1933:61;;2034:3;2023:9;2019:19;2013:26;2003:36;;1351:694;;;;;;;;:::o;2050:350::-;2252:2;2234:21;;;2291:2;2271:18;;;2264:30;2330:28;2325:2;2310:18;;2303:56;2391:2;2376:18;;2224:176::o;2405:177::-;2551:25;;;2539:2;2524:18;;2506:76::o;2587:236::-;;-1:-1:-1;;2647:17:22;;2644:2;;;-1:-1:-1;;;2687:33:22;;2743:4;2740:1;2733:15;2773:4;2694:3;2761:17;2644:2;-1:-1:-1;2815:1:22;2804:13;;2634:189::o;2828:127::-;2889:10;2884:3;2880:20;2877:1;2870:31;2920:4;2917:1;2910:15;2944:4;2941:1;2934:15;2860:95;871:4691:9;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4810:22","statements":[{"nodeType":"YulBlock","src":"6:3:22","statements":[]},{"body":{"nodeType":"YulBlock","src":"104:314:22","statements":[{"body":{"nodeType":"YulBlock","src":"153:30:22","statements":[{"expression":{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"162:8:22"},{"name":"arrayPos","nodeType":"YulIdentifier","src":"172:8:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"155:6:22"},"nodeType":"YulFunctionCall","src":"155:26:22"},"nodeType":"YulExpressionStatement","src":"155:26:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"132:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"140:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"128:3:22"},"nodeType":"YulFunctionCall","src":"128:17:22"},{"name":"end","nodeType":"YulIdentifier","src":"147:3:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"124:3:22"},"nodeType":"YulFunctionCall","src":"124:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"117:6:22"},"nodeType":"YulFunctionCall","src":"117:35:22"},"nodeType":"YulIf","src":"114:2:22"},{"nodeType":"YulAssignment","src":"192:30:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"215:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"202:12:22"},"nodeType":"YulFunctionCall","src":"202:20:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"192:6:22"}]},{"body":{"nodeType":"YulBlock","src":"265:30:22","statements":[{"expression":{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"274:8:22"},{"name":"arrayPos","nodeType":"YulIdentifier","src":"284:8:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"267:6:22"},"nodeType":"YulFunctionCall","src":"267:26:22"},"nodeType":"YulExpressionStatement","src":"267:26:22"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"237:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"245:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"234:2:22"},"nodeType":"YulFunctionCall","src":"234:30:22"},"nodeType":"YulIf","src":"231:2:22"},{"nodeType":"YulAssignment","src":"304:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"320:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"328:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"316:3:22"},"nodeType":"YulFunctionCall","src":"316:17:22"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"304:8:22"}]},{"body":{"nodeType":"YulBlock","src":"396:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"405:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"408:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"398:6:22"},"nodeType":"YulFunctionCall","src":"398:12:22"},"nodeType":"YulExpressionStatement","src":"398:12:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"356:6:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"368:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"376:4:22","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"364:3:22"},"nodeType":"YulFunctionCall","src":"364:17:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"352:3:22"},"nodeType":"YulFunctionCall","src":"352:30:22"},{"kind":"number","nodeType":"YulLiteral","src":"384:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"348:3:22"},"nodeType":"YulFunctionCall","src":"348:41:22"},{"name":"end","nodeType":"YulIdentifier","src":"391:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"345:2:22"},"nodeType":"YulFunctionCall","src":"345:50:22"},"nodeType":"YulIf","src":"342:2:22"}]},"name":"abi_decode_t_array$_t_address_$dyn_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"67:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"75:3:22","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"83:8:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"93:6:22","type":""}],"src":"14:404:22"},{"body":{"nodeType":"YulBlock","src":"493:236:22","statements":[{"body":{"nodeType":"YulBlock","src":"539:26:22","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"548:6:22"},{"name":"value0","nodeType":"YulIdentifier","src":"556:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"541:6:22"},"nodeType":"YulFunctionCall","src":"541:22:22"},"nodeType":"YulExpressionStatement","src":"541:22:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"514:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"523:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"510:3:22"},"nodeType":"YulFunctionCall","src":"510:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"535:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"506:3:22"},"nodeType":"YulFunctionCall","src":"506:32:22"},"nodeType":"YulIf","src":"503:2:22"},{"nodeType":"YulVariableDeclaration","src":"574:36:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"600:9:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"587:12:22"},"nodeType":"YulFunctionCall","src":"587:23:22"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"578:5:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"673:26:22","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"682:6:22"},{"name":"value0","nodeType":"YulIdentifier","src":"690:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"675:6:22"},"nodeType":"YulFunctionCall","src":"675:22:22"},"nodeType":"YulExpressionStatement","src":"675:22:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"632:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"643:5:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"658:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"663:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"654:3:22"},"nodeType":"YulFunctionCall","src":"654:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"667:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"650:3:22"},"nodeType":"YulFunctionCall","src":"650:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"639:3:22"},"nodeType":"YulFunctionCall","src":"639:31:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"629:2:22"},"nodeType":"YulFunctionCall","src":"629:42:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"622:6:22"},"nodeType":"YulFunctionCall","src":"622:50:22"},"nodeType":"YulIf","src":"619:2:22"},{"nodeType":"YulAssignment","src":"708:15:22","value":{"name":"value","nodeType":"YulIdentifier","src":"718:5:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"708:6:22"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"459:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"470:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"482:6:22","type":""}],"src":"423:306:22"},{"body":{"nodeType":"YulBlock","src":"839:358:22","statements":[{"body":{"nodeType":"YulBlock","src":"885:26:22","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"894:6:22"},{"name":"value1","nodeType":"YulIdentifier","src":"902:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"887:6:22"},"nodeType":"YulFunctionCall","src":"887:22:22"},"nodeType":"YulExpressionStatement","src":"887:22:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"860:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"869:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"856:3:22"},"nodeType":"YulFunctionCall","src":"856:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"881:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"852:3:22"},"nodeType":"YulFunctionCall","src":"852:32:22"},"nodeType":"YulIf","src":"849:2:22"},{"nodeType":"YulVariableDeclaration","src":"920:37:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"947:9:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"934:12:22"},"nodeType":"YulFunctionCall","src":"934:23:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"924:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"1000:26:22","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1009:6:22"},{"name":"value1","nodeType":"YulIdentifier","src":"1017:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1002:6:22"},"nodeType":"YulFunctionCall","src":"1002:22:22"},"nodeType":"YulExpressionStatement","src":"1002:22:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"972:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"980:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"969:2:22"},"nodeType":"YulFunctionCall","src":"969:30:22"},"nodeType":"YulIf","src":"966:2:22"},{"nodeType":"YulVariableDeclaration","src":"1035:102:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1109:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"1120:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1105:3:22"},"nodeType":"YulFunctionCall","src":"1105:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1129:7:22"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_calldata","nodeType":"YulIdentifier","src":"1061:43:22"},"nodeType":"YulFunctionCall","src":"1061:76:22"},"variables":[{"name":"value0_1","nodeType":"YulTypedName","src":"1039:8:22","type":""},{"name":"value1_1","nodeType":"YulTypedName","src":"1049:8:22","type":""}]},{"nodeType":"YulAssignment","src":"1146:18:22","value":{"name":"value0_1","nodeType":"YulIdentifier","src":"1156:8:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1146:6:22"}]},{"nodeType":"YulAssignment","src":"1173:18:22","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"1183:8:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1173:6:22"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"797:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"808:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"820:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"828:6:22","type":""}],"src":"734:463:22"},{"body":{"nodeType":"YulBlock","src":"1359:658:22","statements":[{"body":{"nodeType":"YulBlock","src":"1405:26:22","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"1414:6:22"},{"name":"value2","nodeType":"YulIdentifier","src":"1422:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1407:6:22"},"nodeType":"YulFunctionCall","src":"1407:22:22"},"nodeType":"YulExpressionStatement","src":"1407:22:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1380:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"1389:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1376:3:22"},"nodeType":"YulFunctionCall","src":"1376:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"1401:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1372:3:22"},"nodeType":"YulFunctionCall","src":"1372:32:22"},"nodeType":"YulIf","src":"1369:2:22"},{"nodeType":"YulVariableDeclaration","src":"1440:37:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1467:9:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1454:12:22"},"nodeType":"YulFunctionCall","src":"1454:23:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1444:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1486:28:22","value":{"kind":"number","nodeType":"YulLiteral","src":"1496:18:22","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1490:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"1541:26:22","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"1550:6:22"},{"name":"value2","nodeType":"YulIdentifier","src":"1558:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1543:6:22"},"nodeType":"YulFunctionCall","src":"1543:22:22"},"nodeType":"YulExpressionStatement","src":"1543:22:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1529:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"1537:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1526:2:22"},"nodeType":"YulFunctionCall","src":"1526:14:22"},"nodeType":"YulIf","src":"1523:2:22"},{"nodeType":"YulVariableDeclaration","src":"1576:102:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1650:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"1661:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1646:3:22"},"nodeType":"YulFunctionCall","src":"1646:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1670:7:22"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_calldata","nodeType":"YulIdentifier","src":"1602:43:22"},"nodeType":"YulFunctionCall","src":"1602:76:22"},"variables":[{"name":"value0_1","nodeType":"YulTypedName","src":"1580:8:22","type":""},{"name":"value1_1","nodeType":"YulTypedName","src":"1590:8:22","type":""}]},{"nodeType":"YulAssignment","src":"1687:18:22","value":{"name":"value0_1","nodeType":"YulIdentifier","src":"1697:8:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1687:6:22"}]},{"nodeType":"YulAssignment","src":"1714:18:22","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"1724:8:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1714:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"1741:48:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1774:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1785:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1770:3:22"},"nodeType":"YulFunctionCall","src":"1770:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1757:12:22"},"nodeType":"YulFunctionCall","src":"1757:32:22"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1745:8:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"1818:26:22","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"1827:6:22"},{"name":"value2","nodeType":"YulIdentifier","src":"1835:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1820:6:22"},"nodeType":"YulFunctionCall","src":"1820:22:22"},"nodeType":"YulExpressionStatement","src":"1820:22:22"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1804:8:22"},{"name":"_1","nodeType":"YulIdentifier","src":"1814:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1801:2:22"},"nodeType":"YulFunctionCall","src":"1801:16:22"},"nodeType":"YulIf","src":"1798:2:22"},{"nodeType":"YulVariableDeclaration","src":"1853:104:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1927:9:22"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1938:8:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1923:3:22"},"nodeType":"YulFunctionCall","src":"1923:24:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1949:7:22"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_calldata","nodeType":"YulIdentifier","src":"1879:43:22"},"nodeType":"YulFunctionCall","src":"1879:78:22"},"variables":[{"name":"value2_1","nodeType":"YulTypedName","src":"1857:8:22","type":""},{"name":"value3_1","nodeType":"YulTypedName","src":"1867:8:22","type":""}]},{"nodeType":"YulAssignment","src":"1966:18:22","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"1976:8:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1966:6:22"}]},{"nodeType":"YulAssignment","src":"1993:18:22","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"2003:8:22"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1993:6:22"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1301:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1312:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1324:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1332:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1340:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1348:6:22","type":""}],"src":"1202:815:22"},{"body":{"nodeType":"YulBlock","src":"2102:113:22","statements":[{"body":{"nodeType":"YulBlock","src":"2148:26:22","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2157:6:22"},{"name":"value0","nodeType":"YulIdentifier","src":"2165:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2150:6:22"},"nodeType":"YulFunctionCall","src":"2150:22:22"},"nodeType":"YulExpressionStatement","src":"2150:22:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2123:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"2132:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2119:3:22"},"nodeType":"YulFunctionCall","src":"2119:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"2144:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2115:3:22"},"nodeType":"YulFunctionCall","src":"2115:32:22"},"nodeType":"YulIf","src":"2112:2:22"},{"nodeType":"YulAssignment","src":"2183:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2199:9:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2193:5:22"},"nodeType":"YulFunctionCall","src":"2193:16:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2183:6:22"}]}]},"name":"abi_decode_tuple_t_int256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2068:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2079:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2091:6:22","type":""}],"src":"2022:193:22"},{"body":{"nodeType":"YulBlock","src":"2301:113:22","statements":[{"body":{"nodeType":"YulBlock","src":"2347:26:22","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2356:6:22"},{"name":"value0","nodeType":"YulIdentifier","src":"2364:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2349:6:22"},"nodeType":"YulFunctionCall","src":"2349:22:22"},"nodeType":"YulExpressionStatement","src":"2349:22:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2322:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"2331:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2318:3:22"},"nodeType":"YulFunctionCall","src":"2318:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"2343:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2314:3:22"},"nodeType":"YulFunctionCall","src":"2314:32:22"},"nodeType":"YulIf","src":"2311:2:22"},{"nodeType":"YulAssignment","src":"2382:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2398:9:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2392:5:22"},"nodeType":"YulFunctionCall","src":"2392:16:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2382:6:22"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2267:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2278:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2290:6:22","type":""}],"src":"2220:194:22"},{"body":{"nodeType":"YulBlock","src":"2520:102:22","statements":[{"nodeType":"YulAssignment","src":"2530:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2542:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2553:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2538:3:22"},"nodeType":"YulFunctionCall","src":"2538:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2530:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2572:9:22"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2587:6:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2603:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2608:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2599:3:22"},"nodeType":"YulFunctionCall","src":"2599:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"2612:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2595:3:22"},"nodeType":"YulFunctionCall","src":"2595:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2583:3:22"},"nodeType":"YulFunctionCall","src":"2583:32:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2565:6:22"},"nodeType":"YulFunctionCall","src":"2565:51:22"},"nodeType":"YulExpressionStatement","src":"2565:51:22"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2489:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2500:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2511:4:22","type":""}],"src":"2419:203:22"},{"body":{"nodeType":"YulBlock","src":"2778:484:22","statements":[{"nodeType":"YulVariableDeclaration","src":"2788:12:22","value":{"kind":"number","nodeType":"YulLiteral","src":"2798:2:22","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2792:2:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2809:32:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2827:9:22"},{"name":"_1","nodeType":"YulIdentifier","src":"2838:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2823:3:22"},"nodeType":"YulFunctionCall","src":"2823:18:22"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"2813:6:22","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2857:9:22"},{"name":"_1","nodeType":"YulIdentifier","src":"2868:2:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2850:6:22"},"nodeType":"YulFunctionCall","src":"2850:21:22"},"nodeType":"YulExpressionStatement","src":"2850:21:22"},{"nodeType":"YulVariableDeclaration","src":"2880:17:22","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"2891:6:22"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"2884:3:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2906:27:22","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2926:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2920:5:22"},"nodeType":"YulFunctionCall","src":"2920:13:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2910:6:22","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"2949:6:22"},{"name":"length","nodeType":"YulIdentifier","src":"2957:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2942:6:22"},"nodeType":"YulFunctionCall","src":"2942:22:22"},"nodeType":"YulExpressionStatement","src":"2942:22:22"},{"nodeType":"YulAssignment","src":"2973:25:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2984:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2995:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2980:3:22"},"nodeType":"YulFunctionCall","src":"2980:18:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2973:3:22"}]},{"nodeType":"YulVariableDeclaration","src":"3007:29:22","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3025:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"3033:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3021:3:22"},"nodeType":"YulFunctionCall","src":"3021:15:22"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"3011:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3045:13:22","value":{"name":"tail","nodeType":"YulIdentifier","src":"3054:4:22"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3049:1:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"3116:120:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3137:3:22"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3148:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3142:5:22"},"nodeType":"YulFunctionCall","src":"3142:13:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3130:6:22"},"nodeType":"YulFunctionCall","src":"3130:26:22"},"nodeType":"YulExpressionStatement","src":"3130:26:22"},{"nodeType":"YulAssignment","src":"3169:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3180:3:22"},{"name":"_1","nodeType":"YulIdentifier","src":"3185:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3176:3:22"},"nodeType":"YulFunctionCall","src":"3176:12:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3169:3:22"}]},{"nodeType":"YulAssignment","src":"3201:25:22","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3215:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"3223:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3211:3:22"},"nodeType":"YulFunctionCall","src":"3211:15:22"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3201:6:22"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3078:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"3081:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3075:2:22"},"nodeType":"YulFunctionCall","src":"3075:13:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3089:18:22","statements":[{"nodeType":"YulAssignment","src":"3091:14:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3100:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"3103:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3096:3:22"},"nodeType":"YulFunctionCall","src":"3096:9:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3091:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"3071:3:22","statements":[]},"src":"3067:169:22"},{"nodeType":"YulAssignment","src":"3245:11:22","value":{"name":"pos","nodeType":"YulIdentifier","src":"3253:3:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3245:4:22"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2747:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2758:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2769:4:22","type":""}],"src":"2627:635:22"},{"body":{"nodeType":"YulBlock","src":"3441:228:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3458:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3469:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3451:6:22"},"nodeType":"YulFunctionCall","src":"3451:21:22"},"nodeType":"YulExpressionStatement","src":"3451:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3492:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3503:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3488:3:22"},"nodeType":"YulFunctionCall","src":"3488:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"3508:2:22","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3481:6:22"},"nodeType":"YulFunctionCall","src":"3481:30:22"},"nodeType":"YulExpressionStatement","src":"3481:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3531:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3542:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3527:3:22"},"nodeType":"YulFunctionCall","src":"3527:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"3547:34:22","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3520:6:22"},"nodeType":"YulFunctionCall","src":"3520:62:22"},"nodeType":"YulExpressionStatement","src":"3520:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3602:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3613:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3598:3:22"},"nodeType":"YulFunctionCall","src":"3598:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"3618:8:22","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3591:6:22"},"nodeType":"YulFunctionCall","src":"3591:36:22"},"nodeType":"YulExpressionStatement","src":"3591:36:22"},{"nodeType":"YulAssignment","src":"3636:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3648:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3659:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3644:3:22"},"nodeType":"YulFunctionCall","src":"3644:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3636:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3418:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3432:4:22","type":""}],"src":"3267:402:22"},{"body":{"nodeType":"YulBlock","src":"3848:182:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3865:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3876:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3858:6:22"},"nodeType":"YulFunctionCall","src":"3858:21:22"},"nodeType":"YulExpressionStatement","src":"3858:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3899:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3910:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3895:3:22"},"nodeType":"YulFunctionCall","src":"3895:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"3915:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3888:6:22"},"nodeType":"YulFunctionCall","src":"3888:30:22"},"nodeType":"YulExpressionStatement","src":"3888:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3938:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3949:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3934:3:22"},"nodeType":"YulFunctionCall","src":"3934:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"3954:34:22","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3927:6:22"},"nodeType":"YulFunctionCall","src":"3927:62:22"},"nodeType":"YulExpressionStatement","src":"3927:62:22"},{"nodeType":"YulAssignment","src":"3998:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4010:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4021:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4006:3:22"},"nodeType":"YulFunctionCall","src":"4006:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3998:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3825:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3839:4:22","type":""}],"src":"3674:356:22"},{"body":{"nodeType":"YulBlock","src":"4209:176:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4226:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4237:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4219:6:22"},"nodeType":"YulFunctionCall","src":"4219:21:22"},"nodeType":"YulExpressionStatement","src":"4219:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4260:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4271:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4256:3:22"},"nodeType":"YulFunctionCall","src":"4256:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"4276:2:22","type":"","value":"26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4249:6:22"},"nodeType":"YulFunctionCall","src":"4249:30:22"},"nodeType":"YulExpressionStatement","src":"4249:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4299:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4310:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4295:3:22"},"nodeType":"YulFunctionCall","src":"4295:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"4315:28:22","type":"","value":"INCONSISTENT_PARAMS_LENGTH"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4288:6:22"},"nodeType":"YulFunctionCall","src":"4288:56:22"},"nodeType":"YulExpressionStatement","src":"4288:56:22"},{"nodeType":"YulAssignment","src":"4353:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4365:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4376:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4361:3:22"},"nodeType":"YulFunctionCall","src":"4361:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4353:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_a807dff59d3474096247bf1cf10d6df8b988b576943ecf8c7dd58f40a940e704__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4186:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4200:4:22","type":""}],"src":"4035:350:22"},{"body":{"nodeType":"YulBlock","src":"4491:76:22","statements":[{"nodeType":"YulAssignment","src":"4501:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4513:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4524:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4509:3:22"},"nodeType":"YulFunctionCall","src":"4509:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4501:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4543:9:22"},{"name":"value0","nodeType":"YulIdentifier","src":"4554:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4536:6:22"},"nodeType":"YulFunctionCall","src":"4536:25:22"},"nodeType":"YulExpressionStatement","src":"4536:25:22"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4460:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4471:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4482:4:22","type":""}],"src":"4390:177:22"},{"body":{"nodeType":"YulBlock","src":"4619:189:22","statements":[{"body":{"nodeType":"YulBlock","src":"4658:115:22","statements":[{"expression":{"arguments":[{"name":"ret","nodeType":"YulIdentifier","src":"4679:3:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4688:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4693:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4684:3:22"},"nodeType":"YulFunctionCall","src":"4684:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4672:6:22"},"nodeType":"YulFunctionCall","src":"4672:33:22"},"nodeType":"YulExpressionStatement","src":"4672:33:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4725:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4728:4:22","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4718:6:22"},"nodeType":"YulFunctionCall","src":"4718:15:22"},"nodeType":"YulExpressionStatement","src":"4718:15:22"},{"expression":{"arguments":[{"name":"ret","nodeType":"YulIdentifier","src":"4753:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"4758:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4746:6:22"},"nodeType":"YulFunctionCall","src":"4746:17:22"},"nodeType":"YulExpressionStatement","src":"4746:17:22"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4635:5:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4646:1:22","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4642:3:22"},"nodeType":"YulFunctionCall","src":"4642:6:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4632:2:22"},"nodeType":"YulFunctionCall","src":"4632:17:22"},"nodeType":"YulIf","src":"4629:2:22"},{"nodeType":"YulAssignment","src":"4782:20:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4793:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"4800:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4789:3:22"},"nodeType":"YulFunctionCall","src":"4789:13:22"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"4782:3:22"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4601:5:22","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"4611:3:22","type":""}],"src":"4572:236:22"}]},"contents":"{\n    { }\n    function abi_decode_t_array$_t_address_$dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(arrayPos, arrayPos) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(arrayPos, arrayPos) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, mul(length, 0x20)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value1, value1) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(value1, value1) }\n        let value0_1, value1_1 := abi_decode_t_array$_t_address_$dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value2, value2) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value2, value2) }\n        let value0_1, value1_1 := abi_decode_t_array$_t_address_$dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(value2, value2) }\n        let value2_1, value3_1 := abi_decode_t_array$_t_address_$dyn_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_decode_tuple_t_int256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a807dff59d3474096247bf1cf10d6df8b988b576943ecf8c7dd58f40a940e704__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"INCONSISTENT_PARAMS_LENGTH\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(ret, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(ret, 0x24)\n        }\n        ret := add(value, 1)\n    }\n}","id":22,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"1090":[{"length":32,"start":1103},{"length":32,"start":1608}],"1092":[{"length":32,"start":596},{"length":32,"start":1145}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c806392bf2be01161007157806392bf2be0146101065780639d23d9f214610119578063abfd531014610139578063b3596f071461014c578063e19f47001461015f578063f2fde38b14610167576100a9565b8063170aee73146100ae5780636210308c146100c3578063715018a6146100e15780638c89b64f146100e95780638da5cb5b146100fe575b600080fd5b6100c16100bc366004610921565b61017a565b005b6100cb6101c4565b6040516100d89190610a10565b60405180910390f35b6100c16101d3565b6100f1610252565b6040516100d89190610b1a565b6100cb610276565b6100cb610114366004610921565b610285565b61012c61012736600461094f565b6102a6565b6040516100d89190610a24565b6100c161014736600461098f565b610385565b6100f161015a366004610921565b61042d565b6100cb610646565b6100c1610175366004610921565b61066a565b610182610720565b6000546001600160a01b039081169116146101b85760405162461bcd60e51b81526004016101af90610aae565b60405180910390fd5b6101c181610724565b50565b6002546001600160a01b031690565b6101db610720565b6000546001600160a01b039081169116146102085760405162461bcd60e51b81526004016101af90610aae565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b031690565b6001600160a01b03808216600090815260016020526040902054165b919050565b606060008267ffffffffffffffff8111156102d157634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156102fa578160200160208202803683370190505b50905060005b8381101561037d5761034085858381811061032b57634e487b7160e01b600052603260045260246000fd5b905060200201602081019061015a9190610921565b82828151811061036057634e487b7160e01b600052603260045260246000fd5b60209081029190910101528061037581610b23565b915050610300565b509392505050565b61038d610720565b6000546001600160a01b039081169116146103ba5760405162461bcd60e51b81526004016101af90610aae565b6104278484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505060408051602080880282810182019093528782529093508792508691829185019084908082843760009201919091525061076e92505050565b50505050565b6001600160a01b038082166000818152600160205260408120549092908116917f000000000000000000000000000000000000000000000000000000000000000090911614156104a0577f00000000000000000000000000000000000000000000000000000000000000009150506102a1565b6001600160a01b0381166105365760025460405163b3596f0760e01b81526001600160a01b039091169063b3596f07906104de908690600401610a10565b60206040518083038186803b1580156104f657600080fd5b505afa15801561050a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052e91906109f8565b9150506102a1565b6000816001600160a01b03166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561057157600080fd5b505afa158015610585573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a991906109f8565b905060008113156105bd5791506102a19050565b60025460405163b3596f0760e01b81526001600160a01b039091169063b3596f07906105ed908790600401610a10565b60206040518083038186803b15801561060557600080fd5b505afa158015610619573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063d91906109f8565b925050506102a1565b7f000000000000000000000000000000000000000000000000000000000000000081565b610672610720565b6000546001600160a01b0390811691161461069f5760405162461bcd60e51b81526004016101af90610aae565b6001600160a01b0381166106c55760405162461bcd60e51b81526004016101af90610a68565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b600280546001600160a01b0319166001600160a01b0383169081179091556040517fce7a780d33665b1ea097af5f155e3821b809ecbaa839d3b33aa83ba28168cefb90600090a250565b805182511461078f5760405162461bcd60e51b81526004016101af90610ae3565b60005b82518110156108d3578181815181106107bb57634e487b7160e01b600052603260045260246000fd5b6020026020010151600160008584815181106107e757634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b0316021790555081818151811061085357634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b031683828151811061088457634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03167f22c5b7b2d8561d39f7f210b6b326a1aa69f15311163082308ac4877db6339dc160405160405180910390a3806108cb81610b23565b915050610792565b505050565b60008083601f8401126108e9578182fd5b50813567ffffffffffffffff811115610900578182fd5b602083019150836020808302850101111561091a57600080fd5b9250929050565b600060208284031215610932578081fd5b81356001600160a01b0381168114610948578182fd5b9392505050565b60008060208385031215610961578081fd5b823567ffffffffffffffff811115610977578182fd5b610983858286016108d8565b90969095509350505050565b600080600080604085870312156109a4578182fd5b843567ffffffffffffffff808211156109bb578384fd5b6109c7888389016108d8565b909650945060208701359150808211156109df578384fd5b506109ec878288016108d8565b95989497509550505050565b600060208284031215610a09578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6020808252825182820181905260009190848201906040850190845b81811015610a5c57835183529284019291840191600101610a40565b50909695505050505050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601a908201527f494e434f4e53495354454e545f504152414d535f4c454e475448000000000000604082015260600190565b90815260200190565b6000600019821415610b4357634e487b7160e01b81526011600452602481fd5b506001019056fea26469706673582212208a0990bfedc825c8ec9f474683d99d002d3c25d6ac9e726924f2951f72b889f364736f6c63430008000033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x92BF2BE0 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x92BF2BE0 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x9D23D9F2 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0xABFD5310 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0xB3596F07 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0xE19F4700 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x167 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x170AEE73 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x6210308C EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE1 JUMPI DUP1 PUSH4 0x8C89B64F EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xFE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0xBC CALLDATASIZE PUSH1 0x4 PUSH2 0x921 JUMP JUMPDEST PUSH2 0x17A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCB PUSH2 0x1C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0xA10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC1 PUSH2 0x1D3 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x252 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0xB1A JUMP JUMPDEST PUSH2 0xCB PUSH2 0x276 JUMP JUMPDEST PUSH2 0xCB PUSH2 0x114 CALLDATASIZE PUSH1 0x4 PUSH2 0x921 JUMP JUMPDEST PUSH2 0x285 JUMP JUMPDEST PUSH2 0x12C PUSH2 0x127 CALLDATASIZE PUSH1 0x4 PUSH2 0x94F JUMP JUMPDEST PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0xA24 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x147 CALLDATASIZE PUSH1 0x4 PUSH2 0x98F JUMP JUMPDEST PUSH2 0x385 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0x921 JUMP JUMPDEST PUSH2 0x42D JUMP JUMPDEST PUSH2 0xCB PUSH2 0x646 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x921 JUMP JUMPDEST PUSH2 0x66A JUMP JUMPDEST PUSH2 0x182 PUSH2 0x720 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF SWAP1 PUSH2 0xAAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C1 DUP2 PUSH2 0x724 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x1DB PUSH2 0x720 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x208 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF SWAP1 PUSH2 0xAAE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2FA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x37D JUMPI PUSH2 0x340 DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x32B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x921 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x360 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x375 DUP2 PUSH2 0xB23 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x300 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x38D PUSH2 0x720 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF SWAP1 PUSH2 0xAAE JUMP JUMPDEST PUSH2 0x427 DUP5 DUP5 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP9 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP8 DUP3 MSTORE SWAP1 SWAP4 POP DUP8 SWAP3 POP DUP7 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x76E SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP3 SWAP1 DUP2 AND SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND EQ ISZERO PUSH2 0x4A0 JUMPI PUSH32 0x0 SWAP2 POP POP PUSH2 0x2A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x536 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB3596F07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xB3596F07 SWAP1 PUSH2 0x4DE SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0xA10 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x50A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x52E SWAP2 SWAP1 PUSH2 0x9F8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2A1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x50D25BCD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x571 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x585 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5A9 SWAP2 SWAP1 PUSH2 0x9F8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SGT ISZERO PUSH2 0x5BD JUMPI SWAP2 POP PUSH2 0x2A1 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB3596F07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xB3596F07 SWAP1 PUSH2 0x5ED SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0xA10 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x605 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x619 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x63D SWAP2 SWAP1 PUSH2 0x9F8 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x2A1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x672 PUSH2 0x720 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x69F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF SWAP1 PUSH2 0xAAE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x6C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF SWAP1 PUSH2 0xA68 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xCE7A780D33665B1EA097AF5F155E3821B809ECBAA839D3B33AA83BA28168CEFB SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x78F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF SWAP1 PUSH2 0xAE3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x8D3 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x7BB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x7E7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x853 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x884 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x22C5B7B2D8561D39F7F210B6B326A1AA69F15311163082308AC4877DB6339DC1 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH2 0x8CB DUP2 PUSH2 0xB23 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x792 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x8E9 JUMPI DUP2 DUP3 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x900 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP1 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x91A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x932 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x948 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x961 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x977 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x983 DUP6 DUP3 DUP7 ADD PUSH2 0x8D8 JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x9A4 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x9BB JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x9C7 DUP9 DUP4 DUP10 ADD PUSH2 0x8D8 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x9DF JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH2 0x9EC DUP8 DUP3 DUP9 ADD PUSH2 0x8D8 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA09 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA5C JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xA40 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x494E434F4E53495354454E545F504152414D535F4C454E475448000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0xB43 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 MULMOD SWAP1 0xBF 0xED 0xC8 0x25 0xC8 0xEC SWAP16 SELFBALANCE CHAINID DUP4 0xD9 SWAP14 STOP 0x2D EXTCODECOPY 0x25 0xD6 0xAC SWAP15 PUSH19 0x6924F2951F72B889F364736F6C634300080000 CALLER ","sourceMap":"871:4691:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2844:121;;;;;;:::i;:::-;;:::i;:::-;;5451:109;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1697:145:3;;;:::i;1369:43:9:-;;;:::i;:::-;;;;;;;:::i;1074:77:3:-;;;:::i;5205:126:9:-;;;;;;:::i;:::-;;:::i;4706:329::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2515:172::-;;;;;;:::i;:::-;;:::i;3949:630::-;;;;;;:::i;:::-;;:::i;1325:38::-;;;:::i;1991:274:3:-;;;;;;:::i;:::-;;:::i;2844:121:9:-;1288:12:3;:10;:12::i;:::-;1278:6;;-1:-1:-1;;;;;1278:6:3;;;:22;;;1270:67;;;;-1:-1:-1;;;1270:67:3;;;;;;;:::i;:::-;;;;;;;;;2924:34:9::1;2943:14;2924:18;:34::i;:::-;2844:121:::0;:::o;5451:109::-;5537:15;;-1:-1:-1;;;;;5537:15:9;5451:109;:::o;1697:145:3:-;1288:12;:10;:12::i;:::-;1278:6;;-1:-1:-1;;;;;1278:6:3;;;:22;;;1270:67;;;;-1:-1:-1;;;1270:67:3;;;;;;;:::i;:::-;1803:1:::1;1787:6:::0;;1766:40:::1;::::0;-1:-1:-1;;;;;1787:6:3;;::::1;::::0;1766:40:::1;::::0;1803:1;;1766:40:::1;1833:1;1816:19:::0;;-1:-1:-1;;;;;;1816:19:3::1;::::0;;1697:145::o;1369:43:9:-;;;:::o;1074:77:3:-;1112:7;1138:6;-1:-1:-1;;;;;1138:6:3;1074:77;:::o;5205:126:9:-;-1:-1:-1;;;;;5303:20:9;;;5269:7;5303:20;;;:13;:20;;;;;;;5205:126;;;;:::o;4706:329::-;4805:16;4837:23;4877:6;4863:28;;;;;;-1:-1:-1;;;4863:28:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4863:28:9;;4837:54;;4906:9;4901:105;4921:17;;;4901:105;;;4971:24;4985:6;;4992:1;4985:9;;;;;-1:-1:-1;;;4985:9:9;;;;;;;;;;;;;;;;;;;;;;:::i;4971:24::-;4959:6;4966:1;4959:9;;;;;;-1:-1:-1;;;4959:9:9;;;;;;;;;;;;;;;;;;:36;4940:3;;;;:::i;:::-;;;;4901:105;;;-1:-1:-1;5022:6:9;4706:329;-1:-1:-1;;;4706:329:9:o;2515:172::-;1288:12:3;:10;:12::i;:::-;1278:6;;-1:-1:-1;;;;;1278:6:3;;;:22;;;1270:67;;;;-1:-1:-1;;;1270:67:3;;;;;;;:::i;:::-;2646:34:9::1;2664:6;;2646:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;2646:34:9::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;;;;;;-1:-1:-1;2672:7:9;;-1:-1:-1;2672:7:9;;;;2646:34;::::1;::::0;2672:7;;2646:34;2672:7;2646:34;::::1;;::::0;::::1;::::0;;;;-1:-1:-1;2646:17:9::1;::::0;-1:-1:-1;;;2646:34:9:i:1;:::-;2515:172:::0;;;;:::o;3949:630::-;-1:-1:-1;;;;;4102:20:9;;;4049:7;4102:20;;;:13;:20;;;;;;4049:7;;4102:20;;;;4146:13;4137:22;;;;4133:440;;;4182:18;4175:25;;;;;4133:440;-1:-1:-1;;;;;4221:29:9;;4217:356;;4273:15;;:36;;-1:-1:-1;;;4273:36:9;;-1:-1:-1;;;;;4273:15:9;;;;:29;;:36;;4303:5;;4273:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4266:43;;;;;4217:356;4340:12;4376:6;-1:-1:-1;;;;;4355:41:9;;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4340:58;;4424:1;4416:5;:9;4412:151;;;4460:5;-1:-1:-1;4445:21:9;;-1:-1:-1;4445:21:9;4412:151;4512:15;;:36;;-1:-1:-1;;;4512:36:9;;-1:-1:-1;;;;;4512:15:9;;;;:29;;:36;;4542:5;;4512:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4505:43;;;;;;1325:38;;;:::o;1991:274:3:-;1288:12;:10;:12::i;:::-;1278:6;;-1:-1:-1;;;;;1278:6:3;;;:22;;;1270:67;;;;-1:-1:-1;;;1270:67:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;2092:22:3;::::1;2071:107;;;;-1:-1:-1::0;;;2071:107:3::1;;;;;;;:::i;:::-;2214:6;::::0;;2193:38:::1;::::0;-1:-1:-1;;;;;2193:38:3;;::::1;::::0;2214:6;::::1;::::0;2193:38:::1;::::0;::::1;2241:6;:17:::0;;-1:-1:-1;;;;;;2241:17:3::1;-1:-1:-1::0;;;;;2241:17:3;;;::::1;::::0;;;::::1;::::0;;1991:274::o;590:96:1:-;669:10;590:96;:::o;3675:182:9:-;3746:15;:52;;-1:-1:-1;;;;;;3746:52:9;-1:-1:-1;;;;;3746:52:9;;;;;;;;3813:37;;;;-1:-1:-1;;3813:37:9;3675:182;:::o;3152:393::-;3296:7;:14;3279:6;:13;:31;3271:70;;;;-1:-1:-1;;;3271:70:9;;;;;;;:::i;:::-;3356:9;3351:188;3375:6;:13;3371:1;:17;3351:188;;;3457:7;3465:1;3457:10;;;;;;-1:-1:-1;;;3457:10:9;;;;;;;;;;;;;;;3409:13;:24;3423:6;3430:1;3423:9;;;;;;-1:-1:-1;;;3423:9:9;;;;;;;;;;;;;;;-1:-1:-1;;;;;3409:24:9;-1:-1:-1;;;;;3409:24:9;;;;;;;;;;;;;:59;;;;;-1:-1:-1;;;;;3409:59:9;;;;;-1:-1:-1;;;;;3409:59:9;;;;;;3517:7;3525:1;3517:10;;;;;;-1:-1:-1;;;3517:10:9;;;;;;;;;;;;;;;-1:-1:-1;;;;;3487:41:9;3506:6;3513:1;3506:9;;;;;;-1:-1:-1;;;3506:9:9;;;;;;;;;;;;;;;-1:-1:-1;;;;;3487:41:9;;;;;;;;;;;3390:3;;;;:::i;:::-;;;;3351:188;;;;3152:393;;:::o;14:404:22:-;;;147:3;140:4;132:6;128:17;124:27;114:2;;172:8;162;155:26;114:2;-1:-1:-1;202:20:22;;245:18;234:30;;231:2;;;284:8;274;267:26;231:2;328:4;320:6;316:17;304:29;;391:3;384:4;376;368:6;364:17;356:6;352:30;348:41;345:50;342:2;;;408:1;405;398:12;342:2;104:314;;;;;:::o;423:306::-;;535:2;523:9;514:7;510:23;506:32;503:2;;;556:6;548;541:22;503:2;587:23;;-1:-1:-1;;;;;639:31:22;;629:42;;619:2;;690:6;682;675:22;619:2;718:5;493:236;-1:-1:-1;;;493:236:22:o;734:463::-;;;881:2;869:9;860:7;856:23;852:32;849:2;;;902:6;894;887:22;849:2;947:9;934:23;980:18;972:6;969:30;966:2;;;1017:6;1009;1002:22;966:2;1061:76;1129:7;1120:6;1109:9;1105:22;1061:76;:::i;:::-;1156:8;;1035:102;;-1:-1:-1;839:358:22;-1:-1:-1;;;;839:358:22:o;1202:815::-;;;;;1401:2;1389:9;1380:7;1376:23;1372:32;1369:2;;;1422:6;1414;1407:22;1369:2;1467:9;1454:23;1496:18;1537:2;1529:6;1526:14;1523:2;;;1558:6;1550;1543:22;1523:2;1602:76;1670:7;1661:6;1650:9;1646:22;1602:76;:::i;:::-;1697:8;;-1:-1:-1;1576:102:22;-1:-1:-1;1785:2:22;1770:18;;1757:32;;-1:-1:-1;1801:16:22;;;1798:2;;;1835:6;1827;1820:22;1798:2;;1879:78;1949:7;1938:8;1927:9;1923:24;1879:78;:::i;:::-;1359:658;;;;-1:-1:-1;1976:8:22;-1:-1:-1;;;;1359:658:22:o;2022:193::-;;2144:2;2132:9;2123:7;2119:23;2115:32;2112:2;;;2165:6;2157;2150:22;2112:2;-1:-1:-1;2193:16:22;;2102:113;-1:-1:-1;2102:113:22:o;2419:203::-;-1:-1:-1;;;;;2583:32:22;;;;2565:51;;2553:2;2538:18;;2520:102::o;2627:635::-;2798:2;2850:21;;;2920:13;;2823:18;;;2942:22;;;2627:635;;2798:2;3021:15;;;;2995:2;2980:18;;;2627:635;3067:169;3081:6;3078:1;3075:13;3067:169;;;3142:13;;3130:26;;3211:15;;;;3176:12;;;;3103:1;3096:9;3067:169;;;-1:-1:-1;3253:3:22;;2778:484;-1:-1:-1;;;;;;2778:484:22:o;3267:402::-;3469:2;3451:21;;;3508:2;3488:18;;;3481:30;3547:34;3542:2;3527:18;;3520:62;-1:-1:-1;;;3613:2:22;3598:18;;3591:36;3659:3;3644:19;;3441:228::o;3674:356::-;3876:2;3858:21;;;3895:18;;;3888:30;3954:34;3949:2;3934:18;;3927:62;4021:2;4006:18;;3848:182::o;4035:350::-;4237:2;4219:21;;;4276:2;4256:18;;;4249:30;4315:28;4310:2;4295:18;;4288:56;4376:2;4361:18;;4209:176::o;4390:177::-;4536:25;;;4524:2;4509:18;;4491:76::o;4572:236::-;;-1:-1:-1;;4632:17:22;;4629:2;;;-1:-1:-1;;;4672:33:22;;4728:4;4725:1;4718:15;4758:4;4679:3;4746:17;4629:2;-1:-1:-1;4800:1:22;4789:13;;4619:189::o"},"gasEstimates":{"creation":{"codeDepositCost":"588800","executionCost":"infinite","totalCost":"infinite"},"external":{"BASE_CURRENCY()":"infinite","BASE_CURRENCY_UNIT()":"infinite","getAssetPrice(address)":"infinite","getAssetsPrices(address[])":"infinite","getFallbackOracle()":"1093","getSourceOfAsset(address)":"1274","owner()":"1159","renounceOwnership()":"24249","setAssetSources(address[],address[])":"infinite","setFallbackOracle(address)":"23184","transferOwnership(address)":"24514"},"internal":{"_setAssetsSources(address[] memory,address[] memory)":"infinite","_setFallbackOracle(address)":"22026"}},"methodIdentifiers":{"BASE_CURRENCY()":"e19f4700","BASE_CURRENCY_UNIT()":"8c89b64f","getAssetPrice(address)":"b3596f07","getAssetsPrices(address[])":"9d23d9f2","getFallbackOracle()":"6210308c","getSourceOfAsset(address)":"92bf2be0","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setAssetSources(address[],address[])":"abfd5310","setFallbackOracle(address)":"170aee73","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"sources\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"fallbackOracle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseCurrency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"baseCurrencyUnit\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"AssetSourceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"baseCurrency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseCurrencyUnit\",\"type\":\"uint256\"}],\"name\":\"BaseCurrencySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fallbackOracle\",\"type\":\"address\"}],\"name\":\"FallbackOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BASE_CURRENCY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BASE_CURRENCY_UNIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"name\":\"getAssetsPrices\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFallbackOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getSourceOfAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"sources\",\"type\":\"address[]\"}],\"name\":\"setAssetSources\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fallbackOracle\",\"type\":\"address\"}],\"name\":\"setFallbackOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"assets\":\"The addresses of the assets\",\"baseCurrency\":\"the base currency used for the price quotes. If USD is used, base currency is 0x0\",\"baseCurrencyUnit\":\"the unit of the base currency\",\"fallbackOracle\":\"The address of the fallback oracle to use if the data of an        aggregator is not consistent\",\"sources\":\"The address of the source of each asset\"}},\"getAssetPrice(address)\":{\"params\":{\"asset\":\"The asset address\"}},\"getAssetsPrices(address[])\":{\"params\":{\"assets\":\"The list of assets addresses\"}},\"getFallbackOracle()\":{\"returns\":{\"_0\":\"address The addres of the fallback oracle\"}},\"getSourceOfAsset(address)\":{\"params\":{\"asset\":\"The address of the asset\"},\"returns\":{\"_0\":\"address The address of the source\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setAssetSources(address[],address[])\":{\"params\":{\"assets\":\"The addresses of the assets\",\"sources\":\"The address of the source of each asset\"}},\"setFallbackOracle(address)\":{\"params\":{\"fallbackOracle\":\"The address of the fallbackOracle\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"AaveOracle\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor\"},\"getAssetPrice(address)\":{\"notice\":\"Gets an asset price by address\"},\"getAssetsPrices(address[])\":{\"notice\":\"Gets a list of prices from a list of assets addresses\"},\"getFallbackOracle()\":{\"notice\":\"Gets the address of the fallback oracle\"},\"getSourceOfAsset(address)\":{\"notice\":\"Gets the address of the source for an asset address\"},\"setAssetSources(address[],address[])\":{\"notice\":\"External function called by the Aave governance to set or replace sources of assets\"},\"setFallbackOracle(address)\":{\"notice\":\"Sets the fallbackOracle - Callable only by the Aave governance\"}},\"notice\":\"Proxy smart contract to get the price of an asset from a price source, with Chainlink Aggregator         smart contracts as primary option - If the returned price by a Chainlink aggregator is <= 0, the call is forwarded to a fallbackOracle - Owned by the Aave governance system, allowed to add sources for assets, replace them   and change the fallbackOracle\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/misc/AaveOracle.sol\":\"AaveOracle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/Address.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\\n        // for accounts without code, i.e. `keccak256('')`\\n        // bytes32 codehash;\\n        // bytes32 accountHash =\\n        //     0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\n        // // solhint-disable-next-line no-inline-assembly\\n        // assembly {\\n        //     codehash := extcodehash(account)\\n        // }\\n        // return (codehash != accountHash && codehash != 0x0);\\n        return account.code.length > 0; //updated\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(\\n            address(this).balance >= amount,\\n            \\\"Address: insufficient balance\\\"\\n        );\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(\\n            success,\\n            \\\"Address: unable to send value, recipient may have reverted\\\"\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x37523692d5b121789b70f518a1639d6a978d5f863ae026b16cc45b823eecf157\",\"license\":\"agpl-3.0\"},\"contracts/dependencies/openzeppelin/contracts/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x68bfa0a768a2c75bcc8ea4588200f8f78d5b20a785189855b4b301770db578cf\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount)\\n        external\\n        returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n}\\n\",\"keccak256\":\"0x6a0e7bdec11b28b6b88f25301cd51477bd0025846062465a158eee1144f10bd3\",\"license\":\"agpl-3.0\"},\"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0;\\n\\nimport \\\"./Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\ncontract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(\\n        address indexed previousOwner,\\n        address indexed newOwner\\n    );\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(\\n            newOwner != address(0),\\n            \\\"Ownable: new owner is the zero address\\\"\\n        );\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x27577f376012a863c1c6f74048b33a256a5521baa56167d27bc52d90a87fb1cb\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/contracts/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {SafeMath} from \\\"./SafeMath.sol\\\";\\nimport {Address} from \\\"./Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        callOptionalReturn(\\n            token,\\n            abi.encodeWithSelector(token.transfer.selector, to, value)\\n        );\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        callOptionalReturn(\\n            token,\\n            abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\\n        );\\n    }\\n\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        callOptionalReturn(\\n            token,\\n            abi.encodeWithSelector(token.approve.selector, spender, value)\\n        );\\n    }\\n\\n    function callOptionalReturn(IERC20 token, bytes memory data) private {\\n        require(address(token).isContract(), \\\"SafeERC20: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        require(success, \\\"SafeERC20: low-level call failed\\\");\\n\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(\\n                abi.decode(returndata, (bool)),\\n                \\\"SafeERC20: ERC20 operation did not succeed\\\"\\n            );\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xb4f0a6930495daa6a124f1183b6caee5dc8283b230fa0d51ae90322f7ba24aad\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b)\\n        internal\\n        pure\\n        returns (bool, uint256)\\n    {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b)\\n        internal\\n        pure\\n        returns (bool, uint256)\\n    {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b)\\n        internal\\n        pure\\n        returns (bool, uint256)\\n    {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b)\\n        internal\\n        pure\\n        returns (bool, uint256)\\n    {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b)\\n        internal\\n        pure\\n        returns (bool, uint256)\\n    {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x92977dbde9b82328cac05a270258b1e93c9a0e1d4851786aac4d86e916bd54ca\",\"license\":\"MIT\"},\"contracts/interfaces/IChainlinkAggregator.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\ninterface IChainlinkAggregator {\\n    function decimals() external view returns (uint8);\\n\\n    function latestAnswer() external view returns (int256);\\n\\n    function latestTimestamp() external view returns (uint256);\\n\\n    function latestRound() external view returns (uint256);\\n\\n    function getAnswer(uint256 roundId) external view returns (int256);\\n\\n    function getTimestamp(uint256 roundId) external view returns (uint256);\\n\\n    event AnswerUpdated(\\n        int256 indexed current,\\n        uint256 indexed roundId,\\n        uint256 timestamp\\n    );\\n    event NewRound(uint256 indexed roundId, address indexed startedBy);\\n}\\n\",\"keccak256\":\"0xe9b6c1724de16518dadf10284718004691a351a25b5348b81867f5ec58f67642\",\"license\":\"agpl-3.0\"},\"contracts/interfaces/IPriceOracleGetter.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\n/**\\n * @title IPriceOracleGetter interface\\n * @notice Interface for the Aave price oracle.\\n **/\\n\\ninterface IPriceOracleGetter {\\n    /**\\n     * @dev returns the asset price in ETH\\n     * @param asset the address of the asset\\n     * @return the ETH price of the asset\\n     **/\\n    function getAssetPrice(address asset) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xd0ddd343f94683ab5210c629a098a2d306433543e9ac0d6d3841672f8166f260\",\"license\":\"agpl-3.0\"},\"contracts/misc/AaveOracle.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\nimport {Ownable} from \\\"../dependencies/openzeppelin/contracts/Ownable.sol\\\";\\nimport {IERC20} from \\\"../dependencies/openzeppelin/contracts/IERC20.sol\\\";\\n\\nimport {IPriceOracleGetter} from \\\"../interfaces/IPriceOracleGetter.sol\\\";\\nimport {IChainlinkAggregator} from \\\"../interfaces/IChainlinkAggregator.sol\\\";\\nimport {SafeERC20} from \\\"../dependencies/openzeppelin/contracts/SafeERC20.sol\\\";\\n\\n/// @title AaveOracle\\n/// @author Aave\\n/// @notice Proxy smart contract to get the price of an asset from a price source, with Chainlink Aggregator\\n///         smart contracts as primary option\\n/// - If the returned price by a Chainlink aggregator is <= 0, the call is forwarded to a fallbackOracle\\n/// - Owned by the Aave governance system, allowed to add sources for assets, replace them\\n///   and change the fallbackOracle\\ncontract AaveOracle is IPriceOracleGetter, Ownable {\\n    using SafeERC20 for IERC20;\\n\\n    event BaseCurrencySet(\\n        address indexed baseCurrency,\\n        uint256 baseCurrencyUnit\\n    );\\n    event AssetSourceUpdated(address indexed asset, address indexed source);\\n    event FallbackOracleUpdated(address indexed fallbackOracle);\\n\\n    mapping(address => IChainlinkAggregator) private assetsSources;\\n    IPriceOracleGetter private _fallbackOracle;\\n    address public immutable BASE_CURRENCY;\\n    uint256 public immutable BASE_CURRENCY_UNIT;\\n\\n    /// @notice Constructor\\n    /// @param assets The addresses of the assets\\n    /// @param sources The address of the source of each asset\\n    /// @param fallbackOracle The address of the fallback oracle to use if the data of an\\n    ///        aggregator is not consistent\\n    /// @param baseCurrency the base currency used for the price quotes. If USD is used, base currency is 0x0\\n    /// @param baseCurrencyUnit the unit of the base currency\\n    constructor(\\n        address[] memory assets,\\n        address[] memory sources,\\n        address fallbackOracle,\\n        address baseCurrency,\\n        uint256 baseCurrencyUnit\\n    ) public {\\n        _setFallbackOracle(fallbackOracle);\\n        _setAssetsSources(assets, sources);\\n        BASE_CURRENCY = baseCurrency;\\n        BASE_CURRENCY_UNIT = baseCurrencyUnit;\\n        emit BaseCurrencySet(baseCurrency, baseCurrencyUnit);\\n    }\\n\\n    /// @notice External function called by the Aave governance to set or replace sources of assets\\n    /// @param assets The addresses of the assets\\n    /// @param sources The address of the source of each asset\\n    function setAssetSources(\\n        address[] calldata assets,\\n        address[] calldata sources\\n    ) external onlyOwner {\\n        _setAssetsSources(assets, sources);\\n    }\\n\\n    /// @notice Sets the fallbackOracle\\n    /// - Callable only by the Aave governance\\n    /// @param fallbackOracle The address of the fallbackOracle\\n    function setFallbackOracle(address fallbackOracle) external onlyOwner {\\n        _setFallbackOracle(fallbackOracle);\\n    }\\n\\n    /// @notice Internal function to set the sources for each asset\\n    /// @param assets The addresses of the assets\\n    /// @param sources The address of the source of each asset\\n    function _setAssetsSources(\\n        address[] memory assets,\\n        address[] memory sources\\n    ) internal {\\n        require(assets.length == sources.length, \\\"INCONSISTENT_PARAMS_LENGTH\\\");\\n        for (uint256 i = 0; i < assets.length; i++) {\\n            assetsSources[assets[i]] = IChainlinkAggregator(sources[i]);\\n            emit AssetSourceUpdated(assets[i], sources[i]);\\n        }\\n    }\\n\\n    /// @notice Internal function to set the fallbackOracle\\n    /// @param fallbackOracle The address of the fallbackOracle\\n    function _setFallbackOracle(address fallbackOracle) internal {\\n        _fallbackOracle = IPriceOracleGetter(fallbackOracle);\\n        emit FallbackOracleUpdated(fallbackOracle);\\n    }\\n\\n    /// @notice Gets an asset price by address\\n    /// @param asset The asset address\\n    function getAssetPrice(address asset)\\n        public\\n        view\\n        override\\n        returns (uint256)\\n    {\\n        IChainlinkAggregator source = assetsSources[asset];\\n\\n        if (asset == BASE_CURRENCY) {\\n            return BASE_CURRENCY_UNIT;\\n        } else if (address(source) == address(0)) {\\n            return _fallbackOracle.getAssetPrice(asset);\\n        } else {\\n            int256 price = IChainlinkAggregator(source).latestAnswer();\\n            if (price > 0) {\\n                return uint256(price);\\n            } else {\\n                return _fallbackOracle.getAssetPrice(asset);\\n            }\\n        }\\n    }\\n\\n    /// @notice Gets a list of prices from a list of assets addresses\\n    /// @param assets The list of assets addresses\\n    function getAssetsPrices(address[] calldata assets)\\n        external\\n        view\\n        returns (uint256[] memory)\\n    {\\n        uint256[] memory prices = new uint256[](assets.length);\\n        for (uint256 i = 0; i < assets.length; i++) {\\n            prices[i] = getAssetPrice(assets[i]);\\n        }\\n        return prices;\\n    }\\n\\n    /// @notice Gets the address of the source for an asset address\\n    /// @param asset The address of the asset\\n    /// @return address The address of the source\\n    function getSourceOfAsset(address asset) external view returns (address) {\\n        return address(assetsSources[asset]);\\n    }\\n\\n    /// @notice Gets the address of the fallback oracle\\n    /// @return address The addres of the fallback oracle\\n    function getFallbackOracle() external view returns (address) {\\n        return address(_fallbackOracle);\\n    }\\n}\\n\",\"keccak256\":\"0xd6b51453891793a3bdfadfa9dbac1514e5b2eef1ec903cf2ee84cb38f254682a\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[{"astId":161,"contract":"contracts/misc/AaveOracle.sol:AaveOracle","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":1085,"contract":"contracts/misc/AaveOracle.sol:AaveOracle","label":"assetsSources","offset":0,"slot":"1","type":"t_mapping(t_address,t_contract(IChainlinkAggregator)786)"},{"astId":1088,"contract":"contracts/misc/AaveOracle.sol:AaveOracle","label":"_fallbackOracle","offset":0,"slot":"2","type":"t_contract(IPriceOracleGetter)1043"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_contract(IChainlinkAggregator)786":{"encoding":"inplace","label":"contract IChainlinkAggregator","numberOfBytes":"20"},"t_contract(IPriceOracleGetter)1043":{"encoding":"inplace","label":"contract IPriceOracleGetter","numberOfBytes":"20"},"t_mapping(t_address,t_contract(IChainlinkAggregator)786)":{"encoding":"mapping","key":"t_address","label":"mapping(address => contract IChainlinkAggregator)","numberOfBytes":"32","value":"t_contract(IChainlinkAggregator)786"}}},"userdoc":{"kind":"user","methods":{"constructor":{"notice":"Constructor"},"getAssetPrice(address)":{"notice":"Gets an asset price by address"},"getAssetsPrices(address[])":{"notice":"Gets a list of prices from a list of assets addresses"},"getFallbackOracle()":{"notice":"Gets the address of the fallback oracle"},"getSourceOfAsset(address)":{"notice":"Gets the address of the source for an asset address"},"setAssetSources(address[],address[])":{"notice":"External function called by the Aave governance to set or replace sources of assets"},"setFallbackOracle(address)":{"notice":"Sets the fallbackOracle - Callable only by the Aave governance"}},"notice":"Proxy smart contract to get the price of an asset from a price source, with Chainlink Aggregator         smart contracts as primary option - If the returned price by a Chainlink aggregator is <= 0, the call is forwarded to a fallbackOracle - Owned by the Aave governance system, allowed to add sources for assets, replace them   and change the fallbackOracle","version":1}}},"contracts/mocks/tokens/CurvePoolMocked.sol":{"CurvePoolMocked":{"abi":[{"inputs":[{"internalType":"uint256","name":"_virtual_price","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"get_virtual_price","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"ERC20 minting logic","kind":"dev","methods":{},"title":"ERC20Mintable","version":1},"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:210:22","statements":[{"nodeType":"YulBlock","src":"6:3:22","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:113:22","statements":[{"body":{"nodeType":"YulBlock","src":"141:26:22","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"150:6:22"},{"name":"value0","nodeType":"YulIdentifier","src":"158:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:22"},"nodeType":"YulFunctionCall","src":"143:22:22"},"nodeType":"YulExpressionStatement","src":"143:22:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:22"},"nodeType":"YulFunctionCall","src":"112:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:22"},"nodeType":"YulFunctionCall","src":"108:32:22"},"nodeType":"YulIf","src":"105:2:22"},{"nodeType":"YulAssignment","src":"176:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"192:9:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"186:5:22"},"nodeType":"YulFunctionCall","src":"186:16:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"176:6:22"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:22","type":""}],"src":"14:194:22"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n}","id":22,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b506040516100f93803806100f983398101604081905261002f91610047565b8061003f5750670e27c49886e600005b60005561005f565b600060208284031215610058578081fd5b5051919050565b608c8061006d6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063bb7b8b8014602d575b600080fd5b60336047565b604051603e9190604d565b60405180910390f35b60005490565b9081526020019056fea2646970667358221220c99546aa50a5feba93a50c907c0a7c53ea258e41c449783902e6d7d187a94fa864736f6c63430008000033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xF9 CODESIZE SUB DUP1 PUSH2 0xF9 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x47 JUMP JUMPDEST DUP1 PUSH2 0x3F JUMPI POP PUSH8 0xE27C49886E60000 JUMPDEST PUSH1 0x0 SSTORE PUSH2 0x5F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x58 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8C DUP1 PUSH2 0x6D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBB7B8B80 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3E SWAP2 SWAP1 PUSH1 0x4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 SWAP6 CHAINID 0xAA POP 0xA5 INVALID 0xBA SWAP4 0xA5 0xC SWAP1 PUSH29 0xA7C53EA258E41C449783902E6D7D187A94FA864736F6C634300080000 CALLER ","sourceMap":"209:397:10:-:0;;;282:209;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;339:19;335:110;;-1:-1:-1;391:19:10;335:110;454:13;:30;209:397;;14:194:22;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;-1:-1:-1;186:16:22;;95:113;-1:-1:-1;95:113:22:o;:::-;209:397:10;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:193:22","statements":[{"nodeType":"YulBlock","src":"6:3:22","statements":[]},{"body":{"nodeType":"YulBlock","src":"115:76:22","statements":[{"nodeType":"YulAssignment","src":"125:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"148:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"133:3:22"},"nodeType":"YulFunctionCall","src":"133:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"125:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"167:9:22"},{"name":"value0","nodeType":"YulIdentifier","src":"178:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"160:6:22"},"nodeType":"YulFunctionCall","src":"160:25:22"},"nodeType":"YulExpressionStatement","src":"160:25:22"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"84:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"95:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"106:4:22","type":""}],"src":"14:177:22"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}","id":22,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052348015600f57600080fd5b506004361060285760003560e01c8063bb7b8b8014602d575b600080fd5b60336047565b604051603e9190604d565b60405180910390f35b60005490565b9081526020019056fea2646970667358221220c99546aa50a5feba93a50c907c0a7c53ea258e41c449783902e6d7d187a94fa864736f6c63430008000033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBB7B8B80 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3E SWAP2 SWAP1 PUSH1 0x4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 SWAP6 CHAINID 0xAA POP 0xA5 INVALID 0xBA SWAP4 0xA5 0xC SWAP1 PUSH29 0xA7C53EA258E41C449783902E6D7D187A94FA864736F6C634300080000 CALLER ","sourceMap":"209:397:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;497:107;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;558:7;584:13;497:107;:::o;14:177:22:-;160:25;;;148:2;133:18;;115:76::o"},"gasEstimates":{"creation":{"codeDepositCost":"28000","executionCost":"infinite","totalCost":"infinite"},"external":{"get_virtual_price()":"1006"}},"methodIdentifiers":{"get_virtual_price()":"bb7b8b80"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_virtual_price\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"get_virtual_price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 minting logic\",\"kind\":\"dev\",\"methods\":{},\"title\":\"ERC20Mintable\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/tokens/CurvePoolMocked.sol\":\"CurvePoolMocked\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/mocks/tokens/CurvePoolMocked.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\n//not used yet\\npragma solidity >=0.8.0;\\n\\nimport {ICurvePool} from \\\"../../oracles/interfaces/ICurvePoolV1.sol\\\";\\n\\n/**\\n * @title ERC20Mintable\\n * @dev ERC20 minting logic\\n */\\ncontract CurvePoolMocked is ICurvePool {\\n    uint256 virtual_price;\\n\\n    constructor(uint256 _virtual_price) public {\\n        if (_virtual_price == 0) {\\n            _virtual_price = 1020000000000000000; //1.02 with 18 decimals\\n        }\\n        virtual_price = _virtual_price;\\n    }\\n\\n    function get_virtual_price() external view override returns (uint256) {\\n        return virtual_price;\\n    }\\n}\\n\",\"keccak256\":\"0x54d6fe5d3dffe7957c2879694619f78cd061e40f0d8156aeab35de14b6c0005f\",\"license\":\"agpl-3.0\"},\"contracts/oracles/interfaces/ICurvePoolV1.sol\":{\"content\":\"pragma solidity >=0.8.0;\\n\\ninterface ICurvePool {\\n    function get_virtual_price() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x58f8992dae5fdd0d425f8fc86d7cb3f59e61ba73ccc1111c281645d48dad4a72\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1384,"contract":"contracts/mocks/tokens/CurvePoolMocked.sol:CurvePoolMocked","label":"virtual_price","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/oracles/ConvexOracleV2.sol":{"ConvexOracleV2":{"abi":[{"inputs":[{"internalType":"contract CurveOracleV2","name":"_curve_oracle","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"curve_pool","type":"address"},{"internalType":"uint256[]","name":"prices","type":"uint256[]"},{"internalType":"uint16","name":"pid","type":"uint16"},{"internalType":"address","name":"convex_lp","type":"address"},{"internalType":"address","name":"curve_lp","type":"address"}],"name":"get_convex_price","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:348:22","statements":[{"nodeType":"YulBlock","src":"6:3:22","statements":[]},{"body":{"nodeType":"YulBlock","src":"117:229:22","statements":[{"body":{"nodeType":"YulBlock","src":"163:26:22","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"172:6:22"},{"name":"value0","nodeType":"YulIdentifier","src":"180:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"165:6:22"},"nodeType":"YulFunctionCall","src":"165:22:22"},"nodeType":"YulExpressionStatement","src":"165:22:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"138:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"147:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"134:3:22"},"nodeType":"YulFunctionCall","src":"134:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"159:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"130:3:22"},"nodeType":"YulFunctionCall","src":"130:32:22"},"nodeType":"YulIf","src":"127:2:22"},{"nodeType":"YulVariableDeclaration","src":"198:29:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"217:9:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"211:5:22"},"nodeType":"YulFunctionCall","src":"211:16:22"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"202:5:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"290:26:22","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"299:6:22"},{"name":"value0","nodeType":"YulIdentifier","src":"307:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"292:6:22"},"nodeType":"YulFunctionCall","src":"292:22:22"},"nodeType":"YulExpressionStatement","src":"292:22:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"249:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"260:5:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"275:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"280:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"271:3:22"},"nodeType":"YulFunctionCall","src":"271:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"284:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"267:3:22"},"nodeType":"YulFunctionCall","src":"267:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"256:3:22"},"nodeType":"YulFunctionCall","src":"256:31:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"246:2:22"},"nodeType":"YulFunctionCall","src":"246:42:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"239:6:22"},"nodeType":"YulFunctionCall","src":"239:50:22"},"nodeType":"YulIf","src":"236:2:22"},{"nodeType":"YulAssignment","src":"325:15:22","value":{"name":"value","nodeType":"YulIdentifier","src":"335:5:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"325:6:22"}]}]},"name":"abi_decode_tuple_t_contract$_CurveOracleV2_$1566_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"83:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"94:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"106:6:22","type":""}],"src":"14:332:22"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_contract$_CurveOracleV2_$1566_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n}","id":22,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b5060405161036838038061036883398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b6102d7806100916000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80632a417cc714610030575b600080fd5b61004361003e366004610115565b610059565b6040516100509190610282565b60405180910390f35b600080546040516336e5b51960e11b815282916001600160a01b031690636dcb6a329061008c908a908a9060040161022c565b60206040518083038186803b1580156100a457600080fd5b505afa1580156100b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100dc9190610214565b979650505050505050565b80356001600160a01b03811681146100fe57600080fd5b919050565b803561ffff811681146100fe57600080fd5b600080600080600060a0868803121561012c578081fd5b610135866100e7565b945060208087013567ffffffffffffffff80821115610152578384fd5b818901915089601f830112610165578384fd5b8135818111156101775761017761028b565b838102604051858282010181811085821117156101965761019661028b565b604052828152858101935084860182860187018e10156101b4578788fd5b8795505b838610156101d65780358552600195909501949386019386016101b8565b508099505050505050506101ec60408701610103565b92506101fa606087016100e7565b9150610208608087016100e7565b90509295509295909350565b600060208284031215610225578081fd5b5051919050565b6001600160a01b038316815260406020808301829052835191830182905260009184820191906060850190845b8181101561027557845183529383019391830191600101610259565b5090979650505050505050565b90815260200190565b634e487b7160e01b600052604160045260246000fdfea264697066735822122001e1cb7579a58d65c10cd7208cb9f435a817ac0ceb5c70c1bd39f292e1d116df64736f6c63430008000033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x368 CODESIZE SUB DUP1 PUSH2 0x368 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x54 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x82 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x65 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7B JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2D7 DUP1 PUSH2 0x91 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2A417CC7 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0x115 JUMP JUMPDEST PUSH2 0x59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x282 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x36E5B519 PUSH1 0xE1 SHL DUP2 MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6DCB6A32 SWAP1 PUSH2 0x8C SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x22C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDC SWAP2 SWAP1 PUSH2 0x214 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0xFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x12C JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x135 DUP7 PUSH2 0xE7 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP1 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x152 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP10 ADD SWAP2 POP DUP10 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x165 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x177 JUMPI PUSH2 0x177 PUSH2 0x28B JUMP JUMPDEST DUP4 DUP2 MUL PUSH1 0x40 MLOAD DUP6 DUP3 DUP3 ADD ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x196 JUMPI PUSH2 0x196 PUSH2 0x28B JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP6 DUP2 ADD SWAP4 POP DUP5 DUP7 ADD DUP3 DUP7 ADD DUP8 ADD DUP15 LT ISZERO PUSH2 0x1B4 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP6 POP JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x1D6 JUMPI DUP1 CALLDATALOAD DUP6 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP7 ADD SWAP4 DUP7 ADD PUSH2 0x1B8 JUMP JUMPDEST POP DUP1 SWAP10 POP POP POP POP POP POP POP PUSH2 0x1EC PUSH1 0x40 DUP8 ADD PUSH2 0x103 JUMP JUMPDEST SWAP3 POP PUSH2 0x1FA PUSH1 0x60 DUP8 ADD PUSH2 0xE7 JUMP JUMPDEST SWAP2 POP PUSH2 0x208 PUSH1 0x80 DUP8 ADD PUSH2 0xE7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x225 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE DUP4 MLOAD SWAP2 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP5 DUP3 ADD SWAP2 SWAP1 PUSH1 0x60 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x275 JUMPI DUP5 MLOAD DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x259 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0xE1 0xCB PUSH22 0x79A58D65C10CD7208CB9F435A817AC0CEB5C70C1BD39 CALLCODE SWAP3 0xE1 0xD1 AND 0xDF PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ","sourceMap":"371:1393:11:-:0;;;670:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;721:12;:28;;-1:-1:-1;;;;;;721:28:11;-1:-1:-1;;;;;721:28:11;;;;;;;;;;371:1393;;14:332:22;;159:2;147:9;138:7;134:23;130:32;127:2;;;180:6;172;165:22;127:2;211:16;;-1:-1:-1;;;;;256:31:22;;246:42;;236:2;;307:6;299;292:22;236:2;335:5;117:229;-1:-1:-1;;;117:229:22:o;:::-;371:1393:11;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3074:22","statements":[{"nodeType":"YulBlock","src":"6:3:22","statements":[]},{"body":{"nodeType":"YulBlock","src":"65:124:22","statements":[{"nodeType":"YulAssignment","src":"75:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"97:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"84:12:22"},"nodeType":"YulFunctionCall","src":"84:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"75:5:22"}]},{"body":{"nodeType":"YulBlock","src":"167:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"176:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"179:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"169:6:22"},"nodeType":"YulFunctionCall","src":"169:12:22"},"nodeType":"YulExpressionStatement","src":"169:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"126:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"137:5:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"152:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"157:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"148:3:22"},"nodeType":"YulFunctionCall","src":"148:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"161:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"144:3:22"},"nodeType":"YulFunctionCall","src":"144:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"133:3:22"},"nodeType":"YulFunctionCall","src":"133:31:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"123:2:22"},"nodeType":"YulFunctionCall","src":"123:42:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"116:6:22"},"nodeType":"YulFunctionCall","src":"116:50:22"},"nodeType":"YulIf","src":"113:2:22"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"44:6:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"55:5:22","type":""}],"src":"14:175:22"},{"body":{"nodeType":"YulBlock","src":"244:111:22","statements":[{"nodeType":"YulAssignment","src":"254:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"276:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"263:12:22"},"nodeType":"YulFunctionCall","src":"263:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"254:5:22"}]},{"body":{"nodeType":"YulBlock","src":"333:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"342:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"345:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"335:6:22"},"nodeType":"YulFunctionCall","src":"335:12:22"},"nodeType":"YulExpressionStatement","src":"335:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"305:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"316:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"323:6:22","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"312:3:22"},"nodeType":"YulFunctionCall","src":"312:18:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"302:2:22"},"nodeType":"YulFunctionCall","src":"302:29:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"295:6:22"},"nodeType":"YulFunctionCall","src":"295:37:22"},"nodeType":"YulIf","src":"292:2:22"}]},"name":"abi_decode_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"223:6:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"234:5:22","type":""}],"src":"194:161:22"},{"body":{"nodeType":"YulBlock","src":"522:1300:22","statements":[{"body":{"nodeType":"YulBlock","src":"569:26:22","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"578:6:22"},{"name":"value4","nodeType":"YulIdentifier","src":"586:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"571:6:22"},"nodeType":"YulFunctionCall","src":"571:22:22"},"nodeType":"YulExpressionStatement","src":"571:22:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"543:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"552:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"539:3:22"},"nodeType":"YulFunctionCall","src":"539:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"564:3:22","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"535:3:22"},"nodeType":"YulFunctionCall","src":"535:33:22"},"nodeType":"YulIf","src":"532:2:22"},{"nodeType":"YulAssignment","src":"604:41:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"635:9:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"614:20:22"},"nodeType":"YulFunctionCall","src":"614:31:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"604:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"654:12:22","value":{"kind":"number","nodeType":"YulLiteral","src":"664:2:22","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"658:2:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"675:46:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"706:9:22"},{"name":"_1","nodeType":"YulIdentifier","src":"717:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"702:3:22"},"nodeType":"YulFunctionCall","src":"702:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"689:12:22"},"nodeType":"YulFunctionCall","src":"689:32:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"679:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"730:28:22","value":{"kind":"number","nodeType":"YulLiteral","src":"740:18:22","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"734:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"785:26:22","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"794:6:22"},{"name":"value4","nodeType":"YulIdentifier","src":"802:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"787:6:22"},"nodeType":"YulFunctionCall","src":"787:22:22"},"nodeType":"YulExpressionStatement","src":"787:22:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"773:6:22"},{"name":"_2","nodeType":"YulIdentifier","src":"781:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"770:2:22"},"nodeType":"YulFunctionCall","src":"770:14:22"},"nodeType":"YulIf","src":"767:2:22"},{"nodeType":"YulVariableDeclaration","src":"820:32:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"834:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"845:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"830:3:22"},"nodeType":"YulFunctionCall","src":"830:22:22"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"824:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"900:26:22","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"909:6:22"},{"name":"value4","nodeType":"YulIdentifier","src":"917:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"902:6:22"},"nodeType":"YulFunctionCall","src":"902:22:22"},"nodeType":"YulExpressionStatement","src":"902:22:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"879:2:22"},{"kind":"number","nodeType":"YulLiteral","src":"883:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"875:3:22"},"nodeType":"YulFunctionCall","src":"875:13:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"890:7:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"871:3:22"},"nodeType":"YulFunctionCall","src":"871:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"864:6:22"},"nodeType":"YulFunctionCall","src":"864:35:22"},"nodeType":"YulIf","src":"861:2:22"},{"nodeType":"YulVariableDeclaration","src":"935:26:22","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"958:2:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"945:12:22"},"nodeType":"YulFunctionCall","src":"945:16:22"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"939:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"984:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"986:16:22"},"nodeType":"YulFunctionCall","src":"986:18:22"},"nodeType":"YulExpressionStatement","src":"986:18:22"}]},"condition":{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"976:2:22"},{"name":"_2","nodeType":"YulIdentifier","src":"980:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"973:2:22"},"nodeType":"YulFunctionCall","src":"973:10:22"},"nodeType":"YulIf","src":"970:2:22"},{"nodeType":"YulVariableDeclaration","src":"1015:21:22","value":{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"1029:2:22"},{"name":"_1","nodeType":"YulIdentifier","src":"1033:2:22"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1025:3:22"},"nodeType":"YulFunctionCall","src":"1025:11:22"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"1019:2:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1045:23:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1065:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1059:5:22"},"nodeType":"YulFunctionCall","src":"1059:9:22"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1049:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1077:42:22","value":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1103:6:22"},{"name":"_5","nodeType":"YulIdentifier","src":"1111:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1099:3:22"},"nodeType":"YulFunctionCall","src":"1099:15:22"},{"name":"_1","nodeType":"YulIdentifier","src":"1116:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1095:3:22"},"nodeType":"YulFunctionCall","src":"1095:24:22"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1081:10:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"1178:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1180:16:22"},"nodeType":"YulFunctionCall","src":"1180:18:22"},"nodeType":"YulExpressionStatement","src":"1180:18:22"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1137:10:22"},{"name":"_2","nodeType":"YulIdentifier","src":"1149:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1134:2:22"},"nodeType":"YulFunctionCall","src":"1134:18:22"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1157:10:22"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1169:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1154:2:22"},"nodeType":"YulFunctionCall","src":"1154:22:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1131:2:22"},"nodeType":"YulFunctionCall","src":"1131:46:22"},"nodeType":"YulIf","src":"1128:2:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1216:2:22","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1220:10:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1209:6:22"},"nodeType":"YulFunctionCall","src":"1209:22:22"},"nodeType":"YulExpressionStatement","src":"1209:22:22"},{"nodeType":"YulVariableDeclaration","src":"1240:17:22","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1251:6:22"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"1244:3:22","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1273:6:22"},{"name":"_4","nodeType":"YulIdentifier","src":"1281:2:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1266:6:22"},"nodeType":"YulFunctionCall","src":"1266:18:22"},"nodeType":"YulExpressionStatement","src":"1266:18:22"},{"nodeType":"YulAssignment","src":"1293:22:22","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1304:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"1312:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1300:3:22"},"nodeType":"YulFunctionCall","src":"1300:15:22"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"1293:3:22"}]},{"nodeType":"YulVariableDeclaration","src":"1324:22:22","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1339:2:22"},{"name":"_1","nodeType":"YulIdentifier","src":"1343:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1335:3:22"},"nodeType":"YulFunctionCall","src":"1335:11:22"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"1328:3:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"1392:26:22","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"1401:6:22"},{"name":"value4","nodeType":"YulIdentifier","src":"1409:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1394:6:22"},"nodeType":"YulFunctionCall","src":"1394:22:22"},"nodeType":"YulExpressionStatement","src":"1394:22:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1369:2:22"},{"name":"_5","nodeType":"YulIdentifier","src":"1373:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1365:3:22"},"nodeType":"YulFunctionCall","src":"1365:11:22"},{"name":"_1","nodeType":"YulIdentifier","src":"1378:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1361:3:22"},"nodeType":"YulFunctionCall","src":"1361:20:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1383:7:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1358:2:22"},"nodeType":"YulFunctionCall","src":"1358:33:22"},"nodeType":"YulIf","src":"1355:2:22"},{"nodeType":"YulVariableDeclaration","src":"1427:15:22","value":{"name":"value4","nodeType":"YulIdentifier","src":"1436:6:22"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1431:1:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"1496:118:22","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1517:3:22"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1535:3:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1522:12:22"},"nodeType":"YulFunctionCall","src":"1522:17:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1510:6:22"},"nodeType":"YulFunctionCall","src":"1510:30:22"},"nodeType":"YulExpressionStatement","src":"1510:30:22"},{"nodeType":"YulAssignment","src":"1553:19:22","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1564:3:22"},{"name":"_1","nodeType":"YulIdentifier","src":"1569:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1560:3:22"},"nodeType":"YulFunctionCall","src":"1560:12:22"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"1553:3:22"}]},{"nodeType":"YulAssignment","src":"1585:19:22","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1596:3:22"},{"name":"_1","nodeType":"YulIdentifier","src":"1601:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1592:3:22"},"nodeType":"YulFunctionCall","src":"1592:12:22"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"1585:3:22"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1462:1:22"},{"name":"_4","nodeType":"YulIdentifier","src":"1465:2:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1459:2:22"},"nodeType":"YulFunctionCall","src":"1459:9:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1469:18:22","statements":[{"nodeType":"YulAssignment","src":"1471:14:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1480:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"1483:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1476:3:22"},"nodeType":"YulFunctionCall","src":"1476:9:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1471:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"1455:3:22","statements":[]},"src":"1451:163:22"},{"nodeType":"YulAssignment","src":"1623:16:22","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1633:6:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1623:6:22"}]},{"nodeType":"YulAssignment","src":"1648:49:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1682:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1693:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1678:3:22"},"nodeType":"YulFunctionCall","src":"1678:18:22"}],"functionName":{"name":"abi_decode_t_uint16","nodeType":"YulIdentifier","src":"1658:19:22"},"nodeType":"YulFunctionCall","src":"1658:39:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1648:6:22"}]},{"nodeType":"YulAssignment","src":"1706:50:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1741:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1752:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1737:3:22"},"nodeType":"YulFunctionCall","src":"1737:18:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1716:20:22"},"nodeType":"YulFunctionCall","src":"1716:40:22"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1706:6:22"}]},{"nodeType":"YulAssignment","src":"1765:51:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1800:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1811:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1796:3:22"},"nodeType":"YulFunctionCall","src":"1796:19:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1775:20:22"},"nodeType":"YulFunctionCall","src":"1775:41:22"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"1765:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_uint16t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"456:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"467:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"479:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"487:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"495:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"503:6:22","type":""},{"name":"value4","nodeType":"YulTypedName","src":"511:6:22","type":""}],"src":"360:1462:22"},{"body":{"nodeType":"YulBlock","src":"1908:113:22","statements":[{"body":{"nodeType":"YulBlock","src":"1954:26:22","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1963:6:22"},{"name":"value0","nodeType":"YulIdentifier","src":"1971:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1956:6:22"},"nodeType":"YulFunctionCall","src":"1956:22:22"},"nodeType":"YulExpressionStatement","src":"1956:22:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1929:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"1938:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1925:3:22"},"nodeType":"YulFunctionCall","src":"1925:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"1950:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1921:3:22"},"nodeType":"YulFunctionCall","src":"1921:32:22"},"nodeType":"YulIf","src":"1918:2:22"},{"nodeType":"YulAssignment","src":"1989:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2005:9:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1999:5:22"},"nodeType":"YulFunctionCall","src":"1999:16:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1989:6:22"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1874:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1885:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1897:6:22","type":""}],"src":"1827:194:22"},{"body":{"nodeType":"YulBlock","src":"2205:553:22","statements":[{"nodeType":"YulVariableDeclaration","src":"2215:32:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2233:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2244:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2229:3:22"},"nodeType":"YulFunctionCall","src":"2229:18:22"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"2219:6:22","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2263:9:22"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2278:6:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2294:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2299:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2290:3:22"},"nodeType":"YulFunctionCall","src":"2290:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"2303:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2286:3:22"},"nodeType":"YulFunctionCall","src":"2286:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2274:3:22"},"nodeType":"YulFunctionCall","src":"2274:32:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2256:6:22"},"nodeType":"YulFunctionCall","src":"2256:51:22"},"nodeType":"YulExpressionStatement","src":"2256:51:22"},{"nodeType":"YulVariableDeclaration","src":"2316:12:22","value":{"kind":"number","nodeType":"YulLiteral","src":"2326:2:22","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2320:2:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2348:9:22"},{"name":"_1","nodeType":"YulIdentifier","src":"2359:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2344:3:22"},"nodeType":"YulFunctionCall","src":"2344:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"2364:2:22","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2337:6:22"},"nodeType":"YulFunctionCall","src":"2337:30:22"},"nodeType":"YulExpressionStatement","src":"2337:30:22"},{"nodeType":"YulVariableDeclaration","src":"2376:17:22","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"2387:6:22"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"2380:3:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2402:27:22","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2422:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2416:5:22"},"nodeType":"YulFunctionCall","src":"2416:13:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2406:6:22","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"2445:6:22"},{"name":"length","nodeType":"YulIdentifier","src":"2453:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2438:6:22"},"nodeType":"YulFunctionCall","src":"2438:22:22"},"nodeType":"YulExpressionStatement","src":"2438:22:22"},{"nodeType":"YulAssignment","src":"2469:25:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2480:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2491:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2476:3:22"},"nodeType":"YulFunctionCall","src":"2476:18:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2469:3:22"}]},{"nodeType":"YulVariableDeclaration","src":"2503:29:22","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2521:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"2529:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2517:3:22"},"nodeType":"YulFunctionCall","src":"2517:15:22"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"2507:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2541:13:22","value":{"name":"tail","nodeType":"YulIdentifier","src":"2550:4:22"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2545:1:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"2612:120:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2633:3:22"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2644:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2638:5:22"},"nodeType":"YulFunctionCall","src":"2638:13:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2626:6:22"},"nodeType":"YulFunctionCall","src":"2626:26:22"},"nodeType":"YulExpressionStatement","src":"2626:26:22"},{"nodeType":"YulAssignment","src":"2665:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2676:3:22"},{"name":"_1","nodeType":"YulIdentifier","src":"2681:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2672:3:22"},"nodeType":"YulFunctionCall","src":"2672:12:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2665:3:22"}]},{"nodeType":"YulAssignment","src":"2697:25:22","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2711:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"2719:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2707:3:22"},"nodeType":"YulFunctionCall","src":"2707:15:22"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2697:6:22"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2574:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"2577:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2571:2:22"},"nodeType":"YulFunctionCall","src":"2571:13:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2585:18:22","statements":[{"nodeType":"YulAssignment","src":"2587:14:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2596:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"2599:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2592:3:22"},"nodeType":"YulFunctionCall","src":"2592:9:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2587:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"2567:3:22","statements":[]},"src":"2563:169:22"},{"nodeType":"YulAssignment","src":"2741:11:22","value":{"name":"pos","nodeType":"YulIdentifier","src":"2749:3:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2741:4:22"}]}]},"name":"abi_encode_tuple_t_address_t_array$_t_uint256_$dyn_memory_ptr__to_t_address_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2166:9:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2177:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2185:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2196:4:22","type":""}],"src":"2026:732:22"},{"body":{"nodeType":"YulBlock","src":"2864:76:22","statements":[{"nodeType":"YulAssignment","src":"2874:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2886:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2897:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2882:3:22"},"nodeType":"YulFunctionCall","src":"2882:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2874:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2916:9:22"},{"name":"value0","nodeType":"YulIdentifier","src":"2927:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2909:6:22"},"nodeType":"YulFunctionCall","src":"2909:25:22"},"nodeType":"YulExpressionStatement","src":"2909:25:22"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2833:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2844:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2855:4:22","type":""}],"src":"2763:177:22"},{"body":{"nodeType":"YulBlock","src":"2977:95:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2994:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3001:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3006:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2997:3:22"},"nodeType":"YulFunctionCall","src":"2997:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2987:6:22"},"nodeType":"YulFunctionCall","src":"2987:31:22"},"nodeType":"YulExpressionStatement","src":"2987:31:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3034:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3037:4:22","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3027:6:22"},"nodeType":"YulFunctionCall","src":"3027:15:22"},"nodeType":"YulExpressionStatement","src":"3027:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3058:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3061:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3051:6:22"},"nodeType":"YulFunctionCall","src":"3051:15:22"},"nodeType":"YulExpressionStatement","src":"3051:15:22"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2945:127:22"}]},"contents":"{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_t_uint16(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_uint16t_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value4, value4) }\n        value0 := abi_decode_t_address(headStart)\n        let _1 := 32\n        let offset := calldataload(add(headStart, _1))\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(value4, value4) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value4, value4) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := mul(_4, _1)\n        let memPtr := mload(64)\n        let newFreePtr := add(add(memPtr, _5), _1)\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let src := add(_3, _1)\n        if gt(add(add(_3, _5), _1), dataEnd) { revert(value4, value4) }\n        let i := value4\n        for { } lt(i, _4) { i := add(i, 1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _1)\n            src := add(src, _1)\n        }\n        value1 := memPtr\n        value2 := abi_decode_t_uint16(add(headStart, 64))\n        value3 := abi_decode_t_address(add(headStart, 96))\n        value4 := abi_decode_t_address(add(headStart, 128))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_array$_t_uint256_$dyn_memory_ptr__to_t_address_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        let _1 := 32\n        mstore(add(headStart, _1), 64)\n        let pos := tail_1\n        let length := mload(value1)\n        mstore(tail_1, length)\n        pos := add(headStart, 96)\n        let srcPtr := add(value1, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}","id":22,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061002b5760003560e01c80632a417cc714610030575b600080fd5b61004361003e366004610115565b610059565b6040516100509190610282565b60405180910390f35b600080546040516336e5b51960e11b815282916001600160a01b031690636dcb6a329061008c908a908a9060040161022c565b60206040518083038186803b1580156100a457600080fd5b505afa1580156100b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100dc9190610214565b979650505050505050565b80356001600160a01b03811681146100fe57600080fd5b919050565b803561ffff811681146100fe57600080fd5b600080600080600060a0868803121561012c578081fd5b610135866100e7565b945060208087013567ffffffffffffffff80821115610152578384fd5b818901915089601f830112610165578384fd5b8135818111156101775761017761028b565b838102604051858282010181811085821117156101965761019661028b565b604052828152858101935084860182860187018e10156101b4578788fd5b8795505b838610156101d65780358552600195909501949386019386016101b8565b508099505050505050506101ec60408701610103565b92506101fa606087016100e7565b9150610208608087016100e7565b90509295509295909350565b600060208284031215610225578081fd5b5051919050565b6001600160a01b038316815260406020808301829052835191830182905260009184820191906060850190845b8181101561027557845183529383019391830191600101610259565b5090979650505050505050565b90815260200190565b634e487b7160e01b600052604160045260246000fdfea264697066735822122001e1cb7579a58d65c10cd7208cb9f435a817ac0ceb5c70c1bd39f292e1d116df64736f6c63430008000033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2A417CC7 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0x115 JUMP JUMPDEST PUSH2 0x59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x282 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x36E5B519 PUSH1 0xE1 SHL DUP2 MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6DCB6A32 SWAP1 PUSH2 0x8C SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x22C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDC SWAP2 SWAP1 PUSH2 0x214 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0xFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x12C JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x135 DUP7 PUSH2 0xE7 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP1 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x152 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP10 ADD SWAP2 POP DUP10 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x165 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x177 JUMPI PUSH2 0x177 PUSH2 0x28B JUMP JUMPDEST DUP4 DUP2 MUL PUSH1 0x40 MLOAD DUP6 DUP3 DUP3 ADD ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x196 JUMPI PUSH2 0x196 PUSH2 0x28B JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP6 DUP2 ADD SWAP4 POP DUP5 DUP7 ADD DUP3 DUP7 ADD DUP8 ADD DUP15 LT ISZERO PUSH2 0x1B4 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP6 POP JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x1D6 JUMPI DUP1 CALLDATALOAD DUP6 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP7 ADD SWAP4 DUP7 ADD PUSH2 0x1B8 JUMP JUMPDEST POP DUP1 SWAP10 POP POP POP POP POP POP POP PUSH2 0x1EC PUSH1 0x40 DUP8 ADD PUSH2 0x103 JUMP JUMPDEST SWAP3 POP PUSH2 0x1FA PUSH1 0x60 DUP8 ADD PUSH2 0xE7 JUMP JUMPDEST SWAP2 POP PUSH2 0x208 PUSH1 0x80 DUP8 ADD PUSH2 0xE7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x225 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE DUP4 MLOAD SWAP2 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP5 DUP3 ADD SWAP2 SWAP1 PUSH1 0x60 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x275 JUMPI DUP5 MLOAD DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x259 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0xE1 0xCB PUSH22 0x79A58D65C10CD7208CB9F435A817AC0CEB5C70C1BD39 CALLCODE SWAP3 0xE1 0xD1 AND 0xDF PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ","sourceMap":"371:1393:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;838:628;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;1027:7;1071:12;;:42;;-1:-1:-1;;;1071:42:11;;1027:7;;-1:-1:-1;;;;;1071:12:11;;:22;;:42;;1094:10;;1106:6;;1071:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1046:67;838:628;-1:-1:-1;;;;;;;838:628:11:o;14:175:22:-;84:20;;-1:-1:-1;;;;;133:31:22;;123:42;;113:2;;179:1;176;169:12;113:2;65:124;;;:::o;194:161::-;263:20;;323:6;312:18;;302:29;;292:2;;345:1;342;335:12;360:1462;;;;;;564:3;552:9;543:7;539:23;535:33;532:2;;;586:6;578;571:22;532:2;614:31;635:9;614:31;:::i;:::-;604:41;;664:2;717;706:9;702:18;689:32;740:18;781:2;773:6;770:14;767:2;;;802:6;794;787:22;767:2;845:6;834:9;830:22;820:32;;890:7;883:4;879:2;875:13;871:27;861:2;;917:6;909;902:22;861:2;958;945:16;980:2;976;973:10;970:2;;;986:18;;:::i;:::-;1033:2;1029;1025:11;1065:2;1059:9;1116:2;1111;1103:6;1099:15;1095:24;1169:6;1157:10;1154:22;1149:2;1137:10;1134:18;1131:46;1128:2;;;1180:18;;:::i;:::-;1216:2;1209:22;1266:18;;;1300:15;;;;-1:-1:-1;1335:11:22;;;1365;;;1361:20;;1358:33;-1:-1:-1;1355:2:22;;;1409:6;1401;1394:22;1355:2;1436:6;1427:15;;1451:163;1465:2;1462:1;1459:9;1451:163;;;1522:17;;1510:30;;1483:1;1476:9;;;;;1560:12;;;;1592;;1451:163;;;1455:3;1633:6;1623:16;;;;;;;;1658:39;1693:2;1682:9;1678:18;1658:39;:::i;:::-;1648:49;;1716:40;1752:2;1741:9;1737:18;1716:40;:::i;:::-;1706:50;;1775:41;1811:3;1800:9;1796:19;1775:41;:::i;:::-;1765:51;;522:1300;;;;;;;;:::o;1827:194::-;;1950:2;1938:9;1929:7;1925:23;1921:32;1918:2;;;1971:6;1963;1956:22;1918:2;-1:-1:-1;1999:16:22;;1908:113;-1:-1:-1;1908:113:22:o;2026:732::-;-1:-1:-1;;;;;2274:32:22;;2256:51;;2244:2;2326;2344:18;;;2337:30;;;2416:13;;2229:18;;;2438:22;;;2026:732;;2517:15;;;;2326:2;2491;2476:18;;;2026:732;2563:169;2577:6;2574:1;2571:13;2563:169;;;2638:13;;2626:26;;2707:15;;;;2672:12;;;;2599:1;2592:9;2563:169;;;-1:-1:-1;2749:3:22;;2205:553;-1:-1:-1;;;;;;;2205:553:22:o;2763:177::-;2909:25;;;2897:2;2882:18;;2864:76::o;2945:127::-;3006:10;3001:3;2997:20;2994:1;2987:31;3037:4;3034:1;3027:15;3061:4;3058:1;3051:15"},"gasEstimates":{"creation":{"codeDepositCost":"145400","executionCost":"infinite","totalCost":"infinite"},"external":{"get_convex_price(address,uint256[],uint16,address,address)":"infinite"},"internal":{"calculate_convex_price(uint256,uint256,uint256)":"infinite"}},"methodIdentifiers":{"get_convex_price(address,uint256[],uint16,address,address)":"2a417cc7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract CurveOracleV2\",\"name\":\"_curve_oracle\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"curve_pool\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"prices\",\"type\":\"uint256[]\"},{\"internalType\":\"uint16\",\"name\":\"pid\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"convex_lp\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"curve_lp\",\"type\":\"address\"}],\"name\":\"get_convex_price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracles/ConvexOracleV2.sol\":\"ConvexOracleV2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/oracles/ConvexOracleV2.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity >=0.8.0;\\n\\n//import {IBooster} from \\\"../utils/interfaces/IBooster.sol\\\";\\nimport {CurveOracleV2} from \\\"./CurveOracleV2.sol\\\";\\nimport {FixedPointMathLib} from \\\"./libs/FixedPointMathLib.sol\\\";\\nimport {IERC20} from \\\"./interfaces/IERC20.sol\\\";\\n\\n//assuming we can price Convex pools like UniV2 pools more than like Curve pools\\ncontract ConvexOracleV2 {\\n    //address private constant BOOSTER = 0xF403C135812408BFbE8713b5A23a04b3D48AAE31; //convex deposit contract\\n    CurveOracleV2 private curve_oracle;\\n\\n    //get total underlying in USD and divide by num of tokens\\n    //use external script to get pid by curve lp token\\n    constructor(CurveOracleV2 _curve_oracle) {\\n        curve_oracle = _curve_oracle;\\n    }\\n\\n    //get curve lp tokens price, get convex lp token \\\"depositToken\\\", divide\\n    function get_convex_price(\\n        address curve_pool,\\n        uint256[] memory prices,\\n        uint16 pid,\\n        address convex_lp,\\n        address curve_lp\\n    ) external view returns (uint256) {\\n        uint256 curve_lp_price = curve_oracle.get_price(curve_pool, prices); //returns 1e36 scaled uint\\n        //\\tuint256 curve_supply = IERC20(curve_lp).totalSupply();\\n        //\\tuint256 convex_supply = IERC20(convex_lp).totalSupply();\\n\\n        //\\tuint256 convex_price = calculate_convex_price(\\n        //\\t\\tcurve_lp_price,\\n        //\\t\\tcurve_supply,\\n        //\\t\\tconvex_supply\\n        //\\t);\\n\\n        return curve_lp_price;\\n    }\\n\\n    //not sure how vulnerable this is, check back later\\n    function calculate_convex_price(\\n        uint256 curve_lp_price,\\n        uint256 curve_supply,\\n        uint256 convex_supply\\n    ) internal pure returns (uint256) {\\n        return (curve_lp_price * curve_supply) / convex_supply;\\n    }\\n}\\n\",\"keccak256\":\"0x95b0b98377e7d11a815ae7980022ccec1bd4c834c88a428ef74f5a84bd016391\",\"license\":\"UNLICENSED\"},\"contracts/oracles/CurveOracleV2.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity >=0.8.0;\\n\\nimport {ICurvePool} from \\\"./interfaces/ICurvePoolV1.sol\\\";\\nimport {ICurveOracle} from \\\"./interfaces/ICurveOracle.sol\\\";\\nimport {vMath} from \\\"./libs/vMath.sol\\\";\\n\\ncontract CurveOracleV2 is ICurveOracle {\\n    function get_price(address curve_pool, uint256[] memory prices)\\n        external\\n        view\\n        override\\n        returns (uint256)\\n    {\\n        uint256 virtual_price = ICurvePool(curve_pool).get_virtual_price();\\n\\n        uint256 lp_price = calculate_v2_token_price(\\n            uint8(prices.length),\\n            virtual_price,\\n            prices\\n        );\\n\\n        return lp_price;\\n    }\\n\\n    //returns n_token * vp * (p1 * p2 * p3) ^1/n\\n    //n should only ever be 2, 3, or 4\\n    //returns the lp_price scaled by 1e36, so scale down by 1e36\\n    function calculate_v2_token_price(\\n        uint8 n,\\n        uint256 virtual_price,\\n        uint256[] memory prices\\n    ) internal pure returns (uint256) {\\n        uint256 product = vMath.product(prices);\\n        uint256 geo_mean = vMath.geometric_mean(n, product);\\n        return (n * virtual_price * geo_mean) / 10**18; //since virtual price has 18 decimals\\n    }\\n}\\n\",\"keccak256\":\"0x16811fe57c7083b8deb7831136e1fa0db6a4ef3aa4c66aa0a74cbb87f9a69e9f\",\"license\":\"UNLICENSED\"},\"contracts/oracles/interfaces/ICurveOracle.sol\":{\"content\":\"pragma solidity >=0.8.0;\\n\\ninterface ICurveOracle {\\n    function get_price(address curve_pool, uint256[] memory prices)\\n        external\\n        view\\n        returns (uint256);\\n}\\n\",\"keccak256\":\"0xdda871f8372f09487237b4047dbbcc88810eb55c357b2e91e13a068e043d4179\"},\"contracts/oracles/interfaces/ICurvePoolV1.sol\":{\"content\":\"pragma solidity >=0.8.0;\\n\\ninterface ICurvePool {\\n    function get_virtual_price() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x58f8992dae5fdd0d425f8fc86d7cb3f59e61ba73ccc1111c281645d48dad4a72\"},\"contracts/oracles/interfaces/IERC20.sol\":{\"content\":\"pragma solidity >=0.8.0;\\n\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the token decimals.\\n     */\\n    function decimals() external view returns (uint8);\\n\\n    /**\\n     * @dev Returns the token symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the bep token owner.\\n     */\\n    function getOwner() external view returns (address);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount)\\n        external\\n        returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address _owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n}\\n\",\"keccak256\":\"0x647c6703e37aa5feb0eac5d74f41edb481254bc120e470e336561297b47999a8\"},\"contracts/oracles/libs/FixedPointMathLib.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Arithmetic library with operations for fixed-point numbers.\\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/utils/FixedPointMathLib.sol)\\n/// @author Inspired by USM (https://github.com/usmfum/USM/blob/master/contracts/WadMath.sol)\\nlibrary FixedPointMathLib {\\n    /*//////////////////////////////////////////////////////////////\\n                    SIMPLIFIED FIXED POINT OPERATIONS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 internal constant WAD = 1e18; // The scalar of ETH and most ERC20s.\\n\\n    function mulWadDown(uint256 x, uint256 y) internal pure returns (uint256) {\\n        return mulDivDown(x, y, WAD); // Equivalent to (x * y) / WAD rounded down.\\n    }\\n\\n    function mulWadUp(uint256 x, uint256 y) internal pure returns (uint256) {\\n        return mulDivUp(x, y, WAD); // Equivalent to (x * y) / WAD rounded up.\\n    }\\n\\n    function divWadDown(uint256 x, uint256 y) internal pure returns (uint256) {\\n        return mulDivDown(x, WAD, y); // Equivalent to (x * WAD) / y rounded down.\\n    }\\n\\n    function divWadUp(uint256 x, uint256 y) internal pure returns (uint256) {\\n        return mulDivUp(x, WAD, y); // Equivalent to (x * WAD) / y rounded up.\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                    LOW LEVEL FIXED POINT OPERATIONS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function mulDivDown(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 z) {\\n        assembly {\\n            // Store x * y in z for now.\\n            z := mul(x, y)\\n\\n            // Equivalent to require(denominator != 0 && (x == 0 || (x * y) / x == y))\\n            if iszero(\\n                and(\\n                    iszero(iszero(denominator)),\\n                    or(iszero(x), eq(div(z, x), y))\\n                )\\n            ) {\\n                revert(0, 0)\\n            }\\n\\n            // Divide z by the denominator.\\n            z := div(z, denominator)\\n        }\\n    }\\n\\n    function mulDivUp(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 z) {\\n        assembly {\\n            // Store x * y in z for now.\\n            z := mul(x, y)\\n\\n            // Equivalent to require(denominator != 0 && (x == 0 || (x * y) / x == y))\\n            if iszero(\\n                and(\\n                    iszero(iszero(denominator)),\\n                    or(iszero(x), eq(div(z, x), y))\\n                )\\n            ) {\\n                revert(0, 0)\\n            }\\n\\n            // First, divide z - 1 by the denominator and add 1.\\n            // We allow z - 1 to underflow if z is 0, because we multiply the\\n            // end result by 0 if z is zero, ensuring we return 0 if z is zero.\\n            z := mul(iszero(iszero(z)), add(div(sub(z, 1), denominator), 1))\\n        }\\n    }\\n\\n    function rpow(\\n        uint256 x,\\n        uint256 n,\\n        uint256 scalar\\n    ) internal pure returns (uint256 z) {\\n        assembly {\\n            switch x\\n            case 0 {\\n                switch n\\n                case 0 {\\n                    // 0 ** 0 = 1\\n                    z := scalar\\n                }\\n                default {\\n                    // 0 ** n = 0\\n                    z := 0\\n                }\\n            }\\n            default {\\n                switch mod(n, 2)\\n                case 0 {\\n                    // If n is even, store scalar in z for now.\\n                    z := scalar\\n                }\\n                default {\\n                    // If n is odd, store x in z for now.\\n                    z := x\\n                }\\n\\n                // Shifting right by 1 is like dividing by 2.\\n                let half := shr(1, scalar)\\n\\n                for {\\n                    // Shift n right by 1 before looping to halve it.\\n                    n := shr(1, n)\\n                } n {\\n                    // Shift n right by 1 each iteration to halve it.\\n                    n := shr(1, n)\\n                } {\\n                    // Revert immediately if x ** 2 would overflow.\\n                    // Equivalent to iszero(eq(div(xx, x), x)) here.\\n                    if shr(128, x) {\\n                        revert(0, 0)\\n                    }\\n\\n                    // Store x squared.\\n                    let xx := mul(x, x)\\n\\n                    // Round to the nearest number.\\n                    let xxRound := add(xx, half)\\n\\n                    // Revert if xx + half overflowed.\\n                    if lt(xxRound, xx) {\\n                        revert(0, 0)\\n                    }\\n\\n                    // Set x to scaled xxRound.\\n                    x := div(xxRound, scalar)\\n\\n                    // If n is even:\\n                    if mod(n, 2) {\\n                        // Compute z * x.\\n                        let zx := mul(z, x)\\n\\n                        // If z * x overflowed:\\n                        if iszero(eq(div(zx, x), z)) {\\n                            // Revert if x is non-zero.\\n                            if iszero(iszero(x)) {\\n                                revert(0, 0)\\n                            }\\n                        }\\n\\n                        // Round to the nearest number.\\n                        let zxRound := add(zx, half)\\n\\n                        // Revert if zx + half overflowed.\\n                        if lt(zxRound, zx) {\\n                            revert(0, 0)\\n                        }\\n\\n                        // Return properly scaled zxRound.\\n                        z := div(zxRound, scalar)\\n                    }\\n                }\\n            }\\n        }\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                        GENERAL NUMBER UTILITIES\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function sqrt(uint256 x) internal pure returns (uint256 z) {\\n        assembly {\\n            // Start off with z at 1.\\n            z := 1\\n\\n            // Used below to help find a nearby power of 2.\\n            let y := x\\n\\n            // Find the lowest power of 2 that is at least sqrt(x).\\n            if iszero(lt(y, 0x100000000000000000000000000000000)) {\\n                y := shr(128, y) // Like dividing by 2 ** 128.\\n                z := shl(64, z) // Like multiplying by 2 ** 64.\\n            }\\n            if iszero(lt(y, 0x10000000000000000)) {\\n                y := shr(64, y) // Like dividing by 2 ** 64.\\n                z := shl(32, z) // Like multiplying by 2 ** 32.\\n            }\\n            if iszero(lt(y, 0x100000000)) {\\n                y := shr(32, y) // Like dividing by 2 ** 32.\\n                z := shl(16, z) // Like multiplying by 2 ** 16.\\n            }\\n            if iszero(lt(y, 0x10000)) {\\n                y := shr(16, y) // Like dividing by 2 ** 16.\\n                z := shl(8, z) // Like multiplying by 2 ** 8.\\n            }\\n            if iszero(lt(y, 0x100)) {\\n                y := shr(8, y) // Like dividing by 2 ** 8.\\n                z := shl(4, z) // Like multiplying by 2 ** 4.\\n            }\\n            if iszero(lt(y, 0x10)) {\\n                y := shr(4, y) // Like dividing by 2 ** 4.\\n                z := shl(2, z) // Like multiplying by 2 ** 2.\\n            }\\n            if iszero(lt(y, 0x8)) {\\n                // Equivalent to 2 ** z.\\n                z := shl(1, z)\\n            }\\n\\n            // Shifting right by 1 is like dividing by 2.\\n            z := shr(1, add(z, div(x, z)))\\n            z := shr(1, add(z, div(x, z)))\\n            z := shr(1, add(z, div(x, z)))\\n            z := shr(1, add(z, div(x, z)))\\n            z := shr(1, add(z, div(x, z)))\\n            z := shr(1, add(z, div(x, z)))\\n            z := shr(1, add(z, div(x, z)))\\n\\n            // Compute a rounded down version of z.\\n            let zRoundDown := div(x, z)\\n\\n            // If zRoundDown is smaller, use it.\\n            if lt(zRoundDown, z) {\\n                z := zRoundDown\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xcc1552fe037c973c1ab30f607708735de7626eb22dcf6b2a02f2a39fa5d2b965\",\"license\":\"AGPL-3.0-only\"},\"contracts/oracles/libs/IntegralMath.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity >=0.8.0;\\n\\nimport \\\"./Uint.sol\\\";\\n\\nlibrary IntegralMath {\\n    /**\\n     * @dev Compute the largest integer smaller than or equal to the binary logarithm of `n`\\n     */\\n    function floorLog2(uint256 n) internal pure returns (uint8) {\\n        unchecked {\\n            uint8 res = 0;\\n\\n            if (n < 256) {\\n                // at most 8 iterations\\n                while (n > 1) {\\n                    n >>= 1;\\n                    res += 1;\\n                }\\n            } else {\\n                // exactly 8 iterations\\n                for (uint8 s = 128; s > 0; s >>= 1) {\\n                    if (n >= 1 << s) {\\n                        n >>= s;\\n                        res |= s;\\n                    }\\n                }\\n            }\\n\\n            return res;\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the largest integer smaller than or equal to the square root of `n`\\n     */\\n    function floorSqrt(uint256 n) internal pure returns (uint256) {\\n        unchecked {\\n            if (n > 0) {\\n                uint256 x = n / 2 + 1;\\n                uint256 y = (x + n / x) / 2;\\n                while (x > y) {\\n                    x = y;\\n                    y = (x + n / x) / 2;\\n                }\\n                return x;\\n            }\\n            return 0;\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the smallest integer larger than or equal to the square root of `n`\\n     */\\n    function ceilSqrt(uint256 n) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 x = floorSqrt(n);\\n            return x**2 == n ? x : x + 1;\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the largest integer smaller than or equal to the cubic root of `n`\\n     */\\n    function floorCbrt(uint256 n) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 x = 0;\\n            for (uint256 y = 1 << 255; y > 0; y >>= 3) {\\n                x <<= 1;\\n                uint256 z = 3 * x * (x + 1) + 1;\\n                if (n / y >= z) {\\n                    n -= y * z;\\n                    x += 1;\\n                }\\n            }\\n            return x;\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the smallest integer larger than or equal to the cubic root of `n`\\n     */\\n    function ceilCbrt(uint256 n) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 x = floorCbrt(n);\\n            return x**3 == n ? x : x + 1;\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the nearest integer to the quotient of `n` and `d` (or `n / d`)\\n     */\\n    function roundDiv(uint256 n, uint256 d) internal pure returns (uint256) {\\n        unchecked {\\n            return n / d + (n % d) / (d - d / 2);\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the largest integer smaller than or equal to `x * y / z`\\n     */\\n    function mulDivF(\\n        uint256 x,\\n        uint256 y,\\n        uint256 z\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            (uint256 xyh, uint256 xyl) = mul512(x, y);\\n            if (xyh == 0) {\\n                // `x * y < 2 ^ 256`\\n                return xyl / z;\\n            }\\n            if (xyh < z) {\\n                // `x * y / z < 2 ^ 256`\\n                uint256 m = mulMod(x, y, z); // `m = x * y % z`\\n                (uint256 nh, uint256 nl) = sub512(xyh, xyl, m); // `n = x * y - m` hence `n / z = floor(x * y / z)`\\n                if (nh == 0) {\\n                    // `n < 2 ^ 256`\\n                    return nl / z;\\n                }\\n                uint256 p = unsafeSub(0, z) & z; // `p` is the largest power of 2 which `z` is divisible by\\n                uint256 q = div512(nh, nl, p); // `n` is divisible by `p` because `n` is divisible by `z` and `z` is divisible by `p`\\n                uint256 r = inv256(z / p); // `z / p = 1 mod 2` hence `inverse(z / p) = 1 mod 2 ^ 256`\\n                return unsafeMul(q, r); // `q * r = (n / p) * inverse(z / p) = n / z`\\n            }\\n            revert(); // `x * y / z >= 2 ^ 256`\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the smallest integer larger than or equal to `x * y / z`\\n     */\\n    function mulDivC(\\n        uint256 x,\\n        uint256 y,\\n        uint256 z\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 w = mulDivF(x, y, z);\\n            if (mulMod(x, y, z) > 0) return safeAdd(w, 1);\\n            return w;\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the value of `x * y`\\n     */\\n    function mul512(uint256 x, uint256 y)\\n        private\\n        pure\\n        returns (uint256, uint256)\\n    {\\n        unchecked {\\n            uint256 p = mulModMax(x, y);\\n            uint256 q = unsafeMul(x, y);\\n            if (p >= q) return (p - q, q);\\n            return (unsafeSub(p, q) - 1, q);\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the value of `2 ^ 256 * xh + xl - y`, where `2 ^ 256 * xh + xl >= y`\\n     */\\n    function sub512(\\n        uint256 xh,\\n        uint256 xl,\\n        uint256 y\\n    ) private pure returns (uint256, uint256) {\\n        unchecked {\\n            if (xl >= y) return (xh, xl - y);\\n            return (xh - 1, unsafeSub(xl, y));\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the value of `(2 ^ 256 * xh + xl) / pow2n`, where `xl` is divisible by `pow2n`\\n     */\\n    function div512(\\n        uint256 xh,\\n        uint256 xl,\\n        uint256 pow2n\\n    ) private pure returns (uint256) {\\n        unchecked {\\n            uint256 pow2nInv = unsafeAdd(unsafeSub(0, pow2n) / pow2n, 1); // `1 << (256 - n)`\\n            return unsafeMul(xh, pow2nInv) | (xl / pow2n); // `(xh << (256 - n)) | (xl >> n)`\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the inverse of `d` modulo `2 ^ 256`, where `d` is congruent to `1` modulo `2`\\n     */\\n    function inv256(uint256 d) private pure returns (uint256) {\\n        unchecked {\\n            // approximate the root of `f(x) = 1 / x - d` using the newton\\u2013raphson convergence method\\n            uint256 x = 1;\\n            for (uint256 i = 0; i < 8; ++i)\\n                x = unsafeMul(x, unsafeSub(2, unsafeMul(x, d))); // `x = x * (2 - x * d) mod 2 ^ 256`\\n            return x;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2433205309bedeec21e98639f6e1b9ae4b72bddfd16d3c7caa23f0bedd74c07a\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/oracles/libs/Uint.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity >=0.8.0;\\n\\nuint256 constant MAX_VAL = type(uint256).max;\\n\\n// reverts on overflow\\nfunction safeAdd(uint256 x, uint256 y) pure returns (uint256) {\\n    return x + y;\\n}\\n\\n// does not revert on overflow\\nfunction unsafeAdd(uint256 x, uint256 y) pure returns (uint256) {\\n    unchecked {\\n        return x + y;\\n    }\\n}\\n\\n// does not revert on overflow\\nfunction unsafeSub(uint256 x, uint256 y) pure returns (uint256) {\\n    unchecked {\\n        return x - y;\\n    }\\n}\\n\\n// does not revert on overflow\\nfunction unsafeMul(uint256 x, uint256 y) pure returns (uint256) {\\n    unchecked {\\n        return x * y;\\n    }\\n}\\n\\n// does not overflow\\nfunction mulModMax(uint256 x, uint256 y) pure returns (uint256) {\\n    unchecked {\\n        return mulmod(x, y, MAX_VAL);\\n    }\\n}\\n\\n// does not overflow\\nfunction mulMod(\\n    uint256 x,\\n    uint256 y,\\n    uint256 z\\n) pure returns (uint256) {\\n    unchecked {\\n        return mulmod(x, y, z);\\n    }\\n}\\n\",\"keccak256\":\"0x998fcec9a910b59ed67db5af0939b271f062585a8c16a614b529197ed86d0a8d\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/oracles/libs/vMath.sol\":{\"content\":\"pragma solidity >=0.8.0;\\n\\nimport {FixedPointMathLib} from \\\"./FixedPointMathLib.sol\\\";\\nimport {IntegralMath} from \\\"./IntegralMath.sol\\\";\\n\\nlibrary vMath {\\n    uint256 internal constant WAD = 1e18; // The scalar of ETH and most ERC20s.\\n\\n    function min(uint256[] calldata array) external pure returns (uint256) {\\n        uint256 min = array[0];\\n        for (uint8 i = 1; i < array.length; i++) {\\n            if (min > array[i]) {\\n                min = array[i];\\n            }\\n        }\\n        return min;\\n    }\\n\\n    function product(uint256[] calldata nums) external pure returns (uint256) {\\n        uint256 product = nums[0];\\n        for (uint256 i = 1; i < nums.length; i++) {\\n            product *= nums[i];\\n        }\\n        return product;\\n    }\\n\\n    //limited to curve pools only, either 2 or 3 assets (mostly 2)\\n    function geometric_mean(uint8 n, uint256 product)\\n        external\\n        pure\\n        returns (uint256)\\n    {\\n        if (n == 2) {\\n            return FixedPointMathLib.sqrt(product);\\n        } else {\\n            //n == 3\\n            return IntegralMath.floorCbrt(product);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x771260414afb50c4937cc8185436eadf2292162955a4ea25cb1b8405d9a0e0fb\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1424,"contract":"contracts/oracles/ConvexOracleV2.sol:ConvexOracleV2","label":"curve_oracle","offset":0,"slot":"0","type":"t_contract(CurveOracleV2)1566"}],"types":{"t_contract(CurveOracleV2)1566":{"encoding":"inplace","label":"contract CurveOracleV2","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/oracles/CurveOracleV2.sol":{"CurveOracleV2":{"abi":[{"inputs":[{"internalType":"address","name":"curve_pool","type":"address"},{"internalType":"uint256[]","name":"prices","type":"uint256[]"}],"name":"get_price","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{"contracts/oracles/libs/vMath.sol":{"vMath":[{"length":20,"start":267},{"length":20,"start":406}]}},"object":"608060405234801561001057600080fd5b5061041d806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80636dcb6a3214610030575b600080fd5b61004361003e366004610234565b610059565b604051610050919061036a565b60405180910390f35b600080836001600160a01b031663bb7b8b806040518163ffffffff1660e01b815260040160206040518083038186803b15801561009557600080fd5b505afa1580156100a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100cd919061030e565b905060006100dd845183866100e6565b95945050505050565b60008073__$fc961522ee25e21dc45bf9241cf35e1d80$__638e5fede8846040518263ffffffff1660e01b81526004016101209190610326565b60206040518083038186803b15801561013857600080fd5b505af415801561014c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610170919061030e565b9050600073__$fc961522ee25e21dc45bf9241cf35e1d80$__63f43b9abe87846040518363ffffffff1660e01b81526004016101ad929190610373565b60206040518083038186803b1580156101c557600080fd5b505af41580156101d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101fd919061030e565b9050670de0b6b3a7640000816102168760ff8a166103a6565b61022091906103a6565b61022a9190610386565b9695505050505050565b60008060408385031215610246578182fd5b82356001600160a01b038116811461025c578283fd5b915060208381013567ffffffffffffffff80821115610279578384fd5b818601915086601f83011261028c578384fd5b81358181111561029e5761029e6103d1565b838102604051858282010181811085821117156102bd576102bd6103d1565b604052828152858101935084860182860187018b10156102db578788fd5b8795505b838610156102fd5780358552600195909501949386019386016102df565b508096505050505050509250929050565b60006020828403121561031f578081fd5b5051919050565b6020808252825182820181905260009190848201906040850190845b8181101561035e57835183529284019291840191600101610342565b50909695505050505050565b90815260200190565b60ff929092168252602082015260400190565b6000826103a157634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156103cc57634e487b7160e01b81526011600452602481fd5b500290565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220f66de4bc5af18226697079c51e60699df522cb7afbde2e84d294cc227f65c5f464736f6c63430008000033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41D DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6DCB6A32 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0x234 JUMP JUMPDEST PUSH2 0x59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x36A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBB7B8B80 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x30E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xDD DUP5 MLOAD DUP4 DUP7 PUSH2 0xE6 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0x0 PUSH4 0x8E5FEDE8 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120 SWAP2 SWAP1 PUSH2 0x326 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x14C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x30E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0x0 PUSH4 0xF43B9ABE DUP8 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AD SWAP3 SWAP2 SWAP1 PUSH2 0x373 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x30E JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x216 DUP8 PUSH1 0xFF DUP11 AND PUSH2 0x3A6 JUMP JUMPDEST PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x3A6 JUMP JUMPDEST PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x386 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x246 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x25C JUMPI DUP3 DUP4 REVERT JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 DUP2 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x279 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x28C JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x29E JUMPI PUSH2 0x29E PUSH2 0x3D1 JUMP JUMPDEST DUP4 DUP2 MUL PUSH1 0x40 MLOAD DUP6 DUP3 DUP3 ADD ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x2BD JUMPI PUSH2 0x2BD PUSH2 0x3D1 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP6 DUP2 ADD SWAP4 POP DUP5 DUP7 ADD DUP3 DUP7 ADD DUP8 ADD DUP12 LT ISZERO PUSH2 0x2DB JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP6 POP JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x2FD JUMPI DUP1 CALLDATALOAD DUP6 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP7 ADD SWAP4 DUP7 ADD PUSH2 0x2DF JUMP JUMPDEST POP DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31F JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x35E JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x342 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3A1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3CC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 PUSH14 0xE4BC5AF18226697079C51E60699D CREATE2 0x22 0xCB PUSH27 0xFBDE2E84D294CC227F65C5F464736F6C6343000800003300000000 ","sourceMap":"224:965:12:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3291:22","statements":[{"nodeType":"YulBlock","src":"6:3:22","statements":[]},{"body":{"nodeType":"YulBlock","src":"126:1230:22","statements":[{"body":{"nodeType":"YulBlock","src":"172:26:22","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"181:6:22"},{"name":"value0","nodeType":"YulIdentifier","src":"189:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"174:6:22"},"nodeType":"YulFunctionCall","src":"174:22:22"},"nodeType":"YulExpressionStatement","src":"174:22:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"147:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"156:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"143:3:22"},"nodeType":"YulFunctionCall","src":"143:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"168:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"139:3:22"},"nodeType":"YulFunctionCall","src":"139:32:22"},"nodeType":"YulIf","src":"136:2:22"},{"nodeType":"YulVariableDeclaration","src":"207:36:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"233:9:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"220:12:22"},"nodeType":"YulFunctionCall","src":"220:23:22"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"211:5:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"306:26:22","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"315:6:22"},{"name":"value0","nodeType":"YulIdentifier","src":"323:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"308:6:22"},"nodeType":"YulFunctionCall","src":"308:22:22"},"nodeType":"YulExpressionStatement","src":"308:22:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"265:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"276:5:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"291:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"296:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"287:3:22"},"nodeType":"YulFunctionCall","src":"287:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"300:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"283:3:22"},"nodeType":"YulFunctionCall","src":"283:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"272:3:22"},"nodeType":"YulFunctionCall","src":"272:31:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"262:2:22"},"nodeType":"YulFunctionCall","src":"262:42:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"255:6:22"},"nodeType":"YulFunctionCall","src":"255:50:22"},"nodeType":"YulIf","src":"252:2:22"},{"nodeType":"YulAssignment","src":"341:15:22","value":{"name":"value","nodeType":"YulIdentifier","src":"351:5:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"341:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"365:12:22","value":{"kind":"number","nodeType":"YulLiteral","src":"375:2:22","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"369:2:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"386:46:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"417:9:22"},{"name":"_1","nodeType":"YulIdentifier","src":"428:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"413:3:22"},"nodeType":"YulFunctionCall","src":"413:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"400:12:22"},"nodeType":"YulFunctionCall","src":"400:32:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"390:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"441:28:22","value":{"kind":"number","nodeType":"YulLiteral","src":"451:18:22","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"445:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"496:26:22","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"505:6:22"},{"name":"value1","nodeType":"YulIdentifier","src":"513:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"498:6:22"},"nodeType":"YulFunctionCall","src":"498:22:22"},"nodeType":"YulExpressionStatement","src":"498:22:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"484:6:22"},{"name":"_2","nodeType":"YulIdentifier","src":"492:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"481:2:22"},"nodeType":"YulFunctionCall","src":"481:14:22"},"nodeType":"YulIf","src":"478:2:22"},{"nodeType":"YulVariableDeclaration","src":"531:32:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"545:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"556:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"541:3:22"},"nodeType":"YulFunctionCall","src":"541:22:22"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"535:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"611:26:22","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"620:6:22"},{"name":"value1","nodeType":"YulIdentifier","src":"628:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"613:6:22"},"nodeType":"YulFunctionCall","src":"613:22:22"},"nodeType":"YulExpressionStatement","src":"613:22:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"590:2:22"},{"kind":"number","nodeType":"YulLiteral","src":"594:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"586:3:22"},"nodeType":"YulFunctionCall","src":"586:13:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"601:7:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"582:3:22"},"nodeType":"YulFunctionCall","src":"582:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"575:6:22"},"nodeType":"YulFunctionCall","src":"575:35:22"},"nodeType":"YulIf","src":"572:2:22"},{"nodeType":"YulVariableDeclaration","src":"646:26:22","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"669:2:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"656:12:22"},"nodeType":"YulFunctionCall","src":"656:16:22"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"650:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"695:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"697:16:22"},"nodeType":"YulFunctionCall","src":"697:18:22"},"nodeType":"YulExpressionStatement","src":"697:18:22"}]},"condition":{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"687:2:22"},{"name":"_2","nodeType":"YulIdentifier","src":"691:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"684:2:22"},"nodeType":"YulFunctionCall","src":"684:10:22"},"nodeType":"YulIf","src":"681:2:22"},{"nodeType":"YulVariableDeclaration","src":"726:21:22","value":{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"740:2:22"},{"name":"_1","nodeType":"YulIdentifier","src":"744:2:22"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"736:3:22"},"nodeType":"YulFunctionCall","src":"736:11:22"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"730:2:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"756:23:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"776:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"770:5:22"},"nodeType":"YulFunctionCall","src":"770:9:22"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"760:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"788:42:22","value":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"814:6:22"},{"name":"_5","nodeType":"YulIdentifier","src":"822:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"810:3:22"},"nodeType":"YulFunctionCall","src":"810:15:22"},{"name":"_1","nodeType":"YulIdentifier","src":"827:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"806:3:22"},"nodeType":"YulFunctionCall","src":"806:24:22"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"792:10:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"889:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"891:16:22"},"nodeType":"YulFunctionCall","src":"891:18:22"},"nodeType":"YulExpressionStatement","src":"891:18:22"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"848:10:22"},{"name":"_2","nodeType":"YulIdentifier","src":"860:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"845:2:22"},"nodeType":"YulFunctionCall","src":"845:18:22"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"868:10:22"},{"name":"memPtr","nodeType":"YulIdentifier","src":"880:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"865:2:22"},"nodeType":"YulFunctionCall","src":"865:22:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"842:2:22"},"nodeType":"YulFunctionCall","src":"842:46:22"},"nodeType":"YulIf","src":"839:2:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"927:2:22","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"931:10:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"920:6:22"},"nodeType":"YulFunctionCall","src":"920:22:22"},"nodeType":"YulExpressionStatement","src":"920:22:22"},{"nodeType":"YulVariableDeclaration","src":"951:17:22","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"962:6:22"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"955:3:22","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"984:6:22"},{"name":"_4","nodeType":"YulIdentifier","src":"992:2:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"977:6:22"},"nodeType":"YulFunctionCall","src":"977:18:22"},"nodeType":"YulExpressionStatement","src":"977:18:22"},{"nodeType":"YulAssignment","src":"1004:22:22","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1015:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"1023:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1011:3:22"},"nodeType":"YulFunctionCall","src":"1011:15:22"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"1004:3:22"}]},{"nodeType":"YulVariableDeclaration","src":"1035:22:22","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1050:2:22"},{"name":"_1","nodeType":"YulIdentifier","src":"1054:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1046:3:22"},"nodeType":"YulFunctionCall","src":"1046:11:22"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"1039:3:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"1103:26:22","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1112:6:22"},{"name":"value1","nodeType":"YulIdentifier","src":"1120:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1105:6:22"},"nodeType":"YulFunctionCall","src":"1105:22:22"},"nodeType":"YulExpressionStatement","src":"1105:22:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1080:2:22"},{"name":"_5","nodeType":"YulIdentifier","src":"1084:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1076:3:22"},"nodeType":"YulFunctionCall","src":"1076:11:22"},{"name":"_1","nodeType":"YulIdentifier","src":"1089:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1072:3:22"},"nodeType":"YulFunctionCall","src":"1072:20:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1094:7:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1069:2:22"},"nodeType":"YulFunctionCall","src":"1069:33:22"},"nodeType":"YulIf","src":"1066:2:22"},{"nodeType":"YulVariableDeclaration","src":"1138:15:22","value":{"name":"value1","nodeType":"YulIdentifier","src":"1147:6:22"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1142:1:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"1207:118:22","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1228:3:22"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1246:3:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1233:12:22"},"nodeType":"YulFunctionCall","src":"1233:17:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1221:6:22"},"nodeType":"YulFunctionCall","src":"1221:30:22"},"nodeType":"YulExpressionStatement","src":"1221:30:22"},{"nodeType":"YulAssignment","src":"1264:19:22","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1275:3:22"},{"name":"_1","nodeType":"YulIdentifier","src":"1280:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1271:3:22"},"nodeType":"YulFunctionCall","src":"1271:12:22"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"1264:3:22"}]},{"nodeType":"YulAssignment","src":"1296:19:22","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1307:3:22"},{"name":"_1","nodeType":"YulIdentifier","src":"1312:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1303:3:22"},"nodeType":"YulFunctionCall","src":"1303:12:22"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"1296:3:22"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1173:1:22"},{"name":"_4","nodeType":"YulIdentifier","src":"1176:2:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1170:2:22"},"nodeType":"YulFunctionCall","src":"1170:9:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1180:18:22","statements":[{"nodeType":"YulAssignment","src":"1182:14:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1191:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"1194:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1187:3:22"},"nodeType":"YulFunctionCall","src":"1187:9:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1182:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"1166:3:22","statements":[]},"src":"1162:163:22"},{"nodeType":"YulAssignment","src":"1334:16:22","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1344:6:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1334:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"84:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"95:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"107:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"115:6:22","type":""}],"src":"14:1342:22"},{"body":{"nodeType":"YulBlock","src":"1442:113:22","statements":[{"body":{"nodeType":"YulBlock","src":"1488:26:22","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1497:6:22"},{"name":"value0","nodeType":"YulIdentifier","src":"1505:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1490:6:22"},"nodeType":"YulFunctionCall","src":"1490:22:22"},"nodeType":"YulExpressionStatement","src":"1490:22:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1463:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"1472:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1459:3:22"},"nodeType":"YulFunctionCall","src":"1459:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"1484:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1455:3:22"},"nodeType":"YulFunctionCall","src":"1455:32:22"},"nodeType":"YulIf","src":"1452:2:22"},{"nodeType":"YulAssignment","src":"1523:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1539:9:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1533:5:22"},"nodeType":"YulFunctionCall","src":"1533:16:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1523:6:22"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1408:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1419:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1431:6:22","type":""}],"src":"1361:194:22"},{"body":{"nodeType":"YulBlock","src":"1719:484:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1729:12:22","value":{"kind":"number","nodeType":"YulLiteral","src":"1739:2:22","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1733:2:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1750:32:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1768:9:22"},{"name":"_1","nodeType":"YulIdentifier","src":"1779:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1764:3:22"},"nodeType":"YulFunctionCall","src":"1764:18:22"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"1754:6:22","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1798:9:22"},{"name":"_1","nodeType":"YulIdentifier","src":"1809:2:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1791:6:22"},"nodeType":"YulFunctionCall","src":"1791:21:22"},"nodeType":"YulExpressionStatement","src":"1791:21:22"},{"nodeType":"YulVariableDeclaration","src":"1821:17:22","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"1832:6:22"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"1825:3:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1847:27:22","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1867:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1861:5:22"},"nodeType":"YulFunctionCall","src":"1861:13:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1851:6:22","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"1890:6:22"},{"name":"length","nodeType":"YulIdentifier","src":"1898:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1883:6:22"},"nodeType":"YulFunctionCall","src":"1883:22:22"},"nodeType":"YulExpressionStatement","src":"1883:22:22"},{"nodeType":"YulAssignment","src":"1914:25:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1925:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1936:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1921:3:22"},"nodeType":"YulFunctionCall","src":"1921:18:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1914:3:22"}]},{"nodeType":"YulVariableDeclaration","src":"1948:29:22","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1966:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"1974:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1962:3:22"},"nodeType":"YulFunctionCall","src":"1962:15:22"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"1952:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1986:13:22","value":{"name":"tail","nodeType":"YulIdentifier","src":"1995:4:22"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1990:1:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"2057:120:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2078:3:22"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2089:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2083:5:22"},"nodeType":"YulFunctionCall","src":"2083:13:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2071:6:22"},"nodeType":"YulFunctionCall","src":"2071:26:22"},"nodeType":"YulExpressionStatement","src":"2071:26:22"},{"nodeType":"YulAssignment","src":"2110:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2121:3:22"},{"name":"_1","nodeType":"YulIdentifier","src":"2126:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2117:3:22"},"nodeType":"YulFunctionCall","src":"2117:12:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2110:3:22"}]},{"nodeType":"YulAssignment","src":"2142:25:22","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2156:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"2164:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2152:3:22"},"nodeType":"YulFunctionCall","src":"2152:15:22"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2142:6:22"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2019:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"2022:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2016:2:22"},"nodeType":"YulFunctionCall","src":"2016:13:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2030:18:22","statements":[{"nodeType":"YulAssignment","src":"2032:14:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2041:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"2044:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2037:3:22"},"nodeType":"YulFunctionCall","src":"2037:9:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2032:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"2012:3:22","statements":[]},"src":"2008:169:22"},{"nodeType":"YulAssignment","src":"2186:11:22","value":{"name":"pos","nodeType":"YulIdentifier","src":"2194:3:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2186:4:22"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_library_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1688:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1699:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1710:4:22","type":""}],"src":"1560:643:22"},{"body":{"nodeType":"YulBlock","src":"2309:76:22","statements":[{"nodeType":"YulAssignment","src":"2319:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2331:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2342:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2327:3:22"},"nodeType":"YulFunctionCall","src":"2327:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2319:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2361:9:22"},{"name":"value0","nodeType":"YulIdentifier","src":"2372:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2354:6:22"},"nodeType":"YulFunctionCall","src":"2354:25:22"},"nodeType":"YulExpressionStatement","src":"2354:25:22"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2278:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2289:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2300:4:22","type":""}],"src":"2208:177:22"},{"body":{"nodeType":"YulBlock","src":"2523:130:22","statements":[{"nodeType":"YulAssignment","src":"2533:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2545:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2556:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2541:3:22"},"nodeType":"YulFunctionCall","src":"2541:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2533:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2575:9:22"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2590:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"2598:4:22","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2586:3:22"},"nodeType":"YulFunctionCall","src":"2586:17:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2568:6:22"},"nodeType":"YulFunctionCall","src":"2568:36:22"},"nodeType":"YulExpressionStatement","src":"2568:36:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2624:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2635:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2620:3:22"},"nodeType":"YulFunctionCall","src":"2620:18:22"},{"name":"value1","nodeType":"YulIdentifier","src":"2640:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2613:6:22"},"nodeType":"YulFunctionCall","src":"2613:34:22"},"nodeType":"YulExpressionStatement","src":"2613:34:22"}]},"name":"abi_encode_tuple_t_uint8_t_uint256__to_t_uint8_t_uint256__fromStack_library_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2484:9:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2495:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2503:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2514:4:22","type":""}],"src":"2390:263:22"},{"body":{"nodeType":"YulBlock","src":"2704:171:22","statements":[{"body":{"nodeType":"YulBlock","src":"2735:111:22","statements":[{"expression":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"2756:1:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2763:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2768:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2759:3:22"},"nodeType":"YulFunctionCall","src":"2759:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2749:6:22"},"nodeType":"YulFunctionCall","src":"2749:31:22"},"nodeType":"YulExpressionStatement","src":"2749:31:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2800:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2803:4:22","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2793:6:22"},"nodeType":"YulFunctionCall","src":"2793:15:22"},"nodeType":"YulExpressionStatement","src":"2793:15:22"},{"expression":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"2828:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"2831:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2821:6:22"},"nodeType":"YulFunctionCall","src":"2821:15:22"},"nodeType":"YulExpressionStatement","src":"2821:15:22"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"2724:1:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2717:6:22"},"nodeType":"YulFunctionCall","src":"2717:9:22"},"nodeType":"YulIf","src":"2714:2:22"},{"nodeType":"YulAssignment","src":"2855:14:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2864:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"2867:1:22"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2860:3:22"},"nodeType":"YulFunctionCall","src":"2860:9:22"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2855:1:22"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2689:1:22","type":""},{"name":"y","nodeType":"YulTypedName","src":"2692:1:22","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"2698:1:22","type":""}],"src":"2658:217:22"},{"body":{"nodeType":"YulBlock","src":"2932:225:22","statements":[{"body":{"nodeType":"YulBlock","src":"2999:123:22","statements":[{"expression":{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"3020:7:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3033:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3038:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3029:3:22"},"nodeType":"YulFunctionCall","src":"3029:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3013:6:22"},"nodeType":"YulFunctionCall","src":"3013:37:22"},"nodeType":"YulExpressionStatement","src":"3013:37:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3070:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3073:4:22","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3063:6:22"},"nodeType":"YulFunctionCall","src":"3063:15:22"},"nodeType":"YulExpressionStatement","src":"3063:15:22"},{"expression":{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"3098:7:22"},{"kind":"number","nodeType":"YulLiteral","src":"3107:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3091:6:22"},"nodeType":"YulFunctionCall","src":"3091:21:22"},"nodeType":"YulExpressionStatement","src":"3091:21:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2963:1:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2956:6:22"},"nodeType":"YulFunctionCall","src":"2956:9:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2949:6:22"},"nodeType":"YulFunctionCall","src":"2949:17:22"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"2971:1:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2982:1:22","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2978:3:22"},"nodeType":"YulFunctionCall","src":"2978:6:22"},{"name":"x","nodeType":"YulIdentifier","src":"2986:1:22"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2974:3:22"},"nodeType":"YulFunctionCall","src":"2974:14:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2968:2:22"},"nodeType":"YulFunctionCall","src":"2968:21:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2945:3:22"},"nodeType":"YulFunctionCall","src":"2945:45:22"},"nodeType":"YulIf","src":"2942:2:22"},{"nodeType":"YulAssignment","src":"3131:20:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3146:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"3149:1:22"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3142:3:22"},"nodeType":"YulFunctionCall","src":"3142:9:22"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"3131:7:22"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2911:1:22","type":""},{"name":"y","nodeType":"YulTypedName","src":"2914:1:22","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"2920:7:22","type":""}],"src":"2880:277:22"},{"body":{"nodeType":"YulBlock","src":"3194:95:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3211:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3218:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3223:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3214:3:22"},"nodeType":"YulFunctionCall","src":"3214:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3204:6:22"},"nodeType":"YulFunctionCall","src":"3204:31:22"},"nodeType":"YulExpressionStatement","src":"3204:31:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3251:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3254:4:22","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3244:6:22"},"nodeType":"YulFunctionCall","src":"3244:15:22"},"nodeType":"YulExpressionStatement","src":"3244:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3275:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3278:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3268:6:22"},"nodeType":"YulFunctionCall","src":"3268:15:22"},"nodeType":"YulExpressionStatement","src":"3268:15:22"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3162:127:22"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n        let _1 := 32\n        let offset := calldataload(add(headStart, _1))\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(value1, value1) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value1, value1) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := mul(_4, _1)\n        let memPtr := mload(64)\n        let newFreePtr := add(add(memPtr, _5), _1)\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let src := add(_3, _1)\n        if gt(add(add(_3, _5), _1), dataEnd) { revert(value1, value1) }\n        let i := value1\n        for { } lt(i, _4) { i := add(i, 1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _1)\n            src := add(src, _1)\n        }\n        value1 := memPtr\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8_t_uint256__to_t_uint8_t_uint256__fromStack_library_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xff))\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x)))\n        {\n            mstore(product, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(product, 0x24)\n        }\n        product := mul(x, y)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}","id":22,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{"contracts/oracles/libs/vMath.sol":{"vMath":[{"length":20,"start":235},{"length":20,"start":374}]}},"object":"608060405234801561001057600080fd5b506004361061002b5760003560e01c80636dcb6a3214610030575b600080fd5b61004361003e366004610234565b610059565b604051610050919061036a565b60405180910390f35b600080836001600160a01b031663bb7b8b806040518163ffffffff1660e01b815260040160206040518083038186803b15801561009557600080fd5b505afa1580156100a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100cd919061030e565b905060006100dd845183866100e6565b95945050505050565b60008073__$fc961522ee25e21dc45bf9241cf35e1d80$__638e5fede8846040518263ffffffff1660e01b81526004016101209190610326565b60206040518083038186803b15801561013857600080fd5b505af415801561014c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610170919061030e565b9050600073__$fc961522ee25e21dc45bf9241cf35e1d80$__63f43b9abe87846040518363ffffffff1660e01b81526004016101ad929190610373565b60206040518083038186803b1580156101c557600080fd5b505af41580156101d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101fd919061030e565b9050670de0b6b3a7640000816102168760ff8a166103a6565b61022091906103a6565b61022a9190610386565b9695505050505050565b60008060408385031215610246578182fd5b82356001600160a01b038116811461025c578283fd5b915060208381013567ffffffffffffffff80821115610279578384fd5b818601915086601f83011261028c578384fd5b81358181111561029e5761029e6103d1565b838102604051858282010181811085821117156102bd576102bd6103d1565b604052828152858101935084860182860187018b10156102db578788fd5b8795505b838610156102fd5780358552600195909501949386019386016102df565b508096505050505050509250929050565b60006020828403121561031f578081fd5b5051919050565b6020808252825182820181905260009190848201906040850190845b8181101561035e57835183529284019291840191600101610342565b50909695505050505050565b90815260200190565b60ff929092168252602082015260400190565b6000826103a157634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156103cc57634e487b7160e01b81526011600452602481fd5b500290565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220f66de4bc5af18226697079c51e60699df522cb7afbde2e84d294cc227f65c5f464736f6c63430008000033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6DCB6A32 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0x234 JUMP JUMPDEST PUSH2 0x59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x36A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBB7B8B80 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x30E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xDD DUP5 MLOAD DUP4 DUP7 PUSH2 0xE6 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0x0 PUSH4 0x8E5FEDE8 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120 SWAP2 SWAP1 PUSH2 0x326 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x14C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x30E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0x0 PUSH4 0xF43B9ABE DUP8 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AD SWAP3 SWAP2 SWAP1 PUSH2 0x373 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x30E JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x216 DUP8 PUSH1 0xFF DUP11 AND PUSH2 0x3A6 JUMP JUMPDEST PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x3A6 JUMP JUMPDEST PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x386 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x246 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x25C JUMPI DUP3 DUP4 REVERT JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 DUP2 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x279 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x28C JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x29E JUMPI PUSH2 0x29E PUSH2 0x3D1 JUMP JUMPDEST DUP4 DUP2 MUL PUSH1 0x40 MLOAD DUP6 DUP3 DUP3 ADD ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x2BD JUMPI PUSH2 0x2BD PUSH2 0x3D1 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP6 DUP2 ADD SWAP4 POP DUP5 DUP7 ADD DUP3 DUP7 ADD DUP8 ADD DUP12 LT ISZERO PUSH2 0x2DB JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP6 POP JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x2FD JUMPI DUP1 CALLDATALOAD DUP6 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP7 ADD SWAP4 DUP7 ADD PUSH2 0x2DF JUMP JUMPDEST POP DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31F JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x35E JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x342 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3A1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3CC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 PUSH14 0xE4BC5AF18226697079C51E60699D CREATE2 0x22 0xCB PUSH27 0xFBDE2E84D294CC227F65C5F464736F6C6343000800003300000000 ","sourceMap":"224:965:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;269:395;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;397:7;420:21;455:10;-1:-1:-1;;;;;444:40:12;;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;420:66;;497:16;516:115;560:6;:13;588;615:6;516:24;:115::i;:::-;497:134;269:395;-1:-1:-1;;;;;269:395:12:o;823:364::-;967:7;986:15;1004:5;:13;1018:6;1004:21;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;986:39;;1035:16;1054:5;:20;1075:1;1078:7;1054:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1035:51;-1:-1:-1;1136:6:12;1035:51;1104:17;1108:13;1104:17;;;;:::i;:::-;:28;;;;:::i;:::-;1103:39;;;;:::i;:::-;1096:46;823:364;-1:-1:-1;;;;;;823:364:12:o;14:1342:22:-;;;168:2;156:9;147:7;143:23;139:32;136:2;;;189:6;181;174:22;136:2;220:23;;-1:-1:-1;;;;;272:31:22;;262:42;;252:2;;323:6;315;308:22;252:2;351:5;-1:-1:-1;375:2:22;413:18;;;400:32;451:18;481:14;;;478:2;;;513:6;505;498:22;478:2;556:6;545:9;541:22;531:32;;601:7;594:4;590:2;586:13;582:27;572:2;;628:6;620;613:22;572:2;669;656:16;691:2;687;684:10;681:2;;;697:18;;:::i;:::-;744:2;740;736:11;776:2;770:9;827:2;822;814:6;810:15;806:24;880:6;868:10;865:22;860:2;848:10;845:18;842:46;839:2;;;891:18;;:::i;:::-;927:2;920:22;977:18;;;1011:15;;;;-1:-1:-1;1046:11:22;;;1076;;;1072:20;;1069:33;-1:-1:-1;1066:2:22;;;1120:6;1112;1105:22;1066:2;1147:6;1138:15;;1162:163;1176:2;1173:1;1170:9;1162:163;;;1233:17;;1221:30;;1194:1;1187:9;;;;;1271:12;;;;1303;;1162:163;;;1166:3;1344:6;1334:16;;;;;;;;126:1230;;;;;:::o;1361:194::-;;1484:2;1472:9;1463:7;1459:23;1455:32;1452:2;;;1505:6;1497;1490:22;1452:2;-1:-1:-1;1533:16:22;;1442:113;-1:-1:-1;1442:113:22:o;1560:643::-;1739:2;1791:21;;;1861:13;;1764:18;;;1883:22;;;1560:643;;1739:2;1962:15;;;;1936:2;1921:18;;;1560:643;2008:169;2022:6;2019:1;2016:13;2008:169;;;2083:13;;2071:26;;2152:15;;;;2117:12;;;;2044:1;2037:9;2008:169;;;-1:-1:-1;2194:3:22;;1719:484;-1:-1:-1;;;;;;1719:484:22:o;2208:177::-;2354:25;;;2342:2;2327:18;;2309:76::o;2390:263::-;2598:4;2586:17;;;;2568:36;;2635:2;2620:18;;2613:34;2556:2;2541:18;;2523:130::o;2658:217::-;;2724:1;2714:2;;-1:-1:-1;;;2749:31:22;;2803:4;2800:1;2793:15;2831:4;2756:1;2821:15;2714:2;-1:-1:-1;2860:9:22;;2704:171::o;2880:277::-;;2986:1;2982;2978:6;2974:14;2971:1;2968:21;2963:1;2956:9;2949:17;2945:45;2942:2;;;-1:-1:-1;;;3013:37:22;;3073:4;3070:1;3063:15;3107:4;3020:7;3091:21;2942:2;-1:-1:-1;3142:9:22;;2932:225::o;3162:127::-;3223:10;3218:3;3214:20;3211:1;3204:31;3254:4;3251:1;3244:15;3278:4;3275:1;3268:15"},"gasEstimates":{"creation":{"codeDepositCost":"210600","executionCost":"251","totalCost":"210851"},"external":{"get_price(address,uint256[])":"infinite"},"internal":{"calculate_v2_token_price(uint8,uint256,uint256[] memory)":"infinite"}},"methodIdentifiers":{"get_price(address,uint256[])":"6dcb6a32"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"curve_pool\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"prices\",\"type\":\"uint256[]\"}],\"name\":\"get_price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracles/CurveOracleV2.sol\":\"CurveOracleV2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/oracles/CurveOracleV2.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity >=0.8.0;\\n\\nimport {ICurvePool} from \\\"./interfaces/ICurvePoolV1.sol\\\";\\nimport {ICurveOracle} from \\\"./interfaces/ICurveOracle.sol\\\";\\nimport {vMath} from \\\"./libs/vMath.sol\\\";\\n\\ncontract CurveOracleV2 is ICurveOracle {\\n    function get_price(address curve_pool, uint256[] memory prices)\\n        external\\n        view\\n        override\\n        returns (uint256)\\n    {\\n        uint256 virtual_price = ICurvePool(curve_pool).get_virtual_price();\\n\\n        uint256 lp_price = calculate_v2_token_price(\\n            uint8(prices.length),\\n            virtual_price,\\n            prices\\n        );\\n\\n        return lp_price;\\n    }\\n\\n    //returns n_token * vp * (p1 * p2 * p3) ^1/n\\n    //n should only ever be 2, 3, or 4\\n    //returns the lp_price scaled by 1e36, so scale down by 1e36\\n    function calculate_v2_token_price(\\n        uint8 n,\\n        uint256 virtual_price,\\n        uint256[] memory prices\\n    ) internal pure returns (uint256) {\\n        uint256 product = vMath.product(prices);\\n        uint256 geo_mean = vMath.geometric_mean(n, product);\\n        return (n * virtual_price * geo_mean) / 10**18; //since virtual price has 18 decimals\\n    }\\n}\\n\",\"keccak256\":\"0x16811fe57c7083b8deb7831136e1fa0db6a4ef3aa4c66aa0a74cbb87f9a69e9f\",\"license\":\"UNLICENSED\"},\"contracts/oracles/interfaces/ICurveOracle.sol\":{\"content\":\"pragma solidity >=0.8.0;\\n\\ninterface ICurveOracle {\\n    function get_price(address curve_pool, uint256[] memory prices)\\n        external\\n        view\\n        returns (uint256);\\n}\\n\",\"keccak256\":\"0xdda871f8372f09487237b4047dbbcc88810eb55c357b2e91e13a068e043d4179\"},\"contracts/oracles/interfaces/ICurvePoolV1.sol\":{\"content\":\"pragma solidity >=0.8.0;\\n\\ninterface ICurvePool {\\n    function get_virtual_price() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x58f8992dae5fdd0d425f8fc86d7cb3f59e61ba73ccc1111c281645d48dad4a72\"},\"contracts/oracles/libs/FixedPointMathLib.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Arithmetic library with operations for fixed-point numbers.\\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/utils/FixedPointMathLib.sol)\\n/// @author Inspired by USM (https://github.com/usmfum/USM/blob/master/contracts/WadMath.sol)\\nlibrary FixedPointMathLib {\\n    /*//////////////////////////////////////////////////////////////\\n                    SIMPLIFIED FIXED POINT OPERATIONS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 internal constant WAD = 1e18; // The scalar of ETH and most ERC20s.\\n\\n    function mulWadDown(uint256 x, uint256 y) internal pure returns (uint256) {\\n        return mulDivDown(x, y, WAD); // Equivalent to (x * y) / WAD rounded down.\\n    }\\n\\n    function mulWadUp(uint256 x, uint256 y) internal pure returns (uint256) {\\n        return mulDivUp(x, y, WAD); // Equivalent to (x * y) / WAD rounded up.\\n    }\\n\\n    function divWadDown(uint256 x, uint256 y) internal pure returns (uint256) {\\n        return mulDivDown(x, WAD, y); // Equivalent to (x * WAD) / y rounded down.\\n    }\\n\\n    function divWadUp(uint256 x, uint256 y) internal pure returns (uint256) {\\n        return mulDivUp(x, WAD, y); // Equivalent to (x * WAD) / y rounded up.\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                    LOW LEVEL FIXED POINT OPERATIONS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function mulDivDown(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 z) {\\n        assembly {\\n            // Store x * y in z for now.\\n            z := mul(x, y)\\n\\n            // Equivalent to require(denominator != 0 && (x == 0 || (x * y) / x == y))\\n            if iszero(\\n                and(\\n                    iszero(iszero(denominator)),\\n                    or(iszero(x), eq(div(z, x), y))\\n                )\\n            ) {\\n                revert(0, 0)\\n            }\\n\\n            // Divide z by the denominator.\\n            z := div(z, denominator)\\n        }\\n    }\\n\\n    function mulDivUp(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 z) {\\n        assembly {\\n            // Store x * y in z for now.\\n            z := mul(x, y)\\n\\n            // Equivalent to require(denominator != 0 && (x == 0 || (x * y) / x == y))\\n            if iszero(\\n                and(\\n                    iszero(iszero(denominator)),\\n                    or(iszero(x), eq(div(z, x), y))\\n                )\\n            ) {\\n                revert(0, 0)\\n            }\\n\\n            // First, divide z - 1 by the denominator and add 1.\\n            // We allow z - 1 to underflow if z is 0, because we multiply the\\n            // end result by 0 if z is zero, ensuring we return 0 if z is zero.\\n            z := mul(iszero(iszero(z)), add(div(sub(z, 1), denominator), 1))\\n        }\\n    }\\n\\n    function rpow(\\n        uint256 x,\\n        uint256 n,\\n        uint256 scalar\\n    ) internal pure returns (uint256 z) {\\n        assembly {\\n            switch x\\n            case 0 {\\n                switch n\\n                case 0 {\\n                    // 0 ** 0 = 1\\n                    z := scalar\\n                }\\n                default {\\n                    // 0 ** n = 0\\n                    z := 0\\n                }\\n            }\\n            default {\\n                switch mod(n, 2)\\n                case 0 {\\n                    // If n is even, store scalar in z for now.\\n                    z := scalar\\n                }\\n                default {\\n                    // If n is odd, store x in z for now.\\n                    z := x\\n                }\\n\\n                // Shifting right by 1 is like dividing by 2.\\n                let half := shr(1, scalar)\\n\\n                for {\\n                    // Shift n right by 1 before looping to halve it.\\n                    n := shr(1, n)\\n                } n {\\n                    // Shift n right by 1 each iteration to halve it.\\n                    n := shr(1, n)\\n                } {\\n                    // Revert immediately if x ** 2 would overflow.\\n                    // Equivalent to iszero(eq(div(xx, x), x)) here.\\n                    if shr(128, x) {\\n                        revert(0, 0)\\n                    }\\n\\n                    // Store x squared.\\n                    let xx := mul(x, x)\\n\\n                    // Round to the nearest number.\\n                    let xxRound := add(xx, half)\\n\\n                    // Revert if xx + half overflowed.\\n                    if lt(xxRound, xx) {\\n                        revert(0, 0)\\n                    }\\n\\n                    // Set x to scaled xxRound.\\n                    x := div(xxRound, scalar)\\n\\n                    // If n is even:\\n                    if mod(n, 2) {\\n                        // Compute z * x.\\n                        let zx := mul(z, x)\\n\\n                        // If z * x overflowed:\\n                        if iszero(eq(div(zx, x), z)) {\\n                            // Revert if x is non-zero.\\n                            if iszero(iszero(x)) {\\n                                revert(0, 0)\\n                            }\\n                        }\\n\\n                        // Round to the nearest number.\\n                        let zxRound := add(zx, half)\\n\\n                        // Revert if zx + half overflowed.\\n                        if lt(zxRound, zx) {\\n                            revert(0, 0)\\n                        }\\n\\n                        // Return properly scaled zxRound.\\n                        z := div(zxRound, scalar)\\n                    }\\n                }\\n            }\\n        }\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                        GENERAL NUMBER UTILITIES\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function sqrt(uint256 x) internal pure returns (uint256 z) {\\n        assembly {\\n            // Start off with z at 1.\\n            z := 1\\n\\n            // Used below to help find a nearby power of 2.\\n            let y := x\\n\\n            // Find the lowest power of 2 that is at least sqrt(x).\\n            if iszero(lt(y, 0x100000000000000000000000000000000)) {\\n                y := shr(128, y) // Like dividing by 2 ** 128.\\n                z := shl(64, z) // Like multiplying by 2 ** 64.\\n            }\\n            if iszero(lt(y, 0x10000000000000000)) {\\n                y := shr(64, y) // Like dividing by 2 ** 64.\\n                z := shl(32, z) // Like multiplying by 2 ** 32.\\n            }\\n            if iszero(lt(y, 0x100000000)) {\\n                y := shr(32, y) // Like dividing by 2 ** 32.\\n                z := shl(16, z) // Like multiplying by 2 ** 16.\\n            }\\n            if iszero(lt(y, 0x10000)) {\\n                y := shr(16, y) // Like dividing by 2 ** 16.\\n                z := shl(8, z) // Like multiplying by 2 ** 8.\\n            }\\n            if iszero(lt(y, 0x100)) {\\n                y := shr(8, y) // Like dividing by 2 ** 8.\\n                z := shl(4, z) // Like multiplying by 2 ** 4.\\n            }\\n            if iszero(lt(y, 0x10)) {\\n                y := shr(4, y) // Like dividing by 2 ** 4.\\n                z := shl(2, z) // Like multiplying by 2 ** 2.\\n            }\\n            if iszero(lt(y, 0x8)) {\\n                // Equivalent to 2 ** z.\\n                z := shl(1, z)\\n            }\\n\\n            // Shifting right by 1 is like dividing by 2.\\n            z := shr(1, add(z, div(x, z)))\\n            z := shr(1, add(z, div(x, z)))\\n            z := shr(1, add(z, div(x, z)))\\n            z := shr(1, add(z, div(x, z)))\\n            z := shr(1, add(z, div(x, z)))\\n            z := shr(1, add(z, div(x, z)))\\n            z := shr(1, add(z, div(x, z)))\\n\\n            // Compute a rounded down version of z.\\n            let zRoundDown := div(x, z)\\n\\n            // If zRoundDown is smaller, use it.\\n            if lt(zRoundDown, z) {\\n                z := zRoundDown\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xcc1552fe037c973c1ab30f607708735de7626eb22dcf6b2a02f2a39fa5d2b965\",\"license\":\"AGPL-3.0-only\"},\"contracts/oracles/libs/IntegralMath.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity >=0.8.0;\\n\\nimport \\\"./Uint.sol\\\";\\n\\nlibrary IntegralMath {\\n    /**\\n     * @dev Compute the largest integer smaller than or equal to the binary logarithm of `n`\\n     */\\n    function floorLog2(uint256 n) internal pure returns (uint8) {\\n        unchecked {\\n            uint8 res = 0;\\n\\n            if (n < 256) {\\n                // at most 8 iterations\\n                while (n > 1) {\\n                    n >>= 1;\\n                    res += 1;\\n                }\\n            } else {\\n                // exactly 8 iterations\\n                for (uint8 s = 128; s > 0; s >>= 1) {\\n                    if (n >= 1 << s) {\\n                        n >>= s;\\n                        res |= s;\\n                    }\\n                }\\n            }\\n\\n            return res;\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the largest integer smaller than or equal to the square root of `n`\\n     */\\n    function floorSqrt(uint256 n) internal pure returns (uint256) {\\n        unchecked {\\n            if (n > 0) {\\n                uint256 x = n / 2 + 1;\\n                uint256 y = (x + n / x) / 2;\\n                while (x > y) {\\n                    x = y;\\n                    y = (x + n / x) / 2;\\n                }\\n                return x;\\n            }\\n            return 0;\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the smallest integer larger than or equal to the square root of `n`\\n     */\\n    function ceilSqrt(uint256 n) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 x = floorSqrt(n);\\n            return x**2 == n ? x : x + 1;\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the largest integer smaller than or equal to the cubic root of `n`\\n     */\\n    function floorCbrt(uint256 n) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 x = 0;\\n            for (uint256 y = 1 << 255; y > 0; y >>= 3) {\\n                x <<= 1;\\n                uint256 z = 3 * x * (x + 1) + 1;\\n                if (n / y >= z) {\\n                    n -= y * z;\\n                    x += 1;\\n                }\\n            }\\n            return x;\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the smallest integer larger than or equal to the cubic root of `n`\\n     */\\n    function ceilCbrt(uint256 n) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 x = floorCbrt(n);\\n            return x**3 == n ? x : x + 1;\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the nearest integer to the quotient of `n` and `d` (or `n / d`)\\n     */\\n    function roundDiv(uint256 n, uint256 d) internal pure returns (uint256) {\\n        unchecked {\\n            return n / d + (n % d) / (d - d / 2);\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the largest integer smaller than or equal to `x * y / z`\\n     */\\n    function mulDivF(\\n        uint256 x,\\n        uint256 y,\\n        uint256 z\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            (uint256 xyh, uint256 xyl) = mul512(x, y);\\n            if (xyh == 0) {\\n                // `x * y < 2 ^ 256`\\n                return xyl / z;\\n            }\\n            if (xyh < z) {\\n                // `x * y / z < 2 ^ 256`\\n                uint256 m = mulMod(x, y, z); // `m = x * y % z`\\n                (uint256 nh, uint256 nl) = sub512(xyh, xyl, m); // `n = x * y - m` hence `n / z = floor(x * y / z)`\\n                if (nh == 0) {\\n                    // `n < 2 ^ 256`\\n                    return nl / z;\\n                }\\n                uint256 p = unsafeSub(0, z) & z; // `p` is the largest power of 2 which `z` is divisible by\\n                uint256 q = div512(nh, nl, p); // `n` is divisible by `p` because `n` is divisible by `z` and `z` is divisible by `p`\\n                uint256 r = inv256(z / p); // `z / p = 1 mod 2` hence `inverse(z / p) = 1 mod 2 ^ 256`\\n                return unsafeMul(q, r); // `q * r = (n / p) * inverse(z / p) = n / z`\\n            }\\n            revert(); // `x * y / z >= 2 ^ 256`\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the smallest integer larger than or equal to `x * y / z`\\n     */\\n    function mulDivC(\\n        uint256 x,\\n        uint256 y,\\n        uint256 z\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 w = mulDivF(x, y, z);\\n            if (mulMod(x, y, z) > 0) return safeAdd(w, 1);\\n            return w;\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the value of `x * y`\\n     */\\n    function mul512(uint256 x, uint256 y)\\n        private\\n        pure\\n        returns (uint256, uint256)\\n    {\\n        unchecked {\\n            uint256 p = mulModMax(x, y);\\n            uint256 q = unsafeMul(x, y);\\n            if (p >= q) return (p - q, q);\\n            return (unsafeSub(p, q) - 1, q);\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the value of `2 ^ 256 * xh + xl - y`, where `2 ^ 256 * xh + xl >= y`\\n     */\\n    function sub512(\\n        uint256 xh,\\n        uint256 xl,\\n        uint256 y\\n    ) private pure returns (uint256, uint256) {\\n        unchecked {\\n            if (xl >= y) return (xh, xl - y);\\n            return (xh - 1, unsafeSub(xl, y));\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the value of `(2 ^ 256 * xh + xl) / pow2n`, where `xl` is divisible by `pow2n`\\n     */\\n    function div512(\\n        uint256 xh,\\n        uint256 xl,\\n        uint256 pow2n\\n    ) private pure returns (uint256) {\\n        unchecked {\\n            uint256 pow2nInv = unsafeAdd(unsafeSub(0, pow2n) / pow2n, 1); // `1 << (256 - n)`\\n            return unsafeMul(xh, pow2nInv) | (xl / pow2n); // `(xh << (256 - n)) | (xl >> n)`\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the inverse of `d` modulo `2 ^ 256`, where `d` is congruent to `1` modulo `2`\\n     */\\n    function inv256(uint256 d) private pure returns (uint256) {\\n        unchecked {\\n            // approximate the root of `f(x) = 1 / x - d` using the newton\\u2013raphson convergence method\\n            uint256 x = 1;\\n            for (uint256 i = 0; i < 8; ++i)\\n                x = unsafeMul(x, unsafeSub(2, unsafeMul(x, d))); // `x = x * (2 - x * d) mod 2 ^ 256`\\n            return x;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2433205309bedeec21e98639f6e1b9ae4b72bddfd16d3c7caa23f0bedd74c07a\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/oracles/libs/Uint.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity >=0.8.0;\\n\\nuint256 constant MAX_VAL = type(uint256).max;\\n\\n// reverts on overflow\\nfunction safeAdd(uint256 x, uint256 y) pure returns (uint256) {\\n    return x + y;\\n}\\n\\n// does not revert on overflow\\nfunction unsafeAdd(uint256 x, uint256 y) pure returns (uint256) {\\n    unchecked {\\n        return x + y;\\n    }\\n}\\n\\n// does not revert on overflow\\nfunction unsafeSub(uint256 x, uint256 y) pure returns (uint256) {\\n    unchecked {\\n        return x - y;\\n    }\\n}\\n\\n// does not revert on overflow\\nfunction unsafeMul(uint256 x, uint256 y) pure returns (uint256) {\\n    unchecked {\\n        return x * y;\\n    }\\n}\\n\\n// does not overflow\\nfunction mulModMax(uint256 x, uint256 y) pure returns (uint256) {\\n    unchecked {\\n        return mulmod(x, y, MAX_VAL);\\n    }\\n}\\n\\n// does not overflow\\nfunction mulMod(\\n    uint256 x,\\n    uint256 y,\\n    uint256 z\\n) pure returns (uint256) {\\n    unchecked {\\n        return mulmod(x, y, z);\\n    }\\n}\\n\",\"keccak256\":\"0x998fcec9a910b59ed67db5af0939b271f062585a8c16a614b529197ed86d0a8d\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/oracles/libs/vMath.sol\":{\"content\":\"pragma solidity >=0.8.0;\\n\\nimport {FixedPointMathLib} from \\\"./FixedPointMathLib.sol\\\";\\nimport {IntegralMath} from \\\"./IntegralMath.sol\\\";\\n\\nlibrary vMath {\\n    uint256 internal constant WAD = 1e18; // The scalar of ETH and most ERC20s.\\n\\n    function min(uint256[] calldata array) external pure returns (uint256) {\\n        uint256 min = array[0];\\n        for (uint8 i = 1; i < array.length; i++) {\\n            if (min > array[i]) {\\n                min = array[i];\\n            }\\n        }\\n        return min;\\n    }\\n\\n    function product(uint256[] calldata nums) external pure returns (uint256) {\\n        uint256 product = nums[0];\\n        for (uint256 i = 1; i < nums.length; i++) {\\n            product *= nums[i];\\n        }\\n        return product;\\n    }\\n\\n    //limited to curve pools only, either 2 or 3 assets (mostly 2)\\n    function geometric_mean(uint8 n, uint256 product)\\n        external\\n        pure\\n        returns (uint256)\\n    {\\n        if (n == 2) {\\n            return FixedPointMathLib.sqrt(product);\\n        } else {\\n            //n == 3\\n            return IntegralMath.floorCbrt(product);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x771260414afb50c4937cc8185436eadf2292162955a4ea25cb1b8405d9a0e0fb\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/oracles/CurveWrapper.sol":{"CurveWrapper":{"abi":[{"inputs":[{"internalType":"address","name":"addressProvider","type":"address"},{"internalType":"address","name":"fallbackOracle","type":"address"},{"internalType":"address","name":"baseCurrency","type":"address"},{"internalType":"uint256","name":"baseCurrencyUnit","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"asset","type":"address"},{"indexed":true,"internalType":"address","name":"source","type":"address"}],"name":"AssetSourceUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"baseCurrency","type":"address"},{"indexed":false,"internalType":"uint256","name":"baseCurrencyUnit","type":"uint256"}],"name":"BaseCurrencySet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"fallbackOracle","type":"address"}],"name":"FallbackOracleUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"BASE_CURRENCY","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"BASE_CURRENCY_UNIT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getAssetPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"assets","type":"address[]"}],"name":"getAssetsPrices","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getFallbackOracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"addressProvider","type":"address"}],"name":"setAddressProvider","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"fallbackOracle","type":"address"}],"name":"setFallbackOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Aave","kind":"dev","methods":{"constructor":{"params":{"addressProvider":"The address of the vmex address provider (not the curve address provider)","baseCurrency":"the base currency used for the price quotes. If USD is used, base currency is 0x0","baseCurrencyUnit":"the unit of the base currency","fallbackOracle":"The address of the fallback oracle to use if the data of an        aggregator is not consistent"}},"getAssetPrice(address)":{"params":{"asset":"The asset address"}},"getAssetsPrices(address[])":{"params":{"assets":"The list of assets addresses"}},"getFallbackOracle()":{"returns":{"_0":"address The addres of the fallback oracle"}},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setFallbackOracle(address)":{"params":{"fallbackOracle":"The address of the fallbackOracle"}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"title":"AaveOracle","version":1},"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:838:22","statements":[{"nodeType":"YulBlock","src":"6:3:22","statements":[]},{"body":{"nodeType":"YulBlock","src":"76:117:22","statements":[{"nodeType":"YulAssignment","src":"86:22:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"101:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"95:5:22"},"nodeType":"YulFunctionCall","src":"95:13:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"86:5:22"}]},{"body":{"nodeType":"YulBlock","src":"171:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"180:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"183:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"173:6:22"},"nodeType":"YulFunctionCall","src":"173:12:22"},"nodeType":"YulExpressionStatement","src":"173:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"130:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"141:5:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"156:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"161:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"152:3:22"},"nodeType":"YulFunctionCall","src":"152:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"165:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"148:3:22"},"nodeType":"YulFunctionCall","src":"148:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"137:3:22"},"nodeType":"YulFunctionCall","src":"137:31:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"127:2:22"},"nodeType":"YulFunctionCall","src":"127:42:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"120:6:22"},"nodeType":"YulFunctionCall","src":"120:50:22"},"nodeType":"YulIf","src":"117:2:22"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"55:6:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"66:5:22","type":""}],"src":"14:179:22"},{"body":{"nodeType":"YulBlock","src":"330:324:22","statements":[{"body":{"nodeType":"YulBlock","src":"377:26:22","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"386:6:22"},{"name":"value0","nodeType":"YulIdentifier","src":"394:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"379:6:22"},"nodeType":"YulFunctionCall","src":"379:22:22"},"nodeType":"YulExpressionStatement","src":"379:22:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"351:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"360:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"347:3:22"},"nodeType":"YulFunctionCall","src":"347:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"372:3:22","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"343:3:22"},"nodeType":"YulFunctionCall","src":"343:33:22"},"nodeType":"YulIf","src":"340:2:22"},{"nodeType":"YulAssignment","src":"412:52:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"454:9:22"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"422:31:22"},"nodeType":"YulFunctionCall","src":"422:42:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"412:6:22"}]},{"nodeType":"YulAssignment","src":"473:61:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"519:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"530:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"515:3:22"},"nodeType":"YulFunctionCall","src":"515:18:22"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"483:31:22"},"nodeType":"YulFunctionCall","src":"483:51:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"473:6:22"}]},{"nodeType":"YulAssignment","src":"543:61:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"589:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"600:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"585:3:22"},"nodeType":"YulFunctionCall","src":"585:18:22"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"553:31:22"},"nodeType":"YulFunctionCall","src":"553:51:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"543:6:22"}]},{"nodeType":"YulAssignment","src":"613:35:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"633:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"644:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"629:3:22"},"nodeType":"YulFunctionCall","src":"629:18:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"623:5:22"},"nodeType":"YulFunctionCall","src":"623:25:22"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"613:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_addresst_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"272:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"283:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"295:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"303:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"311:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"319:6:22","type":""}],"src":"198:456:22"},{"body":{"nodeType":"YulBlock","src":"760:76:22","statements":[{"nodeType":"YulAssignment","src":"770:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"782:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"793:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"778:3:22"},"nodeType":"YulFunctionCall","src":"778:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"770:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"812:9:22"},{"name":"value0","nodeType":"YulIdentifier","src":"823:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"805:6:22"},"nodeType":"YulFunctionCall","src":"805:25:22"},"nodeType":"YulExpressionStatement","src":"805:25:22"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"729:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"740:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"751:4:22","type":""}],"src":"659:177:22"}]},"contents":"{\n    { }\n    function abi_decode_t_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value0, value0) }\n        value0 := abi_decode_t_address_fromMemory(headStart)\n        value1 := abi_decode_t_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_t_address_fromMemory(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}","id":22,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x13CC CODESIZE SUB DUP1 PUSH3 0x13CC DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x64A JUMP JUMPDEST PUSH1 0x0 PUSH3 0x40 PUSH3 0x11E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE PUSH3 0xB0 DUP4 PUSH3 0x122 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP4 SWAP1 SHL AND PUSH1 0x80 MSTORE PUSH1 0xA0 DUP2 SWAP1 MSTORE PUSH3 0xD1 PUSH3 0x16C JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xE27C4C1372396A3D15A9922F74F9DFC7C72B1AD6D63868470787249C356454C1 DUP3 PUSH1 0x40 MLOAD PUSH3 0x10C SWAP2 SWAP1 PUSH3 0x69B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP PUSH3 0x6A4 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xCE7A780D33665B1EA097AF5F155E3821B809ECBAA839D3B33AA83BA28168CEFB SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH32 0xC3F53DCDAF6E9F09B7534871D74ADB7C316F2D5E2CCD5623414ACED1DA2F9F44 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH20 0xD51A44D3FAE010294C616388B506ACDA1BFAAE46 OR SWAP1 SWAP2 SSTORE PUSH1 0x3 PUSH32 0x62B955E340611B83592F98955871459FFF5F39282C44606EE6F2A2140AF6F8C9 DUP2 SWAP1 SSTORE PUSH32 0x86294D2E5AFAD0C29F0AD45ECBDAE58CA55370C9282CA6D63287A852438095C5 DUP1 SLOAD DUP4 AND PUSH20 0xDAC17F958D2EE523A2206206994597C13D831EC7 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH32 0x7CC2DDA6F7CDA3893CB4CC6A15536AD333B3750E1237F0AB29E1EE723E18C485 DUP1 SLOAD DUP5 AND PUSH20 0x2260FAC5E5542A773AA44FBCFEDF7C193BC2C599 OR SWAP1 SSTORE PUSH32 0xAA4623DC8891093A66BF7581D4882714E260FDA60112EBB8FF4D6A8DBDCF3289 DUP1 SLOAD DUP5 AND PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH32 0xEAC489D5FCE2CAC016EE12CFECD5EEB23412AA5D77CDB3E1D0FAB0572ADBA7B2 DUP1 SLOAD DUP6 AND PUSH20 0xBEBC44782C7DB0A1A60CB6FE97D0B483032FF1C7 OR SWAP1 SSTORE PUSH32 0xA558D2E0CB48601F95B0BA016A54413646F7BD87E0574DB8B5CC52669CE871F6 SWAP3 SWAP1 SWAP3 SSTORE PUSH32 0x907A72421B781B2D8BE6F368FF319E90649F710DA35E370CF38CCC89A836EDD7 DUP1 SLOAD DUP5 AND PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F OR SWAP1 SSTORE PUSH32 0xF0C1D9E17C06EC2B3AE0ADE62FF92FB5F71EE7060E179D0F83A99547D9411A1A DUP1 SLOAD DUP5 AND PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH32 0xAF5FEB388A4A88F587603820DBF5FD61666F9C0DEE4A6935D11A387F39631BD0 DUP1 SLOAD DUP6 AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH32 0x72445ED47EDB5A6F1596ED0C5DC5BCD49D978815A8DC26762A075571DA59C6F8 DUP1 SLOAD DUP5 AND PUSH20 0xDC24316B9AE028F1497C275EB9192A3EA0F67022 OR SWAP1 SSTORE PUSH1 0x2 PUSH32 0xD208599A79E4B42287C0ABA37622F691D3E1FC65F54FE860E8C52C0B3D5604AE DUP2 SWAP1 SSTORE PUSH32 0x759C8CEA8769272877F76187A5B92B46073AA4AE92B0618FB1BA5CC3905719FC DUP1 SLOAD DUP6 AND SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH32 0x8E4C7F9F8F15C1265E3E67750B71FFE46408A2E14C150704B63101E2DC4AE124 DUP1 SLOAD DUP5 AND PUSH20 0xAE7AB96520DE3A18E5E111B5EAAB095312D7FE84 OR SWAP1 SSTORE PUSH32 0x50BF76CF255373293B554A43AC97E1E70B2DCA69950F42D85074429A1AB62477 DUP1 SLOAD DUP5 AND PUSH20 0xDCEF968D416A41CDAC0ED8702FAC8128A64241A2 OR SWAP1 SSTORE PUSH32 0xBA7C7BD2090C0B49132B3494F1B0BD1C2BD144CB80276A316856F331A3D8EF60 DUP3 SWAP1 SSTORE PUSH32 0x215E56E5EAFBA1958EB24C778E66FF58589728BEABC1BBB5D34BA3310A114801 DUP1 SLOAD DUP5 AND PUSH20 0x853D955ACEF822DB058EB8505911ED77F175B99E SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH32 0xD68BB98672E61AD04960BA7FDD14536F9D4194181582CA7D52233F3E3A77E0B4 DUP1 SLOAD DUP6 AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH32 0x340CE4A8456F78870587AEB8275089E022FADBE52ACE37EC52CDB90EAC37FF9D DUP1 SLOAD DUP5 AND PUSH20 0xD632F22692FAC7611D2AA1C0D552930D43CAED3B OR SWAP1 SSTORE PUSH32 0x6AE3E7F728ADF7BB4FEFAEB091819807B4CABAE4C2C30A14AB4919537CE1E70 SWAP2 SWAP1 SWAP2 SSTORE PUSH32 0x2F563FA6DEDB524451ACD2A600DF0A1BC53DE2143885FE665B0DEA9DDBF7E033 DUP1 SLOAD DUP4 AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x0 MSTORE PUSH32 0xEF09C0AFA8293B6365C94A4CAE7F7D1D0BB0E6799CB71432802535D057CF21B3 PUSH1 0x20 MSTORE PUSH32 0xCD85238F8628312D0889356089E2CF5982CD9F6FF4302B6ECF53A2F2623E62FB DUP1 SLOAD SWAP1 SWAP2 AND PUSH20 0x6C3F90F043A72FA612CBAC8115EE7E52BDE6E490 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x645 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x660 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH3 0x66B DUP6 PUSH3 0x62D JUMP JUMPDEST SWAP4 POP PUSH3 0x67B PUSH1 0x20 DUP7 ADD PUSH3 0x62D JUMP JUMPDEST SWAP3 POP PUSH3 0x68B PUSH1 0x40 DUP7 ADD PUSH3 0x62D JUMP JUMPDEST PUSH1 0x60 SWAP6 SWAP1 SWAP6 ADD MLOAD SWAP4 SWAP7 SWAP3 SWAP6 POP POP POP JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH2 0xCF1 PUSH3 0x6DB PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x28D ADD MSTORE PUSH2 0x3DC ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x3A1 ADD MSTORE PUSH2 0x8D5 ADD MSTORE PUSH2 0xCF1 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x9D23D9F2 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0xB3596F07 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0xE19F4700 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x149 JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x170AEE73 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x1A5FA2E3 EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x6210308C EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x8C89B64F EQ PUSH2 0xF1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0xB1 CALLDATASIZE PUSH1 0x4 PUSH2 0x9FB JUMP JUMPDEST PUSH2 0x15C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB6 PUSH2 0xC6 CALLDATASIZE PUSH1 0x4 PUSH2 0x9FB JUMP JUMPDEST PUSH2 0x1A6 JUMP JUMPDEST PUSH2 0xD3 PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0xAFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB6 PUSH2 0x20C JUMP JUMPDEST PUSH2 0xF9 PUSH2 0x28B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0xC76 JUMP JUMPDEST PUSH2 0xD3 PUSH2 0x2AF JUMP JUMPDEST PUSH2 0x121 PUSH2 0x11C CALLDATASIZE PUSH1 0x4 PUSH2 0xA3A JUMP JUMPDEST PUSH2 0x2BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0xB3B JUMP JUMPDEST PUSH2 0xF9 PUSH2 0x13C CALLDATASIZE PUSH1 0x4 PUSH2 0x9FB JUMP JUMPDEST PUSH2 0x39D JUMP JUMPDEST PUSH2 0xD3 PUSH2 0x8D3 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x157 CALLDATASIZE PUSH1 0x4 PUSH2 0x9FB JUMP JUMPDEST PUSH2 0x8F7 JUMP JUMPDEST PUSH2 0x164 PUSH2 0x9AD JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x19A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x191 SWAP1 PUSH2 0xC0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A3 DUP2 PUSH2 0x9B1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1AE PUSH2 0x9AD JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x191 SWAP1 PUSH2 0xC0A JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x214 PUSH2 0x9AD JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x241 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x191 SWAP1 PUSH2 0xC0A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x312 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x395 JUMPI PUSH2 0x358 DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x343 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x9FB JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x378 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x38D DUP2 PUSH2 0xC7F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x318 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x400 JUMPI POP PUSH32 0x0 PUSH2 0x8CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND DUP1 PUSH2 0x4A8 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB3596F07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xB3596F07 SWAP1 PUSH2 0x450 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0xAFB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x468 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x47C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4A0 SWAP2 SWAP1 PUSH2 0xAA9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4E9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x512 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x7A5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND SWAP1 PUSH20 0x6C3F90F043A72FA612CBAC8115EE7E52BDE6E490 DUP3 EQ ISZERO PUSH2 0x5F2 JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x992ECAE7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5EB SWAP2 SWAP1 PUSH2 0xA1E JUMP JUMPDEST SWAP1 POP PUSH2 0x67B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF139DC81 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x640 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x654 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x678 SWAP2 SWAP1 PUSH2 0xA1E JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x191 SWAP1 PUSH2 0xC3F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB3596F07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xB3596F07 SWAP1 PUSH2 0x6CD SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0xAFB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x71D SWAP2 SWAP1 PUSH2 0xAA9 JUMP JUMPDEST DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x73D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x76B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT PUSH2 0x790 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x191 SWAP1 PUSH2 0xB94 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x79D SWAP1 PUSH2 0xC7F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x518 JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xBA61FE31 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xBA61FE31 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x823 SWAP2 SWAP1 PUSH2 0xA1E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6DCB6A32 DUP7 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x855 SWAP3 SWAP2 SWAP1 PUSH2 0xB0F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x86D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x881 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8A5 SWAP2 SWAP1 PUSH2 0xAA9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x8C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x191 SWAP1 PUSH2 0xBC9 JUMP JUMPDEST SWAP5 POP POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x8FF PUSH2 0x9AD JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x92C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x191 SWAP1 PUSH2 0xC0A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x952 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x191 SWAP1 PUSH2 0xB4E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xCE7A780D33665B1EA097AF5F155E3821B809ECBAA839D3B33AA83BA28168CEFB SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA0C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xA17 DUP2 PUSH2 0xCA6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA2F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xA17 DUP2 PUSH2 0xCA6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA4C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xA63 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xA76 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xA84 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP1 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0xA97 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xABA JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAF0 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xAD4 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xB33 SWAP1 DUP4 ADD DUP5 PUSH2 0xAC1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0xA17 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xAC1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x61617665206F7261636C6520656E636F756E746572656420616E206572726F72 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x4375727665206F7261636C6520656E636F756E746572656420616E206572726F PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x756E6465726C79696E6720746F6B656E206973206E756C6C0000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0xC9F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1A3 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL GT ORIGIN 0x29 MLOAD PUSH28 0x40478ACA787ACC68E64D4851FE3B6A2A8FC75A381F2C6495C5AF6473 PUSH16 0x6C634300080000330000000000000000 ","sourceMap":"1362:9294:13:-:0;;;2805:797;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;873:17:3;893:12;:10;:12::i;:::-;915:6;:18;;-1:-1:-1;;;;;;915:18:3;-1:-1:-1;;;;;915:18:3;;;;;;;948:43;;915:18;;-1:-1:-1;915:18:3;948:43;;915:6;;948:43;-1:-1:-1;3229:18:13;:67;;-1:-1:-1;;;;;;3229:67:13;-1:-1:-1;;;;;3229:67:13;;;;;3306:34;3325:14;3306:18;:34::i;:::-;-1:-1:-1;;;;;;3427:28:13;;;;;;;3465:37;;;;3512:20;:18;:20::i;:::-;3564:12;-1:-1:-1;;;;;3548:47:13;;3578:16;3548:47;;;;;;:::i;:::-;;;;;;;;2805:797;;;;1362:9294;;590:96:1;669:10;590:96;:::o;7536:182:13:-;7607:15;:52;;-1:-1:-1;;;;;;7607:52:13;-1:-1:-1;;;;;7607:52:13;;;;;;;;7674:37;;;;-1:-1:-1;;7674:37:13;7536:182;:::o;3770:3358::-;3840:79;:124;;-1:-1:-1;;;;;;3840:124:13;;;3922:42;3840:124;;;;:13;3987:52;:56;;;4077:84;:129;;;;4164:42;4077:129;;;;;;4248:84;:129;;;;4335:42;4248:129;;;4419:84;:129;;;;4506:42;4419:129;;;;;;4607:79;:124;;;;4689:42;4607:124;;;4741:52;:56;;;;4831:84;:129;;;;4918:42;4831:129;;;5001:84;:129;;;;5088:42;5001:129;;;;;;5172:84;:129;;;;;;;;;;5363:79;:124;;;;5445:42;5363:124;;;4492:1;5497:52;:56;;;5585:84;:129;;;;;;;;;;5756:84;:129;;;;5843:42;5756:129;;;5948:79;:124;;;;6030:42;5948:124;;;6082:52;:56;;;6170:84;:129;;;;6257:42;6170:129;;;;;;6341:84;:129;;;;;;;;;;6532:79;:124;;;;6614:42;6532:124;;;6698:52;:56;;;;6789:84;:129;;;;;;;;;3840:124;:79;6960:84;6789:59;3840:79;6960:84;;:129;;;;;4634:42;6960:129;;;3770:3358::o;14:179:22:-;95:13;;-1:-1:-1;;;;;137:31:22;;127:42;;117:2;;183:1;180;173:12;117:2;76:117;;;:::o;198:456::-;;;;;372:3;360:9;351:7;347:23;343:33;340:2;;;394:6;386;379:22;340:2;422:42;454:9;422:42;:::i;:::-;412:52;;483:51;530:2;519:9;515:18;483:51;:::i;:::-;473:61;;553:51;600:2;589:9;585:18;553:51;:::i;:::-;644:2;629:18;;;;623:25;330:324;;;;-1:-1:-1;;;330:324:22:o;659:177::-;805:25;;;793:2;778:18;;760:76::o;:::-;1362:9294:13;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5155:22","statements":[{"nodeType":"YulBlock","src":"6:3:22","statements":[]},{"body":{"nodeType":"YulBlock","src":"84:189:22","statements":[{"body":{"nodeType":"YulBlock","src":"130:26:22","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"139:6:22"},{"name":"value0","nodeType":"YulIdentifier","src":"147:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"132:6:22"},"nodeType":"YulFunctionCall","src":"132:22:22"},"nodeType":"YulExpressionStatement","src":"132:22:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"105:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"114:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"101:3:22"},"nodeType":"YulFunctionCall","src":"101:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"126:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"97:3:22"},"nodeType":"YulFunctionCall","src":"97:32:22"},"nodeType":"YulIf","src":"94:2:22"},{"nodeType":"YulVariableDeclaration","src":"165:36:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"191:9:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"178:12:22"},"nodeType":"YulFunctionCall","src":"178:23:22"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"169:5:22","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"237:5:22"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"210:26:22"},"nodeType":"YulFunctionCall","src":"210:33:22"},"nodeType":"YulExpressionStatement","src":"210:33:22"},{"nodeType":"YulAssignment","src":"252:15:22","value":{"name":"value","nodeType":"YulIdentifier","src":"262:5:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"252:6:22"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"50:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"61:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"73:6:22","type":""}],"src":"14:259:22"},{"body":{"nodeType":"YulBlock","src":"359:182:22","statements":[{"body":{"nodeType":"YulBlock","src":"405:26:22","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"414:6:22"},{"name":"value0","nodeType":"YulIdentifier","src":"422:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"407:6:22"},"nodeType":"YulFunctionCall","src":"407:22:22"},"nodeType":"YulExpressionStatement","src":"407:22:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"380:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"389:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"376:3:22"},"nodeType":"YulFunctionCall","src":"376:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"401:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"372:3:22"},"nodeType":"YulFunctionCall","src":"372:32:22"},"nodeType":"YulIf","src":"369:2:22"},{"nodeType":"YulVariableDeclaration","src":"440:29:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"459:9:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"453:5:22"},"nodeType":"YulFunctionCall","src":"453:16:22"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"444:5:22","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"505:5:22"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"478:26:22"},"nodeType":"YulFunctionCall","src":"478:33:22"},"nodeType":"YulExpressionStatement","src":"478:33:22"},{"nodeType":"YulAssignment","src":"520:15:22","value":{"name":"value","nodeType":"YulIdentifier","src":"530:5:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"520:6:22"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"325:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"336:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"348:6:22","type":""}],"src":"278:263:22"},{"body":{"nodeType":"YulBlock","src":"651:561:22","statements":[{"body":{"nodeType":"YulBlock","src":"697:26:22","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"706:6:22"},{"name":"value1","nodeType":"YulIdentifier","src":"714:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"699:6:22"},"nodeType":"YulFunctionCall","src":"699:22:22"},"nodeType":"YulExpressionStatement","src":"699:22:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"672:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"681:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"668:3:22"},"nodeType":"YulFunctionCall","src":"668:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"693:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"664:3:22"},"nodeType":"YulFunctionCall","src":"664:32:22"},"nodeType":"YulIf","src":"661:2:22"},{"nodeType":"YulVariableDeclaration","src":"732:37:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"759:9:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"746:12:22"},"nodeType":"YulFunctionCall","src":"746:23:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"736:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"778:28:22","value":{"kind":"number","nodeType":"YulLiteral","src":"788:18:22","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"782:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"833:26:22","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"842:6:22"},{"name":"value1","nodeType":"YulIdentifier","src":"850:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"835:6:22"},"nodeType":"YulFunctionCall","src":"835:22:22"},"nodeType":"YulExpressionStatement","src":"835:22:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"821:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"829:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"818:2:22"},"nodeType":"YulFunctionCall","src":"818:14:22"},"nodeType":"YulIf","src":"815:2:22"},{"nodeType":"YulVariableDeclaration","src":"868:32:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"882:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"893:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"878:3:22"},"nodeType":"YulFunctionCall","src":"878:22:22"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"872:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"948:26:22","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"957:6:22"},{"name":"value1","nodeType":"YulIdentifier","src":"965:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"950:6:22"},"nodeType":"YulFunctionCall","src":"950:22:22"},"nodeType":"YulExpressionStatement","src":"950:22:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"927:2:22"},{"kind":"number","nodeType":"YulLiteral","src":"931:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"923:3:22"},"nodeType":"YulFunctionCall","src":"923:13:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"938:7:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"919:3:22"},"nodeType":"YulFunctionCall","src":"919:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"912:6:22"},"nodeType":"YulFunctionCall","src":"912:35:22"},"nodeType":"YulIf","src":"909:2:22"},{"nodeType":"YulVariableDeclaration","src":"983:30:22","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1010:2:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"997:12:22"},"nodeType":"YulFunctionCall","src":"997:16:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"987:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"1040:26:22","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1049:6:22"},{"name":"value1","nodeType":"YulIdentifier","src":"1057:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1042:6:22"},"nodeType":"YulFunctionCall","src":"1042:22:22"},"nodeType":"YulExpressionStatement","src":"1042:22:22"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1028:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"1036:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1025:2:22"},"nodeType":"YulFunctionCall","src":"1025:14:22"},"nodeType":"YulIf","src":"1022:2:22"},{"body":{"nodeType":"YulBlock","src":"1125:26:22","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1134:6:22"},{"name":"value1","nodeType":"YulIdentifier","src":"1142:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1127:6:22"},"nodeType":"YulFunctionCall","src":"1127:22:22"},"nodeType":"YulExpressionStatement","src":"1127:22:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1089:2:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1097:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"1105:2:22","type":"","value":"32"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1093:3:22"},"nodeType":"YulFunctionCall","src":"1093:15:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1085:3:22"},"nodeType":"YulFunctionCall","src":"1085:24:22"},{"kind":"number","nodeType":"YulLiteral","src":"1111:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1081:3:22"},"nodeType":"YulFunctionCall","src":"1081:33:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1116:7:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1078:2:22"},"nodeType":"YulFunctionCall","src":"1078:46:22"},"nodeType":"YulIf","src":"1075:2:22"},{"nodeType":"YulAssignment","src":"1160:21:22","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1174:2:22"},{"kind":"number","nodeType":"YulLiteral","src":"1178:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1170:3:22"},"nodeType":"YulFunctionCall","src":"1170:11:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1160:6:22"}]},{"nodeType":"YulAssignment","src":"1190:16:22","value":{"name":"length","nodeType":"YulIdentifier","src":"1200:6:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1190:6:22"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"609:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"620:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"632:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"640:6:22","type":""}],"src":"546:666:22"},{"body":{"nodeType":"YulBlock","src":"1298:113:22","statements":[{"body":{"nodeType":"YulBlock","src":"1344:26:22","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1353:6:22"},{"name":"value0","nodeType":"YulIdentifier","src":"1361:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1346:6:22"},"nodeType":"YulFunctionCall","src":"1346:22:22"},"nodeType":"YulExpressionStatement","src":"1346:22:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1319:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"1328:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1315:3:22"},"nodeType":"YulFunctionCall","src":"1315:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"1340:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1311:3:22"},"nodeType":"YulFunctionCall","src":"1311:32:22"},"nodeType":"YulIf","src":"1308:2:22"},{"nodeType":"YulAssignment","src":"1379:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1395:9:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1389:5:22"},"nodeType":"YulFunctionCall","src":"1389:16:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1379:6:22"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1264:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1275:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1287:6:22","type":""}],"src":"1217:194:22"},{"body":{"nodeType":"YulBlock","src":"1483:376:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1493:26:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1513:5:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1507:5:22"},"nodeType":"YulFunctionCall","src":"1507:12:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1497:6:22","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1535:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"1540:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1528:6:22"},"nodeType":"YulFunctionCall","src":"1528:19:22"},"nodeType":"YulExpressionStatement","src":"1528:19:22"},{"nodeType":"YulVariableDeclaration","src":"1556:14:22","value":{"kind":"number","nodeType":"YulLiteral","src":"1566:4:22","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1560:2:22","type":""}]},{"nodeType":"YulAssignment","src":"1579:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1590:3:22"},{"name":"_1","nodeType":"YulIdentifier","src":"1595:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1586:3:22"},"nodeType":"YulFunctionCall","src":"1586:12:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1579:3:22"}]},{"nodeType":"YulVariableDeclaration","src":"1607:28:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1625:5:22"},{"name":"_1","nodeType":"YulIdentifier","src":"1632:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1621:3:22"},"nodeType":"YulFunctionCall","src":"1621:14:22"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"1611:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1644:12:22","value":{"name":"end","nodeType":"YulIdentifier","src":"1653:3:22"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1648:1:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"1714:120:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1735:3:22"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"1746:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1740:5:22"},"nodeType":"YulFunctionCall","src":"1740:13:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1728:6:22"},"nodeType":"YulFunctionCall","src":"1728:26:22"},"nodeType":"YulExpressionStatement","src":"1728:26:22"},{"nodeType":"YulAssignment","src":"1767:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1778:3:22"},{"name":"_1","nodeType":"YulIdentifier","src":"1783:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1774:3:22"},"nodeType":"YulFunctionCall","src":"1774:12:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1767:3:22"}]},{"nodeType":"YulAssignment","src":"1799:25:22","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"1813:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"1821:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1809:3:22"},"nodeType":"YulFunctionCall","src":"1809:15:22"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"1799:6:22"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1676:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"1679:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1673:2:22"},"nodeType":"YulFunctionCall","src":"1673:13:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1687:18:22","statements":[{"nodeType":"YulAssignment","src":"1689:14:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1698:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"1701:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1694:3:22"},"nodeType":"YulFunctionCall","src":"1694:9:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1689:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"1669:3:22","statements":[]},"src":"1665:169:22"},{"nodeType":"YulAssignment","src":"1843:10:22","value":{"name":"pos","nodeType":"YulIdentifier","src":"1850:3:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1843:3:22"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1460:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1467:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1475:3:22","type":""}],"src":"1416:443:22"},{"body":{"nodeType":"YulBlock","src":"1965:102:22","statements":[{"nodeType":"YulAssignment","src":"1975:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1987:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1998:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1983:3:22"},"nodeType":"YulFunctionCall","src":"1983:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1975:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2017:9:22"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2032:6:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2048:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2053:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2044:3:22"},"nodeType":"YulFunctionCall","src":"2044:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"2057:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2040:3:22"},"nodeType":"YulFunctionCall","src":"2040:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2028:3:22"},"nodeType":"YulFunctionCall","src":"2028:32:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2010:6:22"},"nodeType":"YulFunctionCall","src":"2010:51:22"},"nodeType":"YulExpressionStatement","src":"2010:51:22"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1934:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1945:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1956:4:22","type":""}],"src":"1864:203:22"},{"body":{"nodeType":"YulBlock","src":"2251:185:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2268:9:22"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2283:6:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2299:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2304:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2295:3:22"},"nodeType":"YulFunctionCall","src":"2295:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"2308:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2291:3:22"},"nodeType":"YulFunctionCall","src":"2291:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2279:3:22"},"nodeType":"YulFunctionCall","src":"2279:32:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2261:6:22"},"nodeType":"YulFunctionCall","src":"2261:51:22"},"nodeType":"YulExpressionStatement","src":"2261:51:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2332:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2343:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2328:3:22"},"nodeType":"YulFunctionCall","src":"2328:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"2348:2:22","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2321:6:22"},"nodeType":"YulFunctionCall","src":"2321:30:22"},"nodeType":"YulExpressionStatement","src":"2321:30:22"},{"nodeType":"YulAssignment","src":"2360:70:22","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2403:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2415:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2426:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2411:3:22"},"nodeType":"YulFunctionCall","src":"2411:18:22"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn","nodeType":"YulIdentifier","src":"2368:34:22"},"nodeType":"YulFunctionCall","src":"2368:62:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2360:4:22"}]}]},"name":"abi_encode_tuple_t_address_t_array$_t_uint256_$dyn_memory_ptr__to_t_address_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2212:9:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2223:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2231:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2242:4:22","type":""}],"src":"2072:364:22"},{"body":{"nodeType":"YulBlock","src":"2592:116:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2609:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2620:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2602:6:22"},"nodeType":"YulFunctionCall","src":"2602:21:22"},"nodeType":"YulExpressionStatement","src":"2602:21:22"},{"nodeType":"YulAssignment","src":"2632:70:22","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2675:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2687:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2698:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2683:3:22"},"nodeType":"YulFunctionCall","src":"2683:18:22"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn","nodeType":"YulIdentifier","src":"2640:34:22"},"nodeType":"YulFunctionCall","src":"2640:62:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2632:4:22"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2561:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2572:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2583:4:22","type":""}],"src":"2441:267:22"},{"body":{"nodeType":"YulBlock","src":"2887:228:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2904:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2915:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2897:6:22"},"nodeType":"YulFunctionCall","src":"2897:21:22"},"nodeType":"YulExpressionStatement","src":"2897:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2938:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2949:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2934:3:22"},"nodeType":"YulFunctionCall","src":"2934:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"2954:2:22","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2927:6:22"},"nodeType":"YulFunctionCall","src":"2927:30:22"},"nodeType":"YulExpressionStatement","src":"2927:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2977:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2988:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2973:3:22"},"nodeType":"YulFunctionCall","src":"2973:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"2993:34:22","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2966:6:22"},"nodeType":"YulFunctionCall","src":"2966:62:22"},"nodeType":"YulExpressionStatement","src":"2966:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3048:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3059:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3044:3:22"},"nodeType":"YulFunctionCall","src":"3044:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"3064:8:22","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3037:6:22"},"nodeType":"YulFunctionCall","src":"3037:36:22"},"nodeType":"YulExpressionStatement","src":"3037:36:22"},{"nodeType":"YulAssignment","src":"3082:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3094:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3105:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3090:3:22"},"nodeType":"YulFunctionCall","src":"3090:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3082:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2864:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2878:4:22","type":""}],"src":"2713:402:22"},{"body":{"nodeType":"YulBlock","src":"3294:182:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3311:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3322:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3304:6:22"},"nodeType":"YulFunctionCall","src":"3304:21:22"},"nodeType":"YulExpressionStatement","src":"3304:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3345:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3356:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3341:3:22"},"nodeType":"YulFunctionCall","src":"3341:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"3361:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3334:6:22"},"nodeType":"YulFunctionCall","src":"3334:30:22"},"nodeType":"YulExpressionStatement","src":"3334:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3384:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3395:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3380:3:22"},"nodeType":"YulFunctionCall","src":"3380:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"3400:34:22","type":"","value":"aave oracle encountered an error"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3373:6:22"},"nodeType":"YulFunctionCall","src":"3373:62:22"},"nodeType":"YulExpressionStatement","src":"3373:62:22"},{"nodeType":"YulAssignment","src":"3444:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3456:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3467:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3452:3:22"},"nodeType":"YulFunctionCall","src":"3452:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3444:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_49a2bac861dd4380d6fd0d823ee0721ff11ba3d1e715eb7ddae8f9170b277ab1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3271:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3285:4:22","type":""}],"src":"3120:356:22"},{"body":{"nodeType":"YulBlock","src":"3655:223:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3672:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3683:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3665:6:22"},"nodeType":"YulFunctionCall","src":"3665:21:22"},"nodeType":"YulExpressionStatement","src":"3665:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3706:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3717:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3702:3:22"},"nodeType":"YulFunctionCall","src":"3702:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"3722:2:22","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3695:6:22"},"nodeType":"YulFunctionCall","src":"3695:30:22"},"nodeType":"YulExpressionStatement","src":"3695:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3745:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3756:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3741:3:22"},"nodeType":"YulFunctionCall","src":"3741:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"3761:34:22","type":"","value":"Curve oracle encountered an erro"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3734:6:22"},"nodeType":"YulFunctionCall","src":"3734:62:22"},"nodeType":"YulExpressionStatement","src":"3734:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3816:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3827:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3812:3:22"},"nodeType":"YulFunctionCall","src":"3812:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"3832:3:22","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3805:6:22"},"nodeType":"YulFunctionCall","src":"3805:31:22"},"nodeType":"YulExpressionStatement","src":"3805:31:22"},{"nodeType":"YulAssignment","src":"3845:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3857:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3868:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3853:3:22"},"nodeType":"YulFunctionCall","src":"3853:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3845:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_8f9e5358d341b51c97b2a3f93978ab3e848c05bfd7a5c6e7622242ad80967edf__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3632:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3646:4:22","type":""}],"src":"3481:397:22"},{"body":{"nodeType":"YulBlock","src":"4057:182:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4074:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4085:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4067:6:22"},"nodeType":"YulFunctionCall","src":"4067:21:22"},"nodeType":"YulExpressionStatement","src":"4067:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4108:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4119:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4104:3:22"},"nodeType":"YulFunctionCall","src":"4104:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"4124:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4097:6:22"},"nodeType":"YulFunctionCall","src":"4097:30:22"},"nodeType":"YulExpressionStatement","src":"4097:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4147:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4158:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4143:3:22"},"nodeType":"YulFunctionCall","src":"4143:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"4163:34:22","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4136:6:22"},"nodeType":"YulFunctionCall","src":"4136:62:22"},"nodeType":"YulExpressionStatement","src":"4136:62:22"},{"nodeType":"YulAssignment","src":"4207:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4219:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4230:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4215:3:22"},"nodeType":"YulFunctionCall","src":"4215:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4207:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4034:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4048:4:22","type":""}],"src":"3883:356:22"},{"body":{"nodeType":"YulBlock","src":"4418:174:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4435:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4446:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4428:6:22"},"nodeType":"YulFunctionCall","src":"4428:21:22"},"nodeType":"YulExpressionStatement","src":"4428:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4469:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4480:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4465:3:22"},"nodeType":"YulFunctionCall","src":"4465:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"4485:2:22","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4458:6:22"},"nodeType":"YulFunctionCall","src":"4458:30:22"},"nodeType":"YulExpressionStatement","src":"4458:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4508:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4519:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4504:3:22"},"nodeType":"YulFunctionCall","src":"4504:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"4524:26:22","type":"","value":"underlying token is null"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4497:6:22"},"nodeType":"YulFunctionCall","src":"4497:54:22"},"nodeType":"YulExpressionStatement","src":"4497:54:22"},{"nodeType":"YulAssignment","src":"4560:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4572:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4583:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4568:3:22"},"nodeType":"YulFunctionCall","src":"4568:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4560:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_b4e8d318e521cf88468394cc0c9b8c9007ea07e1e8e63b993c5168c9f567f309__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4395:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4409:4:22","type":""}],"src":"4244:348:22"},{"body":{"nodeType":"YulBlock","src":"4698:76:22","statements":[{"nodeType":"YulAssignment","src":"4708:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4720:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4731:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4716:3:22"},"nodeType":"YulFunctionCall","src":"4716:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4708:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4750:9:22"},{"name":"value0","nodeType":"YulIdentifier","src":"4761:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4743:6:22"},"nodeType":"YulFunctionCall","src":"4743:25:22"},"nodeType":"YulExpressionStatement","src":"4743:25:22"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4667:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4678:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4689:4:22","type":""}],"src":"4597:177:22"},{"body":{"nodeType":"YulBlock","src":"4826:189:22","statements":[{"body":{"nodeType":"YulBlock","src":"4865:115:22","statements":[{"expression":{"arguments":[{"name":"ret","nodeType":"YulIdentifier","src":"4886:3:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4895:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4900:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4891:3:22"},"nodeType":"YulFunctionCall","src":"4891:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4879:6:22"},"nodeType":"YulFunctionCall","src":"4879:33:22"},"nodeType":"YulExpressionStatement","src":"4879:33:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4932:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4935:4:22","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4925:6:22"},"nodeType":"YulFunctionCall","src":"4925:15:22"},"nodeType":"YulExpressionStatement","src":"4925:15:22"},{"expression":{"arguments":[{"name":"ret","nodeType":"YulIdentifier","src":"4960:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"4965:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4953:6:22"},"nodeType":"YulFunctionCall","src":"4953:17:22"},"nodeType":"YulExpressionStatement","src":"4953:17:22"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4842:5:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4853:1:22","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4849:3:22"},"nodeType":"YulFunctionCall","src":"4849:6:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4839:2:22"},"nodeType":"YulFunctionCall","src":"4839:17:22"},"nodeType":"YulIf","src":"4836:2:22"},{"nodeType":"YulAssignment","src":"4989:20:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5000:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"5007:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4996:3:22"},"nodeType":"YulFunctionCall","src":"4996:13:22"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"4989:3:22"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4808:5:22","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"4818:3:22","type":""}],"src":"4779:236:22"},{"body":{"nodeType":"YulBlock","src":"5067:86:22","statements":[{"body":{"nodeType":"YulBlock","src":"5131:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5140:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5143:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5133:6:22"},"nodeType":"YulFunctionCall","src":"5133:12:22"},"nodeType":"YulExpressionStatement","src":"5133:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5090:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5101:5:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5116:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5121:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5112:3:22"},"nodeType":"YulFunctionCall","src":"5112:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"5125:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5108:3:22"},"nodeType":"YulFunctionCall","src":"5108:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5097:3:22"},"nodeType":"YulFunctionCall","src":"5097:31:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5087:2:22"},"nodeType":"YulFunctionCall","src":"5087:42:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5080:6:22"},"nodeType":"YulFunctionCall","src":"5080:50:22"},"nodeType":"YulIf","src":"5077:2:22"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5056:5:22","type":""}],"src":"5020:133:22"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value1, value1) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value1, value1) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value1, value1) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(value1, value1) }\n        if gt(add(add(_2, mul(length, 32)), 32), dataEnd) { revert(value1, value1) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_t_array$_t_uint256_$dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := end\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_array$_t_uint256_$dyn_memory_ptr__to_t_address_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_t_array$_t_uint256_$dyn(value1, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_t_array$_t_uint256_$dyn(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_49a2bac861dd4380d6fd0d823ee0721ff11ba3d1e715eb7ddae8f9170b277ab1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"aave oracle encountered an error\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8f9e5358d341b51c97b2a3f93978ab3e848c05bfd7a5c6e7622242ad80967edf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Curve oracle encountered an erro\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b4e8d318e521cf88468394cc0c9b8c9007ea07e1e8e63b993c5168c9f567f309__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"underlying token is null\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(ret, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(ret, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}","id":22,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"1615":[{"length":32,"start":929},{"length":32,"start":2261}],"1617":[{"length":32,"start":653},{"length":32,"start":988}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b146101065780639d23d9f21461010e578063b3596f071461012e578063e19f470014610141578063f2fde38b146101495761009e565b8063170aee73146100a35780631a5fa2e3146100b85780636210308c146100cb578063715018a6146100e95780638c89b64f146100f1575b600080fd5b6100b66100b13660046109fb565b61015c565b005b6100b66100c63660046109fb565b6101a6565b6100d36101fd565b6040516100e09190610afb565b60405180910390f35b6100b661020c565b6100f961028b565b6040516100e09190610c76565b6100d36102af565b61012161011c366004610a3a565b6102be565b6040516100e09190610b3b565b6100f961013c3660046109fb565b61039d565b6100d36108d3565b6100b66101573660046109fb565b6108f7565b6101646109ad565b6000546001600160a01b0390811691161461019a5760405162461bcd60e51b815260040161019190610c0a565b60405180910390fd5b6101a3816109b1565b50565b6101ae6109ad565b6000546001600160a01b039081169116146101db5760405162461bcd60e51b815260040161019190610c0a565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6002546001600160a01b031690565b6102146109ad565b6000546001600160a01b039081169116146102415760405162461bcd60e51b815260040161019190610c0a565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b031690565b606060008267ffffffffffffffff8111156102e957634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610312578160200160208202803683370190505b50905060005b838110156103955761035885858381811061034357634e487b7160e01b600052603260045260246000fd5b905060200201602081019061013c91906109fb565b82828151811061037857634e487b7160e01b600052603260045260246000fd5b60209081029190910101528061038d81610c7f565b915050610318565b509392505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316141561040057507f00000000000000000000000000000000000000000000000000000000000000006108ce565b6001600160a01b0380831660009081526003602052604090205416806104a85760025460405163b3596f0760e01b81526001600160a01b039091169063b3596f0790610450908690600401610afb565b60206040518083038186803b15801561046857600080fd5b505afa15801561047c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a09190610aa9565b9150506108ce565b6001600160a01b038116600090815260046020526040812054908167ffffffffffffffff8111156104e957634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610512578160200160208202803683370190505b50905060005b828110156107a5576001600160a01b03808516600090815260056020908152604080832085845290915281205490911690736c3f90f043a72fa612cbac8115ee7e52bde6e4908214156105f257600160009054906101000a90046001600160a01b03166001600160a01b031663992ecae76040518163ffffffff1660e01b815260040160206040518083038186803b1580156105b357600080fd5b505afa1580156105c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105eb9190610a1e565b905061067b565b600160009054906101000a90046001600160a01b03166001600160a01b031663f139dc816040518163ffffffff1660e01b815260040160206040518083038186803b15801561064057600080fd5b505afa158015610654573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106789190610a1e565b90505b6001600160a01b0382166106a15760405162461bcd60e51b815260040161019190610c3f565b60405163b3596f0760e01b81526001600160a01b0382169063b3596f07906106cd908590600401610afb565b60206040518083038186803b1580156106e557600080fd5b505afa1580156106f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071d9190610aa9565b84848151811061073d57634e487b7160e01b600052603260045260246000fd5b602002602001018181525050600084848151811061076b57634e487b7160e01b600052603260045260246000fd5b6020026020010151116107905760405162461bcd60e51b815260040161019190610b94565b5050808061079d90610c7f565b915050610518565b506001546040805163ba61fe3160e01b815290516000926001600160a01b03169163ba61fe31916004808301926020929190829003018186803b1580156107eb57600080fd5b505afa1580156107ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108239190610a1e565b90506000816001600160a01b0316636dcb6a3286856040518363ffffffff1660e01b8152600401610855929190610b0f565b60206040518083038186803b15801561086d57600080fd5b505afa158015610881573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a59190610aa9565b9050600081116108c75760405162461bcd60e51b815260040161019190610bc9565b9450505050505b919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6108ff6109ad565b6000546001600160a01b0390811691161461092c5760405162461bcd60e51b815260040161019190610c0a565b6001600160a01b0381166109525760405162461bcd60e51b815260040161019190610b4e565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b600280546001600160a01b0319166001600160a01b0383169081179091556040517fce7a780d33665b1ea097af5f155e3821b809ecbaa839d3b33aa83ba28168cefb90600090a250565b600060208284031215610a0c578081fd5b8135610a1781610ca6565b9392505050565b600060208284031215610a2f578081fd5b8151610a1781610ca6565b60008060208385031215610a4c578081fd5b823567ffffffffffffffff80821115610a63578283fd5b818501915085601f830112610a76578283fd5b813581811115610a84578384fd5b8660208083028501011115610a97578384fd5b60209290920196919550909350505050565b600060208284031215610aba578081fd5b5051919050565b6000815180845260208085019450808401835b83811015610af057815187529582019590820190600101610ad4565b509495945050505050565b6001600160a01b0391909116815260200190565b6001600160a01b0383168152604060208201819052600090610b3390830184610ac1565b949350505050565b600060208252610a176020830184610ac1565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f61617665206f7261636c6520656e636f756e746572656420616e206572726f72604082015260600190565b60208082526021908201527f4375727665206f7261636c6520656e636f756e746572656420616e206572726f6040820152603960f91b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526018908201527f756e6465726c79696e6720746f6b656e206973206e756c6c0000000000000000604082015260600190565b90815260200190565b6000600019821415610c9f57634e487b7160e01b81526011600452602481fd5b5060010190565b6001600160a01b03811681146101a357600080fdfea2646970667358221220f1113229517b40478aca787acc68e64d4851fe3b6a2a8fc75a381f2c6495c5af64736f6c63430008000033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x9D23D9F2 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0xB3596F07 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0xE19F4700 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x149 JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x170AEE73 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x1A5FA2E3 EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x6210308C EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x8C89B64F EQ PUSH2 0xF1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0xB1 CALLDATASIZE PUSH1 0x4 PUSH2 0x9FB JUMP JUMPDEST PUSH2 0x15C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB6 PUSH2 0xC6 CALLDATASIZE PUSH1 0x4 PUSH2 0x9FB JUMP JUMPDEST PUSH2 0x1A6 JUMP JUMPDEST PUSH2 0xD3 PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0xAFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB6 PUSH2 0x20C JUMP JUMPDEST PUSH2 0xF9 PUSH2 0x28B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0xC76 JUMP JUMPDEST PUSH2 0xD3 PUSH2 0x2AF JUMP JUMPDEST PUSH2 0x121 PUSH2 0x11C CALLDATASIZE PUSH1 0x4 PUSH2 0xA3A JUMP JUMPDEST PUSH2 0x2BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0xB3B JUMP JUMPDEST PUSH2 0xF9 PUSH2 0x13C CALLDATASIZE PUSH1 0x4 PUSH2 0x9FB JUMP JUMPDEST PUSH2 0x39D JUMP JUMPDEST PUSH2 0xD3 PUSH2 0x8D3 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x157 CALLDATASIZE PUSH1 0x4 PUSH2 0x9FB JUMP JUMPDEST PUSH2 0x8F7 JUMP JUMPDEST PUSH2 0x164 PUSH2 0x9AD JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x19A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x191 SWAP1 PUSH2 0xC0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A3 DUP2 PUSH2 0x9B1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1AE PUSH2 0x9AD JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x191 SWAP1 PUSH2 0xC0A JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x214 PUSH2 0x9AD JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x241 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x191 SWAP1 PUSH2 0xC0A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x312 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x395 JUMPI PUSH2 0x358 DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x343 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x9FB JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x378 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x38D DUP2 PUSH2 0xC7F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x318 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x400 JUMPI POP PUSH32 0x0 PUSH2 0x8CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND DUP1 PUSH2 0x4A8 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB3596F07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xB3596F07 SWAP1 PUSH2 0x450 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0xAFB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x468 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x47C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4A0 SWAP2 SWAP1 PUSH2 0xAA9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4E9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x512 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x7A5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND SWAP1 PUSH20 0x6C3F90F043A72FA612CBAC8115EE7E52BDE6E490 DUP3 EQ ISZERO PUSH2 0x5F2 JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x992ECAE7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5EB SWAP2 SWAP1 PUSH2 0xA1E JUMP JUMPDEST SWAP1 POP PUSH2 0x67B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF139DC81 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x640 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x654 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x678 SWAP2 SWAP1 PUSH2 0xA1E JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x191 SWAP1 PUSH2 0xC3F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB3596F07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xB3596F07 SWAP1 PUSH2 0x6CD SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0xAFB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x71D SWAP2 SWAP1 PUSH2 0xAA9 JUMP JUMPDEST DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x73D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x76B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT PUSH2 0x790 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x191 SWAP1 PUSH2 0xB94 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x79D SWAP1 PUSH2 0xC7F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x518 JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xBA61FE31 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xBA61FE31 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x823 SWAP2 SWAP1 PUSH2 0xA1E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6DCB6A32 DUP7 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x855 SWAP3 SWAP2 SWAP1 PUSH2 0xB0F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x86D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x881 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8A5 SWAP2 SWAP1 PUSH2 0xAA9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x8C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x191 SWAP1 PUSH2 0xBC9 JUMP JUMPDEST SWAP5 POP POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x8FF PUSH2 0x9AD JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x92C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x191 SWAP1 PUSH2 0xC0A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x952 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x191 SWAP1 PUSH2 0xB4E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xCE7A780D33665B1EA097AF5F155E3821B809ECBAA839D3B33AA83BA28168CEFB SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA0C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xA17 DUP2 PUSH2 0xCA6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA2F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xA17 DUP2 PUSH2 0xCA6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA4C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xA63 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xA76 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xA84 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP1 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0xA97 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xABA JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAF0 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xAD4 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xB33 SWAP1 DUP4 ADD DUP5 PUSH2 0xAC1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0xA17 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xAC1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x61617665206F7261636C6520656E636F756E746572656420616E206572726F72 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x4375727665206F7261636C6520656E636F756E746572656420616E206572726F PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x756E6465726C79696E6720746F6B656E206973206E756C6C0000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0xC9F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1A3 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL GT ORIGIN 0x29 MLOAD PUSH28 0x40478ACA787ACC68E64D4851FE3B6A2A8FC75A381F2C6495C5AF6473 PUSH16 0x6C634300080000330000000000000000 ","sourceMap":"1362:9294:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7285:121;;;;;;:::i;:::-;;:::i;:::-;;3608:156;;;;;;:::i;:::-;;:::i;10545:109::-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1697:145:3;;;:::i;2005:43:13:-;;;:::i;:::-;;;;;;;:::i;1074:77:3:-;;;:::i;10096:329:13:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;7810:2159::-;;;;;;:::i;:::-;;:::i;1961:38::-;;;:::i;1991:274:3:-;;;;;;:::i;:::-;;:::i;7285:121:13:-;1288:12:3;:10;:12::i;:::-;1278:6;;-1:-1:-1;;;;;1278:6:3;;;:22;;;1270:67;;;;-1:-1:-1;;;1270:67:3;;;;;;;:::i;:::-;;;;;;;;;7365:34:13::1;7384:14;7365:18;:34::i;:::-;7285:121:::0;:::o;3608:156::-;1288:12:3;:10;:12::i;:::-;1278:6;;-1:-1:-1;;;;;1278:6:3;;;:22;;;1270:67;;;;-1:-1:-1;;;1270:67:3;;;;;;;:::i;:::-;3690:18:13::1;:67:::0;;-1:-1:-1;;;;;;3690:67:13::1;-1:-1:-1::0;;;;;3690:67:13;;;::::1;::::0;;;::::1;::::0;;3608:156::o;10545:109::-;10631:15;;-1:-1:-1;;;;;10631:15:13;10545:109;:::o;1697:145:3:-;1288:12;:10;:12::i;:::-;1278:6;;-1:-1:-1;;;;;1278:6:3;;;:22;;;1270:67;;;;-1:-1:-1;;;1270:67:3;;;;;;;:::i;:::-;1803:1:::1;1787:6:::0;;1766:40:::1;::::0;-1:-1:-1;;;;;1787:6:3;;::::1;::::0;1766:40:::1;::::0;1803:1;;1766:40:::1;1833:1;1816:19:::0;;-1:-1:-1;;;;;;1816:19:3::1;::::0;;1697:145::o;2005:43:13:-;;;:::o;1074:77:3:-;1112:7;1138:6;-1:-1:-1;;;;;1138:6:3;1074:77;:::o;10096:329:13:-;10195:16;10227:23;10267:6;10253:28;;;;;;-1:-1:-1;;;10253:28:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10253:28:13;;10227:54;;10296:9;10291:105;10311:17;;;10291:105;;;10361:24;10375:6;;10382:1;10375:9;;;;;-1:-1:-1;;;10375:9:13;;;;;;;;;;;;;;;;;;;;;;:::i;10361:24::-;10349:6;10356:1;10349:9;;;;;;-1:-1:-1;;;10349:9:13;;;;;;;;;;;;;;;;;;:36;10330:3;;;;:::i;:::-;;;;10291:105;;;-1:-1:-1;10412:6:13;10096:329;-1:-1:-1;;;10096:329:13:o;7810:2159::-;7947:7;7979:13;-1:-1:-1;;;;;7970:22:13;:5;-1:-1:-1;;;;;7970:22:13;;7966:78;;;-1:-1:-1;8015:18:13;8008:25;;7966:78;-1:-1:-1;;;;;8437:20:13;;;8422:12;8437:20;;;:13;:20;;;;;;;8496:18;8492:92;;8537:15;;:36;;-1:-1:-1;;;8537:36:13;;-1:-1:-1;;;;;8537:15:13;;;;:29;;:36;;8567:5;;8537:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8530:43;;;;;8492:92;-1:-1:-1;;;;;8719:14:13;;8699:17;8719:14;;;:8;:14;;;;;;;;8770:24;;;;;;-1:-1:-1;;;8770:24:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8770:24:13;;8744:50;;8810:9;8805:856;8829:9;8825:1;:13;8805:856;;;-1:-1:-1;;;;;8880:21:13;;;8859:18;8880:21;;;:15;:21;;;;;;;;:24;;;;;;;;;;;;;8980:42;8966:56;;8962:478;;;9210:18;;;;;;;;;-1:-1:-1;;;;;9210:18:13;-1:-1:-1;;;;;9210:45:13;;:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9156:119;;8962:478;;;9368:18;;;;;;;;;-1:-1:-1;;;;;9368:18:13;-1:-1:-1;;;;;9368:37:13;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9314:111;;8962:478;-1:-1:-1;;;;;9462:24:13;;9454:61;;;;-1:-1:-1;;;9454:61:13;;;;;;;:::i;:::-;9541:37;;-1:-1:-1;;;9541:37:13;;-1:-1:-1;;;;;9541:25:13;;;;;:37;;9567:10;;9541:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9529:6;9536:1;9529:9;;;;;;-1:-1:-1;;;9529:9:13;;;;;;;;;;;;;;:49;;;;;9612:1;9600:6;9607:1;9600:9;;;;;;-1:-1:-1;;;9600:9:13;;;;;;;;;;;;;;;:13;9592:58;;;;-1:-1:-1;;;9592:58:13;;;;;;;:::i;:::-;8805:856;;8840:3;;;;;:::i;:::-;;;;8805:856;;;-1:-1:-1;9719:18:13;;:40;;;-1:-1:-1;;;9719:40:13;;;;9671:19;;-1:-1:-1;;;;;9719:18:13;;:38;;:40;;;;;;;;;;;;;;:18;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9671:98;;9780:13;9796:6;-1:-1:-1;;;;;9796:16:13;;9813:4;9819:6;9796:30;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9780:46;;9901:1;9893:5;:9;9885:55;;;;-1:-1:-1;;;9885:55:13;;;;;;;:::i;:::-;9957:5;-1:-1:-1;;;;;7810:2159:13;;;;:::o;1961:38::-;;;:::o;1991:274:3:-;1288:12;:10;:12::i;:::-;1278:6;;-1:-1:-1;;;;;1278:6:3;;;:22;;;1270:67;;;;-1:-1:-1;;;1270:67:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;2092:22:3;::::1;2071:107;;;;-1:-1:-1::0;;;2071:107:3::1;;;;;;;:::i;:::-;2214:6;::::0;;2193:38:::1;::::0;-1:-1:-1;;;;;2193:38:3;;::::1;::::0;2214:6;::::1;::::0;2193:38:::1;::::0;::::1;2241:6;:17:::0;;-1:-1:-1;;;;;;2241:17:3::1;-1:-1:-1::0;;;;;2241:17:3;;;::::1;::::0;;;::::1;::::0;;1991:274::o;590:96:1:-;669:10;590:96;:::o;7536:182:13:-;7607:15;:52;;-1:-1:-1;;;;;;7607:52:13;-1:-1:-1;;;;;7607:52:13;;;;;;;;7674:37;;;;-1:-1:-1;;7674:37:13;7536:182;:::o;14:259:22:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:33;237:5;210:33;:::i;:::-;262:5;84:189;-1:-1:-1;;;84:189:22:o;278:263::-;;401:2;389:9;380:7;376:23;372:32;369:2;;;422:6;414;407:22;369:2;459:9;453:16;478:33;505:5;478:33;:::i;546:666::-;;;693:2;681:9;672:7;668:23;664:32;661:2;;;714:6;706;699:22;661:2;759:9;746:23;788:18;829:2;821:6;818:14;815:2;;;850:6;842;835:22;815:2;893:6;882:9;878:22;868:32;;938:7;931:4;927:2;923:13;919:27;909:2;;965:6;957;950:22;909:2;1010;997:16;1036:2;1028:6;1025:14;1022:2;;;1057:6;1049;1042:22;1022:2;1116:7;1111:2;1105;1097:6;1093:15;1089:2;1085:24;1081:33;1078:46;1075:2;;;1142:6;1134;1127:22;1075:2;1178;1170:11;;;;;1200:6;;-1:-1:-1;651:561:22;;-1:-1:-1;;;;651:561:22:o;1217:194::-;;1340:2;1328:9;1319:7;1315:23;1311:32;1308:2;;;1361:6;1353;1346:22;1308:2;-1:-1:-1;1389:16:22;;1298:113;-1:-1:-1;1298:113:22:o;1416:443::-;;1513:5;1507:12;1540:6;1535:3;1528:19;1566:4;1595:2;1590:3;1586:12;1579:19;;1632:2;1625:5;1621:14;1653:3;1665:169;1679:6;1676:1;1673:13;1665:169;;;1740:13;;1728:26;;1774:12;;;;1809:15;;;;1701:1;1694:9;1665:169;;;-1:-1:-1;1850:3:22;;1483:376;-1:-1:-1;;;;;1483:376:22:o;1864:203::-;-1:-1:-1;;;;;2028:32:22;;;;2010:51;;1998:2;1983:18;;1965:102::o;2072:364::-;-1:-1:-1;;;;;2279:32:22;;2261:51;;2348:2;2343;2328:18;;2321:30;;;2072:364;;2368:62;;2411:18;;2403:6;2368:62;:::i;:::-;2360:70;2251:185;-1:-1:-1;;;;2251:185:22:o;2441:267::-;;2620:2;2609:9;2602:21;2640:62;2698:2;2687:9;2683:18;2675:6;2640:62;:::i;2713:402::-;2915:2;2897:21;;;2954:2;2934:18;;;2927:30;2993:34;2988:2;2973:18;;2966:62;-1:-1:-1;;;3059:2:22;3044:18;;3037:36;3105:3;3090:19;;2887:228::o;3120:356::-;3322:2;3304:21;;;3341:18;;;3334:30;3400:34;3395:2;3380:18;;3373:62;3467:2;3452:18;;3294:182::o;3481:397::-;3683:2;3665:21;;;3722:2;3702:18;;;3695:30;3761:34;3756:2;3741:18;;3734:62;-1:-1:-1;;;3827:2:22;3812:18;;3805:31;3868:3;3853:19;;3655:223::o;3883:356::-;4085:2;4067:21;;;4104:18;;;4097:30;4163:34;4158:2;4143:18;;4136:62;4230:2;4215:18;;4057:182::o;4244:348::-;4446:2;4428:21;;;4485:2;4465:18;;;4458:30;4524:26;4519:2;4504:18;;4497:54;4583:2;4568:18;;4418:174::o;4597:177::-;4743:25;;;4731:2;4716:18;;4698:76::o;4779:236::-;;-1:-1:-1;;4839:17:22;;4836:2;;;-1:-1:-1;;;4879:33:22;;4935:4;4932:1;4925:15;4965:4;4886:3;4953:17;4836:2;-1:-1:-1;5007:1:22;4996:13;;4826:189::o;5020:133::-;-1:-1:-1;;;;;5097:31:22;;5087:42;;5077:2;;5143:1;5140;5133:12"},"gasEstimates":{"creation":{"codeDepositCost":"662600","executionCost":"infinite","totalCost":"infinite"},"external":{"BASE_CURRENCY()":"infinite","BASE_CURRENCY_UNIT()":"infinite","getAssetPrice(address)":"infinite","getAssetsPrices(address[])":"infinite","getFallbackOracle()":"1115","owner()":"1070","renounceOwnership()":"24271","setAddressProvider(address)":"22067","setFallbackOracle(address)":"infinite","transferOwnership(address)":"24521"},"internal":{"_setFallbackOracle(address)":"22026","initializeMappings()":"infinite"}},"methodIdentifiers":{"BASE_CURRENCY()":"e19f4700","BASE_CURRENCY_UNIT()":"8c89b64f","getAssetPrice(address)":"b3596f07","getAssetsPrices(address[])":"9d23d9f2","getFallbackOracle()":"6210308c","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setAddressProvider(address)":"1a5fa2e3","setFallbackOracle(address)":"170aee73","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressProvider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fallbackOracle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseCurrency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"baseCurrencyUnit\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"AssetSourceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"baseCurrency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseCurrencyUnit\",\"type\":\"uint256\"}],\"name\":\"BaseCurrencySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fallbackOracle\",\"type\":\"address\"}],\"name\":\"FallbackOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BASE_CURRENCY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BASE_CURRENCY_UNIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"name\":\"getAssetsPrices\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFallbackOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressProvider\",\"type\":\"address\"}],\"name\":\"setAddressProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fallbackOracle\",\"type\":\"address\"}],\"name\":\"setFallbackOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"addressProvider\":\"The address of the vmex address provider (not the curve address provider)\",\"baseCurrency\":\"the base currency used for the price quotes. If USD is used, base currency is 0x0\",\"baseCurrencyUnit\":\"the unit of the base currency\",\"fallbackOracle\":\"The address of the fallback oracle to use if the data of an        aggregator is not consistent\"}},\"getAssetPrice(address)\":{\"params\":{\"asset\":\"The asset address\"}},\"getAssetsPrices(address[])\":{\"params\":{\"assets\":\"The list of assets addresses\"}},\"getFallbackOracle()\":{\"returns\":{\"_0\":\"address The addres of the fallback oracle\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setFallbackOracle(address)\":{\"params\":{\"fallbackOracle\":\"The address of the fallbackOracle\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"AaveOracle\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor\"},\"getAssetPrice(address)\":{\"notice\":\"Gets an asset price by address\"},\"getAssetsPrices(address[])\":{\"notice\":\"Gets a list of prices from a list of assets addresses\"},\"getFallbackOracle()\":{\"notice\":\"Gets the address of the fallback oracle\"},\"setFallbackOracle(address)\":{\"notice\":\"Sets the fallbackOracle - Callable only by the Aave governance\"}},\"notice\":\"Proxy smart contract to get the price of an asset from a price source, with Chainlink Aggregator         smart contracts as primary option - If the returned price by a Chainlink aggregator is <= 0, the call is forwarded to a fallbackOracle - Owned by the Aave governance system, allowed to add sources for assets, replace them   and change the fallbackOracle\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracles/CurveWrapper.sol\":\"CurveWrapper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/Address.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\\n        // for accounts without code, i.e. `keccak256('')`\\n        // bytes32 codehash;\\n        // bytes32 accountHash =\\n        //     0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\n        // // solhint-disable-next-line no-inline-assembly\\n        // assembly {\\n        //     codehash := extcodehash(account)\\n        // }\\n        // return (codehash != accountHash && codehash != 0x0);\\n        return account.code.length > 0; //updated\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(\\n            address(this).balance >= amount,\\n            \\\"Address: insufficient balance\\\"\\n        );\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(\\n            success,\\n            \\\"Address: unable to send value, recipient may have reverted\\\"\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x37523692d5b121789b70f518a1639d6a978d5f863ae026b16cc45b823eecf157\",\"license\":\"agpl-3.0\"},\"contracts/dependencies/openzeppelin/contracts/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x68bfa0a768a2c75bcc8ea4588200f8f78d5b20a785189855b4b301770db578cf\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount)\\n        external\\n        returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n}\\n\",\"keccak256\":\"0x6a0e7bdec11b28b6b88f25301cd51477bd0025846062465a158eee1144f10bd3\",\"license\":\"agpl-3.0\"},\"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0;\\n\\nimport \\\"./Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\ncontract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(\\n        address indexed previousOwner,\\n        address indexed newOwner\\n    );\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(\\n            newOwner != address(0),\\n            \\\"Ownable: new owner is the zero address\\\"\\n        );\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x27577f376012a863c1c6f74048b33a256a5521baa56167d27bc52d90a87fb1cb\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/contracts/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {SafeMath} from \\\"./SafeMath.sol\\\";\\nimport {Address} from \\\"./Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        callOptionalReturn(\\n            token,\\n            abi.encodeWithSelector(token.transfer.selector, to, value)\\n        );\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        callOptionalReturn(\\n            token,\\n            abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\\n        );\\n    }\\n\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        callOptionalReturn(\\n            token,\\n            abi.encodeWithSelector(token.approve.selector, spender, value)\\n        );\\n    }\\n\\n    function callOptionalReturn(IERC20 token, bytes memory data) private {\\n        require(address(token).isContract(), \\\"SafeERC20: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        require(success, \\\"SafeERC20: low-level call failed\\\");\\n\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(\\n                abi.decode(returndata, (bool)),\\n                \\\"SafeERC20: ERC20 operation did not succeed\\\"\\n            );\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xb4f0a6930495daa6a124f1183b6caee5dc8283b230fa0d51ae90322f7ba24aad\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b)\\n        internal\\n        pure\\n        returns (bool, uint256)\\n    {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b)\\n        internal\\n        pure\\n        returns (bool, uint256)\\n    {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b)\\n        internal\\n        pure\\n        returns (bool, uint256)\\n    {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b)\\n        internal\\n        pure\\n        returns (bool, uint256)\\n    {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b)\\n        internal\\n        pure\\n        returns (bool, uint256)\\n    {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x92977dbde9b82328cac05a270258b1e93c9a0e1d4851786aac4d86e916bd54ca\",\"license\":\"MIT\"},\"contracts/interfaces/IChainlinkAggregator.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\ninterface IChainlinkAggregator {\\n    function decimals() external view returns (uint8);\\n\\n    function latestAnswer() external view returns (int256);\\n\\n    function latestTimestamp() external view returns (uint256);\\n\\n    function latestRound() external view returns (uint256);\\n\\n    function getAnswer(uint256 roundId) external view returns (int256);\\n\\n    function getTimestamp(uint256 roundId) external view returns (uint256);\\n\\n    event AnswerUpdated(\\n        int256 indexed current,\\n        uint256 indexed roundId,\\n        uint256 timestamp\\n    );\\n    event NewRound(uint256 indexed roundId, address indexed startedBy);\\n}\\n\",\"keccak256\":\"0xe9b6c1724de16518dadf10284718004691a351a25b5348b81867f5ec58f67642\",\"license\":\"agpl-3.0\"},\"contracts/interfaces/ILendingPoolAddressesProvider.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\nimport {DataTypes} from \\\"../protocol/libraries/types/DataTypes.sol\\\";\\n\\n/**\\n * @title LendingPoolAddressesProvider contract\\n * @dev Main registry of addresses part of or connected to the protocol, including permissioned roles\\n * - Acting also as factory of proxies and admin of those, so with right to change its implementations\\n * - Owned by the Aave Governance\\n * @author Aave\\n **/\\ninterface ILendingPoolAddressesProvider {\\n    event MarketIdSet(string newMarketId);\\n    event LendingPoolUpdated(address indexed newAddress);\\n    event ConfigurationAdminUpdated(\\n        address indexed newAddress,\\n        uint64 trancheId\\n    );\\n    event EmergencyAdminUpdated(address indexed newAddress, uint64 trancheId);\\n    event LendingPoolConfiguratorUpdated(address indexed newAddress);\\n    event LendingPoolCollateralManagerUpdated(address indexed newAddress);\\n    event PriceOracleUpdated(address indexed newAddress);\\n    event CurvePriceOracleUpdated(address indexed newAddress);\\n    event CurvePriceOracleWrapperUpdated(address indexed newAddress);\\n    event CurveAddressProviderUpdated(address indexed newAddress);\\n    event LendingRateOracleUpdated(address indexed newAddress);\\n    event ProxyCreated(bytes32 id, address indexed newAddress);\\n    event AddressSet(bytes32 id, address indexed newAddress, bool hasProxy);\\n\\n    function getMarketId() external view returns (string memory);\\n\\n    function setMarketId(string calldata marketId) external;\\n\\n    function setAddress(bytes32 id, address newAddress) external;\\n\\n    function setAddressAsProxy(bytes32 id, address impl) external;\\n\\n    function getAddress(bytes32 id) external view returns (address);\\n\\n    function getLendingPool() external view returns (address);\\n\\n    function setLendingPoolImpl(address pool) external;\\n\\n    function getLendingPoolConfigurator() external view returns (address);\\n\\n    function setLendingPoolConfiguratorImpl(address configurator) external;\\n\\n    function getLendingPoolCollateralManager() external view returns (address);\\n\\n    function setLendingPoolCollateralManager(address manager) external;\\n\\n    //********************************************************** */\\n    //permissionless tranches changes\\n    function getPoolAdmin(uint64 trancheId) external view returns (address); //this depends on trancheId. Different admin for different tranches\\n\\n    function getGlobalAdmin() external view returns (address);\\n\\n    function setGlobalAdmin(address admin) external;\\n\\n    function setPoolAdmin(address admin, uint64 trancheId) external; //this depends on trancheId\\n\\n    function getEmergencyAdmin(uint64 trancheId)\\n        external\\n        view\\n        returns (address); //this depends on trancheId\\n\\n    function setEmergencyAdmin(address admin, uint64 trancheId) external; //this depends on trancheId\\n\\n    function addPoolAdmin(address admin, uint64 trancheId) external;\\n\\n    function addEmergencyAdmin(address admin, uint64 trancheId) external;\\n\\n    function getAddressTranche(bytes32 id, uint64 trancheId)\\n        external\\n        view\\n        returns (address);\\n\\n    function isWhitelistedAddress(address ad) external view returns (bool);\\n\\n    //********************************************************** */\\n    function getPriceOracle(DataTypes.ReserveAssetType assetType)\\n        external\\n        view\\n        returns (address); //this might also depend on trancheId if some configurators choose to\\n\\n    function getAavePriceOracle() external view returns (address);\\n\\n    function getCurvePriceOracle() external view returns (address);\\n\\n    function getCurvePriceOracleWrapper() external view returns (address);\\n\\n    // function getCurveAddressProvider() external view returns (address);\\n\\n    function setAavePriceOracle(address priceOracle) external;\\n\\n    // function setCurveAddressProvider(address addressProvider) external;\\n\\n    function setCurvePriceOracle(address priceOracle) external;\\n\\n    function setCurvePriceOracleWrapper(address priceOracle) external;\\n\\n    function getLendingRateOracle() external view returns (address); //this oracle determines the stable borrow rate for a reserve. Should only need one, since it is based off the address of the reserve, which is unique for every asset in each tranche in each pool. Governance manually sets this\\n\\n    function setLendingRateOracle(address lendingRateOracle) external;\\n}\\n\",\"keccak256\":\"0x495bb7e0a6d1b3c75eb63efa7b95c704ccf3d81ed312dae75cc24633b266b08a\",\"license\":\"agpl-3.0\"},\"contracts/interfaces/IPriceOracleGetter.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\n/**\\n * @title IPriceOracleGetter interface\\n * @notice Interface for the Aave price oracle.\\n **/\\n\\ninterface IPriceOracleGetter {\\n    /**\\n     * @dev returns the asset price in ETH\\n     * @param asset the address of the asset\\n     * @return the ETH price of the asset\\n     **/\\n    function getAssetPrice(address asset) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xd0ddd343f94683ab5210c629a098a2d306433543e9ac0d6d3841672f8166f260\",\"license\":\"agpl-3.0\"},\"contracts/misc/AaveOracle.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\nimport {Ownable} from \\\"../dependencies/openzeppelin/contracts/Ownable.sol\\\";\\nimport {IERC20} from \\\"../dependencies/openzeppelin/contracts/IERC20.sol\\\";\\n\\nimport {IPriceOracleGetter} from \\\"../interfaces/IPriceOracleGetter.sol\\\";\\nimport {IChainlinkAggregator} from \\\"../interfaces/IChainlinkAggregator.sol\\\";\\nimport {SafeERC20} from \\\"../dependencies/openzeppelin/contracts/SafeERC20.sol\\\";\\n\\n/// @title AaveOracle\\n/// @author Aave\\n/// @notice Proxy smart contract to get the price of an asset from a price source, with Chainlink Aggregator\\n///         smart contracts as primary option\\n/// - If the returned price by a Chainlink aggregator is <= 0, the call is forwarded to a fallbackOracle\\n/// - Owned by the Aave governance system, allowed to add sources for assets, replace them\\n///   and change the fallbackOracle\\ncontract AaveOracle is IPriceOracleGetter, Ownable {\\n    using SafeERC20 for IERC20;\\n\\n    event BaseCurrencySet(\\n        address indexed baseCurrency,\\n        uint256 baseCurrencyUnit\\n    );\\n    event AssetSourceUpdated(address indexed asset, address indexed source);\\n    event FallbackOracleUpdated(address indexed fallbackOracle);\\n\\n    mapping(address => IChainlinkAggregator) private assetsSources;\\n    IPriceOracleGetter private _fallbackOracle;\\n    address public immutable BASE_CURRENCY;\\n    uint256 public immutable BASE_CURRENCY_UNIT;\\n\\n    /// @notice Constructor\\n    /// @param assets The addresses of the assets\\n    /// @param sources The address of the source of each asset\\n    /// @param fallbackOracle The address of the fallback oracle to use if the data of an\\n    ///        aggregator is not consistent\\n    /// @param baseCurrency the base currency used for the price quotes. If USD is used, base currency is 0x0\\n    /// @param baseCurrencyUnit the unit of the base currency\\n    constructor(\\n        address[] memory assets,\\n        address[] memory sources,\\n        address fallbackOracle,\\n        address baseCurrency,\\n        uint256 baseCurrencyUnit\\n    ) public {\\n        _setFallbackOracle(fallbackOracle);\\n        _setAssetsSources(assets, sources);\\n        BASE_CURRENCY = baseCurrency;\\n        BASE_CURRENCY_UNIT = baseCurrencyUnit;\\n        emit BaseCurrencySet(baseCurrency, baseCurrencyUnit);\\n    }\\n\\n    /// @notice External function called by the Aave governance to set or replace sources of assets\\n    /// @param assets The addresses of the assets\\n    /// @param sources The address of the source of each asset\\n    function setAssetSources(\\n        address[] calldata assets,\\n        address[] calldata sources\\n    ) external onlyOwner {\\n        _setAssetsSources(assets, sources);\\n    }\\n\\n    /// @notice Sets the fallbackOracle\\n    /// - Callable only by the Aave governance\\n    /// @param fallbackOracle The address of the fallbackOracle\\n    function setFallbackOracle(address fallbackOracle) external onlyOwner {\\n        _setFallbackOracle(fallbackOracle);\\n    }\\n\\n    /// @notice Internal function to set the sources for each asset\\n    /// @param assets The addresses of the assets\\n    /// @param sources The address of the source of each asset\\n    function _setAssetsSources(\\n        address[] memory assets,\\n        address[] memory sources\\n    ) internal {\\n        require(assets.length == sources.length, \\\"INCONSISTENT_PARAMS_LENGTH\\\");\\n        for (uint256 i = 0; i < assets.length; i++) {\\n            assetsSources[assets[i]] = IChainlinkAggregator(sources[i]);\\n            emit AssetSourceUpdated(assets[i], sources[i]);\\n        }\\n    }\\n\\n    /// @notice Internal function to set the fallbackOracle\\n    /// @param fallbackOracle The address of the fallbackOracle\\n    function _setFallbackOracle(address fallbackOracle) internal {\\n        _fallbackOracle = IPriceOracleGetter(fallbackOracle);\\n        emit FallbackOracleUpdated(fallbackOracle);\\n    }\\n\\n    /// @notice Gets an asset price by address\\n    /// @param asset The asset address\\n    function getAssetPrice(address asset)\\n        public\\n        view\\n        override\\n        returns (uint256)\\n    {\\n        IChainlinkAggregator source = assetsSources[asset];\\n\\n        if (asset == BASE_CURRENCY) {\\n            return BASE_CURRENCY_UNIT;\\n        } else if (address(source) == address(0)) {\\n            return _fallbackOracle.getAssetPrice(asset);\\n        } else {\\n            int256 price = IChainlinkAggregator(source).latestAnswer();\\n            if (price > 0) {\\n                return uint256(price);\\n            } else {\\n                return _fallbackOracle.getAssetPrice(asset);\\n            }\\n        }\\n    }\\n\\n    /// @notice Gets a list of prices from a list of assets addresses\\n    /// @param assets The list of assets addresses\\n    function getAssetsPrices(address[] calldata assets)\\n        external\\n        view\\n        returns (uint256[] memory)\\n    {\\n        uint256[] memory prices = new uint256[](assets.length);\\n        for (uint256 i = 0; i < assets.length; i++) {\\n            prices[i] = getAssetPrice(assets[i]);\\n        }\\n        return prices;\\n    }\\n\\n    /// @notice Gets the address of the source for an asset address\\n    /// @param asset The address of the asset\\n    /// @return address The address of the source\\n    function getSourceOfAsset(address asset) external view returns (address) {\\n        return address(assetsSources[asset]);\\n    }\\n\\n    /// @notice Gets the address of the fallback oracle\\n    /// @return address The addres of the fallback oracle\\n    function getFallbackOracle() external view returns (address) {\\n        return address(_fallbackOracle);\\n    }\\n}\\n\",\"keccak256\":\"0xd6b51453891793a3bdfadfa9dbac1514e5b2eef1ec903cf2ee84cb38f254682a\",\"license\":\"agpl-3.0\"},\"contracts/oracles/CurveWrapper.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\nimport {Ownable} from \\\"../dependencies/openzeppelin/contracts/Ownable.sol\\\";\\nimport {IERC20} from \\\"../dependencies/openzeppelin/contracts/IERC20.sol\\\";\\n\\nimport {IPriceOracleGetter} from \\\"../interfaces/IPriceOracleGetter.sol\\\";\\nimport {SafeERC20} from \\\"../dependencies/openzeppelin/contracts/SafeERC20.sol\\\";\\nimport {AaveOracle} from \\\"../misc/AaveOracle.sol\\\";\\nimport {ILendingPoolAddressesProvider} from \\\"../interfaces/ILendingPoolAddressesProvider.sol\\\";\\nimport {ICurveOracle} from \\\"./interfaces/ICurveOracle.sol\\\";\\n\\n// import {IPriceOracleGetter} from \\\"../interfaces/IPriceOracleGetter.sol\\\";\\n// import {ICurveAddressProvider} from \\\"./interfaces/ICurveAddressProvider.sol\\\";\\n// import {ICurveRegistry} from \\\"./interfaces/ICurveRegistry.sol\\\";\\n\\n/// @title AaveOracle\\n/// @author Aave\\n/// @notice Proxy smart contract to get the price of an asset from a price source, with Chainlink Aggregator\\n///         smart contracts as primary option\\n/// - If the returned price by a Chainlink aggregator is <= 0, the call is forwarded to a fallbackOracle\\n/// - Owned by the Aave governance system, allowed to add sources for assets, replace them\\n///   and change the fallbackOracle\\n\\n//TODO: this contract needs the addressprovider contract to get the addressprovider of the Curve pools (we don't know what network yet)\\ncontract CurveWrapper is IPriceOracleGetter, Ownable {\\n    using SafeERC20 for IERC20;\\n\\n    event BaseCurrencySet(\\n        address indexed baseCurrency,\\n        uint256 baseCurrencyUnit\\n    );\\n    event AssetSourceUpdated(address indexed asset, address indexed source);\\n    event FallbackOracleUpdated(address indexed fallbackOracle);\\n\\n    ILendingPoolAddressesProvider internal _addressesProvider;\\n    IPriceOracleGetter private _fallbackOracle; //fallback oracle for the entire price\\n    // ICurveOracle private _fallbackCurvePoolOracle; //fallback oracle for curve pool, to get_virtual_price\\n    address public immutable BASE_CURRENCY;\\n    uint256 public immutable BASE_CURRENCY_UNIT;\\n    mapping(address => address) internal lpTokenToPool;\\n    mapping(address => uint256) internal numCoins; //pool address to number of coins\\n    //underlyingCoins[tricrypto2 pool add][0] gets the address of the first underlying coin\\n    mapping(address => mapping(uint256 => address)) internal underlyingCoins;\\n\\n    /// @notice Constructor\\n    /// @param addressProvider The address of the vmex address provider (not the curve address provider)\\n    /// @param fallbackOracle The address of the fallback oracle to use if the data of an\\n    ///        aggregator is not consistent\\n    /// @param baseCurrency the base currency used for the price quotes. If USD is used, base currency is 0x0\\n    /// @param baseCurrencyUnit the unit of the base currency\\n    constructor(\\n        address addressProvider,\\n        address fallbackOracle, //this will likely not be set for the Curve wrappers, maybe can use the fallback oracles from AaveOracle, but if the pool price cannot be determined then it doesn't matter if the other asset prices can be determined\\n        // address fallbackCurvePoolOracle,\\n        address baseCurrency,\\n        uint256 baseCurrencyUnit\\n    ) public {\\n        _addressesProvider = ILendingPoolAddressesProvider(addressProvider);\\n        _setFallbackOracle(fallbackOracle);\\n        // _fallbackCurvePoolOracle = ICurveOracle(fallbackCurvePoolOracle);\\n        BASE_CURRENCY = baseCurrency;\\n        BASE_CURRENCY_UNIT = baseCurrencyUnit;\\n        initializeMappings();\\n\\n        emit BaseCurrencySet(baseCurrency, baseCurrencyUnit);\\n    }\\n\\n    function setAddressProvider(address addressProvider) external onlyOwner {\\n        _addressesProvider = ILendingPoolAddressesProvider(addressProvider);\\n    }\\n\\n    function initializeMappings() internal {\\n        //Tricrypto2\\n        lpTokenToPool[\\n            0xc4AD29ba4B3c580e6D59105FFf484999997675Ff\\n        ] = 0xD51a44d3FaE010294C616388b506AcdA1bfAAE46; //Tricrypto2\\n        numCoins[0xD51a44d3FaE010294C616388b506AcdA1bfAAE46] = 3; //3 coins in tricrypto2\\n        underlyingCoins[0xD51a44d3FaE010294C616388b506AcdA1bfAAE46][\\n            0\\n        ] = 0xdAC17F958D2ee523a2206206994597C13D831ec7; //first underlying coin is USDT\\n        underlyingCoins[0xD51a44d3FaE010294C616388b506AcdA1bfAAE46][\\n            1\\n        ] = 0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599; //first underlying coin is WBTC\\n        underlyingCoins[0xD51a44d3FaE010294C616388b506AcdA1bfAAE46][\\n            2\\n        ] = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2; //first underlying coin is WETH\\n\\n        //3pool\\n        lpTokenToPool[\\n            0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490\\n        ] = 0xbEbc44782C7dB0a1A60Cb6fe97d0b483032FF1C7;\\n        numCoins[0xbEbc44782C7dB0a1A60Cb6fe97d0b483032FF1C7] = 3; //3 coins in tricrypto2\\n        underlyingCoins[0xbEbc44782C7dB0a1A60Cb6fe97d0b483032FF1C7][\\n            0\\n        ] = 0x6B175474E89094C44Da98b954EedeAC495271d0F; //first underlying coin is DAI\\n        underlyingCoins[0xbEbc44782C7dB0a1A60Cb6fe97d0b483032FF1C7][\\n            1\\n        ] = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48; //first underlying coin is USDC\\n        underlyingCoins[0xbEbc44782C7dB0a1A60Cb6fe97d0b483032FF1C7][\\n            2\\n        ] = 0xdAC17F958D2ee523a2206206994597C13D831ec7; //first underlying coin is USDT\\n\\n        //StethEth\\n        lpTokenToPool[\\n            0x06325440D014e39736583c165C2963BA99fAf14E\\n        ] = 0xDC24316b9AE028F1497c275EB9192a3Ea0f67022;\\n        numCoins[0xDC24316b9AE028F1497c275EB9192a3Ea0f67022] = 2; //2 coins in StethEth\\n        underlyingCoins[0xDC24316b9AE028F1497c275EB9192a3Ea0f67022][\\n            0\\n        ] = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2; //first underlying coin is WETH\\n        underlyingCoins[0xDC24316b9AE028F1497c275EB9192a3Ea0f67022][\\n            1\\n        ] = 0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84; //first underlying coin is Steth\\n\\n        //fraxusdc\\n        lpTokenToPool[\\n            0x3175Df0976dFA876431C2E9eE6Bc45b65d3473CC\\n        ] = 0xDcEF968d416a41Cdac0ED8702fAC8128A64241A2;\\n        numCoins[0xDcEF968d416a41Cdac0ED8702fAC8128A64241A2] = 2; //2 coins in fraxusdc\\n        underlyingCoins[0xDcEF968d416a41Cdac0ED8702fAC8128A64241A2][\\n            0\\n        ] = 0x853d955aCEf822Db058eb8505911ED77F175b99e; //first underlying coin is frax\\n        underlyingCoins[0xDcEF968d416a41Cdac0ED8702fAC8128A64241A2][\\n            1\\n        ] = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48; //first underlying coin is usdc\\n\\n        //frax3crv\\n        lpTokenToPool[\\n            0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B\\n        ] = 0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B; //same pool and token addresses\\n        numCoins[0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B] = 2; //2 coins in frax + 3crv\\n        underlyingCoins[0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B][\\n            0\\n        ] = 0x853d955aCEf822Db058eb8505911ED77F175b99e; //first underlying coin is frax\\n        underlyingCoins[0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B][\\n            1\\n        ] = 0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490; //first underlying coin is 3crv\\n    }\\n\\n    /// @notice Sets the fallbackOracle\\n    /// - Callable only by the Aave governance\\n    /// @param fallbackOracle The address of the fallbackOracle\\n    function setFallbackOracle(address fallbackOracle) external onlyOwner {\\n        _setFallbackOracle(fallbackOracle);\\n    }\\n\\n    /// @notice Internal function to set the fallbackOracle\\n    /// @param fallbackOracle The address of the fallbackOracle\\n    function _setFallbackOracle(address fallbackOracle) internal {\\n        _fallbackOracle = IPriceOracleGetter(fallbackOracle);\\n        emit FallbackOracleUpdated(fallbackOracle);\\n    }\\n\\n    /// @notice Gets an asset price by address\\n    /// @param asset The asset address\\n    function getAssetPrice(\\n        address asset //this will be the token address, not the pool address\\n    ) public view override returns (uint256) {\\n        if (asset == BASE_CURRENCY) {\\n            return BASE_CURRENCY_UNIT;\\n        }\\n        //need to import the curve address provider interface X\\n        // ICurveAddressProvider provider =\\n        //     ICurveAddressProvider(_addressesProvider.getCurveAddressProvider());\\n        //need to import the registry interface Y\\n        // ICurveRegistry registry = ICurveRegistry(provider.get_registry()); //registry contains the addresses for the pools\\n\\n        address pool = lpTokenToPool[asset]; //asset is the LP token\\n\\n        if (pool == address(0)) {\\n            return _fallbackOracle.getAssetPrice(asset);\\n        }\\n\\n        //TODO: check if we should use underlying or not. [0] is not underlying, [1] includes underlying\\n        uint256 num_coins = numCoins[pool];\\n\\n        uint256[] memory prices = new uint256[](num_coins);\\n\\n        for (uint256 i = 0; i < num_coins; i++) {\\n            address underlying = underlyingCoins[pool][i];\\n            IPriceOracleGetter aave_oracle;\\n            if (underlying == 0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490) {\\n                //this is the only underlying in our supported assets that is a curve token instead of aave token\\n                aave_oracle = IPriceOracleGetter(\\n                    _addressesProvider.getCurvePriceOracleWrapper()\\n                );\\n            } else {\\n                aave_oracle = IPriceOracleGetter(\\n                    _addressesProvider.getAavePriceOracle()\\n                );\\n            }\\n\\n            require(underlying != address(0), \\\"underlying token is null\\\");\\n            prices[i] = aave_oracle.getAssetPrice(underlying);\\n            require(prices[i] > 0, \\\"aave oracle encountered an error\\\");\\n        }\\n\\n        ICurveOracle oracle = ICurveOracle(\\n            _addressesProvider.getCurvePriceOracle()\\n        );\\n\\n        uint256 price = oracle.get_price(pool, prices);\\n        //TODO: incorporate backup oracles here?\\n        require(price > 0, \\\"Curve oracle encountered an error\\\");\\n        return price;\\n    }\\n\\n    /// @notice Gets a list of prices from a list of assets addresses\\n    /// @param assets The list of assets addresses\\n    function getAssetsPrices(address[] calldata assets)\\n        external\\n        view\\n        returns (uint256[] memory)\\n    {\\n        uint256[] memory prices = new uint256[](assets.length);\\n        for (uint256 i = 0; i < assets.length; i++) {\\n            prices[i] = getAssetPrice(assets[i]);\\n        }\\n        return prices;\\n    }\\n\\n    /// @notice Gets the address of the fallback oracle\\n    /// @return address The addres of the fallback oracle\\n    function getFallbackOracle() external view returns (address) {\\n        return address(_fallbackOracle);\\n    }\\n}\\n\",\"keccak256\":\"0xe756ff979364b5b259f0fc42245286b49b92c49db58f8923fc54519d300781cf\",\"license\":\"agpl-3.0\"},\"contracts/oracles/interfaces/ICurveOracle.sol\":{\"content\":\"pragma solidity >=0.8.0;\\n\\ninterface ICurveOracle {\\n    function get_price(address curve_pool, uint256[] memory prices)\\n        external\\n        view\\n        returns (uint256);\\n}\\n\",\"keccak256\":\"0xdda871f8372f09487237b4047dbbcc88810eb55c357b2e91e13a068e043d4179\"},\"contracts/protocol/libraries/types/DataTypes.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\nlibrary DataTypes {\\n    // refer to the whitepaper, section 1.1 basic concepts for a formal description of these properties.\\n\\n    struct InitReserveInput {\\n        address aTokenImpl;\\n        address stableDebtTokenImpl;\\n        address variableDebtTokenImpl;\\n        uint8 underlyingAssetDecimals;\\n        address interestRateStrategyAddress;\\n        address underlyingAsset;\\n        address treasury;\\n        address incentivesController;\\n        string underlyingAssetName;\\n        string aTokenName;\\n        string aTokenSymbol;\\n        string variableDebtTokenName;\\n        string variableDebtTokenSymbol;\\n        string stableDebtTokenName;\\n        string stableDebtTokenSymbol;\\n        bytes params;\\n        uint8 assetType;\\n        uint256 collateralCap;\\n        bool hasStrategy;\\n        bool usingGovernanceSetInterestRate; //if true, then the reserves that has this asset will\\n        uint256 governanceSetInterestRate;\\n    }\\n\\n    struct InitReserveInputInternal {\\n        InitReserveInput input;\\n        uint64 trancheId;\\n    }\\n\\n    enum ReserveAssetType {\\n        AAVE,\\n        CURVE\\n    } //update with other possible types of the underlying asset\\n    //AAVE is the original assets in the aave protocol\\n    //CURVE is the new LP tokens we are providing support for\\n    struct TrancheAddress {\\n        uint64 trancheId;\\n        address asset;\\n    }\\n    struct ReserveData {\\n        //stores the reserve configuration\\n        ReserveConfigurationMap configuration;\\n        //the liquidity index. Expressed in ray\\n        uint128 liquidityIndex; //not used for nonlendable assets\\n        //variable borrow index. Expressed in ray\\n        uint128 variableBorrowIndex; //not used for nonlendable assets\\n        //the current supply rate. Expressed in ray\\n        uint128 currentLiquidityRate; //deposit APR is defined as liquidityRate / RAY //not used for nonlendable assets\\n        //the current variable borrow rate. Expressed in ray\\n        uint128 currentVariableBorrowRate; //not used for nonlendable assets\\n        //the current stable borrow rate. Expressed in ray\\n        uint128 currentStableBorrowRate; //not used for nonlendable assets\\n        uint40 lastUpdateTimestamp;\\n        //tokens addresses\\n        address aTokenAddress;\\n        address stableDebtTokenAddress; //not used for nonlendable assets\\n        address variableDebtTokenAddress; //not used for nonlendable assets\\n        //address of the interest rate strategy\\n        address interestRateStrategyAddress; //not used for nonlendable assets\\n        //the id of the reserve. Represents the position in the list of the active reserves\\n        uint8 id;\\n        //maybe consider\\n        uint64 trancheId;\\n        uint256 collateralCap; //this can definitely be different per trancheId\\n        bool hasStrategy; //this might be put as a property of a reserve rather than property of the asset since USDC might have a trancheId that has a strategy, but unlikely to happen\\n        bool usingGovernanceSetInterestRate; //if true, then the reserves that has this asset will\\n        uint256 governanceSetInterestRate;\\n    }\\n\\n    // uint8 constant NUM_TRANCHES = 3;\\n\\n    struct ReserveConfigurationMap {\\n        //bit 0-15: LTV\\n        //bit 16-31: Liq. threshold\\n        //bit 32-47: Liq. bonus\\n        //bit 48-55: Decimals\\n        //bit 56: Reserve is active\\n        //bit 57: reserve is frozen\\n        //bit 58: borrowing is enabled\\n        //bit 59: stable rate borrowing enabled\\n        //bit 60-63: reserved\\n        //bit 64-79: reserve factor\\n        uint256 data;\\n    }\\n\\n    struct UserConfigurationMap {\\n        uint256 data;\\n    }\\n\\n    enum InterestRateMode {\\n        NONE,\\n        STABLE,\\n        VARIABLE\\n    }\\n\\n    struct AcctTranche {\\n        address user;\\n        uint64 trancheId;\\n    }\\n\\n    struct DepositVars {\\n        address asset;\\n        uint64 trancheId;\\n        address _addressesProvider;\\n        uint256 amount;\\n        address onBehalfOf;\\n        uint16 referralCode;\\n    }\\n\\n    struct ExecuteBorrowParams {\\n        address asset;\\n        uint64 trancheId; //trancheId the user wants to borrow out of\\n        address user;\\n        address onBehalfOf;\\n        uint256 amount;\\n        uint256 interestRateMode;\\n        address aTokenAddress;\\n        uint16 referralCode;\\n        bool releaseUnderlying;\\n        uint256 _maxStableRateBorrowSizePercent;\\n        uint256 _reservesCount;\\n    }\\n\\n    struct WithdrawParams {\\n        uint256 _reservesCount;\\n        address asset;\\n        uint64 trancheId;\\n        uint256 amount;\\n        address to;\\n    }\\n\\n    struct calculateInterestRatesVars {\\n        address reserve;\\n        address aToken;\\n        uint256 liquidityAdded;\\n        uint256 liquidityTaken;\\n        uint256 reserveFactor;\\n    }\\n\\n    struct flashLoanVars {\\n        address receiverAddress;\\n        address[] assets;\\n        uint64 trancheId;\\n        uint256[] amounts;\\n        uint256[] modes;\\n        address onBehalfOf;\\n        bytes params;\\n        uint16 referralCode;\\n        uint256 _flashLoanPremiumTotal;\\n        address oracle;\\n        uint256 _maxStableRateBorrowSizePercent;\\n        address _addressesprovider;\\n        // mapping(uint8 => uint256) _reservesCount;\\n    }\\n}\\n\",\"keccak256\":\"0x6ffba536d5198c4ba1fe00a569f065823b6595f710b1baa920018612a35881d1\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[{"astId":161,"contract":"contracts/oracles/CurveWrapper.sol:CurveWrapper","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":1610,"contract":"contracts/oracles/CurveWrapper.sol:CurveWrapper","label":"_addressesProvider","offset":0,"slot":"1","type":"t_contract(ILendingPoolAddressesProvider)1031"},{"astId":1613,"contract":"contracts/oracles/CurveWrapper.sol:CurveWrapper","label":"_fallbackOracle","offset":0,"slot":"2","type":"t_contract(IPriceOracleGetter)1043"},{"astId":1621,"contract":"contracts/oracles/CurveWrapper.sol:CurveWrapper","label":"lpTokenToPool","offset":0,"slot":"3","type":"t_mapping(t_address,t_address)"},{"astId":1625,"contract":"contracts/oracles/CurveWrapper.sol:CurveWrapper","label":"numCoins","offset":0,"slot":"4","type":"t_mapping(t_address,t_uint256)"},{"astId":1631,"contract":"contracts/oracles/CurveWrapper.sol:CurveWrapper","label":"underlyingCoins","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_uint256,t_address))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_contract(ILendingPoolAddressesProvider)1031":{"encoding":"inplace","label":"contract ILendingPoolAddressesProvider","numberOfBytes":"20"},"t_contract(IPriceOracleGetter)1043":{"encoding":"inplace","label":"contract IPriceOracleGetter","numberOfBytes":"20"},"t_mapping(t_address,t_address)":{"encoding":"mapping","key":"t_address","label":"mapping(address => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_address,t_mapping(t_uint256,t_address))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => address))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_address)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{"constructor":{"notice":"Constructor"},"getAssetPrice(address)":{"notice":"Gets an asset price by address"},"getAssetsPrices(address[])":{"notice":"Gets a list of prices from a list of assets addresses"},"getFallbackOracle()":{"notice":"Gets the address of the fallback oracle"},"setFallbackOracle(address)":{"notice":"Sets the fallbackOracle - Callable only by the Aave governance"}},"notice":"Proxy smart contract to get the price of an asset from a price source, with Chainlink Aggregator         smart contracts as primary option - If the returned price by a Chainlink aggregator is <= 0, the call is forwarded to a fallbackOracle - Owned by the Aave governance system, allowed to add sources for assets, replace them   and change the fallbackOracle","version":1}}},"contracts/oracles/interfaces/ICurveOracle.sol":{"ICurveOracle":{"abi":[{"inputs":[{"internalType":"address","name":"curve_pool","type":"address"},{"internalType":"uint256[]","name":"prices","type":"uint256[]"}],"name":"get_price","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"get_price(address,uint256[])":"6dcb6a32"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"curve_pool\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"prices\",\"type\":\"uint256[]\"}],\"name\":\"get_price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracles/interfaces/ICurveOracle.sol\":\"ICurveOracle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/oracles/interfaces/ICurveOracle.sol\":{\"content\":\"pragma solidity >=0.8.0;\\n\\ninterface ICurveOracle {\\n    function get_price(address curve_pool, uint256[] memory prices)\\n        external\\n        view\\n        returns (uint256);\\n}\\n\",\"keccak256\":\"0xdda871f8372f09487237b4047dbbcc88810eb55c357b2e91e13a068e043d4179\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/oracles/interfaces/ICurvePoolV1.sol":{"ICurvePool":{"abi":[{"inputs":[],"name":"get_virtual_price","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"get_virtual_price()":"bb7b8b80"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"get_virtual_price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracles/interfaces/ICurvePoolV1.sol\":\"ICurvePool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/oracles/interfaces/ICurvePoolV1.sol\":{\"content\":\"pragma solidity >=0.8.0;\\n\\ninterface ICurvePool {\\n    function get_virtual_price() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x58f8992dae5fdd0d425f8fc86d7cb3f59e61ba73ccc1111c281645d48dad4a72\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/oracles/interfaces/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"decimals()":{"details":"Returns the token decimals."},"getOwner()":{"details":"Returns the bep token owner."},"name()":{"details":"Returns the token name."},"symbol()":{"details":"Returns the token symbol."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","getOwner()":"893d20e8","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracles/interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/oracles/interfaces/IERC20.sol\":{\"content\":\"pragma solidity >=0.8.0;\\n\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the token decimals.\\n     */\\n    function decimals() external view returns (uint8);\\n\\n    /**\\n     * @dev Returns the token symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the bep token owner.\\n     */\\n    function getOwner() external view returns (address);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount)\\n        external\\n        returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address _owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n}\\n\",\"keccak256\":\"0x647c6703e37aa5feb0eac5d74f41edb481254bc120e470e336561297b47999a8\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/oracles/libs/FixedPointMathLib.sol":{"FixedPointMathLib":{"abi":[],"devdoc":{"author":"Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/utils/FixedPointMathLib.sol)Inspired by USM (https://github.com/usmfum/USM/blob/master/contracts/WadMath.sol)","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202e20bfde21414dfb255a704c16abb1718d0f80e57300c22a7e4508c11a2bc6d164736f6c63430008000033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E KECCAK256 0xBF 0xDE 0x21 COINBASE 0x4D 0xFB 0x25 GAS PUSH17 0x4C16ABB1718D0F80E57300C22A7E4508C1 BYTE 0x2B 0xC6 0xD1 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ","sourceMap":"338:7688:17:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;338:7688:17;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202e20bfde21414dfb255a704c16abb1718d0f80e57300c22a7e4508c11a2bc6d164736f6c63430008000033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E KECCAK256 0xBF 0xDE 0x21 COINBASE 0x4D 0xFB 0x25 GAS PUSH17 0x4C16ABB1718D0F80E57300C22A7E4508C1 BYTE 0x2B 0xC6 0xD1 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ","sourceMap":"338:7688:17:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"divWadDown(uint256,uint256)":"infinite","divWadUp(uint256,uint256)":"infinite","mulDivDown(uint256,uint256,uint256)":"infinite","mulDivUp(uint256,uint256,uint256)":"infinite","mulWadDown(uint256,uint256)":"infinite","mulWadUp(uint256,uint256)":"infinite","rpow(uint256,uint256,uint256)":"infinite","sqrt(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/utils/FixedPointMathLib.sol)Inspired by USM (https://github.com/usmfum/USM/blob/master/contracts/WadMath.sol)\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Arithmetic library with operations for fixed-point numbers.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracles/libs/FixedPointMathLib.sol\":\"FixedPointMathLib\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/oracles/libs/FixedPointMathLib.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Arithmetic library with operations for fixed-point numbers.\\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/utils/FixedPointMathLib.sol)\\n/// @author Inspired by USM (https://github.com/usmfum/USM/blob/master/contracts/WadMath.sol)\\nlibrary FixedPointMathLib {\\n    /*//////////////////////////////////////////////////////////////\\n                    SIMPLIFIED FIXED POINT OPERATIONS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 internal constant WAD = 1e18; // The scalar of ETH and most ERC20s.\\n\\n    function mulWadDown(uint256 x, uint256 y) internal pure returns (uint256) {\\n        return mulDivDown(x, y, WAD); // Equivalent to (x * y) / WAD rounded down.\\n    }\\n\\n    function mulWadUp(uint256 x, uint256 y) internal pure returns (uint256) {\\n        return mulDivUp(x, y, WAD); // Equivalent to (x * y) / WAD rounded up.\\n    }\\n\\n    function divWadDown(uint256 x, uint256 y) internal pure returns (uint256) {\\n        return mulDivDown(x, WAD, y); // Equivalent to (x * WAD) / y rounded down.\\n    }\\n\\n    function divWadUp(uint256 x, uint256 y) internal pure returns (uint256) {\\n        return mulDivUp(x, WAD, y); // Equivalent to (x * WAD) / y rounded up.\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                    LOW LEVEL FIXED POINT OPERATIONS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function mulDivDown(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 z) {\\n        assembly {\\n            // Store x * y in z for now.\\n            z := mul(x, y)\\n\\n            // Equivalent to require(denominator != 0 && (x == 0 || (x * y) / x == y))\\n            if iszero(\\n                and(\\n                    iszero(iszero(denominator)),\\n                    or(iszero(x), eq(div(z, x), y))\\n                )\\n            ) {\\n                revert(0, 0)\\n            }\\n\\n            // Divide z by the denominator.\\n            z := div(z, denominator)\\n        }\\n    }\\n\\n    function mulDivUp(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 z) {\\n        assembly {\\n            // Store x * y in z for now.\\n            z := mul(x, y)\\n\\n            // Equivalent to require(denominator != 0 && (x == 0 || (x * y) / x == y))\\n            if iszero(\\n                and(\\n                    iszero(iszero(denominator)),\\n                    or(iszero(x), eq(div(z, x), y))\\n                )\\n            ) {\\n                revert(0, 0)\\n            }\\n\\n            // First, divide z - 1 by the denominator and add 1.\\n            // We allow z - 1 to underflow if z is 0, because we multiply the\\n            // end result by 0 if z is zero, ensuring we return 0 if z is zero.\\n            z := mul(iszero(iszero(z)), add(div(sub(z, 1), denominator), 1))\\n        }\\n    }\\n\\n    function rpow(\\n        uint256 x,\\n        uint256 n,\\n        uint256 scalar\\n    ) internal pure returns (uint256 z) {\\n        assembly {\\n            switch x\\n            case 0 {\\n                switch n\\n                case 0 {\\n                    // 0 ** 0 = 1\\n                    z := scalar\\n                }\\n                default {\\n                    // 0 ** n = 0\\n                    z := 0\\n                }\\n            }\\n            default {\\n                switch mod(n, 2)\\n                case 0 {\\n                    // If n is even, store scalar in z for now.\\n                    z := scalar\\n                }\\n                default {\\n                    // If n is odd, store x in z for now.\\n                    z := x\\n                }\\n\\n                // Shifting right by 1 is like dividing by 2.\\n                let half := shr(1, scalar)\\n\\n                for {\\n                    // Shift n right by 1 before looping to halve it.\\n                    n := shr(1, n)\\n                } n {\\n                    // Shift n right by 1 each iteration to halve it.\\n                    n := shr(1, n)\\n                } {\\n                    // Revert immediately if x ** 2 would overflow.\\n                    // Equivalent to iszero(eq(div(xx, x), x)) here.\\n                    if shr(128, x) {\\n                        revert(0, 0)\\n                    }\\n\\n                    // Store x squared.\\n                    let xx := mul(x, x)\\n\\n                    // Round to the nearest number.\\n                    let xxRound := add(xx, half)\\n\\n                    // Revert if xx + half overflowed.\\n                    if lt(xxRound, xx) {\\n                        revert(0, 0)\\n                    }\\n\\n                    // Set x to scaled xxRound.\\n                    x := div(xxRound, scalar)\\n\\n                    // If n is even:\\n                    if mod(n, 2) {\\n                        // Compute z * x.\\n                        let zx := mul(z, x)\\n\\n                        // If z * x overflowed:\\n                        if iszero(eq(div(zx, x), z)) {\\n                            // Revert if x is non-zero.\\n                            if iszero(iszero(x)) {\\n                                revert(0, 0)\\n                            }\\n                        }\\n\\n                        // Round to the nearest number.\\n                        let zxRound := add(zx, half)\\n\\n                        // Revert if zx + half overflowed.\\n                        if lt(zxRound, zx) {\\n                            revert(0, 0)\\n                        }\\n\\n                        // Return properly scaled zxRound.\\n                        z := div(zxRound, scalar)\\n                    }\\n                }\\n            }\\n        }\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                        GENERAL NUMBER UTILITIES\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function sqrt(uint256 x) internal pure returns (uint256 z) {\\n        assembly {\\n            // Start off with z at 1.\\n            z := 1\\n\\n            // Used below to help find a nearby power of 2.\\n            let y := x\\n\\n            // Find the lowest power of 2 that is at least sqrt(x).\\n            if iszero(lt(y, 0x100000000000000000000000000000000)) {\\n                y := shr(128, y) // Like dividing by 2 ** 128.\\n                z := shl(64, z) // Like multiplying by 2 ** 64.\\n            }\\n            if iszero(lt(y, 0x10000000000000000)) {\\n                y := shr(64, y) // Like dividing by 2 ** 64.\\n                z := shl(32, z) // Like multiplying by 2 ** 32.\\n            }\\n            if iszero(lt(y, 0x100000000)) {\\n                y := shr(32, y) // Like dividing by 2 ** 32.\\n                z := shl(16, z) // Like multiplying by 2 ** 16.\\n            }\\n            if iszero(lt(y, 0x10000)) {\\n                y := shr(16, y) // Like dividing by 2 ** 16.\\n                z := shl(8, z) // Like multiplying by 2 ** 8.\\n            }\\n            if iszero(lt(y, 0x100)) {\\n                y := shr(8, y) // Like dividing by 2 ** 8.\\n                z := shl(4, z) // Like multiplying by 2 ** 4.\\n            }\\n            if iszero(lt(y, 0x10)) {\\n                y := shr(4, y) // Like dividing by 2 ** 4.\\n                z := shl(2, z) // Like multiplying by 2 ** 2.\\n            }\\n            if iszero(lt(y, 0x8)) {\\n                // Equivalent to 2 ** z.\\n                z := shl(1, z)\\n            }\\n\\n            // Shifting right by 1 is like dividing by 2.\\n            z := shr(1, add(z, div(x, z)))\\n            z := shr(1, add(z, div(x, z)))\\n            z := shr(1, add(z, div(x, z)))\\n            z := shr(1, add(z, div(x, z)))\\n            z := shr(1, add(z, div(x, z)))\\n            z := shr(1, add(z, div(x, z)))\\n            z := shr(1, add(z, div(x, z)))\\n\\n            // Compute a rounded down version of z.\\n            let zRoundDown := div(x, z)\\n\\n            // If zRoundDown is smaller, use it.\\n            if lt(zRoundDown, z) {\\n                z := zRoundDown\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xcc1552fe037c973c1ab30f607708735de7626eb22dcf6b2a02f2a39fa5d2b965\",\"license\":\"AGPL-3.0-only\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"Arithmetic library with operations for fixed-point numbers.","version":1}}},"contracts/oracles/libs/IntegralMath.sol":{"IntegralMath":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e97615149fe09ecb2ccaa29667e8c1d7873d089867c0adc7be6701c595e2bf9b64736f6c63430008000033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 PUSH23 0x15149FE09ECB2CCAA29667E8C1D7873D089867C0ADC7BE PUSH8 0x1C595E2BF9B6473 PUSH16 0x6C634300080000330000000000000000 ","sourceMap":"99:5952:18:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;99:5952:18;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e97615149fe09ecb2ccaa29667e8c1d7873d089867c0adc7be6701c595e2bf9b64736f6c63430008000033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 PUSH23 0x15149FE09ECB2CCAA29667E8C1D7873D089867C0ADC7BE PUSH8 0x1C595E2BF9B6473 PUSH16 0x6C634300080000330000000000000000 ","sourceMap":"99:5952:18:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"ceilCbrt(uint256)":"infinite","ceilSqrt(uint256)":"infinite","div512(uint256,uint256,uint256)":"infinite","floorCbrt(uint256)":"infinite","floorLog2(uint256)":"infinite","floorSqrt(uint256)":"infinite","inv256(uint256)":"infinite","mul512(uint256,uint256)":"infinite","mulDivC(uint256,uint256,uint256)":"infinite","mulDivF(uint256,uint256,uint256)":"infinite","roundDiv(uint256,uint256)":"infinite","sub512(uint256,uint256,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracles/libs/IntegralMath.sol\":\"IntegralMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/oracles/libs/IntegralMath.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity >=0.8.0;\\n\\nimport \\\"./Uint.sol\\\";\\n\\nlibrary IntegralMath {\\n    /**\\n     * @dev Compute the largest integer smaller than or equal to the binary logarithm of `n`\\n     */\\n    function floorLog2(uint256 n) internal pure returns (uint8) {\\n        unchecked {\\n            uint8 res = 0;\\n\\n            if (n < 256) {\\n                // at most 8 iterations\\n                while (n > 1) {\\n                    n >>= 1;\\n                    res += 1;\\n                }\\n            } else {\\n                // exactly 8 iterations\\n                for (uint8 s = 128; s > 0; s >>= 1) {\\n                    if (n >= 1 << s) {\\n                        n >>= s;\\n                        res |= s;\\n                    }\\n                }\\n            }\\n\\n            return res;\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the largest integer smaller than or equal to the square root of `n`\\n     */\\n    function floorSqrt(uint256 n) internal pure returns (uint256) {\\n        unchecked {\\n            if (n > 0) {\\n                uint256 x = n / 2 + 1;\\n                uint256 y = (x + n / x) / 2;\\n                while (x > y) {\\n                    x = y;\\n                    y = (x + n / x) / 2;\\n                }\\n                return x;\\n            }\\n            return 0;\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the smallest integer larger than or equal to the square root of `n`\\n     */\\n    function ceilSqrt(uint256 n) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 x = floorSqrt(n);\\n            return x**2 == n ? x : x + 1;\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the largest integer smaller than or equal to the cubic root of `n`\\n     */\\n    function floorCbrt(uint256 n) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 x = 0;\\n            for (uint256 y = 1 << 255; y > 0; y >>= 3) {\\n                x <<= 1;\\n                uint256 z = 3 * x * (x + 1) + 1;\\n                if (n / y >= z) {\\n                    n -= y * z;\\n                    x += 1;\\n                }\\n            }\\n            return x;\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the smallest integer larger than or equal to the cubic root of `n`\\n     */\\n    function ceilCbrt(uint256 n) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 x = floorCbrt(n);\\n            return x**3 == n ? x : x + 1;\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the nearest integer to the quotient of `n` and `d` (or `n / d`)\\n     */\\n    function roundDiv(uint256 n, uint256 d) internal pure returns (uint256) {\\n        unchecked {\\n            return n / d + (n % d) / (d - d / 2);\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the largest integer smaller than or equal to `x * y / z`\\n     */\\n    function mulDivF(\\n        uint256 x,\\n        uint256 y,\\n        uint256 z\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            (uint256 xyh, uint256 xyl) = mul512(x, y);\\n            if (xyh == 0) {\\n                // `x * y < 2 ^ 256`\\n                return xyl / z;\\n            }\\n            if (xyh < z) {\\n                // `x * y / z < 2 ^ 256`\\n                uint256 m = mulMod(x, y, z); // `m = x * y % z`\\n                (uint256 nh, uint256 nl) = sub512(xyh, xyl, m); // `n = x * y - m` hence `n / z = floor(x * y / z)`\\n                if (nh == 0) {\\n                    // `n < 2 ^ 256`\\n                    return nl / z;\\n                }\\n                uint256 p = unsafeSub(0, z) & z; // `p` is the largest power of 2 which `z` is divisible by\\n                uint256 q = div512(nh, nl, p); // `n` is divisible by `p` because `n` is divisible by `z` and `z` is divisible by `p`\\n                uint256 r = inv256(z / p); // `z / p = 1 mod 2` hence `inverse(z / p) = 1 mod 2 ^ 256`\\n                return unsafeMul(q, r); // `q * r = (n / p) * inverse(z / p) = n / z`\\n            }\\n            revert(); // `x * y / z >= 2 ^ 256`\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the smallest integer larger than or equal to `x * y / z`\\n     */\\n    function mulDivC(\\n        uint256 x,\\n        uint256 y,\\n        uint256 z\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 w = mulDivF(x, y, z);\\n            if (mulMod(x, y, z) > 0) return safeAdd(w, 1);\\n            return w;\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the value of `x * y`\\n     */\\n    function mul512(uint256 x, uint256 y)\\n        private\\n        pure\\n        returns (uint256, uint256)\\n    {\\n        unchecked {\\n            uint256 p = mulModMax(x, y);\\n            uint256 q = unsafeMul(x, y);\\n            if (p >= q) return (p - q, q);\\n            return (unsafeSub(p, q) - 1, q);\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the value of `2 ^ 256 * xh + xl - y`, where `2 ^ 256 * xh + xl >= y`\\n     */\\n    function sub512(\\n        uint256 xh,\\n        uint256 xl,\\n        uint256 y\\n    ) private pure returns (uint256, uint256) {\\n        unchecked {\\n            if (xl >= y) return (xh, xl - y);\\n            return (xh - 1, unsafeSub(xl, y));\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the value of `(2 ^ 256 * xh + xl) / pow2n`, where `xl` is divisible by `pow2n`\\n     */\\n    function div512(\\n        uint256 xh,\\n        uint256 xl,\\n        uint256 pow2n\\n    ) private pure returns (uint256) {\\n        unchecked {\\n            uint256 pow2nInv = unsafeAdd(unsafeSub(0, pow2n) / pow2n, 1); // `1 << (256 - n)`\\n            return unsafeMul(xh, pow2nInv) | (xl / pow2n); // `(xh << (256 - n)) | (xl >> n)`\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the inverse of `d` modulo `2 ^ 256`, where `d` is congruent to `1` modulo `2`\\n     */\\n    function inv256(uint256 d) private pure returns (uint256) {\\n        unchecked {\\n            // approximate the root of `f(x) = 1 / x - d` using the newton\\u2013raphson convergence method\\n            uint256 x = 1;\\n            for (uint256 i = 0; i < 8; ++i)\\n                x = unsafeMul(x, unsafeSub(2, unsafeMul(x, d))); // `x = x * (2 - x * d) mod 2 ^ 256`\\n            return x;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2433205309bedeec21e98639f6e1b9ae4b72bddfd16d3c7caa23f0bedd74c07a\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/oracles/libs/Uint.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity >=0.8.0;\\n\\nuint256 constant MAX_VAL = type(uint256).max;\\n\\n// reverts on overflow\\nfunction safeAdd(uint256 x, uint256 y) pure returns (uint256) {\\n    return x + y;\\n}\\n\\n// does not revert on overflow\\nfunction unsafeAdd(uint256 x, uint256 y) pure returns (uint256) {\\n    unchecked {\\n        return x + y;\\n    }\\n}\\n\\n// does not revert on overflow\\nfunction unsafeSub(uint256 x, uint256 y) pure returns (uint256) {\\n    unchecked {\\n        return x - y;\\n    }\\n}\\n\\n// does not revert on overflow\\nfunction unsafeMul(uint256 x, uint256 y) pure returns (uint256) {\\n    unchecked {\\n        return x * y;\\n    }\\n}\\n\\n// does not overflow\\nfunction mulModMax(uint256 x, uint256 y) pure returns (uint256) {\\n    unchecked {\\n        return mulmod(x, y, MAX_VAL);\\n    }\\n}\\n\\n// does not overflow\\nfunction mulMod(\\n    uint256 x,\\n    uint256 y,\\n    uint256 z\\n) pure returns (uint256) {\\n    unchecked {\\n        return mulmod(x, y, z);\\n    }\\n}\\n\",\"keccak256\":\"0x998fcec9a910b59ed67db5af0939b271f062585a8c16a614b529197ed86d0a8d\",\"license\":\"SEE LICENSE IN LICENSE\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/oracles/libs/vMath.sol":{"vMath":{"abi":[{"inputs":[{"internalType":"uint8","name":"n","type":"uint8"},{"internalType":"uint256","name":"product","type":"uint256"}],"name":"geometric_mean","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"array","type":"uint256[]"}],"name":"min","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"nums","type":"uint256[]"}],"name":"product","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"61048861003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c80638e5fede814610050578063d834e61914610079578063f43b9abe1461008c575b600080fd5b61006361005e36600461033a565b61009f565b60405161007091906103d9565b60405180910390f35b61006361008736600461033a565b61012b565b61006361009a3660046103a9565b6101da565b600080838360008181106100c357634e487b7160e01b600052603260045260246000fd5b9050602002013590506000600190505b83811015610121578484828181106100fb57634e487b7160e01b600052603260045260246000fd5b905060200201358261010d91906103e2565b91508061011981610401565b9150506100d3565b5090505b92915050565b6000808383600081811061014f57634e487b7160e01b600052603260045260246000fd5b9050602002013590506000600190505b60ff81168411156101215784848260ff1681811061018d57634e487b7160e01b600052603260045260246000fd5b905060200201358211156101c85784848260ff168181106101be57634e487b7160e01b600052603260045260246000fd5b9050602002013591505b806101d28161041c565b91505061015f565b60008260ff16600214156101f8576101f182610201565b9050610125565b6101f1826102da565b600181600160801b811061021a5760409190911b9060801c5b6801000000000000000081106102355760209190911b9060401c5b640100000000811061024c5760109190911b9060201c5b6201000081106102615760089190911b9060101c5b61010081106102755760049190911b9060081c5b601081106102885760029190911b9060041c5b60088110610297578160011b91505b5080820401600190811c80830401811c80830401811c80830401811c80830401811c80830401811c80830401901c808204818110156102d4578091505b50919050565b600080600160ff1b5b801561033357600191821b918281018302600302018082868161031657634e487b7160e01b600052601260045260246000fd5b041061032a57808202850394506001830192505b5060031c6102e3565b5092915050565b6000806020838503121561034c578182fd5b823567ffffffffffffffff80821115610363578384fd5b818501915085601f830112610376578384fd5b813581811115610384578485fd5b8660208083028501011115610397578485fd5b60209290920196919550909350505050565b600080604083850312156103bb578081fd5b823560ff811681146103cb578182fd5b946020939093013593505050565b90815260200190565b60008160001904831182151516156103fc576103fc61043c565b500290565b60006000198214156104155761041561043c565b5060010190565b600060ff821660ff8114156104335761043361043c565b60010192915050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220546a8d78aae6409dd6fb516754d5b05b208459d12e15e1c22a8c186b030bc55764736f6c63430008000033","opcodes":"PUSH2 0x488 PUSH2 0x3A PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x2D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8E5FEDE8 EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xD834E619 EQ PUSH2 0x79 JUMPI DUP1 PUSH4 0xF43B9ABE EQ PUSH2 0x8C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x63 PUSH2 0x5E CALLDATASIZE PUSH1 0x4 PUSH2 0x33A JUMP JUMPDEST PUSH2 0x9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x70 SWAP2 SWAP1 PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x63 PUSH2 0x87 CALLDATASIZE PUSH1 0x4 PUSH2 0x33A JUMP JUMPDEST PUSH2 0x12B JUMP JUMPDEST PUSH2 0x63 PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0x3A9 JUMP JUMPDEST PUSH2 0x1DA JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0xC3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x121 JUMPI DUP5 DUP5 DUP3 DUP2 DUP2 LT PUSH2 0xFB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 PUSH2 0x10D SWAP2 SWAP1 PUSH2 0x3E2 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x119 DUP2 PUSH2 0x401 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD3 JUMP JUMPDEST POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x14F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0xFF DUP2 AND DUP5 GT ISZERO PUSH2 0x121 JUMPI DUP5 DUP5 DUP3 PUSH1 0xFF AND DUP2 DUP2 LT PUSH2 0x18D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 GT ISZERO PUSH2 0x1C8 JUMPI DUP5 DUP5 DUP3 PUSH1 0xFF AND DUP2 DUP2 LT PUSH2 0x1BE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP2 POP JUMPDEST DUP1 PUSH2 0x1D2 DUP2 PUSH2 0x41C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x15F JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0xFF AND PUSH1 0x2 EQ ISZERO PUSH2 0x1F8 JUMPI PUSH2 0x1F1 DUP3 PUSH2 0x201 JUMP JUMPDEST SWAP1 POP PUSH2 0x125 JUMP JUMPDEST PUSH2 0x1F1 DUP3 PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 PUSH1 0x80 SHL DUP2 LT PUSH2 0x21A JUMPI PUSH1 0x40 SWAP2 SWAP1 SWAP2 SHL SWAP1 PUSH1 0x80 SHR JUMPDEST PUSH9 0x10000000000000000 DUP2 LT PUSH2 0x235 JUMPI PUSH1 0x20 SWAP2 SWAP1 SWAP2 SHL SWAP1 PUSH1 0x40 SHR JUMPDEST PUSH5 0x100000000 DUP2 LT PUSH2 0x24C JUMPI PUSH1 0x10 SWAP2 SWAP1 SWAP2 SHL SWAP1 PUSH1 0x20 SHR JUMPDEST PUSH3 0x10000 DUP2 LT PUSH2 0x261 JUMPI PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHL SWAP1 PUSH1 0x10 SHR JUMPDEST PUSH2 0x100 DUP2 LT PUSH2 0x275 JUMPI PUSH1 0x4 SWAP2 SWAP1 SWAP2 SHL SWAP1 PUSH1 0x8 SHR JUMPDEST PUSH1 0x10 DUP2 LT PUSH2 0x288 JUMPI PUSH1 0x2 SWAP2 SWAP1 SWAP2 SHL SWAP1 PUSH1 0x4 SHR JUMPDEST PUSH1 0x8 DUP2 LT PUSH2 0x297 JUMPI DUP2 PUSH1 0x1 SHL SWAP2 POP JUMPDEST POP DUP1 DUP3 DIV ADD PUSH1 0x1 SWAP1 DUP2 SHR DUP1 DUP4 DIV ADD DUP2 SHR DUP1 DUP4 DIV ADD DUP2 SHR DUP1 DUP4 DIV ADD DUP2 SHR DUP1 DUP4 DIV ADD DUP2 SHR DUP1 DUP4 DIV ADD DUP2 SHR DUP1 DUP4 DIV ADD SWAP1 SHR DUP1 DUP3 DIV DUP2 DUP2 LT ISZERO PUSH2 0x2D4 JUMPI DUP1 SWAP2 POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0xFF SHL JUMPDEST DUP1 ISZERO PUSH2 0x333 JUMPI PUSH1 0x1 SWAP2 DUP3 SHL SWAP2 DUP3 DUP2 ADD DUP4 MUL PUSH1 0x3 MUL ADD DUP1 DUP3 DUP7 DUP2 PUSH2 0x316 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV LT PUSH2 0x32A JUMPI DUP1 DUP3 MUL DUP6 SUB SWAP5 POP PUSH1 0x1 DUP4 ADD SWAP3 POP JUMPDEST POP PUSH1 0x3 SHR PUSH2 0x2E3 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x34C JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x363 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x376 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x384 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP1 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x397 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3BB JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x3CB JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3FC JUMPI PUSH2 0x3FC PUSH2 0x43C JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x415 JUMPI PUSH2 0x415 PUSH2 0x43C JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x433 JUMPI PUSH2 0x433 PUSH2 0x43C JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD PUSH11 0x8D78AAE6409DD6FB516754 0xD5 0xB0 JUMPDEST KECCAK256 DUP5 MSIZE 0xD1 0x2E ISZERO 0xE1 0xC2 0x2A DUP13 XOR PUSH12 0x30BC55764736F6C63430008 STOP STOP CALLER ","sourceMap":"135:978:20:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;135:978:20;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1859:22","statements":[{"nodeType":"YulBlock","src":"6:3:22","statements":[]},{"body":{"nodeType":"YulBlock","src":"119:561:22","statements":[{"body":{"nodeType":"YulBlock","src":"165:26:22","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"174:6:22"},{"name":"value0","nodeType":"YulIdentifier","src":"182:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"167:6:22"},"nodeType":"YulFunctionCall","src":"167:22:22"},"nodeType":"YulExpressionStatement","src":"167:22:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"140:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"149:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"136:3:22"},"nodeType":"YulFunctionCall","src":"136:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"161:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"132:3:22"},"nodeType":"YulFunctionCall","src":"132:32:22"},"nodeType":"YulIf","src":"129:2:22"},{"nodeType":"YulVariableDeclaration","src":"200:37:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"227:9:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"214:12:22"},"nodeType":"YulFunctionCall","src":"214:23:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"204:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"246:28:22","value":{"kind":"number","nodeType":"YulLiteral","src":"256:18:22","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"250:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"301:26:22","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"310:6:22"},{"name":"value0","nodeType":"YulIdentifier","src":"318:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"303:6:22"},"nodeType":"YulFunctionCall","src":"303:22:22"},"nodeType":"YulExpressionStatement","src":"303:22:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"289:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"297:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"286:2:22"},"nodeType":"YulFunctionCall","src":"286:14:22"},"nodeType":"YulIf","src":"283:2:22"},{"nodeType":"YulVariableDeclaration","src":"336:32:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"350:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"361:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"346:3:22"},"nodeType":"YulFunctionCall","src":"346:22:22"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"340:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"416:26:22","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"425:6:22"},{"name":"value0","nodeType":"YulIdentifier","src":"433:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"418:6:22"},"nodeType":"YulFunctionCall","src":"418:22:22"},"nodeType":"YulExpressionStatement","src":"418:22:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"395:2:22"},{"kind":"number","nodeType":"YulLiteral","src":"399:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"391:3:22"},"nodeType":"YulFunctionCall","src":"391:13:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"406:7:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"387:3:22"},"nodeType":"YulFunctionCall","src":"387:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"380:6:22"},"nodeType":"YulFunctionCall","src":"380:35:22"},"nodeType":"YulIf","src":"377:2:22"},{"nodeType":"YulVariableDeclaration","src":"451:30:22","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"478:2:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"465:12:22"},"nodeType":"YulFunctionCall","src":"465:16:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"455:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"508:26:22","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"517:6:22"},{"name":"value0","nodeType":"YulIdentifier","src":"525:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"510:6:22"},"nodeType":"YulFunctionCall","src":"510:22:22"},"nodeType":"YulExpressionStatement","src":"510:22:22"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"496:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"504:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"493:2:22"},"nodeType":"YulFunctionCall","src":"493:14:22"},"nodeType":"YulIf","src":"490:2:22"},{"body":{"nodeType":"YulBlock","src":"593:26:22","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"602:6:22"},{"name":"value0","nodeType":"YulIdentifier","src":"610:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"595:6:22"},"nodeType":"YulFunctionCall","src":"595:22:22"},"nodeType":"YulExpressionStatement","src":"595:22:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"557:2:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"565:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"573:2:22","type":"","value":"32"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"561:3:22"},"nodeType":"YulFunctionCall","src":"561:15:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"553:3:22"},"nodeType":"YulFunctionCall","src":"553:24:22"},{"kind":"number","nodeType":"YulLiteral","src":"579:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"549:3:22"},"nodeType":"YulFunctionCall","src":"549:33:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"584:7:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"546:2:22"},"nodeType":"YulFunctionCall","src":"546:46:22"},"nodeType":"YulIf","src":"543:2:22"},{"nodeType":"YulAssignment","src":"628:21:22","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"642:2:22"},{"kind":"number","nodeType":"YulLiteral","src":"646:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"638:3:22"},"nodeType":"YulFunctionCall","src":"638:11:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"628:6:22"}]},{"nodeType":"YulAssignment","src":"658:16:22","value":{"name":"length","nodeType":"YulIdentifier","src":"668:6:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"658:6:22"}]}]},"name":"abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"77:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"88:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"100:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"108:6:22","type":""}],"src":"14:666:22"},{"body":{"nodeType":"YulBlock","src":"770:272:22","statements":[{"body":{"nodeType":"YulBlock","src":"816:26:22","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"825:6:22"},{"name":"value1","nodeType":"YulIdentifier","src":"833:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"818:6:22"},"nodeType":"YulFunctionCall","src":"818:22:22"},"nodeType":"YulExpressionStatement","src":"818:22:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"791:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"800:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"787:3:22"},"nodeType":"YulFunctionCall","src":"787:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"812:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"783:3:22"},"nodeType":"YulFunctionCall","src":"783:32:22"},"nodeType":"YulIf","src":"780:2:22"},{"nodeType":"YulVariableDeclaration","src":"851:36:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"877:9:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"864:12:22"},"nodeType":"YulFunctionCall","src":"864:23:22"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"855:5:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"935:26:22","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"944:6:22"},{"name":"value1","nodeType":"YulIdentifier","src":"952:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"937:6:22"},"nodeType":"YulFunctionCall","src":"937:22:22"},"nodeType":"YulExpressionStatement","src":"937:22:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"909:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"920:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"927:4:22","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"916:3:22"},"nodeType":"YulFunctionCall","src":"916:16:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"906:2:22"},"nodeType":"YulFunctionCall","src":"906:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"899:6:22"},"nodeType":"YulFunctionCall","src":"899:35:22"},"nodeType":"YulIf","src":"896:2:22"},{"nodeType":"YulAssignment","src":"970:15:22","value":{"name":"value","nodeType":"YulIdentifier","src":"980:5:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"970:6:22"}]},{"nodeType":"YulAssignment","src":"994:42:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1021:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1032:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1017:3:22"},"nodeType":"YulFunctionCall","src":"1017:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1004:12:22"},"nodeType":"YulFunctionCall","src":"1004:32:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"994:6:22"}]}]},"name":"abi_decode_tuple_t_uint8t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"728:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"739:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"751:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"759:6:22","type":""}],"src":"685:357:22"},{"body":{"nodeType":"YulBlock","src":"1156:76:22","statements":[{"nodeType":"YulAssignment","src":"1166:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1178:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1189:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1174:3:22"},"nodeType":"YulFunctionCall","src":"1174:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1166:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1208:9:22"},{"name":"value0","nodeType":"YulIdentifier","src":"1219:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1201:6:22"},"nodeType":"YulFunctionCall","src":"1201:25:22"},"nodeType":"YulExpressionStatement","src":"1201:25:22"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1125:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1136:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1147:4:22","type":""}],"src":"1047:185:22"},{"body":{"nodeType":"YulBlock","src":"1289:116:22","statements":[{"body":{"nodeType":"YulBlock","src":"1348:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"1350:16:22"},"nodeType":"YulFunctionCall","src":"1350:18:22"},"nodeType":"YulExpressionStatement","src":"1350:18:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"1320:1:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1313:6:22"},"nodeType":"YulFunctionCall","src":"1313:9:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1306:6:22"},"nodeType":"YulFunctionCall","src":"1306:17:22"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"1328:1:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1339:1:22","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1335:3:22"},"nodeType":"YulFunctionCall","src":"1335:6:22"},{"name":"x","nodeType":"YulIdentifier","src":"1343:1:22"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1331:3:22"},"nodeType":"YulFunctionCall","src":"1331:14:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1325:2:22"},"nodeType":"YulFunctionCall","src":"1325:21:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1302:3:22"},"nodeType":"YulFunctionCall","src":"1302:45:22"},"nodeType":"YulIf","src":"1299:2:22"},{"nodeType":"YulAssignment","src":"1379:20:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"1394:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"1397:1:22"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1390:3:22"},"nodeType":"YulFunctionCall","src":"1390:9:22"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"1379:7:22"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"1268:1:22","type":""},{"name":"y","nodeType":"YulTypedName","src":"1271:1:22","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"1277:7:22","type":""}],"src":"1237:168:22"},{"body":{"nodeType":"YulBlock","src":"1457:88:22","statements":[{"body":{"nodeType":"YulBlock","src":"1488:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"1490:16:22"},"nodeType":"YulFunctionCall","src":"1490:18:22"},"nodeType":"YulExpressionStatement","src":"1490:18:22"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1473:5:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1484:1:22","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1480:3:22"},"nodeType":"YulFunctionCall","src":"1480:6:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1470:2:22"},"nodeType":"YulFunctionCall","src":"1470:17:22"},"nodeType":"YulIf","src":"1467:2:22"},{"nodeType":"YulAssignment","src":"1519:20:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1530:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"1537:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1526:3:22"},"nodeType":"YulFunctionCall","src":"1526:13:22"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1519:3:22"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1439:5:22","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1449:3:22","type":""}],"src":"1410:135:22"},{"body":{"nodeType":"YulBlock","src":"1595:130:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1605:31:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1624:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"1631:4:22","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1620:3:22"},"nodeType":"YulFunctionCall","src":"1620:16:22"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"1609:7:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"1666:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"1668:16:22"},"nodeType":"YulFunctionCall","src":"1668:18:22"},"nodeType":"YulExpressionStatement","src":"1668:18:22"}]},"condition":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"1651:7:22"},{"kind":"number","nodeType":"YulLiteral","src":"1660:4:22","type":"","value":"0xff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1648:2:22"},"nodeType":"YulFunctionCall","src":"1648:17:22"},"nodeType":"YulIf","src":"1645:2:22"},{"nodeType":"YulAssignment","src":"1697:22:22","value":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"1708:7:22"},{"kind":"number","nodeType":"YulLiteral","src":"1717:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1704:3:22"},"nodeType":"YulFunctionCall","src":"1704:15:22"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1697:3:22"}]}]},"name":"increment_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1577:5:22","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1587:3:22","type":""}],"src":"1550:175:22"},{"body":{"nodeType":"YulBlock","src":"1762:95:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1779:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1786:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1791:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1782:3:22"},"nodeType":"YulFunctionCall","src":"1782:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1772:6:22"},"nodeType":"YulFunctionCall","src":"1772:31:22"},"nodeType":"YulExpressionStatement","src":"1772:31:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1819:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1822:4:22","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1812:6:22"},"nodeType":"YulFunctionCall","src":"1812:15:22"},"nodeType":"YulExpressionStatement","src":"1812:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1843:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1846:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1836:6:22"},"nodeType":"YulFunctionCall","src":"1836:15:22"},"nodeType":"YulExpressionStatement","src":"1836:15:22"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"1730:127:22"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value0, value0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value0, value0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(value0, value0) }\n        if gt(add(add(_2, mul(length, 32)), 32), dataEnd) { revert(value0, value0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_decode_tuple_t_uint8t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(value1, value1) }\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function increment_t_uint8(value) -> ret\n    {\n        let value_1 := and(value, 0xff)\n        if eq(value_1, 0xff) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}","id":22,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c80638e5fede814610050578063d834e61914610079578063f43b9abe1461008c575b600080fd5b61006361005e36600461033a565b61009f565b60405161007091906103d9565b60405180910390f35b61006361008736600461033a565b61012b565b61006361009a3660046103a9565b6101da565b600080838360008181106100c357634e487b7160e01b600052603260045260246000fd5b9050602002013590506000600190505b83811015610121578484828181106100fb57634e487b7160e01b600052603260045260246000fd5b905060200201358261010d91906103e2565b91508061011981610401565b9150506100d3565b5090505b92915050565b6000808383600081811061014f57634e487b7160e01b600052603260045260246000fd5b9050602002013590506000600190505b60ff81168411156101215784848260ff1681811061018d57634e487b7160e01b600052603260045260246000fd5b905060200201358211156101c85784848260ff168181106101be57634e487b7160e01b600052603260045260246000fd5b9050602002013591505b806101d28161041c565b91505061015f565b60008260ff16600214156101f8576101f182610201565b9050610125565b6101f1826102da565b600181600160801b811061021a5760409190911b9060801c5b6801000000000000000081106102355760209190911b9060401c5b640100000000811061024c5760109190911b9060201c5b6201000081106102615760089190911b9060101c5b61010081106102755760049190911b9060081c5b601081106102885760029190911b9060041c5b60088110610297578160011b91505b5080820401600190811c80830401811c80830401811c80830401811c80830401811c80830401811c80830401901c808204818110156102d4578091505b50919050565b600080600160ff1b5b801561033357600191821b918281018302600302018082868161031657634e487b7160e01b600052601260045260246000fd5b041061032a57808202850394506001830192505b5060031c6102e3565b5092915050565b6000806020838503121561034c578182fd5b823567ffffffffffffffff80821115610363578384fd5b818501915085601f830112610376578384fd5b813581811115610384578485fd5b8660208083028501011115610397578485fd5b60209290920196919550909350505050565b600080604083850312156103bb578081fd5b823560ff811681146103cb578182fd5b946020939093013593505050565b90815260200190565b60008160001904831182151516156103fc576103fc61043c565b500290565b60006000198214156104155761041561043c565b5060010190565b600060ff821660ff8114156104335761043361043c565b60010192915050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220546a8d78aae6409dd6fb516754d5b05b208459d12e15e1c22a8c186b030bc55764736f6c63430008000033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8E5FEDE8 EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xD834E619 EQ PUSH2 0x79 JUMPI DUP1 PUSH4 0xF43B9ABE EQ PUSH2 0x8C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x63 PUSH2 0x5E CALLDATASIZE PUSH1 0x4 PUSH2 0x33A JUMP JUMPDEST PUSH2 0x9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x70 SWAP2 SWAP1 PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x63 PUSH2 0x87 CALLDATASIZE PUSH1 0x4 PUSH2 0x33A JUMP JUMPDEST PUSH2 0x12B JUMP JUMPDEST PUSH2 0x63 PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0x3A9 JUMP JUMPDEST PUSH2 0x1DA JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0xC3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x121 JUMPI DUP5 DUP5 DUP3 DUP2 DUP2 LT PUSH2 0xFB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 PUSH2 0x10D SWAP2 SWAP1 PUSH2 0x3E2 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x119 DUP2 PUSH2 0x401 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD3 JUMP JUMPDEST POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x14F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0xFF DUP2 AND DUP5 GT ISZERO PUSH2 0x121 JUMPI DUP5 DUP5 DUP3 PUSH1 0xFF AND DUP2 DUP2 LT PUSH2 0x18D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 GT ISZERO PUSH2 0x1C8 JUMPI DUP5 DUP5 DUP3 PUSH1 0xFF AND DUP2 DUP2 LT PUSH2 0x1BE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP2 POP JUMPDEST DUP1 PUSH2 0x1D2 DUP2 PUSH2 0x41C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x15F JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0xFF AND PUSH1 0x2 EQ ISZERO PUSH2 0x1F8 JUMPI PUSH2 0x1F1 DUP3 PUSH2 0x201 JUMP JUMPDEST SWAP1 POP PUSH2 0x125 JUMP JUMPDEST PUSH2 0x1F1 DUP3 PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 PUSH1 0x80 SHL DUP2 LT PUSH2 0x21A JUMPI PUSH1 0x40 SWAP2 SWAP1 SWAP2 SHL SWAP1 PUSH1 0x80 SHR JUMPDEST PUSH9 0x10000000000000000 DUP2 LT PUSH2 0x235 JUMPI PUSH1 0x20 SWAP2 SWAP1 SWAP2 SHL SWAP1 PUSH1 0x40 SHR JUMPDEST PUSH5 0x100000000 DUP2 LT PUSH2 0x24C JUMPI PUSH1 0x10 SWAP2 SWAP1 SWAP2 SHL SWAP1 PUSH1 0x20 SHR JUMPDEST PUSH3 0x10000 DUP2 LT PUSH2 0x261 JUMPI PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHL SWAP1 PUSH1 0x10 SHR JUMPDEST PUSH2 0x100 DUP2 LT PUSH2 0x275 JUMPI PUSH1 0x4 SWAP2 SWAP1 SWAP2 SHL SWAP1 PUSH1 0x8 SHR JUMPDEST PUSH1 0x10 DUP2 LT PUSH2 0x288 JUMPI PUSH1 0x2 SWAP2 SWAP1 SWAP2 SHL SWAP1 PUSH1 0x4 SHR JUMPDEST PUSH1 0x8 DUP2 LT PUSH2 0x297 JUMPI DUP2 PUSH1 0x1 SHL SWAP2 POP JUMPDEST POP DUP1 DUP3 DIV ADD PUSH1 0x1 SWAP1 DUP2 SHR DUP1 DUP4 DIV ADD DUP2 SHR DUP1 DUP4 DIV ADD DUP2 SHR DUP1 DUP4 DIV ADD DUP2 SHR DUP1 DUP4 DIV ADD DUP2 SHR DUP1 DUP4 DIV ADD DUP2 SHR DUP1 DUP4 DIV ADD SWAP1 SHR DUP1 DUP3 DIV DUP2 DUP2 LT ISZERO PUSH2 0x2D4 JUMPI DUP1 SWAP2 POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0xFF SHL JUMPDEST DUP1 ISZERO PUSH2 0x333 JUMPI PUSH1 0x1 SWAP2 DUP3 SHL SWAP2 DUP3 DUP2 ADD DUP4 MUL PUSH1 0x3 MUL ADD DUP1 DUP3 DUP7 DUP2 PUSH2 0x316 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV LT PUSH2 0x32A JUMPI DUP1 DUP3 MUL DUP6 SUB SWAP5 POP PUSH1 0x1 DUP4 ADD SWAP3 POP JUMPDEST POP PUSH1 0x3 SHR PUSH2 0x2E3 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x34C JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x363 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x376 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x384 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP1 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x397 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3BB JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x3CB JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3FC JUMPI PUSH2 0x3FC PUSH2 0x43C JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x415 JUMPI PUSH2 0x415 PUSH2 0x43C JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x433 JUMPI PUSH2 0x433 PUSH2 0x43C JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD PUSH11 0x8D78AAE6409DD6FB516754 0xD5 0xB0 JUMPDEST KECCAK256 DUP5 MSIZE 0xD1 0x2E ISZERO 0xE1 0xC2 0x2A DUP13 XOR PUSH12 0x30BC55764736F6C63430008 STOP STOP CALLER ","sourceMap":"135:978:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;513:234;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;236:271;;;;;;:::i;:::-;;:::i;820:291::-;;;;;;:::i;:::-;;:::i;513:234::-;578:7;597:15;615:4;;620:1;615:7;;;;;-1:-1:-1;;;615:7:20;;;;;;;;;;;;;;;597:25;;637:9;649:1;637:13;;632:85;652:15;;;632:85;;;699:4;;704:1;699:7;;;;;-1:-1:-1;;;699:7:20;;;;;;;;;;;;;;;688:18;;;;;:::i;:::-;;-1:-1:-1;669:3:20;;;;:::i;:::-;;;;632:85;;;-1:-1:-1;733:7:20;-1:-1:-1;513:234:20;;;;;:::o;236:271::-;298:7;317:11;331:5;;337:1;331:8;;;;;-1:-1:-1;;;331:8:20;;;;;;;;;;;;;;;317:22;;354:7;364:1;354:11;;349:132;367:16;;;;-1:-1:-1;349:132:20;;;414:5;;420:1;414:8;;;;;;;-1:-1:-1;;;414:8:20;;;;;;;;;;;;;;;408:3;:14;404:67;;;448:5;;454:1;448:8;;;;;;;-1:-1:-1;;;448:8:20;;;;;;;;;;;;;;;442:14;;404:67;385:3;;;;:::i;:::-;;;;349:132;;820:291;917:7;944:1;:6;;949:1;944:6;940:165;;;973:31;996:7;973:22;:31::i;:::-;966:38;;;;940:165;1063:31;1086:7;1063:22;:31::i;5908:2116:17:-;6043:1;6127;-1:-1:-1;;;6220:42:17;;6210:2;;6354;6350:10;;;;;6291:3;6287:11;6210:2;6435:19;6432:1;6429:26;6419:2;;6545;6541:10;;;;;6484:2;6480:10;6419:2;6626:11;6623:1;6620:18;6610:2;;6728;6724:10;;;;;6667:2;6663:10;6610:2;6809:7;6806:1;6803:14;6793:2;;6907:1;6903:9;;;;;6846:2;6842:10;6793:2;6986:5;6983:1;6980:12;6970:2;;7080:1;7076:9;;;;;7021:1;7017:9;6970:2;7159:4;7156:1;7153:11;7143:2;;7252:1;7248:9;;;;;7193:1;7189:9;7143:2;7331:3;7328:1;7325:10;7315:2;;7408:1;7405;7401:9;7396:14;;7315:2;-1:-1:-1;7515:9:17;;;7508:17;7505:1;7501:25;;;7558:9;;;7551:17;7544:25;;7601:9;;;7594:17;7587:25;;7644:9;;;7637:17;7630:25;;7687:9;;;7680:17;7673:25;;7730:9;;;7723:17;7716:25;;7773:9;;;7766:17;7759:25;;7868:9;;;7943:17;;;7940:2;;;7984:10;7979:15;;7940:2;;5986:2032;;;:::o;1731:405:18:-;1784:7;;-1:-1:-1;;;1854:244:18;1881:5;;1854:244;;1921:1;1915:7;;;;1961:5;;;1952:15;;:1;:15;:19;;1997:1;1993;1997;1993:5;;-1:-1:-1;;;1993:5:18;;;;;;;;;;:10;1989:95;;2036:1;2032;:5;2027:10;;;;2064:1;2059:6;;;;1989:95;-1:-1:-1;1894:1:18;1888:7;1854:244;;;-1:-1:-1;2118:1:18;1731:405;-1:-1:-1;;1731:405:18:o;14:666:22:-;;;161:2;149:9;140:7;136:23;132:32;129:2;;;182:6;174;167:22;129:2;227:9;214:23;256:18;297:2;289:6;286:14;283:2;;;318:6;310;303:22;283:2;361:6;350:9;346:22;336:32;;406:7;399:4;395:2;391:13;387:27;377:2;;433:6;425;418:22;377:2;478;465:16;504:2;496:6;493:14;490:2;;;525:6;517;510:22;490:2;584:7;579:2;573;565:6;561:15;557:2;553:24;549:33;546:46;543:2;;;610:6;602;595:22;543:2;646;638:11;;;;;668:6;;-1:-1:-1;119:561:22;;-1:-1:-1;;;;119:561:22:o;685:357::-;;;812:2;800:9;791:7;787:23;783:32;780:2;;;833:6;825;818:22;780:2;877:9;864:23;927:4;920:5;916:16;909:5;906:27;896:2;;952:6;944;937:22;896:2;980:5;1032:2;1017:18;;;;1004:32;;-1:-1:-1;;;770:272:22:o;1047:185::-;1201:25;;;1189:2;1174:18;;1156:76::o;1237:168::-;;1343:1;1339;1335:6;1331:14;1328:1;1325:21;1320:1;1313:9;1306:17;1302:45;1299:2;;;1350:18;;:::i;:::-;-1:-1:-1;1390:9:22;;1289:116::o;1410:135::-;;-1:-1:-1;;1470:17:22;;1467:2;;;1490:18;;:::i;:::-;-1:-1:-1;1537:1:22;1526:13;;1457:88::o;1550:175::-;;1631:4;1624:5;1620:16;1660:4;1651:7;1648:17;1645:2;;;1668:18;;:::i;:::-;1717:1;1704:15;;1595:130;-1:-1:-1;;1595:130:22:o;1730:127::-;1791:10;1786:3;1782:20;1779:1;1772:31;1822:4;1819:1;1812:15;1846:4;1843:1;1836:15"},"gasEstimates":{"creation":{"codeDepositCost":"232000","executionCost":"306","totalCost":"232306"},"external":{"geometric_mean(uint8,uint256)":"infinite","min(uint256[])":"infinite","product(uint256[])":"infinite"}},"methodIdentifiers":{"geometric_mean(uint8,uint256)":"f43b9abe","min(uint256[])":"d834e619","product(uint256[])":"8e5fede8"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"n\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"product\",\"type\":\"uint256\"}],\"name\":\"geometric_mean\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"array\",\"type\":\"uint256[]\"}],\"name\":\"min\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"nums\",\"type\":\"uint256[]\"}],\"name\":\"product\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracles/libs/vMath.sol\":\"vMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/oracles/libs/FixedPointMathLib.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Arithmetic library with operations for fixed-point numbers.\\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/utils/FixedPointMathLib.sol)\\n/// @author Inspired by USM (https://github.com/usmfum/USM/blob/master/contracts/WadMath.sol)\\nlibrary FixedPointMathLib {\\n    /*//////////////////////////////////////////////////////////////\\n                    SIMPLIFIED FIXED POINT OPERATIONS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 internal constant WAD = 1e18; // The scalar of ETH and most ERC20s.\\n\\n    function mulWadDown(uint256 x, uint256 y) internal pure returns (uint256) {\\n        return mulDivDown(x, y, WAD); // Equivalent to (x * y) / WAD rounded down.\\n    }\\n\\n    function mulWadUp(uint256 x, uint256 y) internal pure returns (uint256) {\\n        return mulDivUp(x, y, WAD); // Equivalent to (x * y) / WAD rounded up.\\n    }\\n\\n    function divWadDown(uint256 x, uint256 y) internal pure returns (uint256) {\\n        return mulDivDown(x, WAD, y); // Equivalent to (x * WAD) / y rounded down.\\n    }\\n\\n    function divWadUp(uint256 x, uint256 y) internal pure returns (uint256) {\\n        return mulDivUp(x, WAD, y); // Equivalent to (x * WAD) / y rounded up.\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                    LOW LEVEL FIXED POINT OPERATIONS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function mulDivDown(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 z) {\\n        assembly {\\n            // Store x * y in z for now.\\n            z := mul(x, y)\\n\\n            // Equivalent to require(denominator != 0 && (x == 0 || (x * y) / x == y))\\n            if iszero(\\n                and(\\n                    iszero(iszero(denominator)),\\n                    or(iszero(x), eq(div(z, x), y))\\n                )\\n            ) {\\n                revert(0, 0)\\n            }\\n\\n            // Divide z by the denominator.\\n            z := div(z, denominator)\\n        }\\n    }\\n\\n    function mulDivUp(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 z) {\\n        assembly {\\n            // Store x * y in z for now.\\n            z := mul(x, y)\\n\\n            // Equivalent to require(denominator != 0 && (x == 0 || (x * y) / x == y))\\n            if iszero(\\n                and(\\n                    iszero(iszero(denominator)),\\n                    or(iszero(x), eq(div(z, x), y))\\n                )\\n            ) {\\n                revert(0, 0)\\n            }\\n\\n            // First, divide z - 1 by the denominator and add 1.\\n            // We allow z - 1 to underflow if z is 0, because we multiply the\\n            // end result by 0 if z is zero, ensuring we return 0 if z is zero.\\n            z := mul(iszero(iszero(z)), add(div(sub(z, 1), denominator), 1))\\n        }\\n    }\\n\\n    function rpow(\\n        uint256 x,\\n        uint256 n,\\n        uint256 scalar\\n    ) internal pure returns (uint256 z) {\\n        assembly {\\n            switch x\\n            case 0 {\\n                switch n\\n                case 0 {\\n                    // 0 ** 0 = 1\\n                    z := scalar\\n                }\\n                default {\\n                    // 0 ** n = 0\\n                    z := 0\\n                }\\n            }\\n            default {\\n                switch mod(n, 2)\\n                case 0 {\\n                    // If n is even, store scalar in z for now.\\n                    z := scalar\\n                }\\n                default {\\n                    // If n is odd, store x in z for now.\\n                    z := x\\n                }\\n\\n                // Shifting right by 1 is like dividing by 2.\\n                let half := shr(1, scalar)\\n\\n                for {\\n                    // Shift n right by 1 before looping to halve it.\\n                    n := shr(1, n)\\n                } n {\\n                    // Shift n right by 1 each iteration to halve it.\\n                    n := shr(1, n)\\n                } {\\n                    // Revert immediately if x ** 2 would overflow.\\n                    // Equivalent to iszero(eq(div(xx, x), x)) here.\\n                    if shr(128, x) {\\n                        revert(0, 0)\\n                    }\\n\\n                    // Store x squared.\\n                    let xx := mul(x, x)\\n\\n                    // Round to the nearest number.\\n                    let xxRound := add(xx, half)\\n\\n                    // Revert if xx + half overflowed.\\n                    if lt(xxRound, xx) {\\n                        revert(0, 0)\\n                    }\\n\\n                    // Set x to scaled xxRound.\\n                    x := div(xxRound, scalar)\\n\\n                    // If n is even:\\n                    if mod(n, 2) {\\n                        // Compute z * x.\\n                        let zx := mul(z, x)\\n\\n                        // If z * x overflowed:\\n                        if iszero(eq(div(zx, x), z)) {\\n                            // Revert if x is non-zero.\\n                            if iszero(iszero(x)) {\\n                                revert(0, 0)\\n                            }\\n                        }\\n\\n                        // Round to the nearest number.\\n                        let zxRound := add(zx, half)\\n\\n                        // Revert if zx + half overflowed.\\n                        if lt(zxRound, zx) {\\n                            revert(0, 0)\\n                        }\\n\\n                        // Return properly scaled zxRound.\\n                        z := div(zxRound, scalar)\\n                    }\\n                }\\n            }\\n        }\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                        GENERAL NUMBER UTILITIES\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function sqrt(uint256 x) internal pure returns (uint256 z) {\\n        assembly {\\n            // Start off with z at 1.\\n            z := 1\\n\\n            // Used below to help find a nearby power of 2.\\n            let y := x\\n\\n            // Find the lowest power of 2 that is at least sqrt(x).\\n            if iszero(lt(y, 0x100000000000000000000000000000000)) {\\n                y := shr(128, y) // Like dividing by 2 ** 128.\\n                z := shl(64, z) // Like multiplying by 2 ** 64.\\n            }\\n            if iszero(lt(y, 0x10000000000000000)) {\\n                y := shr(64, y) // Like dividing by 2 ** 64.\\n                z := shl(32, z) // Like multiplying by 2 ** 32.\\n            }\\n            if iszero(lt(y, 0x100000000)) {\\n                y := shr(32, y) // Like dividing by 2 ** 32.\\n                z := shl(16, z) // Like multiplying by 2 ** 16.\\n            }\\n            if iszero(lt(y, 0x10000)) {\\n                y := shr(16, y) // Like dividing by 2 ** 16.\\n                z := shl(8, z) // Like multiplying by 2 ** 8.\\n            }\\n            if iszero(lt(y, 0x100)) {\\n                y := shr(8, y) // Like dividing by 2 ** 8.\\n                z := shl(4, z) // Like multiplying by 2 ** 4.\\n            }\\n            if iszero(lt(y, 0x10)) {\\n                y := shr(4, y) // Like dividing by 2 ** 4.\\n                z := shl(2, z) // Like multiplying by 2 ** 2.\\n            }\\n            if iszero(lt(y, 0x8)) {\\n                // Equivalent to 2 ** z.\\n                z := shl(1, z)\\n            }\\n\\n            // Shifting right by 1 is like dividing by 2.\\n            z := shr(1, add(z, div(x, z)))\\n            z := shr(1, add(z, div(x, z)))\\n            z := shr(1, add(z, div(x, z)))\\n            z := shr(1, add(z, div(x, z)))\\n            z := shr(1, add(z, div(x, z)))\\n            z := shr(1, add(z, div(x, z)))\\n            z := shr(1, add(z, div(x, z)))\\n\\n            // Compute a rounded down version of z.\\n            let zRoundDown := div(x, z)\\n\\n            // If zRoundDown is smaller, use it.\\n            if lt(zRoundDown, z) {\\n                z := zRoundDown\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xcc1552fe037c973c1ab30f607708735de7626eb22dcf6b2a02f2a39fa5d2b965\",\"license\":\"AGPL-3.0-only\"},\"contracts/oracles/libs/IntegralMath.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity >=0.8.0;\\n\\nimport \\\"./Uint.sol\\\";\\n\\nlibrary IntegralMath {\\n    /**\\n     * @dev Compute the largest integer smaller than or equal to the binary logarithm of `n`\\n     */\\n    function floorLog2(uint256 n) internal pure returns (uint8) {\\n        unchecked {\\n            uint8 res = 0;\\n\\n            if (n < 256) {\\n                // at most 8 iterations\\n                while (n > 1) {\\n                    n >>= 1;\\n                    res += 1;\\n                }\\n            } else {\\n                // exactly 8 iterations\\n                for (uint8 s = 128; s > 0; s >>= 1) {\\n                    if (n >= 1 << s) {\\n                        n >>= s;\\n                        res |= s;\\n                    }\\n                }\\n            }\\n\\n            return res;\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the largest integer smaller than or equal to the square root of `n`\\n     */\\n    function floorSqrt(uint256 n) internal pure returns (uint256) {\\n        unchecked {\\n            if (n > 0) {\\n                uint256 x = n / 2 + 1;\\n                uint256 y = (x + n / x) / 2;\\n                while (x > y) {\\n                    x = y;\\n                    y = (x + n / x) / 2;\\n                }\\n                return x;\\n            }\\n            return 0;\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the smallest integer larger than or equal to the square root of `n`\\n     */\\n    function ceilSqrt(uint256 n) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 x = floorSqrt(n);\\n            return x**2 == n ? x : x + 1;\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the largest integer smaller than or equal to the cubic root of `n`\\n     */\\n    function floorCbrt(uint256 n) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 x = 0;\\n            for (uint256 y = 1 << 255; y > 0; y >>= 3) {\\n                x <<= 1;\\n                uint256 z = 3 * x * (x + 1) + 1;\\n                if (n / y >= z) {\\n                    n -= y * z;\\n                    x += 1;\\n                }\\n            }\\n            return x;\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the smallest integer larger than or equal to the cubic root of `n`\\n     */\\n    function ceilCbrt(uint256 n) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 x = floorCbrt(n);\\n            return x**3 == n ? x : x + 1;\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the nearest integer to the quotient of `n` and `d` (or `n / d`)\\n     */\\n    function roundDiv(uint256 n, uint256 d) internal pure returns (uint256) {\\n        unchecked {\\n            return n / d + (n % d) / (d - d / 2);\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the largest integer smaller than or equal to `x * y / z`\\n     */\\n    function mulDivF(\\n        uint256 x,\\n        uint256 y,\\n        uint256 z\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            (uint256 xyh, uint256 xyl) = mul512(x, y);\\n            if (xyh == 0) {\\n                // `x * y < 2 ^ 256`\\n                return xyl / z;\\n            }\\n            if (xyh < z) {\\n                // `x * y / z < 2 ^ 256`\\n                uint256 m = mulMod(x, y, z); // `m = x * y % z`\\n                (uint256 nh, uint256 nl) = sub512(xyh, xyl, m); // `n = x * y - m` hence `n / z = floor(x * y / z)`\\n                if (nh == 0) {\\n                    // `n < 2 ^ 256`\\n                    return nl / z;\\n                }\\n                uint256 p = unsafeSub(0, z) & z; // `p` is the largest power of 2 which `z` is divisible by\\n                uint256 q = div512(nh, nl, p); // `n` is divisible by `p` because `n` is divisible by `z` and `z` is divisible by `p`\\n                uint256 r = inv256(z / p); // `z / p = 1 mod 2` hence `inverse(z / p) = 1 mod 2 ^ 256`\\n                return unsafeMul(q, r); // `q * r = (n / p) * inverse(z / p) = n / z`\\n            }\\n            revert(); // `x * y / z >= 2 ^ 256`\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the smallest integer larger than or equal to `x * y / z`\\n     */\\n    function mulDivC(\\n        uint256 x,\\n        uint256 y,\\n        uint256 z\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 w = mulDivF(x, y, z);\\n            if (mulMod(x, y, z) > 0) return safeAdd(w, 1);\\n            return w;\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the value of `x * y`\\n     */\\n    function mul512(uint256 x, uint256 y)\\n        private\\n        pure\\n        returns (uint256, uint256)\\n    {\\n        unchecked {\\n            uint256 p = mulModMax(x, y);\\n            uint256 q = unsafeMul(x, y);\\n            if (p >= q) return (p - q, q);\\n            return (unsafeSub(p, q) - 1, q);\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the value of `2 ^ 256 * xh + xl - y`, where `2 ^ 256 * xh + xl >= y`\\n     */\\n    function sub512(\\n        uint256 xh,\\n        uint256 xl,\\n        uint256 y\\n    ) private pure returns (uint256, uint256) {\\n        unchecked {\\n            if (xl >= y) return (xh, xl - y);\\n            return (xh - 1, unsafeSub(xl, y));\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the value of `(2 ^ 256 * xh + xl) / pow2n`, where `xl` is divisible by `pow2n`\\n     */\\n    function div512(\\n        uint256 xh,\\n        uint256 xl,\\n        uint256 pow2n\\n    ) private pure returns (uint256) {\\n        unchecked {\\n            uint256 pow2nInv = unsafeAdd(unsafeSub(0, pow2n) / pow2n, 1); // `1 << (256 - n)`\\n            return unsafeMul(xh, pow2nInv) | (xl / pow2n); // `(xh << (256 - n)) | (xl >> n)`\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the inverse of `d` modulo `2 ^ 256`, where `d` is congruent to `1` modulo `2`\\n     */\\n    function inv256(uint256 d) private pure returns (uint256) {\\n        unchecked {\\n            // approximate the root of `f(x) = 1 / x - d` using the newton\\u2013raphson convergence method\\n            uint256 x = 1;\\n            for (uint256 i = 0; i < 8; ++i)\\n                x = unsafeMul(x, unsafeSub(2, unsafeMul(x, d))); // `x = x * (2 - x * d) mod 2 ^ 256`\\n            return x;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2433205309bedeec21e98639f6e1b9ae4b72bddfd16d3c7caa23f0bedd74c07a\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/oracles/libs/Uint.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity >=0.8.0;\\n\\nuint256 constant MAX_VAL = type(uint256).max;\\n\\n// reverts on overflow\\nfunction safeAdd(uint256 x, uint256 y) pure returns (uint256) {\\n    return x + y;\\n}\\n\\n// does not revert on overflow\\nfunction unsafeAdd(uint256 x, uint256 y) pure returns (uint256) {\\n    unchecked {\\n        return x + y;\\n    }\\n}\\n\\n// does not revert on overflow\\nfunction unsafeSub(uint256 x, uint256 y) pure returns (uint256) {\\n    unchecked {\\n        return x - y;\\n    }\\n}\\n\\n// does not revert on overflow\\nfunction unsafeMul(uint256 x, uint256 y) pure returns (uint256) {\\n    unchecked {\\n        return x * y;\\n    }\\n}\\n\\n// does not overflow\\nfunction mulModMax(uint256 x, uint256 y) pure returns (uint256) {\\n    unchecked {\\n        return mulmod(x, y, MAX_VAL);\\n    }\\n}\\n\\n// does not overflow\\nfunction mulMod(\\n    uint256 x,\\n    uint256 y,\\n    uint256 z\\n) pure returns (uint256) {\\n    unchecked {\\n        return mulmod(x, y, z);\\n    }\\n}\\n\",\"keccak256\":\"0x998fcec9a910b59ed67db5af0939b271f062585a8c16a614b529197ed86d0a8d\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/oracles/libs/vMath.sol\":{\"content\":\"pragma solidity >=0.8.0;\\n\\nimport {FixedPointMathLib} from \\\"./FixedPointMathLib.sol\\\";\\nimport {IntegralMath} from \\\"./IntegralMath.sol\\\";\\n\\nlibrary vMath {\\n    uint256 internal constant WAD = 1e18; // The scalar of ETH and most ERC20s.\\n\\n    function min(uint256[] calldata array) external pure returns (uint256) {\\n        uint256 min = array[0];\\n        for (uint8 i = 1; i < array.length; i++) {\\n            if (min > array[i]) {\\n                min = array[i];\\n            }\\n        }\\n        return min;\\n    }\\n\\n    function product(uint256[] calldata nums) external pure returns (uint256) {\\n        uint256 product = nums[0];\\n        for (uint256 i = 1; i < nums.length; i++) {\\n            product *= nums[i];\\n        }\\n        return product;\\n    }\\n\\n    //limited to curve pools only, either 2 or 3 assets (mostly 2)\\n    function geometric_mean(uint8 n, uint256 product)\\n        external\\n        pure\\n        returns (uint256)\\n    {\\n        if (n == 2) {\\n            return FixedPointMathLib.sqrt(product);\\n        } else {\\n            //n == 3\\n            return IntegralMath.floorCbrt(product);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x771260414afb50c4937cc8185436eadf2292162955a4ea25cb1b8405d9a0e0fb\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/protocol/libraries/types/DataTypes.sol":{"DataTypes":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a98f6882e7a6e49d7f71bc3f71fbdd2a0e75bae148d92b62b7e293b50c4efeb864736f6c63430008000033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 DUP16 PUSH9 0x82E7A6E49D7F71BC3F PUSH18 0xFBDD2A0E75BAE148D92B62B7E293B50C4EFE 0xB8 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ","sourceMap":"63:5196:21:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;63:5196:21;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a98f6882e7a6e49d7f71bc3f71fbdd2a0e75bae148d92b62b7e293b50c4efeb864736f6c63430008000033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 DUP16 PUSH9 0x82E7A6E49D7F71BC3F PUSH18 0xFBDD2A0E75BAE148D92B62B7E293B50C4EFE 0xB8 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ","sourceMap":"63:5196:21:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/protocol/libraries/types/DataTypes.sol\":\"DataTypes\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/protocol/libraries/types/DataTypes.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\nlibrary DataTypes {\\n    // refer to the whitepaper, section 1.1 basic concepts for a formal description of these properties.\\n\\n    struct InitReserveInput {\\n        address aTokenImpl;\\n        address stableDebtTokenImpl;\\n        address variableDebtTokenImpl;\\n        uint8 underlyingAssetDecimals;\\n        address interestRateStrategyAddress;\\n        address underlyingAsset;\\n        address treasury;\\n        address incentivesController;\\n        string underlyingAssetName;\\n        string aTokenName;\\n        string aTokenSymbol;\\n        string variableDebtTokenName;\\n        string variableDebtTokenSymbol;\\n        string stableDebtTokenName;\\n        string stableDebtTokenSymbol;\\n        bytes params;\\n        uint8 assetType;\\n        uint256 collateralCap;\\n        bool hasStrategy;\\n        bool usingGovernanceSetInterestRate; //if true, then the reserves that has this asset will\\n        uint256 governanceSetInterestRate;\\n    }\\n\\n    struct InitReserveInputInternal {\\n        InitReserveInput input;\\n        uint64 trancheId;\\n    }\\n\\n    enum ReserveAssetType {\\n        AAVE,\\n        CURVE\\n    } //update with other possible types of the underlying asset\\n    //AAVE is the original assets in the aave protocol\\n    //CURVE is the new LP tokens we are providing support for\\n    struct TrancheAddress {\\n        uint64 trancheId;\\n        address asset;\\n    }\\n    struct ReserveData {\\n        //stores the reserve configuration\\n        ReserveConfigurationMap configuration;\\n        //the liquidity index. Expressed in ray\\n        uint128 liquidityIndex; //not used for nonlendable assets\\n        //variable borrow index. Expressed in ray\\n        uint128 variableBorrowIndex; //not used for nonlendable assets\\n        //the current supply rate. Expressed in ray\\n        uint128 currentLiquidityRate; //deposit APR is defined as liquidityRate / RAY //not used for nonlendable assets\\n        //the current variable borrow rate. Expressed in ray\\n        uint128 currentVariableBorrowRate; //not used for nonlendable assets\\n        //the current stable borrow rate. Expressed in ray\\n        uint128 currentStableBorrowRate; //not used for nonlendable assets\\n        uint40 lastUpdateTimestamp;\\n        //tokens addresses\\n        address aTokenAddress;\\n        address stableDebtTokenAddress; //not used for nonlendable assets\\n        address variableDebtTokenAddress; //not used for nonlendable assets\\n        //address of the interest rate strategy\\n        address interestRateStrategyAddress; //not used for nonlendable assets\\n        //the id of the reserve. Represents the position in the list of the active reserves\\n        uint8 id;\\n        //maybe consider\\n        uint64 trancheId;\\n        uint256 collateralCap; //this can definitely be different per trancheId\\n        bool hasStrategy; //this might be put as a property of a reserve rather than property of the asset since USDC might have a trancheId that has a strategy, but unlikely to happen\\n        bool usingGovernanceSetInterestRate; //if true, then the reserves that has this asset will\\n        uint256 governanceSetInterestRate;\\n    }\\n\\n    // uint8 constant NUM_TRANCHES = 3;\\n\\n    struct ReserveConfigurationMap {\\n        //bit 0-15: LTV\\n        //bit 16-31: Liq. threshold\\n        //bit 32-47: Liq. bonus\\n        //bit 48-55: Decimals\\n        //bit 56: Reserve is active\\n        //bit 57: reserve is frozen\\n        //bit 58: borrowing is enabled\\n        //bit 59: stable rate borrowing enabled\\n        //bit 60-63: reserved\\n        //bit 64-79: reserve factor\\n        uint256 data;\\n    }\\n\\n    struct UserConfigurationMap {\\n        uint256 data;\\n    }\\n\\n    enum InterestRateMode {\\n        NONE,\\n        STABLE,\\n        VARIABLE\\n    }\\n\\n    struct AcctTranche {\\n        address user;\\n        uint64 trancheId;\\n    }\\n\\n    struct DepositVars {\\n        address asset;\\n        uint64 trancheId;\\n        address _addressesProvider;\\n        uint256 amount;\\n        address onBehalfOf;\\n        uint16 referralCode;\\n    }\\n\\n    struct ExecuteBorrowParams {\\n        address asset;\\n        uint64 trancheId; //trancheId the user wants to borrow out of\\n        address user;\\n        address onBehalfOf;\\n        uint256 amount;\\n        uint256 interestRateMode;\\n        address aTokenAddress;\\n        uint16 referralCode;\\n        bool releaseUnderlying;\\n        uint256 _maxStableRateBorrowSizePercent;\\n        uint256 _reservesCount;\\n    }\\n\\n    struct WithdrawParams {\\n        uint256 _reservesCount;\\n        address asset;\\n        uint64 trancheId;\\n        uint256 amount;\\n        address to;\\n    }\\n\\n    struct calculateInterestRatesVars {\\n        address reserve;\\n        address aToken;\\n        uint256 liquidityAdded;\\n        uint256 liquidityTaken;\\n        uint256 reserveFactor;\\n    }\\n\\n    struct flashLoanVars {\\n        address receiverAddress;\\n        address[] assets;\\n        uint64 trancheId;\\n        uint256[] amounts;\\n        uint256[] modes;\\n        address onBehalfOf;\\n        bytes params;\\n        uint16 referralCode;\\n        uint256 _flashLoanPremiumTotal;\\n        address oracle;\\n        uint256 _maxStableRateBorrowSizePercent;\\n        address _addressesprovider;\\n        // mapping(uint8 => uint256) _reservesCount;\\n    }\\n}\\n\",\"keccak256\":\"0x6ffba536d5198c4ba1fe00a569f065823b6595f710b1baa920018612a35881d1\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}