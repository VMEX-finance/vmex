{"id":"23d0832aa6a1ca96877406f019624fd9","_format":"hh-sol-build-info-1","solcVersion":"0.8.0","solcLongVersion":"0.8.0+commit.c7dfd78e","input":{"language":"Solidity","sources":{"contracts/analytics/queries/getUserTrancheData.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity >=0.8.0;\nimport { ILendingPool } from \"../../interfaces/ILendingPool.sol\";\nimport { ILendingPoolAddressesProvider } from \"../../interfaces/ILendingPoolAddressesProvider.sol\";\n\n\nstruct UserData {\n    uint256 totalCollateralETH;\n    uint256 totalDebtETH;\n    uint256 availableBorrowsETH;\n    uint256 currentLiquidationThreshold;\n    uint256 ltv;\n    uint256 healthFactor;\n}\n\ncontract getUserTrancheData {\n    constructor(address user, address poolProvider) {\n        ILendingPoolAddressesProvider provider = ILendingPoolAddressesProvider(poolProvider);\n        ILendingPool lendingPool = ILendingPool(provider.getLendingPool());\n        UserData[3] memory returnData;\n        for (uint8 i; i < 3; i++) {\n            (\n                uint256 totalCollateralETH,\n                uint256 totalDebtETH,\n                uint256 availableBorrowsETH,\n                uint256 currentLiquidationThreshold,\n                uint256 ltv,\n                uint256 healthFactor\n            ) = lendingPool.getUserAccountData(user, i);\n\n            returnData[i] = UserData(totalCollateralETH, totalDebtETH, availableBorrowsETH, currentLiquidationThreshold, ltv, healthFactor);\n        }\n\n        bytes memory data = abi.encode(returnData);\n        assembly {\n            return(add(0x20, data), mload(data))\n        }        \n    }\n\n    function getType() public view returns (UserData[3] memory) {}\n}"},"contracts/interfaces/ILendingPool.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity >=0.8.0;\n\nimport {ILendingPoolAddressesProvider} from \"./ILendingPoolAddressesProvider.sol\";\nimport {DataTypes} from \"../protocol/libraries/types/DataTypes.sol\";\n\ninterface ILendingPool {\n    /**\n     * @dev Emitted on deposit()\n     * @param reserve The address of the underlying asset of the reserve\n     * @param user The address initiating the deposit\n     * @param onBehalfOf The beneficiary of the deposit, receiving the aTokens\n     * @param amount The amount deposited\n     * @param referral The referral code used\n     **/\n    event Deposit(\n        address indexed reserve,\n        uint8 tranche,\n        address user,\n        address indexed onBehalfOf,\n        uint256 amount,\n        uint16 indexed referral\n    );\n\n    /**\n     * @dev Emitted on withdraw()\n     * @param reserve The address of the underlyng asset being withdrawn\n     * @param user The address initiating the withdrawal, owner of aTokens\n     * @param to Address that will receive the underlying\n     * @param amount The amount to be withdrawn\n     **/\n    event Withdraw(\n        address indexed reserve,\n        address indexed user,\n        address indexed to,\n        uint256 amount\n    );\n\n    /**\n     * @dev Emitted on repay()\n     * @param reserve The address of the underlying asset of the reserve\n     * @param user The beneficiary of the repayment, getting his debt reduced\n     * @param repayer The address of the user initiating the repay(), providing the funds\n     * @param amount The amount repaid\n     **/\n    event Repay(\n        address indexed reserve,\n        address indexed user,\n        address indexed repayer,\n        uint256 amount\n    );\n\n    /**\n     * @dev Emitted on swapBorrowRateMode()\n     * @param reserve The address of the underlying asset of the reserve\n     * @param user The address of the user swapping his rate mode\n     * @param rateMode The rate mode that the user wants to swap to\n     **/\n    event Swap(address indexed reserve, address indexed user, uint256 rateMode);\n\n    /**\n     * @dev Emitted on setUserUseReserveAsCollateral()\n     * @param reserve The address of the underlying asset of the reserve\n     * @param user The address of the user enabling the usage as collateral\n     **/\n    event ReserveUsedAsCollateralEnabled(\n        address indexed reserve,\n        address indexed user\n    );\n\n    /**\n     * @dev Emitted on setUserUseReserveAsCollateral()\n     * @param reserve The address of the underlying asset of the reserve\n     * @param user The address of the user enabling the usage as collateral\n     **/\n    event ReserveUsedAsCollateralDisabled(\n        address indexed reserve,\n        address indexed user\n    );\n\n    /**\n     * @dev Emitted on rebalanceStableBorrowRate()\n     * @param reserve The address of the underlying asset of the reserve\n     * @param user The address of the user for which the rebalance has been executed\n     **/\n    event RebalanceStableBorrowRate(\n        address indexed reserve,\n        address indexed user\n    );\n\n    /**\n     * @dev Emitted on flashLoan()\n     * @param target The address of the flash loan receiver contract\n     * @param initiator The address initiating the flash loan\n     * @param asset The address of the asset being flash borrowed\n     * @param amount The amount flash borrowed\n     * @param premium The fee flash borrowed\n     * @param referralCode The referral code used\n     **/\n    event FlashLoan(\n        address indexed target,\n        address indexed initiator,\n        address indexed asset,\n        uint256 amount,\n        uint256 premium,\n        uint16 referralCode\n    );\n\n    /**\n     * @dev Emitted when the pause is triggered.\n     */\n    event Paused();\n\n    /**\n     * @dev Emitted when the pause is lifted.\n     */\n    event Unpaused();\n\n    /**\n     * @dev Emitted when a borrower is liquidated. This event is emitted by the LendingPool via\n     * LendingPoolCollateral manager using a DELEGATECALL\n     * This allows to have the events in the generated ABI for LendingPool.\n     * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n     * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n     * @param user The address of the borrower getting liquidated\n     * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n     * @param liquidatedCollateralAmount The amount of collateral received by the liiquidator\n     * @param liquidator The address of the liquidator\n     * @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\n     * to receive the underlying collateral asset directly\n     **/\n    event LiquidationCall(\n        address indexed collateralAsset,\n        address indexed debtAsset,\n        address indexed user,\n        uint256 debtToCover,\n        uint256 liquidatedCollateralAmount,\n        address liquidator,\n        bool receiveAToken\n    );\n\n    /**\n     * @dev Emitted when the state of a reserve is updated. NOTE: This event is actually declared\n     * in the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal,\n     * the event will actually be fired by the LendingPool contract. The event is therefore replicated here so it\n     * gets added to the LendingPool ABI\n     * @param reserve The address of the underlying asset of the reserve\n     * @param liquidityRate The new liquidity rate\n     * @param stableBorrowRate The new stable borrow rate\n     * @param variableBorrowRate The new variable borrow rate\n     * @param liquidityIndex The new liquidity index\n     * @param variableBorrowIndex The new variable borrow index\n     **/\n    event ReserveDataUpdated(\n        address indexed reserve,\n        uint256 liquidityRate,\n        uint256 stableBorrowRate,\n        uint256 variableBorrowRate,\n        uint256 liquidityIndex,\n        uint256 variableBorrowIndex\n    );\n\n    /**\n     * @dev Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\n     * - E.g. User deposits 100 USDC and gets in return 100 aUSDC\n     * @param asset The address of the underlying asset to deposit\n     * @param amount The amount to be deposited\n     * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n     *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n     *   is a different wallet\n     * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n     *   0 if the action is executed directly by the user, without any middle-man\n     **/\n    function deposit(\n        address asset,\n        uint8 tranche,\n        bool isCollateral,\n        uint256 amount,\n        address onBehalfOf,\n        uint16 referralCode\n    ) external;\n\n    /**\n     * @dev Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned\n     * E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\n     * @param asset The address of the underlying asset to withdraw\n     * @param amount The underlying amount to be withdrawn\n     *   - Send the value type(uint256).max in order to withdraw the whole aToken balance\n     * @param to Address that will receive the underlying, same as msg.sender if the user\n     *   wants to receive it on his own wallet, or a different address if the beneficiary is a\n     *   different wallet\n     * @return The final amount withdrawn\n     **/\n    function withdraw(\n        address asset,\n        uint8 tranche,\n        uint256 amount,\n        address to\n    ) external returns (uint256);\n\n    /**\n     * @dev Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower\n     * already deposited enough collateral, or he was given enough allowance by a credit delegator on the\n     * corresponding debt token (StableDebtToken or VariableDebtToken)\n     * - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet\n     *   and 100 stable/variable debt tokens, depending on the `interestRateMode`\n     * @param asset The address of the underlying asset to borrow\n     * @param amount The amount to be borrowed\n     * @param interestRateMode The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\n     * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n     *   0 if the action is executed directly by the user, without any middle-man\n     * @param onBehalfOf Address of the user who will receive the debt. Should be the address of the borrower itself\n     * calling the function if he wants to borrow against his own collateral, or the address of the credit delegator\n     * if he has been given credit delegation allowance\n     **/\n    function borrow(\n        address asset,\n        uint8 tranche,\n        uint256 amount,\n        uint256 interestRateMode,\n        uint16 referralCode,\n        address onBehalfOf\n    ) external;\n\n    /**\n     * @notice Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned\n     * - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\n     * @param asset The address of the borrowed underlying asset previously borrowed\n     * @param amount The amount to repay\n     * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n     * @param rateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n     * @param onBehalfOf Address of the user who will get his debt reduced/removed. Should be the address of the\n     * user calling the function if he wants to reduce/remove his own debt, or the address of any other\n     * other borrower whose debt should be removed\n     * @return The final amount repaid\n     **/\n    function repay(\n        address asset,\n        uint8 tranche,\n        uint256 amount,\n        uint256 rateMode,\n        address onBehalfOf\n    ) external returns (uint256);\n\n    /**\n     * @dev Allows a borrower to swap his debt between stable and variable mode, or viceversa\n     * @param asset The address of the underlying asset borrowed\n     * @param rateMode The rate mode that the user wants to swap to\n     **/\n    function swapBorrowRateMode(\n        address asset,\n        uint8 tranche,\n        uint256 rateMode\n    ) external;\n\n    /**\n     * @dev Rebalances the stable interest rate of a user to the current stable rate defined on the reserve.\n     * - Users can be rebalanced if the following conditions are satisfied:\n     *     1. Usage ratio is above 95%\n     *     2. the current deposit APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been\n     *        borrowed at a stable rate and depositors are not earning enough\n     * @param asset The address of the underlying asset borrowed\n     * @param user The address of the user to be rebalanced\n     **/\n    function rebalanceStableBorrowRate(\n        address asset,\n        uint8 tranche,\n        address user\n    ) external;\n\n    /**\n     * @dev Allows depositors to enable/disable a specific deposited asset as collateral\n     * @param asset The address of the underlying asset deposited\n     * @param useAsCollateral `true` if the user wants to use the deposit as collateral, `false` otherwise\n     **/\n    function setUserUseReserveAsCollateral(\n        address asset,\n        uint8 tranche,\n        bool useAsCollateral\n    ) external;\n\n    /**\n     * @dev Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1\n     * - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives\n     *   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\n     * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n     * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n     * @param user The address of the borrower getting liquidated\n     * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n     * @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\n     * to receive the underlying collateral asset directly\n     **/\n    function liquidationCall(\n        address collateralAsset,\n        address debtAsset,\n        uint8 tranche,\n        address user,\n        uint256 debtToCover,\n        bool receiveAToken\n    ) external;\n\n    /**\n     * @dev Allows smartcontracts to access the liquidity of the pool within one transaction,\n     * as long as the amount taken plus a fee is returned.\n     * IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration.\n     * For further details please visit https://developers.aave.com\n     * @param receiverAddress The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface\n     * @param assets The addresses of the assets being flash-borrowed\n     * @param amounts The amounts amounts being flash-borrowed\n     * @param modes Types of the debt to open if the flash loan is not returned:\n     *   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver\n     *   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n     *   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n     * @param onBehalfOf The address  that will receive the debt in the case of using on `modes` 1 or 2\n     * @param params Variadic packed params to pass to the receiver as extra information\n     * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n     *   0 if the action is executed directly by the user, without any middle-man\n     **/\n    function flashLoan(\n        address receiverAddress,\n        DataTypes.TrancheAddress[] calldata assets,\n        uint256[] calldata amounts,\n        uint256[] calldata modes,\n        address onBehalfOf,\n        bytes calldata params,\n        uint16 referralCode\n    ) external;\n\n    /**\n     * @dev Returns the user account data across all the reserves\n     * @param user The address of the user\n     * @return totalCollateralETH the total collateral in ETH of the user\n     * @return totalDebtETH the total debt in ETH of the user\n     * @return availableBorrowsETH the borrowing power left of the user\n     * @return currentLiquidationThreshold the liquidation threshold of the user\n     * @return ltv the loan to value of the user\n     * @return healthFactor the current health factor of the user\n     **/\n    function getUserAccountData(address user, uint8 tranche)\n        external\n        view\n        returns (\n            uint256 totalCollateralETH,\n            uint256 totalDebtETH,\n            uint256 availableBorrowsETH,\n            uint256 currentLiquidationThreshold,\n            uint256 ltv,\n            uint256 healthFactor\n        );\n\n    function initReserve(\n        address reserve,\n        address aTokenAddress,\n        address stableDebtAddress,\n        address variableDebtAddress,\n        address interestRateStrategyAddress,\n        uint8 tranche\n    ) external;\n\n    /**\n     * @dev Updates the address of the interest rate strategy contract\n     * - Only callable by the LendingPoolConfigurator contract\n     * @param asset The address of the underlying asset of the reserve\n     * @param _risk The risk of the asset\n     **/\n    function setAssetData(\n        address asset,\n        uint8 _risk,\n        bool _isLendable,\n        bool _allowedHigherTranche,\n        uint8 _assetType\n    ) external;\n\n    function setReserveInterestRateStrategyAddress(\n        address reserve,\n        uint8 tranche,\n        address rateStrategyAddress\n    ) external;\n\n    function setConfiguration(\n        address reserve,\n        uint8 tranche,\n        uint256 configuration\n    ) external;\n\n    /**\n     * @dev Returns the configuration of the reserve\n     * @param asset The address of the underlying asset of the reserve\n     * @return The configuration of the reserve\n     **/\n    function getConfiguration(address asset, uint8 tranche)\n        external\n        view\n        returns (DataTypes.ReserveConfigurationMap memory);\n\n    /**\n     * @dev Returns the configuration of the user across all the reserves\n     * @param user The user address\n     * @return The configuration of the user\n     **/\n    function getUserConfiguration(address user)\n        external\n        view\n        returns (DataTypes.UserConfigurationMap memory);\n\n    /**\n     * @dev Returns the normalized income normalized income of the reserve\n     * @param asset The address of the underlying asset of the reserve\n     * @return The reserve's normalized income\n     */\n    function getReserveNormalizedIncome(address asset, uint8 tranche)\n        external\n        view\n        returns (uint256);\n\n    /**\n     * @dev Returns the normalized variable debt per unit of asset\n     * @param asset The address of the underlying asset of the reserve\n     * @return The reserve normalized variable debt\n     */\n    function getReserveNormalizedVariableDebt(address asset, uint8 tranche)\n        external\n        view\n        returns (uint256);\n\n    /**\n     * @dev Returns the state and configuration of the reserve\n     * @param asset The address of the underlying asset of the reserve\n     * @return The state of the reserve\n     **/\n    function getReserveData(address asset, uint8 tranche)\n        external\n        view\n        returns (DataTypes.ReserveData memory);\n\n    function finalizeTransfer(\n        address asset,\n        uint8 tranche,\n        address from,\n        address to,\n        uint256 amount,\n        uint256 balanceFromAfter,\n        uint256 balanceToBefore\n    ) external;\n\n    function getReservesList() external view returns (address[] memory);\n\n    function getAssetData(address asset)\n        external\n        view\n        returns (DataTypes.AssetData memory);\n\n    function getAddressesProvider()\n        external\n        view\n        returns (ILendingPoolAddressesProvider);\n\n    function setPause(bool val) external;\n\n    function paused() external view returns (bool);\n\n    function editTrancheMultiplier(\n        uint8 tranche,\n        uint256 _liquidityRateMultiplier,\n        uint256 _variableBorrowRateMultiplier,\n        uint256 _stableBorrowRateMultiplier\n    ) external;\n\n    function getTrancheMultiplier(uint8 tranche)\n        external\n        view\n        returns (DataTypes.TrancheMultiplier memory);\n}\n"},"contracts/interfaces/ILendingPoolAddressesProvider.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity >=0.8.0;\n\nimport {DataTypes} from \"../protocol/libraries/types/DataTypes.sol\";\n\n/**\n * @title LendingPoolAddressesProvider contract\n * @dev Main registry of addresses part of or connected to the protocol, including permissioned roles\n * - Acting also as factory of proxies and admin of those, so with right to change its implementations\n * - Owned by the Aave Governance\n * @author Aave\n **/\ninterface ILendingPoolAddressesProvider {\n    event MarketIdSet(string newMarketId);\n    event LendingPoolUpdated(address indexed newAddress);\n    event ConfigurationAdminUpdated(address indexed newAddress);\n    event EmergencyAdminUpdated(address indexed newAddress);\n    event LendingPoolConfiguratorUpdated(address indexed newAddress);\n    event LendingPoolCollateralManagerUpdated(address indexed newAddress);\n    event PriceOracleUpdated(address indexed newAddress);\n    event CurvePriceOracleUpdated(address indexed newAddress);\n    event CurvePriceOracleWrapperUpdated(address indexed newAddress);\n    event CurveAddressProviderUpdated(address indexed newAddress);\n    event LendingRateOracleUpdated(address indexed newAddress);\n    event ProxyCreated(bytes32 id, address indexed newAddress);\n    event AddressSet(bytes32 id, address indexed newAddress, bool hasProxy);\n\n    function getMarketId() external view returns (string memory);\n\n    function setMarketId(string calldata marketId) external;\n\n    function setAddress(bytes32 id, address newAddress) external;\n\n    function setAddressAsProxy(bytes32 id, address impl) external;\n\n    function getAddress(bytes32 id) external view returns (address);\n\n    function getLendingPool() external view returns (address);\n\n    function setLendingPoolImpl(address pool) external;\n\n    function getLendingPoolConfigurator() external view returns (address);\n\n    function setLendingPoolConfiguratorImpl(address configurator) external;\n\n    function getLendingPoolCollateralManager() external view returns (address);\n\n    function setLendingPoolCollateralManager(address manager) external;\n\n    function getPoolAdmin() external view returns (address);\n\n    function setPoolAdmin(address admin) external;\n\n    function getEmergencyAdmin() external view returns (address);\n\n    function setEmergencyAdmin(address admin) external;\n\n    function getPriceOracle(DataTypes.ReserveAssetType assetType)\n        external\n        view\n        returns (address);\n\n    function getAavePriceOracle() external view returns (address);\n\n    function getCurvePriceOracle() external view returns (address);\n\n    function getCurvePriceOracleWrapper() external view returns (address);\n\n    function getCurveAddressProvider() external view returns (address);\n\n    function setAavePriceOracle(address priceOracle) external;\n\n    function setCurveAddressProvider(address addressProvider) external;\n\n    function setCurvePriceOracle(address priceOracle) external;\n\n    function setCurvePriceOracleWrapper(address priceOracle) external;\n\n    function getLendingRateOracle() external view returns (address);\n\n    function setLendingRateOracle(address lendingRateOracle) external;\n}\n"},"contracts/protocol/libraries/types/DataTypes.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity >=0.8.0;\n\nlibrary DataTypes {\n    // refer to the whitepaper, section 1.1 basic concepts for a formal description of these properties.\n\n    enum ReserveAssetType {\n        AAVE,\n        CURVE\n    } //update with other possible types of the underlying asset\n    //AAVE is the original assets in the aave protocol\n    //CURVE is the new LP tokens we are providing support for\n\n    struct AssetData {\n        uint8 collateralRisk;\n        bool isLendable;\n        bool isAllowedCollateralInHigherTranches;\n        ReserveAssetType assetType;\n    }\n\n    struct TrancheAddress {\n        uint8 tranche;\n        address asset;\n    }\n    struct ReserveData {\n        //stores the reserve configuration\n        ReserveConfigurationMap configuration;\n        //the liquidity index. Expressed in ray\n        uint128 liquidityIndex; //not used for nonlendable assets\n        //variable borrow index. Expressed in ray\n        uint128 variableBorrowIndex; //not used for nonlendable assets\n        //the current supply rate. Expressed in ray\n        uint128 currentLiquidityRate; //deposit APR is defined as liquidityRate / RAY //not used for nonlendable assets\n        //the current variable borrow rate. Expressed in ray\n        uint128 currentVariableBorrowRate; //not used for nonlendable assets\n        //the current stable borrow rate. Expressed in ray\n        uint128 currentStableBorrowRate; //not used for nonlendable assets\n        uint40 lastUpdateTimestamp;\n        //tokens addresses\n        address aTokenAddress;\n        address stableDebtTokenAddress; //not used for nonlendable assets\n        address variableDebtTokenAddress; //not used for nonlendable assets\n        //address of the interest rate strategy\n        address interestRateStrategyAddress; //not used for nonlendable assets\n        //the id of the reserve. Represents the position in the list of the active reserves\n        uint8 id;\n        uint8 tranche; //I think this will be used for nonlendable assets, cause your collateral only asset can be placed in higher tranche if necessary\n    }\n\n    struct TrancheMultiplier {\n        uint256 liquidityRateMultiplier;\n        uint256 variableBorrowRateMultiplier;\n        uint256 stableBorrowRateMultiplier;\n    }\n\n    uint8 constant NUM_TRANCHES = 3;\n\n    struct ReserveConfigurationMap {\n        //bit 0-15: LTV\n        //bit 16-31: Liq. threshold\n        //bit 32-47: Liq. bonus\n        //bit 48-55: Decimals\n        //bit 56: Reserve is active\n        //bit 57: reserve is frozen\n        //bit 58: borrowing is enabled\n        //bit 59: stable rate borrowing enabled\n        //bit 60-63: reserved\n        //bit 64-79: reserve factor\n        uint256 data;\n    }\n\n    struct UserConfigurationMap {\n        uint256 data;\n    }\n\n    enum InterestRateMode {\n        NONE,\n        STABLE,\n        VARIABLE\n    }\n\n    struct AcctTranche {\n        address user;\n        uint8 tranche;\n    }\n\n    struct DepositVars {\n        address asset;\n        uint8 tranche;\n        uint8 risk;\n        bool allowHigherTranche;\n        bool isLendable;\n        TrancheMultiplier t;\n    }\n\n    struct ExecuteBorrowParams {\n        address asset;\n        uint8 tranche; //tranche the user wants to borrow out of\n        address user;\n        address onBehalfOf;\n        uint256 amount;\n        uint256 interestRateMode;\n        address aTokenAddress;\n        uint16 referralCode;\n        bool releaseUnderlying;\n        uint256 _maxStableRateBorrowSizePercent;\n        uint256 _reservesCount;\n        TrancheMultiplier t;\n    }\n\n    struct WithdrawParams {\n        uint256 _reservesCount;\n        address asset;\n        uint8 tranche;\n        uint256 amount;\n        address to;\n        TrancheMultiplier t;\n    }\n\n    struct ValidateSetUseReserveAsCollateralParams {\n        uint8 risk;\n        bool allowHigherTranche;\n    }\n\n    struct calculateInterestRatesVars {\n        address reserve;\n        address aToken;\n        uint256 liquidityAdded;\n        uint256 liquidityTaken;\n        uint256 reserveFactor;\n    }\n\n    struct flashLoanVars {\n        address receiverAddress;\n        DataTypes.TrancheAddress[] assets;\n        uint256[] amounts;\n        uint256[] modes;\n        address onBehalfOf;\n        bytes params;\n        uint16 referralCode;\n        uint256 _flashLoanPremiumTotal;\n        address oracle;\n        uint256 _maxStableRateBorrowSizePercent;\n        uint256 _reservesCount;\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"istanbul","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"contracts/analytics/queries/getUserTrancheData.sol":{"ast":{"absolutePath":"contracts/analytics/queries/getUserTrancheData.sol","exportedSymbols":{"ILendingPool":[550],"ILendingPoolAddressesProvider":[753],"UserData":[18],"getUserTrancheData":[109]},"id":110,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"37:24:0"},{"absolutePath":"contracts/interfaces/ILendingPool.sol","file":"../../interfaces/ILendingPool.sol","id":3,"nodeType":"ImportDirective","scope":110,"sourceUnit":551,"src":"62:65:0","symbolAliases":[{"foreign":{"id":2,"name":"ILendingPool","nodeType":"Identifier","overloadedDeclarations":[],"src":"71:12:0","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/interfaces/ILendingPoolAddressesProvider.sol","file":"../../interfaces/ILendingPoolAddressesProvider.sol","id":5,"nodeType":"ImportDirective","scope":110,"sourceUnit":754,"src":"128:99:0","symbolAliases":[{"foreign":{"id":4,"name":"ILendingPoolAddressesProvider","nodeType":"Identifier","overloadedDeclarations":[],"src":"137:29:0","typeDescriptions":{}}}],"unitAlias":""},{"canonicalName":"UserData","id":18,"members":[{"constant":false,"id":7,"mutability":"mutable","name":"totalCollateralETH","nodeType":"VariableDeclaration","scope":18,"src":"252:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6,"name":"uint256","nodeType":"ElementaryTypeName","src":"252:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9,"mutability":"mutable","name":"totalDebtETH","nodeType":"VariableDeclaration","scope":18,"src":"284:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8,"name":"uint256","nodeType":"ElementaryTypeName","src":"284:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11,"mutability":"mutable","name":"availableBorrowsETH","nodeType":"VariableDeclaration","scope":18,"src":"310:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10,"name":"uint256","nodeType":"ElementaryTypeName","src":"310:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13,"mutability":"mutable","name":"currentLiquidationThreshold","nodeType":"VariableDeclaration","scope":18,"src":"343:35:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12,"name":"uint256","nodeType":"ElementaryTypeName","src":"343:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15,"mutability":"mutable","name":"ltv","nodeType":"VariableDeclaration","scope":18,"src":"384:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14,"name":"uint256","nodeType":"ElementaryTypeName","src":"384:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17,"mutability":"mutable","name":"healthFactor","nodeType":"VariableDeclaration","scope":18,"src":"401:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16,"name":"uint256","nodeType":"ElementaryTypeName","src":"401:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"UserData","nodeType":"StructDefinition","scope":110,"src":"230:194:0","visibility":"public"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":109,"linearizedBaseContracts":[109],"name":"getUserTrancheData","nodeType":"ContractDefinition","nodes":[{"body":{"id":98,"nodeType":"Block","src":"508:860:0","statements":[{"assignments":[27],"declarations":[{"constant":false,"id":27,"mutability":"mutable","name":"provider","nodeType":"VariableDeclaration","scope":98,"src":"518:38:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPoolAddressesProvider_$753","typeString":"contract ILendingPoolAddressesProvider"},"typeName":{"id":26,"nodeType":"UserDefinedTypeName","pathNode":{"id":25,"name":"ILendingPoolAddressesProvider","nodeType":"IdentifierPath","referencedDeclaration":753,"src":"518:29:0"},"referencedDeclaration":753,"src":"518:29:0","typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPoolAddressesProvider_$753","typeString":"contract ILendingPoolAddressesProvider"}},"visibility":"internal"}],"id":31,"initialValue":{"arguments":[{"id":29,"name":"poolProvider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22,"src":"589:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":28,"name":"ILendingPoolAddressesProvider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"559:29:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILendingPoolAddressesProvider_$753_$","typeString":"type(contract ILendingPoolAddressesProvider)"}},"id":30,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"559:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPoolAddressesProvider_$753","typeString":"contract ILendingPoolAddressesProvider"}},"nodeType":"VariableDeclarationStatement","src":"518:84:0"},{"assignments":[34],"declarations":[{"constant":false,"id":34,"mutability":"mutable","name":"lendingPool","nodeType":"VariableDeclaration","scope":98,"src":"612:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPool_$550","typeString":"contract ILendingPool"},"typeName":{"id":33,"nodeType":"UserDefinedTypeName","pathNode":{"id":32,"name":"ILendingPool","nodeType":"IdentifierPath","referencedDeclaration":550,"src":"612:12:0"},"referencedDeclaration":550,"src":"612:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPool_$550","typeString":"contract ILendingPool"}},"visibility":"internal"}],"id":40,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":36,"name":"provider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"652:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPoolAddressesProvider_$753","typeString":"contract ILendingPoolAddressesProvider"}},"id":37,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getLendingPool","nodeType":"MemberAccess","referencedDeclaration":649,"src":"652:23:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":38,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"652:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":35,"name":"ILendingPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"639:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILendingPool_$550_$","typeString":"type(contract ILendingPool)"}},"id":39,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"639:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPool_$550","typeString":"contract ILendingPool"}},"nodeType":"VariableDeclarationStatement","src":"612:66:0"},{"assignments":[46],"declarations":[{"constant":false,"id":46,"mutability":"mutable","name":"returnData","nodeType":"VariableDeclaration","scope":98,"src":"688:29:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserData_$18_memory_ptr_$3_memory_ptr","typeString":"struct UserData[3]"},"typeName":{"baseType":{"id":44,"nodeType":"UserDefinedTypeName","pathNode":{"id":43,"name":"UserData","nodeType":"IdentifierPath","referencedDeclaration":18,"src":"688:8:0"},"referencedDeclaration":18,"src":"688:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_UserData_$18_storage_ptr","typeString":"struct UserData"}},"id":45,"length":{"hexValue":"33","id":42,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"697:1:0","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"688:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserData_$18_storage_$3_storage_ptr","typeString":"struct UserData[3]"}},"visibility":"internal"}],"id":47,"nodeType":"VariableDeclarationStatement","src":"688:29:0"},{"body":{"id":88,"nodeType":"Block","src":"753:470:0","statements":[{"assignments":[58,60,62,64,66,68],"declarations":[{"constant":false,"id":58,"mutability":"mutable","name":"totalCollateralETH","nodeType":"VariableDeclaration","scope":88,"src":"785:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":57,"name":"uint256","nodeType":"ElementaryTypeName","src":"785:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":60,"mutability":"mutable","name":"totalDebtETH","nodeType":"VariableDeclaration","scope":88,"src":"829:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":59,"name":"uint256","nodeType":"ElementaryTypeName","src":"829:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":62,"mutability":"mutable","name":"availableBorrowsETH","nodeType":"VariableDeclaration","scope":88,"src":"867:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":61,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":64,"mutability":"mutable","name":"currentLiquidationThreshold","nodeType":"VariableDeclaration","scope":88,"src":"912:35:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":63,"name":"uint256","nodeType":"ElementaryTypeName","src":"912:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":66,"mutability":"mutable","name":"ltv","nodeType":"VariableDeclaration","scope":88,"src":"965:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":65,"name":"uint256","nodeType":"ElementaryTypeName","src":"965:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":68,"mutability":"mutable","name":"healthFactor","nodeType":"VariableDeclaration","scope":88,"src":"994:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":67,"name":"uint256","nodeType":"ElementaryTypeName","src":"994:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":74,"initialValue":{"arguments":[{"id":71,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20,"src":"1062:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":72,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"1068:1:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":69,"name":"lendingPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":34,"src":"1031:11:0","typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPool_$550","typeString":"contract ILendingPool"}},"id":70,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getUserAccountData","nodeType":"MemberAccess","referencedDeclaration":385,"src":"1031:30:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint8_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"function (address,uint8) view external returns (uint256,uint256,uint256,uint256,uint256,uint256)"}},"id":73,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1031:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256,uint256,uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"767:303:0"},{"expression":{"id":86,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":75,"name":"returnData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"1085:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserData_$18_memory_ptr_$3_memory_ptr","typeString":"struct UserData memory[3] memory"}},"id":77,"indexExpression":{"id":76,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"1096:1:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1085:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_UserData_$18_memory_ptr","typeString":"struct UserData memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":79,"name":"totalCollateralETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"1110:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":80,"name":"totalDebtETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60,"src":"1130:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":81,"name":"availableBorrowsETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62,"src":"1144:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":82,"name":"currentLiquidationThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64,"src":"1165:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":83,"name":"ltv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66,"src":"1194:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":84,"name":"healthFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"1199:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":78,"name":"UserData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1101:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_UserData_$18_storage_ptr_$","typeString":"type(struct UserData storage pointer)"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1101:111:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_UserData_$18_memory_ptr","typeString":"struct UserData memory"}},"src":"1085:127:0","typeDescriptions":{"typeIdentifier":"t_struct$_UserData_$18_memory_ptr","typeString":"struct UserData memory"}},"id":87,"nodeType":"ExpressionStatement","src":"1085:127:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":53,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":51,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"741:1:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"33","id":52,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"745:1:0","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"741:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":89,"initializationExpression":{"assignments":[49],"declarations":[{"constant":false,"id":49,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":89,"src":"732:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":48,"name":"uint8","nodeType":"ElementaryTypeName","src":"732:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":50,"nodeType":"VariableDeclarationStatement","src":"732:7:0"},"loopExpression":{"expression":{"id":55,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"748:3:0","subExpression":{"id":54,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"748:1:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":56,"nodeType":"ExpressionStatement","src":"748:3:0"},"nodeType":"ForStatement","src":"727:496:0"},{"assignments":[91],"declarations":[{"constant":false,"id":91,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":98,"src":"1233:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":90,"name":"bytes","nodeType":"ElementaryTypeName","src":"1233:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":96,"initialValue":{"arguments":[{"id":94,"name":"returnData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"1264:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserData_$18_memory_ptr_$3_memory_ptr","typeString":"struct UserData memory[3] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_UserData_$18_memory_ptr_$3_memory_ptr","typeString":"struct UserData memory[3] memory"}],"expression":{"id":92,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1253:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":93,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"1253:10:0","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1253:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1233:42:0"},{"AST":{"nodeType":"YulBlock","src":"1294:60:0","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1319:4:0","type":"","value":"0x20"},{"name":"data","nodeType":"YulIdentifier","src":"1325:4:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1315:3:0"},"nodeType":"YulFunctionCall","src":"1315:15:0"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1338:4:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1332:5:0"},"nodeType":"YulFunctionCall","src":"1332:11:0"}],"functionName":{"name":"return","nodeType":"YulIdentifier","src":"1308:6:0"},"nodeType":"YulFunctionCall","src":"1308:36:0"},"nodeType":"YulExpressionStatement","src":"1308:36:0"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":91,"isOffset":false,"isSlot":false,"src":"1325:4:0","valueSize":1},{"declaration":91,"isOffset":false,"isSlot":false,"src":"1338:4:0","valueSize":1}],"id":97,"nodeType":"InlineAssembly","src":"1285:69:0"}]},"id":99,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":99,"src":"472:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"472:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"mutability":"mutable","name":"poolProvider","nodeType":"VariableDeclaration","scope":99,"src":"486:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"486:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"471:36:0"},"returnParameters":{"id":24,"nodeType":"ParameterList","parameters":[],"src":"508:0:0"},"scope":109,"src":"460:908:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":107,"nodeType":"Block","src":"1434:2:0","statements":[]},"functionSelector":"15dae03e","id":108,"implemented":true,"kind":"function","modifiers":[],"name":"getType","nodeType":"FunctionDefinition","parameters":{"id":100,"nodeType":"ParameterList","parameters":[],"src":"1390:2:0"},"returnParameters":{"id":106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":105,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":108,"src":"1414:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserData_$18_memory_ptr_$3_memory_ptr","typeString":"struct UserData[3]"},"typeName":{"baseType":{"id":102,"nodeType":"UserDefinedTypeName","pathNode":{"id":101,"name":"UserData","nodeType":"IdentifierPath","referencedDeclaration":18,"src":"1414:8:0"},"referencedDeclaration":18,"src":"1414:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_UserData_$18_storage_ptr","typeString":"struct UserData"}},"id":104,"length":{"hexValue":"33","id":103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1423:1:0","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"1414:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserData_$18_storage_$3_storage_ptr","typeString":"struct UserData[3]"}},"visibility":"internal"}],"src":"1413:20:0"},"scope":109,"src":"1374:62:0","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":110,"src":"426:1012:0"}],"src":"37:1401:0"},"id":0},"contracts/interfaces/ILendingPool.sol":{"ast":{"absolutePath":"contracts/interfaces/ILendingPool.sol","exportedSymbols":{"DataTypes":[924],"ILendingPool":[550],"ILendingPoolAddressesProvider":[753]},"id":551,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":111,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"37:24:1"},{"absolutePath":"contracts/interfaces/ILendingPoolAddressesProvider.sol","file":"./ILendingPoolAddressesProvider.sol","id":113,"nodeType":"ImportDirective","scope":551,"sourceUnit":754,"src":"63:82:1","symbolAliases":[{"foreign":{"id":112,"name":"ILendingPoolAddressesProvider","nodeType":"Identifier","overloadedDeclarations":[],"src":"71:29:1","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/protocol/libraries/types/DataTypes.sol","file":"../protocol/libraries/types/DataTypes.sol","id":115,"nodeType":"ImportDirective","scope":551,"sourceUnit":925,"src":"146:68:1","symbolAliases":[{"foreign":{"id":114,"name":"DataTypes","nodeType":"Identifier","overloadedDeclarations":[],"src":"154:9:1","typeDescriptions":{}}}],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":550,"linearizedBaseContracts":[550],"name":"ILendingPool","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"245:339:1","text":" @dev Emitted on deposit()\n @param reserve The address of the underlying asset of the reserve\n @param user The address initiating the deposit\n @param onBehalfOf The beneficiary of the deposit, receiving the aTokens\n @param amount The amount deposited\n @param referral The referral code used*"},"id":130,"name":"Deposit","nodeType":"EventDefinition","parameters":{"id":129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"indexed":true,"mutability":"mutable","name":"reserve","nodeType":"VariableDeclaration","scope":130,"src":"612:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":117,"name":"address","nodeType":"ElementaryTypeName","src":"612:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":120,"indexed":false,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":130,"src":"645:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":119,"name":"uint8","nodeType":"ElementaryTypeName","src":"645:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":122,"indexed":false,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":130,"src":"668:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":121,"name":"address","nodeType":"ElementaryTypeName","src":"668:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":124,"indexed":true,"mutability":"mutable","name":"onBehalfOf","nodeType":"VariableDeclaration","scope":130,"src":"690:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":123,"name":"address","nodeType":"ElementaryTypeName","src":"690:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":126,"indexed":false,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":130,"src":"726:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":125,"name":"uint256","nodeType":"ElementaryTypeName","src":"726:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":128,"indexed":true,"mutability":"mutable","name":"referral","nodeType":"VariableDeclaration","scope":130,"src":"750:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":127,"name":"uint16","nodeType":"ElementaryTypeName","src":"750:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"602:177:1"},"src":"589:191:1"},{"anonymous":false,"documentation":{"id":131,"nodeType":"StructuredDocumentation","src":"786:300:1","text":" @dev Emitted on withdraw()\n @param reserve The address of the underlyng asset being withdrawn\n @param user The address initiating the withdrawal, owner of aTokens\n @param to Address that will receive the underlying\n @param amount The amount to be withdrawn*"},"id":141,"name":"Withdraw","nodeType":"EventDefinition","parameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":133,"indexed":true,"mutability":"mutable","name":"reserve","nodeType":"VariableDeclaration","scope":141,"src":"1115:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"1115:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":135,"indexed":true,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":141,"src":"1148:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":134,"name":"address","nodeType":"ElementaryTypeName","src":"1148:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":137,"indexed":true,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":141,"src":"1178:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":136,"name":"address","nodeType":"ElementaryTypeName","src":"1178:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":139,"indexed":false,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":141,"src":"1206:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":138,"name":"uint256","nodeType":"ElementaryTypeName","src":"1206:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1105:121:1"},"src":"1091:136:1"},{"anonymous":false,"documentation":{"id":142,"nodeType":"StructuredDocumentation","src":"1233:323:1","text":" @dev Emitted on repay()\n @param reserve The address of the underlying asset of the reserve\n @param user The beneficiary of the repayment, getting his debt reduced\n @param repayer The address of the user initiating the repay(), providing the funds\n @param amount The amount repaid*"},"id":152,"name":"Repay","nodeType":"EventDefinition","parameters":{"id":151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":144,"indexed":true,"mutability":"mutable","name":"reserve","nodeType":"VariableDeclaration","scope":152,"src":"1582:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":143,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":146,"indexed":true,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":152,"src":"1615:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":145,"name":"address","nodeType":"ElementaryTypeName","src":"1615:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":148,"indexed":true,"mutability":"mutable","name":"repayer","nodeType":"VariableDeclaration","scope":152,"src":"1645:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":147,"name":"address","nodeType":"ElementaryTypeName","src":"1645:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":150,"indexed":false,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":152,"src":"1678:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":149,"name":"uint256","nodeType":"ElementaryTypeName","src":"1678:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1572:126:1"},"src":"1561:138:1"},{"anonymous":false,"documentation":{"id":153,"nodeType":"StructuredDocumentation","src":"1705:263:1","text":" @dev Emitted on swapBorrowRateMode()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user swapping his rate mode\n @param rateMode The rate mode that the user wants to swap to*"},"id":161,"name":"Swap","nodeType":"EventDefinition","parameters":{"id":160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":155,"indexed":true,"mutability":"mutable","name":"reserve","nodeType":"VariableDeclaration","scope":161,"src":"1984:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":154,"name":"address","nodeType":"ElementaryTypeName","src":"1984:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":157,"indexed":true,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":161,"src":"2009:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":156,"name":"address","nodeType":"ElementaryTypeName","src":"2009:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":159,"indexed":false,"mutability":"mutable","name":"rateMode","nodeType":"VariableDeclaration","scope":161,"src":"2031:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":158,"name":"uint256","nodeType":"ElementaryTypeName","src":"2031:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1983:65:1"},"src":"1973:76:1"},{"anonymous":false,"documentation":{"id":162,"nodeType":"StructuredDocumentation","src":"2055:216:1","text":" @dev Emitted on setUserUseReserveAsCollateral()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user enabling the usage as collateral*"},"id":168,"name":"ReserveUsedAsCollateralEnabled","nodeType":"EventDefinition","parameters":{"id":167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":164,"indexed":true,"mutability":"mutable","name":"reserve","nodeType":"VariableDeclaration","scope":168,"src":"2322:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":163,"name":"address","nodeType":"ElementaryTypeName","src":"2322:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":166,"indexed":true,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":168,"src":"2355:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":165,"name":"address","nodeType":"ElementaryTypeName","src":"2355:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2312:69:1"},"src":"2276:106:1"},{"anonymous":false,"documentation":{"id":169,"nodeType":"StructuredDocumentation","src":"2388:216:1","text":" @dev Emitted on setUserUseReserveAsCollateral()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user enabling the usage as collateral*"},"id":175,"name":"ReserveUsedAsCollateralDisabled","nodeType":"EventDefinition","parameters":{"id":174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":171,"indexed":true,"mutability":"mutable","name":"reserve","nodeType":"VariableDeclaration","scope":175,"src":"2656:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"2656:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":173,"indexed":true,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":175,"src":"2689:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":172,"name":"address","nodeType":"ElementaryTypeName","src":"2689:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2646:69:1"},"src":"2609:107:1"},{"anonymous":false,"documentation":{"id":176,"nodeType":"StructuredDocumentation","src":"2722:221:1","text":" @dev Emitted on rebalanceStableBorrowRate()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user for which the rebalance has been executed*"},"id":182,"name":"RebalanceStableBorrowRate","nodeType":"EventDefinition","parameters":{"id":181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"indexed":true,"mutability":"mutable","name":"reserve","nodeType":"VariableDeclaration","scope":182,"src":"2989:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":177,"name":"address","nodeType":"ElementaryTypeName","src":"2989:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":180,"indexed":true,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":182,"src":"3022:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":179,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2979:69:1"},"src":"2948:101:1"},{"anonymous":false,"documentation":{"id":183,"nodeType":"StructuredDocumentation","src":"3055:386:1","text":" @dev Emitted on flashLoan()\n @param target The address of the flash loan receiver contract\n @param initiator The address initiating the flash loan\n @param asset The address of the asset being flash borrowed\n @param amount The amount flash borrowed\n @param premium The fee flash borrowed\n @param referralCode The referral code used*"},"id":197,"name":"FlashLoan","nodeType":"EventDefinition","parameters":{"id":196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":185,"indexed":true,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":197,"src":"3471:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":184,"name":"address","nodeType":"ElementaryTypeName","src":"3471:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":187,"indexed":true,"mutability":"mutable","name":"initiator","nodeType":"VariableDeclaration","scope":197,"src":"3503:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":186,"name":"address","nodeType":"ElementaryTypeName","src":"3503:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":189,"indexed":true,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":197,"src":"3538:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":188,"name":"address","nodeType":"ElementaryTypeName","src":"3538:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":191,"indexed":false,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":197,"src":"3569:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":190,"name":"uint256","nodeType":"ElementaryTypeName","src":"3569:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":193,"indexed":false,"mutability":"mutable","name":"premium","nodeType":"VariableDeclaration","scope":197,"src":"3593:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":192,"name":"uint256","nodeType":"ElementaryTypeName","src":"3593:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":195,"indexed":false,"mutability":"mutable","name":"referralCode","nodeType":"VariableDeclaration","scope":197,"src":"3618:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":194,"name":"uint16","nodeType":"ElementaryTypeName","src":"3618:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"3461:182:1"},"src":"3446:198:1"},{"anonymous":false,"documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"3650:60:1","text":" @dev Emitted when the pause is triggered."},"id":200,"name":"Paused","nodeType":"EventDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[],"src":"3727:2:1"},"src":"3715:15:1"},{"anonymous":false,"documentation":{"id":201,"nodeType":"StructuredDocumentation","src":"3736:57:1","text":" @dev Emitted when the pause is lifted."},"id":203,"name":"Unpaused","nodeType":"EventDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[],"src":"3812:2:1"},"src":"3798:17:1"},{"anonymous":false,"documentation":{"id":204,"nodeType":"StructuredDocumentation","src":"3821:952:1","text":" @dev Emitted when a borrower is liquidated. This event is emitted by the LendingPool via\n LendingPoolCollateral manager using a DELEGATECALL\n This allows to have the events in the generated ABI for LendingPool.\n @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n @param user The address of the borrower getting liquidated\n @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n @param liquidatedCollateralAmount The amount of collateral received by the liiquidator\n @param liquidator The address of the liquidator\n @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\n to receive the underlying collateral asset directly*"},"id":220,"name":"LiquidationCall","nodeType":"EventDefinition","parameters":{"id":219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":206,"indexed":true,"mutability":"mutable","name":"collateralAsset","nodeType":"VariableDeclaration","scope":220,"src":"4809:31:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":205,"name":"address","nodeType":"ElementaryTypeName","src":"4809:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":208,"indexed":true,"mutability":"mutable","name":"debtAsset","nodeType":"VariableDeclaration","scope":220,"src":"4850:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":207,"name":"address","nodeType":"ElementaryTypeName","src":"4850:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":210,"indexed":true,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":220,"src":"4885:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":209,"name":"address","nodeType":"ElementaryTypeName","src":"4885:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":212,"indexed":false,"mutability":"mutable","name":"debtToCover","nodeType":"VariableDeclaration","scope":220,"src":"4915:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":211,"name":"uint256","nodeType":"ElementaryTypeName","src":"4915:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":214,"indexed":false,"mutability":"mutable","name":"liquidatedCollateralAmount","nodeType":"VariableDeclaration","scope":220,"src":"4944:34:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":213,"name":"uint256","nodeType":"ElementaryTypeName","src":"4944:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":216,"indexed":false,"mutability":"mutable","name":"liquidator","nodeType":"VariableDeclaration","scope":220,"src":"4988:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":215,"name":"address","nodeType":"ElementaryTypeName","src":"4988:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":218,"indexed":false,"mutability":"mutable","name":"receiveAToken","nodeType":"VariableDeclaration","scope":220,"src":"5016:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":217,"name":"bool","nodeType":"ElementaryTypeName","src":"5016:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4799:241:1"},"src":"4778:263:1"},{"anonymous":false,"documentation":{"id":221,"nodeType":"StructuredDocumentation","src":"5047:744:1","text":" @dev Emitted when the state of a reserve is updated. NOTE: This event is actually declared\n in the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal,\n the event will actually be fired by the LendingPool contract. The event is therefore replicated here so it\n gets added to the LendingPool ABI\n @param reserve The address of the underlying asset of the reserve\n @param liquidityRate The new liquidity rate\n @param stableBorrowRate The new stable borrow rate\n @param variableBorrowRate The new variable borrow rate\n @param liquidityIndex The new liquidity index\n @param variableBorrowIndex The new variable borrow index*"},"id":235,"name":"ReserveDataUpdated","nodeType":"EventDefinition","parameters":{"id":234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":223,"indexed":true,"mutability":"mutable","name":"reserve","nodeType":"VariableDeclaration","scope":235,"src":"5830:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":222,"name":"address","nodeType":"ElementaryTypeName","src":"5830:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":225,"indexed":false,"mutability":"mutable","name":"liquidityRate","nodeType":"VariableDeclaration","scope":235,"src":"5863:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":224,"name":"uint256","nodeType":"ElementaryTypeName","src":"5863:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":227,"indexed":false,"mutability":"mutable","name":"stableBorrowRate","nodeType":"VariableDeclaration","scope":235,"src":"5894:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":226,"name":"uint256","nodeType":"ElementaryTypeName","src":"5894:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":229,"indexed":false,"mutability":"mutable","name":"variableBorrowRate","nodeType":"VariableDeclaration","scope":235,"src":"5928:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":228,"name":"uint256","nodeType":"ElementaryTypeName","src":"5928:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":231,"indexed":false,"mutability":"mutable","name":"liquidityIndex","nodeType":"VariableDeclaration","scope":235,"src":"5964:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":230,"name":"uint256","nodeType":"ElementaryTypeName","src":"5964:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":233,"indexed":false,"mutability":"mutable","name":"variableBorrowIndex","nodeType":"VariableDeclaration","scope":235,"src":"5996:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":232,"name":"uint256","nodeType":"ElementaryTypeName","src":"5996:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5820:209:1"},"src":"5796:234:1"},{"documentation":{"id":236,"nodeType":"StructuredDocumentation","src":"6036:732:1","text":" @dev Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\n - E.g. User deposits 100 USDC and gets in return 100 aUSDC\n @param asset The address of the underlying asset to deposit\n @param amount The amount to be deposited\n @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   is a different wallet\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man*"},"functionSelector":"f6118476","id":251,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nodeType":"FunctionDefinition","parameters":{"id":249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":238,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":251,"src":"6799:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":237,"name":"address","nodeType":"ElementaryTypeName","src":"6799:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":240,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":251,"src":"6822:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":239,"name":"uint8","nodeType":"ElementaryTypeName","src":"6822:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":242,"mutability":"mutable","name":"isCollateral","nodeType":"VariableDeclaration","scope":251,"src":"6845:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":241,"name":"bool","nodeType":"ElementaryTypeName","src":"6845:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":244,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":251,"src":"6872:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":243,"name":"uint256","nodeType":"ElementaryTypeName","src":"6872:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":246,"mutability":"mutable","name":"onBehalfOf","nodeType":"VariableDeclaration","scope":251,"src":"6896:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":245,"name":"address","nodeType":"ElementaryTypeName","src":"6896:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":248,"mutability":"mutable","name":"referralCode","nodeType":"VariableDeclaration","scope":251,"src":"6924:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":247,"name":"uint16","nodeType":"ElementaryTypeName","src":"6924:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"6789:160:1"},"returnParameters":{"id":250,"nodeType":"ParameterList","parameters":[],"src":"6958:0:1"},"scope":550,"src":"6773:186:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"6965:685:1","text":" @dev Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned\n E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\n @param asset The address of the underlying asset to withdraw\n @param amount The underlying amount to be withdrawn\n   - Send the value type(uint256).max in order to withdraw the whole aToken balance\n @param to Address that will receive the underlying, same as msg.sender if the user\n   wants to receive it on his own wallet, or a different address if the beneficiary is a\n   different wallet\n @return The final amount withdrawn*"},"functionSelector":"452572f3","id":265,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nodeType":"FunctionDefinition","parameters":{"id":261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":265,"src":"7682:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":253,"name":"address","nodeType":"ElementaryTypeName","src":"7682:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":256,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":265,"src":"7705:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":255,"name":"uint8","nodeType":"ElementaryTypeName","src":"7705:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":258,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":265,"src":"7728:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":257,"name":"uint256","nodeType":"ElementaryTypeName","src":"7728:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":260,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":265,"src":"7752:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":259,"name":"address","nodeType":"ElementaryTypeName","src":"7752:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7672:96:1"},"returnParameters":{"id":264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":263,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":265,"src":"7787:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":262,"name":"uint256","nodeType":"ElementaryTypeName","src":"7787:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7786:9:1"},"scope":550,"src":"7655:141:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":266,"nodeType":"StructuredDocumentation","src":"7802:1217:1","text":" @dev Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower\n already deposited enough collateral, or he was given enough allowance by a credit delegator on the\n corresponding debt token (StableDebtToken or VariableDebtToken)\n - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet\n   and 100 stable/variable debt tokens, depending on the `interestRateMode`\n @param asset The address of the underlying asset to borrow\n @param amount The amount to be borrowed\n @param interestRateMode The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man\n @param onBehalfOf Address of the user who will receive the debt. Should be the address of the borrower itself\n calling the function if he wants to borrow against his own collateral, or the address of the credit delegator\n if he has been given credit delegation allowance*"},"functionSelector":"f182c036","id":281,"implemented":false,"kind":"function","modifiers":[],"name":"borrow","nodeType":"FunctionDefinition","parameters":{"id":279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":268,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":281,"src":"9049:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":267,"name":"address","nodeType":"ElementaryTypeName","src":"9049:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":270,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":281,"src":"9072:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":269,"name":"uint8","nodeType":"ElementaryTypeName","src":"9072:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":272,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":281,"src":"9095:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":271,"name":"uint256","nodeType":"ElementaryTypeName","src":"9095:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":274,"mutability":"mutable","name":"interestRateMode","nodeType":"VariableDeclaration","scope":281,"src":"9119:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":273,"name":"uint256","nodeType":"ElementaryTypeName","src":"9119:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":276,"mutability":"mutable","name":"referralCode","nodeType":"VariableDeclaration","scope":281,"src":"9153:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":275,"name":"uint16","nodeType":"ElementaryTypeName","src":"9153:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":278,"mutability":"mutable","name":"onBehalfOf","nodeType":"VariableDeclaration","scope":281,"src":"9182:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":277,"name":"address","nodeType":"ElementaryTypeName","src":"9182:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9039:167:1"},"returnParameters":{"id":280,"nodeType":"ParameterList","parameters":[],"src":"9215:0:1"},"scope":550,"src":"9024:192:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":282,"nodeType":"StructuredDocumentation","src":"9222:884:1","text":" @notice Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned\n - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\n @param asset The address of the borrowed underlying asset previously borrowed\n @param amount The amount to repay\n - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n @param rateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n @param onBehalfOf Address of the user who will get his debt reduced/removed. Should be the address of the\n user calling the function if he wants to reduce/remove his own debt, or the address of any other\n other borrower whose debt should be removed\n @return The final amount repaid*"},"functionSelector":"624490d4","id":297,"implemented":false,"kind":"function","modifiers":[],"name":"repay","nodeType":"FunctionDefinition","parameters":{"id":293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":284,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":297,"src":"10135:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":283,"name":"address","nodeType":"ElementaryTypeName","src":"10135:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":286,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":297,"src":"10158:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":285,"name":"uint8","nodeType":"ElementaryTypeName","src":"10158:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":288,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":297,"src":"10181:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":287,"name":"uint256","nodeType":"ElementaryTypeName","src":"10181:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":290,"mutability":"mutable","name":"rateMode","nodeType":"VariableDeclaration","scope":297,"src":"10205:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":289,"name":"uint256","nodeType":"ElementaryTypeName","src":"10205:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":292,"mutability":"mutable","name":"onBehalfOf","nodeType":"VariableDeclaration","scope":297,"src":"10231:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":291,"name":"address","nodeType":"ElementaryTypeName","src":"10231:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10125:130:1"},"returnParameters":{"id":296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":295,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":297,"src":"10274:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":294,"name":"uint256","nodeType":"ElementaryTypeName","src":"10274:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10273:9:1"},"scope":550,"src":"10111:172:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":298,"nodeType":"StructuredDocumentation","src":"10289:239:1","text":" @dev Allows a borrower to swap his debt between stable and variable mode, or viceversa\n @param asset The address of the underlying asset borrowed\n @param rateMode The rate mode that the user wants to swap to*"},"functionSelector":"f2e1cf16","id":307,"implemented":false,"kind":"function","modifiers":[],"name":"swapBorrowRateMode","nodeType":"FunctionDefinition","parameters":{"id":305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":300,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":307,"src":"10570:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":299,"name":"address","nodeType":"ElementaryTypeName","src":"10570:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":302,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":307,"src":"10593:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":301,"name":"uint8","nodeType":"ElementaryTypeName","src":"10593:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":304,"mutability":"mutable","name":"rateMode","nodeType":"VariableDeclaration","scope":307,"src":"10616:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":303,"name":"uint256","nodeType":"ElementaryTypeName","src":"10616:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10560:78:1"},"returnParameters":{"id":306,"nodeType":"ParameterList","parameters":[],"src":"10647:0:1"},"scope":550,"src":"10533:115:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":308,"nodeType":"StructuredDocumentation","src":"10654:569:1","text":" @dev Rebalances the stable interest rate of a user to the current stable rate defined on the reserve.\n - Users can be rebalanced if the following conditions are satisfied:\n     1. Usage ratio is above 95%\n     2. the current deposit APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been\n        borrowed at a stable rate and depositors are not earning enough\n @param asset The address of the underlying asset borrowed\n @param user The address of the user to be rebalanced*"},"functionSelector":"a7c245f0","id":317,"implemented":false,"kind":"function","modifiers":[],"name":"rebalanceStableBorrowRate","nodeType":"FunctionDefinition","parameters":{"id":315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":310,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":317,"src":"11272:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":309,"name":"address","nodeType":"ElementaryTypeName","src":"11272:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":312,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":317,"src":"11295:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":311,"name":"uint8","nodeType":"ElementaryTypeName","src":"11295:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":314,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":317,"src":"11318:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":313,"name":"address","nodeType":"ElementaryTypeName","src":"11318:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11262:74:1"},"returnParameters":{"id":316,"nodeType":"ParameterList","parameters":[],"src":"11345:0:1"},"scope":550,"src":"11228:118:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"11352:274:1","text":" @dev Allows depositors to enable/disable a specific deposited asset as collateral\n @param asset The address of the underlying asset deposited\n @param useAsCollateral `true` if the user wants to use the deposit as collateral, `false` otherwise*"},"functionSelector":"9372e1e7","id":327,"implemented":false,"kind":"function","modifiers":[],"name":"setUserUseReserveAsCollateral","nodeType":"FunctionDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":327,"src":"11679:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":319,"name":"address","nodeType":"ElementaryTypeName","src":"11679:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":322,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":327,"src":"11702:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":321,"name":"uint8","nodeType":"ElementaryTypeName","src":"11702:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":324,"mutability":"mutable","name":"useAsCollateral","nodeType":"VariableDeclaration","scope":327,"src":"11725:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":323,"name":"bool","nodeType":"ElementaryTypeName","src":"11725:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11669:82:1"},"returnParameters":{"id":326,"nodeType":"ParameterList","parameters":[],"src":"11760:0:1"},"scope":550,"src":"11631:130:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"11767:880:1","text":" @dev Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1\n - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives\n   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\n @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n @param user The address of the borrower getting liquidated\n @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\n to receive the underlying collateral asset directly*"},"functionSelector":"3f2591f7","id":343,"implemented":false,"kind":"function","modifiers":[],"name":"liquidationCall","nodeType":"FunctionDefinition","parameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"mutability":"mutable","name":"collateralAsset","nodeType":"VariableDeclaration","scope":343,"src":"12686:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":329,"name":"address","nodeType":"ElementaryTypeName","src":"12686:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":332,"mutability":"mutable","name":"debtAsset","nodeType":"VariableDeclaration","scope":343,"src":"12719:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"12719:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":334,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":343,"src":"12746:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":333,"name":"uint8","nodeType":"ElementaryTypeName","src":"12746:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":336,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":343,"src":"12769:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":335,"name":"address","nodeType":"ElementaryTypeName","src":"12769:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":338,"mutability":"mutable","name":"debtToCover","nodeType":"VariableDeclaration","scope":343,"src":"12791:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":337,"name":"uint256","nodeType":"ElementaryTypeName","src":"12791:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":340,"mutability":"mutable","name":"receiveAToken","nodeType":"VariableDeclaration","scope":343,"src":"12820:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":339,"name":"bool","nodeType":"ElementaryTypeName","src":"12820:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12676:168:1"},"returnParameters":{"id":342,"nodeType":"ParameterList","parameters":[],"src":"12853:0:1"},"scope":550,"src":"12652:202:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":344,"nodeType":"StructuredDocumentation","src":"12860:1408:1","text":" @dev Allows smartcontracts to access the liquidity of the pool within one transaction,\n as long as the amount taken plus a fee is returned.\n IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration.\n For further details please visit https://developers.aave.com\n @param receiverAddress The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface\n @param assets The addresses of the assets being flash-borrowed\n @param amounts The amounts amounts being flash-borrowed\n @param modes Types of the debt to open if the flash loan is not returned:\n   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver\n   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n @param onBehalfOf The address  that will receive the debt in the case of using on `modes` 1 or 2\n @param params Variadic packed params to pass to the receiver as extra information\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man*"},"functionSelector":"0782623e","id":365,"implemented":false,"kind":"function","modifiers":[],"name":"flashLoan","nodeType":"FunctionDefinition","parameters":{"id":363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":346,"mutability":"mutable","name":"receiverAddress","nodeType":"VariableDeclaration","scope":365,"src":"14301:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":345,"name":"address","nodeType":"ElementaryTypeName","src":"14301:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":350,"mutability":"mutable","name":"assets","nodeType":"VariableDeclaration","scope":365,"src":"14334:42:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TrancheAddress_$773_calldata_ptr_$dyn_calldata_ptr","typeString":"struct DataTypes.TrancheAddress[]"},"typeName":{"baseType":{"id":348,"nodeType":"UserDefinedTypeName","pathNode":{"id":347,"name":"DataTypes.TrancheAddress","nodeType":"IdentifierPath","referencedDeclaration":773,"src":"14334:24:1"},"referencedDeclaration":773,"src":"14334:24:1","typeDescriptions":{"typeIdentifier":"t_struct$_TrancheAddress_$773_storage_ptr","typeString":"struct DataTypes.TrancheAddress"}},"id":349,"nodeType":"ArrayTypeName","src":"14334:26:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TrancheAddress_$773_storage_$dyn_storage_ptr","typeString":"struct DataTypes.TrancheAddress[]"}},"visibility":"internal"},{"constant":false,"id":353,"mutability":"mutable","name":"amounts","nodeType":"VariableDeclaration","scope":365,"src":"14386:26:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":351,"name":"uint256","nodeType":"ElementaryTypeName","src":"14386:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":352,"nodeType":"ArrayTypeName","src":"14386:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":356,"mutability":"mutable","name":"modes","nodeType":"VariableDeclaration","scope":365,"src":"14422:24:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":354,"name":"uint256","nodeType":"ElementaryTypeName","src":"14422:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":355,"nodeType":"ArrayTypeName","src":"14422:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":358,"mutability":"mutable","name":"onBehalfOf","nodeType":"VariableDeclaration","scope":365,"src":"14456:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":357,"name":"address","nodeType":"ElementaryTypeName","src":"14456:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":360,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":365,"src":"14484:21:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":359,"name":"bytes","nodeType":"ElementaryTypeName","src":"14484:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":362,"mutability":"mutable","name":"referralCode","nodeType":"VariableDeclaration","scope":365,"src":"14515:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":361,"name":"uint16","nodeType":"ElementaryTypeName","src":"14515:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"14291:249:1"},"returnParameters":{"id":364,"nodeType":"ParameterList","parameters":[],"src":"14549:0:1"},"scope":550,"src":"14273:277:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":366,"nodeType":"StructuredDocumentation","src":"14556:525:1","text":" @dev Returns the user account data across all the reserves\n @param user The address of the user\n @return totalCollateralETH the total collateral in ETH of the user\n @return totalDebtETH the total debt in ETH of the user\n @return availableBorrowsETH the borrowing power left of the user\n @return currentLiquidationThreshold the liquidation threshold of the user\n @return ltv the loan to value of the user\n @return healthFactor the current health factor of the user*"},"functionSelector":"60e96389","id":385,"implemented":false,"kind":"function","modifiers":[],"name":"getUserAccountData","nodeType":"FunctionDefinition","parameters":{"id":371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":368,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":385,"src":"15114:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":367,"name":"address","nodeType":"ElementaryTypeName","src":"15114:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":370,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":385,"src":"15128:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":369,"name":"uint8","nodeType":"ElementaryTypeName","src":"15128:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"15113:29:1"},"returnParameters":{"id":384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":373,"mutability":"mutable","name":"totalCollateralETH","nodeType":"VariableDeclaration","scope":385,"src":"15203:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":372,"name":"uint256","nodeType":"ElementaryTypeName","src":"15203:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":375,"mutability":"mutable","name":"totalDebtETH","nodeType":"VariableDeclaration","scope":385,"src":"15243:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":374,"name":"uint256","nodeType":"ElementaryTypeName","src":"15243:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":377,"mutability":"mutable","name":"availableBorrowsETH","nodeType":"VariableDeclaration","scope":385,"src":"15277:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":376,"name":"uint256","nodeType":"ElementaryTypeName","src":"15277:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":379,"mutability":"mutable","name":"currentLiquidationThreshold","nodeType":"VariableDeclaration","scope":385,"src":"15318:35:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":378,"name":"uint256","nodeType":"ElementaryTypeName","src":"15318:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":381,"mutability":"mutable","name":"ltv","nodeType":"VariableDeclaration","scope":385,"src":"15367:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":380,"name":"uint256","nodeType":"ElementaryTypeName","src":"15367:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":383,"mutability":"mutable","name":"healthFactor","nodeType":"VariableDeclaration","scope":385,"src":"15392:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":382,"name":"uint256","nodeType":"ElementaryTypeName","src":"15392:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15189:233:1"},"scope":550,"src":"15086:337:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7b6d52d4","id":400,"implemented":false,"kind":"function","modifiers":[],"name":"initReserve","nodeType":"FunctionDefinition","parameters":{"id":398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":387,"mutability":"mutable","name":"reserve","nodeType":"VariableDeclaration","scope":400,"src":"15459:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":386,"name":"address","nodeType":"ElementaryTypeName","src":"15459:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":389,"mutability":"mutable","name":"aTokenAddress","nodeType":"VariableDeclaration","scope":400,"src":"15484:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":388,"name":"address","nodeType":"ElementaryTypeName","src":"15484:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":391,"mutability":"mutable","name":"stableDebtAddress","nodeType":"VariableDeclaration","scope":400,"src":"15515:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":390,"name":"address","nodeType":"ElementaryTypeName","src":"15515:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":393,"mutability":"mutable","name":"variableDebtAddress","nodeType":"VariableDeclaration","scope":400,"src":"15550:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":392,"name":"address","nodeType":"ElementaryTypeName","src":"15550:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":395,"mutability":"mutable","name":"interestRateStrategyAddress","nodeType":"VariableDeclaration","scope":400,"src":"15587:35:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"15587:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":397,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":400,"src":"15632:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":396,"name":"uint8","nodeType":"ElementaryTypeName","src":"15632:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"15449:202:1"},"returnParameters":{"id":399,"nodeType":"ParameterList","parameters":[],"src":"15660:0:1"},"scope":550,"src":"15429:232:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":401,"nodeType":"StructuredDocumentation","src":"15667:259:1","text":" @dev Updates the address of the interest rate strategy contract\n - Only callable by the LendingPoolConfigurator contract\n @param asset The address of the underlying asset of the reserve\n @param _risk The risk of the asset*"},"functionSelector":"9f71ff22","id":414,"implemented":false,"kind":"function","modifiers":[],"name":"setAssetData","nodeType":"FunctionDefinition","parameters":{"id":412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":403,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":414,"src":"15962:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":402,"name":"address","nodeType":"ElementaryTypeName","src":"15962:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":405,"mutability":"mutable","name":"_risk","nodeType":"VariableDeclaration","scope":414,"src":"15985:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":404,"name":"uint8","nodeType":"ElementaryTypeName","src":"15985:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":407,"mutability":"mutable","name":"_isLendable","nodeType":"VariableDeclaration","scope":414,"src":"16006:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":406,"name":"bool","nodeType":"ElementaryTypeName","src":"16006:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":409,"mutability":"mutable","name":"_allowedHigherTranche","nodeType":"VariableDeclaration","scope":414,"src":"16032:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":408,"name":"bool","nodeType":"ElementaryTypeName","src":"16032:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":411,"mutability":"mutable","name":"_assetType","nodeType":"VariableDeclaration","scope":414,"src":"16068:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":410,"name":"uint8","nodeType":"ElementaryTypeName","src":"16068:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"15952:138:1"},"returnParameters":{"id":413,"nodeType":"ParameterList","parameters":[],"src":"16099:0:1"},"scope":550,"src":"15931:169:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"de14ae28","id":423,"implemented":false,"kind":"function","modifiers":[],"name":"setReserveInterestRateStrategyAddress","nodeType":"FunctionDefinition","parameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":416,"mutability":"mutable","name":"reserve","nodeType":"VariableDeclaration","scope":423,"src":"16162:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":415,"name":"address","nodeType":"ElementaryTypeName","src":"16162:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":418,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":423,"src":"16187:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":417,"name":"uint8","nodeType":"ElementaryTypeName","src":"16187:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":420,"mutability":"mutable","name":"rateStrategyAddress","nodeType":"VariableDeclaration","scope":423,"src":"16210:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":419,"name":"address","nodeType":"ElementaryTypeName","src":"16210:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16152:91:1"},"returnParameters":{"id":422,"nodeType":"ParameterList","parameters":[],"src":"16252:0:1"},"scope":550,"src":"16106:147:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f13771da","id":432,"implemented":false,"kind":"function","modifiers":[],"name":"setConfiguration","nodeType":"FunctionDefinition","parameters":{"id":430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":425,"mutability":"mutable","name":"reserve","nodeType":"VariableDeclaration","scope":432,"src":"16294:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":424,"name":"address","nodeType":"ElementaryTypeName","src":"16294:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":427,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":432,"src":"16319:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":426,"name":"uint8","nodeType":"ElementaryTypeName","src":"16319:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":429,"mutability":"mutable","name":"configuration","nodeType":"VariableDeclaration","scope":432,"src":"16342:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":428,"name":"uint256","nodeType":"ElementaryTypeName","src":"16342:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16284:85:1"},"returnParameters":{"id":431,"nodeType":"ParameterList","parameters":[],"src":"16378:0:1"},"scope":550,"src":"16259:120:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":433,"nodeType":"StructuredDocumentation","src":"16385:184:1","text":" @dev Returns the configuration of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The configuration of the reserve*"},"functionSelector":"39142300","id":443,"implemented":false,"kind":"function","modifiers":[],"name":"getConfiguration","nodeType":"FunctionDefinition","parameters":{"id":438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":435,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":443,"src":"16600:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":434,"name":"address","nodeType":"ElementaryTypeName","src":"16600:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":437,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":443,"src":"16615:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":436,"name":"uint8","nodeType":"ElementaryTypeName","src":"16615:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16599:30:1"},"returnParameters":{"id":442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":441,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":443,"src":"16677:40:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$814_memory_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"},"typeName":{"id":440,"nodeType":"UserDefinedTypeName","pathNode":{"id":439,"name":"DataTypes.ReserveConfigurationMap","nodeType":"IdentifierPath","referencedDeclaration":814,"src":"16677:33:1"},"referencedDeclaration":814,"src":"16677:33:1","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$814_storage_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"}},"visibility":"internal"}],"src":"16676:42:1"},"scope":550,"src":"16574:145:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":444,"nodeType":"StructuredDocumentation","src":"16725:167:1","text":" @dev Returns the configuration of the user across all the reserves\n @param user The user address\n @return The configuration of the user*"},"functionSelector":"4417a583","id":452,"implemented":false,"kind":"function","modifiers":[],"name":"getUserConfiguration","nodeType":"FunctionDefinition","parameters":{"id":447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":446,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":452,"src":"16927:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":445,"name":"address","nodeType":"ElementaryTypeName","src":"16927:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16926:14:1"},"returnParameters":{"id":451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":450,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":452,"src":"16988:37:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UserConfigurationMap_$817_memory_ptr","typeString":"struct DataTypes.UserConfigurationMap"},"typeName":{"id":449,"nodeType":"UserDefinedTypeName","pathNode":{"id":448,"name":"DataTypes.UserConfigurationMap","nodeType":"IdentifierPath","referencedDeclaration":817,"src":"16988:30:1"},"referencedDeclaration":817,"src":"16988:30:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserConfigurationMap_$817_storage_ptr","typeString":"struct DataTypes.UserConfigurationMap"}},"visibility":"internal"}],"src":"16987:39:1"},"scope":550,"src":"16897:130:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":453,"nodeType":"StructuredDocumentation","src":"17033:204:1","text":" @dev Returns the normalized income normalized income of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The reserve's normalized income"},"functionSelector":"776f6891","id":462,"implemented":false,"kind":"function","modifiers":[],"name":"getReserveNormalizedIncome","nodeType":"FunctionDefinition","parameters":{"id":458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":455,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":462,"src":"17278:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":454,"name":"address","nodeType":"ElementaryTypeName","src":"17278:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":457,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":462,"src":"17293:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":456,"name":"uint8","nodeType":"ElementaryTypeName","src":"17293:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"17277:30:1"},"returnParameters":{"id":461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":460,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":462,"src":"17355:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":459,"name":"uint256","nodeType":"ElementaryTypeName","src":"17355:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17354:9:1"},"scope":550,"src":"17242:122:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":463,"nodeType":"StructuredDocumentation","src":"17370:201:1","text":" @dev Returns the normalized variable debt per unit of asset\n @param asset The address of the underlying asset of the reserve\n @return The reserve normalized variable debt"},"functionSelector":"013351ef","id":472,"implemented":false,"kind":"function","modifiers":[],"name":"getReserveNormalizedVariableDebt","nodeType":"FunctionDefinition","parameters":{"id":468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":465,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":472,"src":"17618:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":464,"name":"address","nodeType":"ElementaryTypeName","src":"17618:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":467,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":472,"src":"17633:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":466,"name":"uint8","nodeType":"ElementaryTypeName","src":"17633:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"17617:30:1"},"returnParameters":{"id":471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":470,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":472,"src":"17695:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":469,"name":"uint256","nodeType":"ElementaryTypeName","src":"17695:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17694:9:1"},"scope":550,"src":"17576:128:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":473,"nodeType":"StructuredDocumentation","src":"17710:186:1","text":" @dev Returns the state and configuration of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The state of the reserve*"},"functionSelector":"3629e3cd","id":483,"implemented":false,"kind":"function","modifiers":[],"name":"getReserveData","nodeType":"FunctionDefinition","parameters":{"id":478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":475,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":483,"src":"17925:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":474,"name":"address","nodeType":"ElementaryTypeName","src":"17925:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":477,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":483,"src":"17940:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":476,"name":"uint8","nodeType":"ElementaryTypeName","src":"17940:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"17924:30:1"},"returnParameters":{"id":482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":481,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":483,"src":"18002:28:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveData_$801_memory_ptr","typeString":"struct DataTypes.ReserveData"},"typeName":{"id":480,"nodeType":"UserDefinedTypeName","pathNode":{"id":479,"name":"DataTypes.ReserveData","nodeType":"IdentifierPath","referencedDeclaration":801,"src":"18002:21:1"},"referencedDeclaration":801,"src":"18002:21:1","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveData_$801_storage_ptr","typeString":"struct DataTypes.ReserveData"}},"visibility":"internal"}],"src":"18001:30:1"},"scope":550,"src":"17901:131:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"c1fc1e90","id":500,"implemented":false,"kind":"function","modifiers":[],"name":"finalizeTransfer","nodeType":"FunctionDefinition","parameters":{"id":498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":485,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":500,"src":"18073:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":484,"name":"address","nodeType":"ElementaryTypeName","src":"18073:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":487,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":500,"src":"18096:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":486,"name":"uint8","nodeType":"ElementaryTypeName","src":"18096:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":489,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":500,"src":"18119:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":488,"name":"address","nodeType":"ElementaryTypeName","src":"18119:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":491,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":500,"src":"18141:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":490,"name":"address","nodeType":"ElementaryTypeName","src":"18141:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":493,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":500,"src":"18161:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":492,"name":"uint256","nodeType":"ElementaryTypeName","src":"18161:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":495,"mutability":"mutable","name":"balanceFromAfter","nodeType":"VariableDeclaration","scope":500,"src":"18185:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":494,"name":"uint256","nodeType":"ElementaryTypeName","src":"18185:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":497,"mutability":"mutable","name":"balanceToBefore","nodeType":"VariableDeclaration","scope":500,"src":"18219:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":496,"name":"uint256","nodeType":"ElementaryTypeName","src":"18219:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18063:185:1"},"returnParameters":{"id":499,"nodeType":"ParameterList","parameters":[],"src":"18257:0:1"},"scope":550,"src":"18038:220:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d1946dbc","id":506,"implemented":false,"kind":"function","modifiers":[],"name":"getReservesList","nodeType":"FunctionDefinition","parameters":{"id":501,"nodeType":"ParameterList","parameters":[],"src":"18288:2:1"},"returnParameters":{"id":505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":504,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":506,"src":"18314:16:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":502,"name":"address","nodeType":"ElementaryTypeName","src":"18314:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":503,"nodeType":"ArrayTypeName","src":"18314:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"18313:18:1"},"scope":550,"src":"18264:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"1652e7b7","id":514,"implemented":false,"kind":"function","modifiers":[],"name":"getAssetData","nodeType":"FunctionDefinition","parameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":514,"src":"18360:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":507,"name":"address","nodeType":"ElementaryTypeName","src":"18360:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"18359:15:1"},"returnParameters":{"id":513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":512,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":514,"src":"18422:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$768_memory_ptr","typeString":"struct DataTypes.AssetData"},"typeName":{"id":511,"nodeType":"UserDefinedTypeName","pathNode":{"id":510,"name":"DataTypes.AssetData","nodeType":"IdentifierPath","referencedDeclaration":768,"src":"18422:19:1"},"referencedDeclaration":768,"src":"18422:19:1","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$768_storage_ptr","typeString":"struct DataTypes.AssetData"}},"visibility":"internal"}],"src":"18421:28:1"},"scope":550,"src":"18338:112:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"fe65acfe","id":520,"implemented":false,"kind":"function","modifiers":[],"name":"getAddressesProvider","nodeType":"FunctionDefinition","parameters":{"id":515,"nodeType":"ParameterList","parameters":[],"src":"18485:2:1"},"returnParameters":{"id":519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":518,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":520,"src":"18535:29:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPoolAddressesProvider_$753","typeString":"contract ILendingPoolAddressesProvider"},"typeName":{"id":517,"nodeType":"UserDefinedTypeName","pathNode":{"id":516,"name":"ILendingPoolAddressesProvider","nodeType":"IdentifierPath","referencedDeclaration":753,"src":"18535:29:1"},"referencedDeclaration":753,"src":"18535:29:1","typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPoolAddressesProvider_$753","typeString":"contract ILendingPoolAddressesProvider"}},"visibility":"internal"}],"src":"18534:31:1"},"scope":550,"src":"18456:110:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"bedb86fb","id":525,"implemented":false,"kind":"function","modifiers":[],"name":"setPause","nodeType":"FunctionDefinition","parameters":{"id":523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":522,"mutability":"mutable","name":"val","nodeType":"VariableDeclaration","scope":525,"src":"18590:8:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":521,"name":"bool","nodeType":"ElementaryTypeName","src":"18590:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"18589:10:1"},"returnParameters":{"id":524,"nodeType":"ParameterList","parameters":[],"src":"18608:0:1"},"scope":550,"src":"18572:37:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5c975abb","id":530,"implemented":false,"kind":"function","modifiers":[],"name":"paused","nodeType":"FunctionDefinition","parameters":{"id":526,"nodeType":"ParameterList","parameters":[],"src":"18630:2:1"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":528,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":530,"src":"18656:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":527,"name":"bool","nodeType":"ElementaryTypeName","src":"18656:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"18655:6:1"},"scope":550,"src":"18615:47:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"14058967","id":541,"implemented":false,"kind":"function","modifiers":[],"name":"editTrancheMultiplier","nodeType":"FunctionDefinition","parameters":{"id":539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":532,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":541,"src":"18708:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":531,"name":"uint8","nodeType":"ElementaryTypeName","src":"18708:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":534,"mutability":"mutable","name":"_liquidityRateMultiplier","nodeType":"VariableDeclaration","scope":541,"src":"18731:32:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":533,"name":"uint256","nodeType":"ElementaryTypeName","src":"18731:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":536,"mutability":"mutable","name":"_variableBorrowRateMultiplier","nodeType":"VariableDeclaration","scope":541,"src":"18773:37:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":535,"name":"uint256","nodeType":"ElementaryTypeName","src":"18773:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":538,"mutability":"mutable","name":"_stableBorrowRateMultiplier","nodeType":"VariableDeclaration","scope":541,"src":"18820:35:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":537,"name":"uint256","nodeType":"ElementaryTypeName","src":"18820:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18698:163:1"},"returnParameters":{"id":540,"nodeType":"ParameterList","parameters":[],"src":"18870:0:1"},"scope":550,"src":"18668:203:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"bfb88060","id":549,"implemented":false,"kind":"function","modifiers":[],"name":"getTrancheMultiplier","nodeType":"FunctionDefinition","parameters":{"id":544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":543,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":549,"src":"18907:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":542,"name":"uint8","nodeType":"ElementaryTypeName","src":"18907:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"18906:15:1"},"returnParameters":{"id":548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":547,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":549,"src":"18969:34:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TrancheMultiplier_$808_memory_ptr","typeString":"struct DataTypes.TrancheMultiplier"},"typeName":{"id":546,"nodeType":"UserDefinedTypeName","pathNode":{"id":545,"name":"DataTypes.TrancheMultiplier","nodeType":"IdentifierPath","referencedDeclaration":808,"src":"18969:27:1"},"referencedDeclaration":808,"src":"18969:27:1","typeDescriptions":{"typeIdentifier":"t_struct$_TrancheMultiplier_$808_storage_ptr","typeString":"struct DataTypes.TrancheMultiplier"}},"visibility":"internal"}],"src":"18968:36:1"},"scope":550,"src":"18877:128:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":551,"src":"216:18791:1"}],"src":"37:18971:1"},"id":1},"contracts/interfaces/ILendingPoolAddressesProvider.sol":{"ast":{"absolutePath":"contracts/interfaces/ILendingPoolAddressesProvider.sol","exportedSymbols":{"DataTypes":[924],"ILendingPoolAddressesProvider":[753]},"id":754,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":552,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"37:24:2"},{"absolutePath":"contracts/protocol/libraries/types/DataTypes.sol","file":"../protocol/libraries/types/DataTypes.sol","id":554,"nodeType":"ImportDirective","scope":754,"sourceUnit":925,"src":"63:68:2","symbolAliases":[{"foreign":{"id":553,"name":"DataTypes","nodeType":"Identifier","overloadedDeclarations":[],"src":"71:9:2","typeDescriptions":{}}}],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":555,"nodeType":"StructuredDocumentation","src":"133:311:2","text":" @title LendingPoolAddressesProvider contract\n @dev Main registry of addresses part of or connected to the protocol, including permissioned roles\n - Acting also as factory of proxies and admin of those, so with right to change its implementations\n - Owned by the Aave Governance\n @author Aave*"},"fullyImplemented":false,"id":753,"linearizedBaseContracts":[753],"name":"ILendingPoolAddressesProvider","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"id":559,"name":"MarketIdSet","nodeType":"EventDefinition","parameters":{"id":558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":557,"indexed":false,"mutability":"mutable","name":"newMarketId","nodeType":"VariableDeclaration","scope":559,"src":"509:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":556,"name":"string","nodeType":"ElementaryTypeName","src":"509:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"508:20:2"},"src":"491:38:2"},{"anonymous":false,"id":563,"name":"LendingPoolUpdated","nodeType":"EventDefinition","parameters":{"id":562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":561,"indexed":true,"mutability":"mutable","name":"newAddress","nodeType":"VariableDeclaration","scope":563,"src":"559:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":560,"name":"address","nodeType":"ElementaryTypeName","src":"559:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"558:28:2"},"src":"534:53:2"},{"anonymous":false,"id":567,"name":"ConfigurationAdminUpdated","nodeType":"EventDefinition","parameters":{"id":566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":565,"indexed":true,"mutability":"mutable","name":"newAddress","nodeType":"VariableDeclaration","scope":567,"src":"624:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":564,"name":"address","nodeType":"ElementaryTypeName","src":"624:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"623:28:2"},"src":"592:60:2"},{"anonymous":false,"id":571,"name":"EmergencyAdminUpdated","nodeType":"EventDefinition","parameters":{"id":570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":569,"indexed":true,"mutability":"mutable","name":"newAddress","nodeType":"VariableDeclaration","scope":571,"src":"685:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":568,"name":"address","nodeType":"ElementaryTypeName","src":"685:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"684:28:2"},"src":"657:56:2"},{"anonymous":false,"id":575,"name":"LendingPoolConfiguratorUpdated","nodeType":"EventDefinition","parameters":{"id":574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":573,"indexed":true,"mutability":"mutable","name":"newAddress","nodeType":"VariableDeclaration","scope":575,"src":"755:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":572,"name":"address","nodeType":"ElementaryTypeName","src":"755:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"754:28:2"},"src":"718:65:2"},{"anonymous":false,"id":579,"name":"LendingPoolCollateralManagerUpdated","nodeType":"EventDefinition","parameters":{"id":578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":577,"indexed":true,"mutability":"mutable","name":"newAddress","nodeType":"VariableDeclaration","scope":579,"src":"830:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":576,"name":"address","nodeType":"ElementaryTypeName","src":"830:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"829:28:2"},"src":"788:70:2"},{"anonymous":false,"id":583,"name":"PriceOracleUpdated","nodeType":"EventDefinition","parameters":{"id":582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":581,"indexed":true,"mutability":"mutable","name":"newAddress","nodeType":"VariableDeclaration","scope":583,"src":"888:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"888:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"887:28:2"},"src":"863:53:2"},{"anonymous":false,"id":587,"name":"CurvePriceOracleUpdated","nodeType":"EventDefinition","parameters":{"id":586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":585,"indexed":true,"mutability":"mutable","name":"newAddress","nodeType":"VariableDeclaration","scope":587,"src":"951:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":584,"name":"address","nodeType":"ElementaryTypeName","src":"951:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"950:28:2"},"src":"921:58:2"},{"anonymous":false,"id":591,"name":"CurvePriceOracleWrapperUpdated","nodeType":"EventDefinition","parameters":{"id":590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":589,"indexed":true,"mutability":"mutable","name":"newAddress","nodeType":"VariableDeclaration","scope":591,"src":"1021:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":588,"name":"address","nodeType":"ElementaryTypeName","src":"1021:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1020:28:2"},"src":"984:65:2"},{"anonymous":false,"id":595,"name":"CurveAddressProviderUpdated","nodeType":"EventDefinition","parameters":{"id":594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":593,"indexed":true,"mutability":"mutable","name":"newAddress","nodeType":"VariableDeclaration","scope":595,"src":"1088:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":592,"name":"address","nodeType":"ElementaryTypeName","src":"1088:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1087:28:2"},"src":"1054:62:2"},{"anonymous":false,"id":599,"name":"LendingRateOracleUpdated","nodeType":"EventDefinition","parameters":{"id":598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":597,"indexed":true,"mutability":"mutable","name":"newAddress","nodeType":"VariableDeclaration","scope":599,"src":"1152:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":596,"name":"address","nodeType":"ElementaryTypeName","src":"1152:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1151:28:2"},"src":"1121:59:2"},{"anonymous":false,"id":605,"name":"ProxyCreated","nodeType":"EventDefinition","parameters":{"id":604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":601,"indexed":false,"mutability":"mutable","name":"id","nodeType":"VariableDeclaration","scope":605,"src":"1204:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":600,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1204:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":603,"indexed":true,"mutability":"mutable","name":"newAddress","nodeType":"VariableDeclaration","scope":605,"src":"1216:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":602,"name":"address","nodeType":"ElementaryTypeName","src":"1216:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1203:40:2"},"src":"1185:59:2"},{"anonymous":false,"id":613,"name":"AddressSet","nodeType":"EventDefinition","parameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":607,"indexed":false,"mutability":"mutable","name":"id","nodeType":"VariableDeclaration","scope":613,"src":"1266:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":606,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1266:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":609,"indexed":true,"mutability":"mutable","name":"newAddress","nodeType":"VariableDeclaration","scope":613,"src":"1278:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":608,"name":"address","nodeType":"ElementaryTypeName","src":"1278:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":611,"indexed":false,"mutability":"mutable","name":"hasProxy","nodeType":"VariableDeclaration","scope":613,"src":"1306:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":610,"name":"bool","nodeType":"ElementaryTypeName","src":"1306:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:55:2"},"src":"1249:72:2"},{"functionSelector":"568ef470","id":618,"implemented":false,"kind":"function","modifiers":[],"name":"getMarketId","nodeType":"FunctionDefinition","parameters":{"id":614,"nodeType":"ParameterList","parameters":[],"src":"1347:2:2"},"returnParameters":{"id":617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":616,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":618,"src":"1373:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":615,"name":"string","nodeType":"ElementaryTypeName","src":"1373:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1372:15:2"},"scope":753,"src":"1327:61:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f67b1847","id":623,"implemented":false,"kind":"function","modifiers":[],"name":"setMarketId","nodeType":"FunctionDefinition","parameters":{"id":621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":620,"mutability":"mutable","name":"marketId","nodeType":"VariableDeclaration","scope":623,"src":"1415:24:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":619,"name":"string","nodeType":"ElementaryTypeName","src":"1415:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1414:26:2"},"returnParameters":{"id":622,"nodeType":"ParameterList","parameters":[],"src":"1449:0:2"},"scope":753,"src":"1394:56:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"ca446dd9","id":630,"implemented":false,"kind":"function","modifiers":[],"name":"setAddress","nodeType":"FunctionDefinition","parameters":{"id":628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":625,"mutability":"mutable","name":"id","nodeType":"VariableDeclaration","scope":630,"src":"1476:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":624,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1476:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":627,"mutability":"mutable","name":"newAddress","nodeType":"VariableDeclaration","scope":630,"src":"1488:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":626,"name":"address","nodeType":"ElementaryTypeName","src":"1488:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1475:32:2"},"returnParameters":{"id":629,"nodeType":"ParameterList","parameters":[],"src":"1516:0:2"},"scope":753,"src":"1456:61:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5dcc528c","id":637,"implemented":false,"kind":"function","modifiers":[],"name":"setAddressAsProxy","nodeType":"FunctionDefinition","parameters":{"id":635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":632,"mutability":"mutable","name":"id","nodeType":"VariableDeclaration","scope":637,"src":"1550:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":631,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1550:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":634,"mutability":"mutable","name":"impl","nodeType":"VariableDeclaration","scope":637,"src":"1562:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":633,"name":"address","nodeType":"ElementaryTypeName","src":"1562:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1549:26:2"},"returnParameters":{"id":636,"nodeType":"ParameterList","parameters":[],"src":"1584:0:2"},"scope":753,"src":"1523:62:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"21f8a721","id":644,"implemented":false,"kind":"function","modifiers":[],"name":"getAddress","nodeType":"FunctionDefinition","parameters":{"id":640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":639,"mutability":"mutable","name":"id","nodeType":"VariableDeclaration","scope":644,"src":"1611:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":638,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1611:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1610:12:2"},"returnParameters":{"id":643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":642,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":644,"src":"1646:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":641,"name":"address","nodeType":"ElementaryTypeName","src":"1646:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1645:9:2"},"scope":753,"src":"1591:64:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0261bf8b","id":649,"implemented":false,"kind":"function","modifiers":[],"name":"getLendingPool","nodeType":"FunctionDefinition","parameters":{"id":645,"nodeType":"ParameterList","parameters":[],"src":"1684:2:2"},"returnParameters":{"id":648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":647,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":649,"src":"1710:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":646,"name":"address","nodeType":"ElementaryTypeName","src":"1710:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1709:9:2"},"scope":753,"src":"1661:58:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"5aef021f","id":654,"implemented":false,"kind":"function","modifiers":[],"name":"setLendingPoolImpl","nodeType":"FunctionDefinition","parameters":{"id":652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":651,"mutability":"mutable","name":"pool","nodeType":"VariableDeclaration","scope":654,"src":"1753:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":650,"name":"address","nodeType":"ElementaryTypeName","src":"1753:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1752:14:2"},"returnParameters":{"id":653,"nodeType":"ParameterList","parameters":[],"src":"1775:0:2"},"scope":753,"src":"1725:51:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"85c858b1","id":659,"implemented":false,"kind":"function","modifiers":[],"name":"getLendingPoolConfigurator","nodeType":"FunctionDefinition","parameters":{"id":655,"nodeType":"ParameterList","parameters":[],"src":"1817:2:2"},"returnParameters":{"id":658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":657,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":659,"src":"1843:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":656,"name":"address","nodeType":"ElementaryTypeName","src":"1843:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1842:9:2"},"scope":753,"src":"1782:70:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"c12542df","id":664,"implemented":false,"kind":"function","modifiers":[],"name":"setLendingPoolConfiguratorImpl","nodeType":"FunctionDefinition","parameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":661,"mutability":"mutable","name":"configurator","nodeType":"VariableDeclaration","scope":664,"src":"1898:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":660,"name":"address","nodeType":"ElementaryTypeName","src":"1898:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1897:22:2"},"returnParameters":{"id":663,"nodeType":"ParameterList","parameters":[],"src":"1928:0:2"},"scope":753,"src":"1858:71:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"712d9171","id":669,"implemented":false,"kind":"function","modifiers":[],"name":"getLendingPoolCollateralManager","nodeType":"FunctionDefinition","parameters":{"id":665,"nodeType":"ParameterList","parameters":[],"src":"1975:2:2"},"returnParameters":{"id":668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":667,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":669,"src":"2001:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":666,"name":"address","nodeType":"ElementaryTypeName","src":"2001:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2000:9:2"},"scope":753,"src":"1935:75:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"398e5553","id":674,"implemented":false,"kind":"function","modifiers":[],"name":"setLendingPoolCollateralManager","nodeType":"FunctionDefinition","parameters":{"id":672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":671,"mutability":"mutable","name":"manager","nodeType":"VariableDeclaration","scope":674,"src":"2057:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":670,"name":"address","nodeType":"ElementaryTypeName","src":"2057:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2056:17:2"},"returnParameters":{"id":673,"nodeType":"ParameterList","parameters":[],"src":"2082:0:2"},"scope":753,"src":"2016:67:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"aecda378","id":679,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolAdmin","nodeType":"FunctionDefinition","parameters":{"id":675,"nodeType":"ParameterList","parameters":[],"src":"2110:2:2"},"returnParameters":{"id":678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":677,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":679,"src":"2136:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":676,"name":"address","nodeType":"ElementaryTypeName","src":"2136:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2135:9:2"},"scope":753,"src":"2089:56:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"283d62ad","id":684,"implemented":false,"kind":"function","modifiers":[],"name":"setPoolAdmin","nodeType":"FunctionDefinition","parameters":{"id":682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":681,"mutability":"mutable","name":"admin","nodeType":"VariableDeclaration","scope":684,"src":"2173:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":680,"name":"address","nodeType":"ElementaryTypeName","src":"2173:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2172:15:2"},"returnParameters":{"id":683,"nodeType":"ParameterList","parameters":[],"src":"2196:0:2"},"scope":753,"src":"2151:46:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"ddcaa9ea","id":689,"implemented":false,"kind":"function","modifiers":[],"name":"getEmergencyAdmin","nodeType":"FunctionDefinition","parameters":{"id":685,"nodeType":"ParameterList","parameters":[],"src":"2229:2:2"},"returnParameters":{"id":688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":687,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":689,"src":"2255:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":686,"name":"address","nodeType":"ElementaryTypeName","src":"2255:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2254:9:2"},"scope":753,"src":"2203:61:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"35da3394","id":694,"implemented":false,"kind":"function","modifiers":[],"name":"setEmergencyAdmin","nodeType":"FunctionDefinition","parameters":{"id":692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":691,"mutability":"mutable","name":"admin","nodeType":"VariableDeclaration","scope":694,"src":"2297:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":690,"name":"address","nodeType":"ElementaryTypeName","src":"2297:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2296:15:2"},"returnParameters":{"id":693,"nodeType":"ParameterList","parameters":[],"src":"2320:0:2"},"scope":753,"src":"2270:51:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"1a9dffb3","id":702,"implemented":false,"kind":"function","modifiers":[],"name":"getPriceOracle","nodeType":"FunctionDefinition","parameters":{"id":698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":697,"mutability":"mutable","name":"assetType","nodeType":"VariableDeclaration","scope":702,"src":"2351:36:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ReserveAssetType_$758","typeString":"enum DataTypes.ReserveAssetType"},"typeName":{"id":696,"nodeType":"UserDefinedTypeName","pathNode":{"id":695,"name":"DataTypes.ReserveAssetType","nodeType":"IdentifierPath","referencedDeclaration":758,"src":"2351:26:2"},"referencedDeclaration":758,"src":"2351:26:2","typeDescriptions":{"typeIdentifier":"t_enum$_ReserveAssetType_$758","typeString":"enum DataTypes.ReserveAssetType"}},"visibility":"internal"}],"src":"2350:38:2"},"returnParameters":{"id":701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":700,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":702,"src":"2436:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":699,"name":"address","nodeType":"ElementaryTypeName","src":"2436:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2435:9:2"},"scope":753,"src":"2327:118:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f139dc81","id":707,"implemented":false,"kind":"function","modifiers":[],"name":"getAavePriceOracle","nodeType":"FunctionDefinition","parameters":{"id":703,"nodeType":"ParameterList","parameters":[],"src":"2478:2:2"},"returnParameters":{"id":706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":705,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":707,"src":"2504:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":704,"name":"address","nodeType":"ElementaryTypeName","src":"2504:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2503:9:2"},"scope":753,"src":"2451:62:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"ba61fe31","id":712,"implemented":false,"kind":"function","modifiers":[],"name":"getCurvePriceOracle","nodeType":"FunctionDefinition","parameters":{"id":708,"nodeType":"ParameterList","parameters":[],"src":"2547:2:2"},"returnParameters":{"id":711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":710,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":712,"src":"2573:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":709,"name":"address","nodeType":"ElementaryTypeName","src":"2573:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2572:9:2"},"scope":753,"src":"2519:63:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"992ecae7","id":717,"implemented":false,"kind":"function","modifiers":[],"name":"getCurvePriceOracleWrapper","nodeType":"FunctionDefinition","parameters":{"id":713,"nodeType":"ParameterList","parameters":[],"src":"2623:2:2"},"returnParameters":{"id":716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":715,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":717,"src":"2649:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":714,"name":"address","nodeType":"ElementaryTypeName","src":"2649:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2648:9:2"},"scope":753,"src":"2588:70:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"59696e16","id":722,"implemented":false,"kind":"function","modifiers":[],"name":"getCurveAddressProvider","nodeType":"FunctionDefinition","parameters":{"id":718,"nodeType":"ParameterList","parameters":[],"src":"2696:2:2"},"returnParameters":{"id":721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":720,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":722,"src":"2722:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":719,"name":"address","nodeType":"ElementaryTypeName","src":"2722:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2721:9:2"},"scope":753,"src":"2664:67:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"985420f4","id":727,"implemented":false,"kind":"function","modifiers":[],"name":"setAavePriceOracle","nodeType":"FunctionDefinition","parameters":{"id":725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":724,"mutability":"mutable","name":"priceOracle","nodeType":"VariableDeclaration","scope":727,"src":"2765:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":723,"name":"address","nodeType":"ElementaryTypeName","src":"2765:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2764:21:2"},"returnParameters":{"id":726,"nodeType":"ParameterList","parameters":[],"src":"2794:0:2"},"scope":753,"src":"2737:58:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"9bc3d098","id":732,"implemented":false,"kind":"function","modifiers":[],"name":"setCurveAddressProvider","nodeType":"FunctionDefinition","parameters":{"id":730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":729,"mutability":"mutable","name":"addressProvider","nodeType":"VariableDeclaration","scope":732,"src":"2834:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":728,"name":"address","nodeType":"ElementaryTypeName","src":"2834:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2833:25:2"},"returnParameters":{"id":731,"nodeType":"ParameterList","parameters":[],"src":"2867:0:2"},"scope":753,"src":"2801:67:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"0aafb34e","id":737,"implemented":false,"kind":"function","modifiers":[],"name":"setCurvePriceOracle","nodeType":"FunctionDefinition","parameters":{"id":735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":734,"mutability":"mutable","name":"priceOracle","nodeType":"VariableDeclaration","scope":737,"src":"2903:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":733,"name":"address","nodeType":"ElementaryTypeName","src":"2903:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2902:21:2"},"returnParameters":{"id":736,"nodeType":"ParameterList","parameters":[],"src":"2932:0:2"},"scope":753,"src":"2874:59:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"e4bc9d64","id":742,"implemented":false,"kind":"function","modifiers":[],"name":"setCurvePriceOracleWrapper","nodeType":"FunctionDefinition","parameters":{"id":740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":739,"mutability":"mutable","name":"priceOracle","nodeType":"VariableDeclaration","scope":742,"src":"2975:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":738,"name":"address","nodeType":"ElementaryTypeName","src":"2975:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2974:21:2"},"returnParameters":{"id":741,"nodeType":"ParameterList","parameters":[],"src":"3004:0:2"},"scope":753,"src":"2939:66:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"3618abba","id":747,"implemented":false,"kind":"function","modifiers":[],"name":"getLendingRateOracle","nodeType":"FunctionDefinition","parameters":{"id":743,"nodeType":"ParameterList","parameters":[],"src":"3040:2:2"},"returnParameters":{"id":746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":745,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":747,"src":"3066:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":744,"name":"address","nodeType":"ElementaryTypeName","src":"3066:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3065:9:2"},"scope":753,"src":"3011:64:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"820d1274","id":752,"implemented":false,"kind":"function","modifiers":[],"name":"setLendingRateOracle","nodeType":"FunctionDefinition","parameters":{"id":750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":749,"mutability":"mutable","name":"lendingRateOracle","nodeType":"VariableDeclaration","scope":752,"src":"3111:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":748,"name":"address","nodeType":"ElementaryTypeName","src":"3111:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3110:27:2"},"returnParameters":{"id":751,"nodeType":"ParameterList","parameters":[],"src":"3146:0:2"},"scope":753,"src":"3081:66:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":754,"src":"445:2704:2"}],"src":"37:3113:2"},"id":2},"contracts/protocol/libraries/types/DataTypes.sol":{"ast":{"absolutePath":"contracts/protocol/libraries/types/DataTypes.sol","exportedSymbols":{"DataTypes":[924]},"id":925,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":755,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"37:24:3"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":924,"linearizedBaseContracts":[924],"name":"DataTypes","nodeType":"ContractDefinition","nodes":[{"canonicalName":"DataTypes.ReserveAssetType","id":758,"members":[{"id":756,"name":"AAVE","nodeType":"EnumValue","src":"225:4:3"},{"id":757,"name":"CURVE","nodeType":"EnumValue","src":"239:5:3"}],"name":"ReserveAssetType","nodeType":"EnumDefinition","src":"193:57:3"},{"canonicalName":"DataTypes.AssetData","id":768,"members":[{"constant":false,"id":760,"mutability":"mutable","name":"collateralRisk","nodeType":"VariableDeclaration","scope":768,"src":"459:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":759,"name":"uint8","nodeType":"ElementaryTypeName","src":"459:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":762,"mutability":"mutable","name":"isLendable","nodeType":"VariableDeclaration","scope":768,"src":"489:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":761,"name":"bool","nodeType":"ElementaryTypeName","src":"489:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":764,"mutability":"mutable","name":"isAllowedCollateralInHigherTranches","nodeType":"VariableDeclaration","scope":768,"src":"514:40:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":763,"name":"bool","nodeType":"ElementaryTypeName","src":"514:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":767,"mutability":"mutable","name":"assetType","nodeType":"VariableDeclaration","scope":768,"src":"564:26:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ReserveAssetType_$758","typeString":"enum DataTypes.ReserveAssetType"},"typeName":{"id":766,"nodeType":"UserDefinedTypeName","pathNode":{"id":765,"name":"ReserveAssetType","nodeType":"IdentifierPath","referencedDeclaration":758,"src":"564:16:3"},"referencedDeclaration":758,"src":"564:16:3","typeDescriptions":{"typeIdentifier":"t_enum$_ReserveAssetType_$758","typeString":"enum DataTypes.ReserveAssetType"}},"visibility":"internal"}],"name":"AssetData","nodeType":"StructDefinition","scope":924,"src":"432:165:3","visibility":"public"},{"canonicalName":"DataTypes.TrancheAddress","id":773,"members":[{"constant":false,"id":770,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":773,"src":"635:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":769,"name":"uint8","nodeType":"ElementaryTypeName","src":"635:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":772,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":773,"src":"658:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":771,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"TrancheAddress","nodeType":"StructDefinition","scope":924,"src":"603:75:3","visibility":"public"},{"canonicalName":"DataTypes.ReserveData","id":801,"members":[{"constant":false,"id":776,"mutability":"mutable","name":"configuration","nodeType":"VariableDeclaration","scope":801,"src":"755:37:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$814_storage_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"},"typeName":{"id":775,"nodeType":"UserDefinedTypeName","pathNode":{"id":774,"name":"ReserveConfigurationMap","nodeType":"IdentifierPath","referencedDeclaration":814,"src":"755:23:3"},"referencedDeclaration":814,"src":"755:23:3","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$814_storage_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"}},"visibility":"internal"},{"constant":false,"id":778,"mutability":"mutable","name":"liquidityIndex","nodeType":"VariableDeclaration","scope":801,"src":"850:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":777,"name":"uint128","nodeType":"ElementaryTypeName","src":"850:7:3","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":780,"mutability":"mutable","name":"variableBorrowIndex","nodeType":"VariableDeclaration","scope":801,"src":"966:27:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":779,"name":"uint128","nodeType":"ElementaryTypeName","src":"966:7:3","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":782,"mutability":"mutable","name":"currentLiquidityRate","nodeType":"VariableDeclaration","scope":801,"src":"1089:28:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":781,"name":"uint128","nodeType":"ElementaryTypeName","src":"1089:7:3","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":784,"mutability":"mutable","name":"currentVariableBorrowRate","nodeType":"VariableDeclaration","scope":801,"src":"1270:33:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":783,"name":"uint128","nodeType":"ElementaryTypeName","src":"1270:7:3","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":786,"mutability":"mutable","name":"currentStableBorrowRate","nodeType":"VariableDeclaration","scope":801,"src":"1406:31:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":785,"name":"uint128","nodeType":"ElementaryTypeName","src":"1406:7:3","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":788,"mutability":"mutable","name":"lastUpdateTimestamp","nodeType":"VariableDeclaration","scope":801,"src":"1481:26:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":787,"name":"uint40","nodeType":"ElementaryTypeName","src":"1481:6:3","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"},{"constant":false,"id":790,"mutability":"mutable","name":"aTokenAddress","nodeType":"VariableDeclaration","scope":801,"src":"1544:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":789,"name":"address","nodeType":"ElementaryTypeName","src":"1544:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":792,"mutability":"mutable","name":"stableDebtTokenAddress","nodeType":"VariableDeclaration","scope":801,"src":"1575:30:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":791,"name":"address","nodeType":"ElementaryTypeName","src":"1575:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":794,"mutability":"mutable","name":"variableDebtTokenAddress","nodeType":"VariableDeclaration","scope":801,"src":"1649:32:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":793,"name":"address","nodeType":"ElementaryTypeName","src":"1649:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":796,"mutability":"mutable","name":"interestRateStrategyAddress","nodeType":"VariableDeclaration","scope":801,"src":"1773:35:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":795,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":798,"mutability":"mutable","name":"id","nodeType":"VariableDeclaration","scope":801,"src":"1944:8:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":797,"name":"uint8","nodeType":"ElementaryTypeName","src":"1944:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":800,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":801,"src":"1962:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":799,"name":"uint8","nodeType":"ElementaryTypeName","src":"1962:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"name":"ReserveData","nodeType":"StructDefinition","scope":924,"src":"683:1429:3","visibility":"public"},{"canonicalName":"DataTypes.TrancheMultiplier","id":808,"members":[{"constant":false,"id":803,"mutability":"mutable","name":"liquidityRateMultiplier","nodeType":"VariableDeclaration","scope":808,"src":"2153:31:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":802,"name":"uint256","nodeType":"ElementaryTypeName","src":"2153:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":805,"mutability":"mutable","name":"variableBorrowRateMultiplier","nodeType":"VariableDeclaration","scope":808,"src":"2194:36:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":804,"name":"uint256","nodeType":"ElementaryTypeName","src":"2194:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":807,"mutability":"mutable","name":"stableBorrowRateMultiplier","nodeType":"VariableDeclaration","scope":808,"src":"2240:34:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":806,"name":"uint256","nodeType":"ElementaryTypeName","src":"2240:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"TrancheMultiplier","nodeType":"StructDefinition","scope":924,"src":"2118:163:3","visibility":"public"},{"constant":true,"id":811,"mutability":"constant","name":"NUM_TRANCHES","nodeType":"VariableDeclaration","scope":924,"src":"2287:31:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":809,"name":"uint8","nodeType":"ElementaryTypeName","src":"2287:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"33","id":810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2317:1:3","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"internal"},{"canonicalName":"DataTypes.ReserveConfigurationMap","id":814,"members":[{"constant":false,"id":813,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":814,"src":"2713:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":812,"name":"uint256","nodeType":"ElementaryTypeName","src":"2713:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ReserveConfigurationMap","nodeType":"StructDefinition","scope":924,"src":"2325:407:3","visibility":"public"},{"canonicalName":"DataTypes.UserConfigurationMap","id":817,"members":[{"constant":false,"id":816,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":817,"src":"2776:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":815,"name":"uint256","nodeType":"ElementaryTypeName","src":"2776:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"UserConfigurationMap","nodeType":"StructDefinition","scope":924,"src":"2738:57:3","visibility":"public"},{"canonicalName":"DataTypes.InterestRateMode","id":821,"members":[{"id":818,"name":"NONE","nodeType":"EnumValue","src":"2833:4:3"},{"id":819,"name":"STABLE","nodeType":"EnumValue","src":"2847:6:3"},{"id":820,"name":"VARIABLE","nodeType":"EnumValue","src":"2863:8:3"}],"name":"InterestRateMode","nodeType":"EnumDefinition","src":"2801:76:3"},{"canonicalName":"DataTypes.AcctTranche","id":826,"members":[{"constant":false,"id":823,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":826,"src":"2912:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":822,"name":"address","nodeType":"ElementaryTypeName","src":"2912:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":825,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":826,"src":"2934:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":824,"name":"uint8","nodeType":"ElementaryTypeName","src":"2934:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"name":"AcctTranche","nodeType":"StructDefinition","scope":924,"src":"2883:71:3","visibility":"public"},{"canonicalName":"DataTypes.DepositVars","id":840,"members":[{"constant":false,"id":828,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":840,"src":"2989:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":827,"name":"address","nodeType":"ElementaryTypeName","src":"2989:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":830,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":840,"src":"3012:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":829,"name":"uint8","nodeType":"ElementaryTypeName","src":"3012:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":832,"mutability":"mutable","name":"risk","nodeType":"VariableDeclaration","scope":840,"src":"3035:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":831,"name":"uint8","nodeType":"ElementaryTypeName","src":"3035:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":834,"mutability":"mutable","name":"allowHigherTranche","nodeType":"VariableDeclaration","scope":840,"src":"3055:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":833,"name":"bool","nodeType":"ElementaryTypeName","src":"3055:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":836,"mutability":"mutable","name":"isLendable","nodeType":"VariableDeclaration","scope":840,"src":"3088:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":835,"name":"bool","nodeType":"ElementaryTypeName","src":"3088:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":839,"mutability":"mutable","name":"t","nodeType":"VariableDeclaration","scope":840,"src":"3113:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_TrancheMultiplier_$808_storage_ptr","typeString":"struct DataTypes.TrancheMultiplier"},"typeName":{"id":838,"nodeType":"UserDefinedTypeName","pathNode":{"id":837,"name":"TrancheMultiplier","nodeType":"IdentifierPath","referencedDeclaration":808,"src":"3113:17:3"},"referencedDeclaration":808,"src":"3113:17:3","typeDescriptions":{"typeIdentifier":"t_struct$_TrancheMultiplier_$808_storage_ptr","typeString":"struct DataTypes.TrancheMultiplier"}},"visibility":"internal"}],"name":"DepositVars","nodeType":"StructDefinition","scope":924,"src":"2960:179:3","visibility":"public"},{"canonicalName":"DataTypes.ExecuteBorrowParams","id":866,"members":[{"constant":false,"id":842,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":866,"src":"3182:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":841,"name":"address","nodeType":"ElementaryTypeName","src":"3182:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":844,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":866,"src":"3205:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":843,"name":"uint8","nodeType":"ElementaryTypeName","src":"3205:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":846,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":866,"src":"3270:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":845,"name":"address","nodeType":"ElementaryTypeName","src":"3270:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":848,"mutability":"mutable","name":"onBehalfOf","nodeType":"VariableDeclaration","scope":866,"src":"3292:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":847,"name":"address","nodeType":"ElementaryTypeName","src":"3292:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":850,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":866,"src":"3320:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":849,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":852,"mutability":"mutable","name":"interestRateMode","nodeType":"VariableDeclaration","scope":866,"src":"3344:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":851,"name":"uint256","nodeType":"ElementaryTypeName","src":"3344:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":854,"mutability":"mutable","name":"aTokenAddress","nodeType":"VariableDeclaration","scope":866,"src":"3378:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":853,"name":"address","nodeType":"ElementaryTypeName","src":"3378:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":856,"mutability":"mutable","name":"referralCode","nodeType":"VariableDeclaration","scope":866,"src":"3409:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":855,"name":"uint16","nodeType":"ElementaryTypeName","src":"3409:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":858,"mutability":"mutable","name":"releaseUnderlying","nodeType":"VariableDeclaration","scope":866,"src":"3438:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":857,"name":"bool","nodeType":"ElementaryTypeName","src":"3438:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":860,"mutability":"mutable","name":"_maxStableRateBorrowSizePercent","nodeType":"VariableDeclaration","scope":866,"src":"3470:39:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":859,"name":"uint256","nodeType":"ElementaryTypeName","src":"3470:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":862,"mutability":"mutable","name":"_reservesCount","nodeType":"VariableDeclaration","scope":866,"src":"3519:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":861,"name":"uint256","nodeType":"ElementaryTypeName","src":"3519:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":865,"mutability":"mutable","name":"t","nodeType":"VariableDeclaration","scope":866,"src":"3551:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_TrancheMultiplier_$808_storage_ptr","typeString":"struct DataTypes.TrancheMultiplier"},"typeName":{"id":864,"nodeType":"UserDefinedTypeName","pathNode":{"id":863,"name":"TrancheMultiplier","nodeType":"IdentifierPath","referencedDeclaration":808,"src":"3551:17:3"},"referencedDeclaration":808,"src":"3551:17:3","typeDescriptions":{"typeIdentifier":"t_struct$_TrancheMultiplier_$808_storage_ptr","typeString":"struct DataTypes.TrancheMultiplier"}},"visibility":"internal"}],"name":"ExecuteBorrowParams","nodeType":"StructDefinition","scope":924,"src":"3145:432:3","visibility":"public"},{"canonicalName":"DataTypes.WithdrawParams","id":880,"members":[{"constant":false,"id":868,"mutability":"mutable","name":"_reservesCount","nodeType":"VariableDeclaration","scope":880,"src":"3615:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":867,"name":"uint256","nodeType":"ElementaryTypeName","src":"3615:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":870,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":880,"src":"3647:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":869,"name":"address","nodeType":"ElementaryTypeName","src":"3647:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":872,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":880,"src":"3670:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":871,"name":"uint8","nodeType":"ElementaryTypeName","src":"3670:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":874,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":880,"src":"3693:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":873,"name":"uint256","nodeType":"ElementaryTypeName","src":"3693:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":876,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":880,"src":"3717:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":875,"name":"address","nodeType":"ElementaryTypeName","src":"3717:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":879,"mutability":"mutable","name":"t","nodeType":"VariableDeclaration","scope":880,"src":"3737:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_TrancheMultiplier_$808_storage_ptr","typeString":"struct DataTypes.TrancheMultiplier"},"typeName":{"id":878,"nodeType":"UserDefinedTypeName","pathNode":{"id":877,"name":"TrancheMultiplier","nodeType":"IdentifierPath","referencedDeclaration":808,"src":"3737:17:3"},"referencedDeclaration":808,"src":"3737:17:3","typeDescriptions":{"typeIdentifier":"t_struct$_TrancheMultiplier_$808_storage_ptr","typeString":"struct DataTypes.TrancheMultiplier"}},"visibility":"internal"}],"name":"WithdrawParams","nodeType":"StructDefinition","scope":924,"src":"3583:180:3","visibility":"public"},{"canonicalName":"DataTypes.ValidateSetUseReserveAsCollateralParams","id":885,"members":[{"constant":false,"id":882,"mutability":"mutable","name":"risk","nodeType":"VariableDeclaration","scope":885,"src":"3826:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":881,"name":"uint8","nodeType":"ElementaryTypeName","src":"3826:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":884,"mutability":"mutable","name":"allowHigherTranche","nodeType":"VariableDeclaration","scope":885,"src":"3846:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":883,"name":"bool","nodeType":"ElementaryTypeName","src":"3846:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"ValidateSetUseReserveAsCollateralParams","nodeType":"StructDefinition","scope":924,"src":"3769:107:3","visibility":"public"},{"canonicalName":"DataTypes.calculateInterestRatesVars","id":896,"members":[{"constant":false,"id":887,"mutability":"mutable","name":"reserve","nodeType":"VariableDeclaration","scope":896,"src":"3926:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":886,"name":"address","nodeType":"ElementaryTypeName","src":"3926:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":889,"mutability":"mutable","name":"aToken","nodeType":"VariableDeclaration","scope":896,"src":"3951:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":888,"name":"address","nodeType":"ElementaryTypeName","src":"3951:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":891,"mutability":"mutable","name":"liquidityAdded","nodeType":"VariableDeclaration","scope":896,"src":"3975:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":890,"name":"uint256","nodeType":"ElementaryTypeName","src":"3975:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":893,"mutability":"mutable","name":"liquidityTaken","nodeType":"VariableDeclaration","scope":896,"src":"4007:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":892,"name":"uint256","nodeType":"ElementaryTypeName","src":"4007:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":895,"mutability":"mutable","name":"reserveFactor","nodeType":"VariableDeclaration","scope":896,"src":"4039:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":894,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"calculateInterestRatesVars","nodeType":"StructDefinition","scope":924,"src":"3882:185:3","visibility":"public"},{"canonicalName":"DataTypes.flashLoanVars","id":923,"members":[{"constant":false,"id":898,"mutability":"mutable","name":"receiverAddress","nodeType":"VariableDeclaration","scope":923,"src":"4104:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":897,"name":"address","nodeType":"ElementaryTypeName","src":"4104:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":902,"mutability":"mutable","name":"assets","nodeType":"VariableDeclaration","scope":923,"src":"4137:33:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TrancheAddress_$773_storage_$dyn_storage_ptr","typeString":"struct DataTypes.TrancheAddress[]"},"typeName":{"baseType":{"id":900,"nodeType":"UserDefinedTypeName","pathNode":{"id":899,"name":"DataTypes.TrancheAddress","nodeType":"IdentifierPath","referencedDeclaration":773,"src":"4137:24:3"},"referencedDeclaration":773,"src":"4137:24:3","typeDescriptions":{"typeIdentifier":"t_struct$_TrancheAddress_$773_storage_ptr","typeString":"struct DataTypes.TrancheAddress"}},"id":901,"nodeType":"ArrayTypeName","src":"4137:26:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TrancheAddress_$773_storage_$dyn_storage_ptr","typeString":"struct DataTypes.TrancheAddress[]"}},"visibility":"internal"},{"constant":false,"id":905,"mutability":"mutable","name":"amounts","nodeType":"VariableDeclaration","scope":923,"src":"4180:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":903,"name":"uint256","nodeType":"ElementaryTypeName","src":"4180:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":904,"nodeType":"ArrayTypeName","src":"4180:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":908,"mutability":"mutable","name":"modes","nodeType":"VariableDeclaration","scope":923,"src":"4207:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":906,"name":"uint256","nodeType":"ElementaryTypeName","src":"4207:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":907,"nodeType":"ArrayTypeName","src":"4207:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":910,"mutability":"mutable","name":"onBehalfOf","nodeType":"VariableDeclaration","scope":923,"src":"4232:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":909,"name":"address","nodeType":"ElementaryTypeName","src":"4232:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":912,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":923,"src":"4260:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":911,"name":"bytes","nodeType":"ElementaryTypeName","src":"4260:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":914,"mutability":"mutable","name":"referralCode","nodeType":"VariableDeclaration","scope":923,"src":"4282:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":913,"name":"uint16","nodeType":"ElementaryTypeName","src":"4282:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":916,"mutability":"mutable","name":"_flashLoanPremiumTotal","nodeType":"VariableDeclaration","scope":923,"src":"4311:30:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":915,"name":"uint256","nodeType":"ElementaryTypeName","src":"4311:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":918,"mutability":"mutable","name":"oracle","nodeType":"VariableDeclaration","scope":923,"src":"4351:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":917,"name":"address","nodeType":"ElementaryTypeName","src":"4351:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":920,"mutability":"mutable","name":"_maxStableRateBorrowSizePercent","nodeType":"VariableDeclaration","scope":923,"src":"4375:39:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":919,"name":"uint256","nodeType":"ElementaryTypeName","src":"4375:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":922,"mutability":"mutable","name":"_reservesCount","nodeType":"VariableDeclaration","scope":923,"src":"4424:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":921,"name":"uint256","nodeType":"ElementaryTypeName","src":"4424:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"flashLoanVars","nodeType":"StructDefinition","scope":924,"src":"4073:380:3","visibility":"public"}],"scope":925,"src":"63:4392:3"}],"src":"37:4419:3"},"id":3}},"contracts":{"contracts/analytics/queries/getUserTrancheData.sol":{"getUserTrancheData":{"abi":[{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"poolProvider","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"getType","outputs":[{"components":[{"internalType":"uint256","name":"totalCollateralETH","type":"uint256"},{"internalType":"uint256","name":"totalDebtETH","type":"uint256"},{"internalType":"uint256","name":"availableBorrowsETH","type":"uint256"},{"internalType":"uint256","name":"currentLiquidationThreshold","type":"uint256"},{"internalType":"uint256","name":"ltv","type":"uint256"},{"internalType":"uint256","name":"healthFactor","type":"uint256"}],"internalType":"struct UserData[3]","name":"","type":"tuple[3]"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2761:4","statements":[{"nodeType":"YulBlock","src":"6:3:4","statements":[]},{"body":{"nodeType":"YulBlock","src":"76:117:4","statements":[{"nodeType":"YulAssignment","src":"86:22:4","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"101:6:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"95:5:4"},"nodeType":"YulFunctionCall","src":"95:13:4"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"86:5:4"}]},{"body":{"nodeType":"YulBlock","src":"171:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"180:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"183:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"173:6:4"},"nodeType":"YulFunctionCall","src":"173:12:4"},"nodeType":"YulExpressionStatement","src":"173:12:4"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"130:5:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"141:5:4"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"156:3:4","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"161:1:4","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"152:3:4"},"nodeType":"YulFunctionCall","src":"152:11:4"},{"kind":"number","nodeType":"YulLiteral","src":"165:1:4","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"148:3:4"},"nodeType":"YulFunctionCall","src":"148:19:4"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"137:3:4"},"nodeType":"YulFunctionCall","src":"137:31:4"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"127:2:4"},"nodeType":"YulFunctionCall","src":"127:42:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"120:6:4"},"nodeType":"YulFunctionCall","src":"120:50:4"},"nodeType":"YulIf","src":"117:2:4"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"55:6:4","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"66:5:4","type":""}],"src":"14:179:4"},{"body":{"nodeType":"YulBlock","src":"279:139:4","statements":[{"body":{"nodeType":"YulBlock","src":"325:26:4","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"334:6:4"},{"name":"value0","nodeType":"YulIdentifier","src":"342:6:4"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"327:6:4"},"nodeType":"YulFunctionCall","src":"327:22:4"},"nodeType":"YulExpressionStatement","src":"327:22:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"300:7:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"309:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"296:3:4"},"nodeType":"YulFunctionCall","src":"296:23:4"},{"kind":"number","nodeType":"YulLiteral","src":"321:2:4","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"292:3:4"},"nodeType":"YulFunctionCall","src":"292:32:4"},"nodeType":"YulIf","src":"289:2:4"},{"nodeType":"YulAssignment","src":"360:52:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"402:9:4"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"370:31:4"},"nodeType":"YulFunctionCall","src":"370:42:4"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"360:6:4"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"245:9:4","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"256:7:4","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"268:6:4","type":""}],"src":"198:220:4"},{"body":{"nodeType":"YulBlock","src":"521:209:4","statements":[{"body":{"nodeType":"YulBlock","src":"567:26:4","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"576:6:4"},{"name":"value1","nodeType":"YulIdentifier","src":"584:6:4"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"569:6:4"},"nodeType":"YulFunctionCall","src":"569:22:4"},"nodeType":"YulExpressionStatement","src":"569:22:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"542:7:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"551:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"538:3:4"},"nodeType":"YulFunctionCall","src":"538:23:4"},{"kind":"number","nodeType":"YulLiteral","src":"563:2:4","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"534:3:4"},"nodeType":"YulFunctionCall","src":"534:32:4"},"nodeType":"YulIf","src":"531:2:4"},{"nodeType":"YulAssignment","src":"602:52:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"644:9:4"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"612:31:4"},"nodeType":"YulFunctionCall","src":"612:42:4"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"602:6:4"}]},{"nodeType":"YulAssignment","src":"663:61:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"709:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"720:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"705:3:4"},"nodeType":"YulFunctionCall","src":"705:18:4"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"673:31:4"},"nodeType":"YulFunctionCall","src":"673:51:4"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"663:6:4"}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"479:9:4","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"490:7:4","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"502:6:4","type":""},{"name":"value1","nodeType":"YulTypedName","src":"510:6:4","type":""}],"src":"423:307:4"},{"body":{"nodeType":"YulBlock","src":"901:336:4","statements":[{"body":{"nodeType":"YulBlock","src":"948:26:4","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"957:6:4"},{"name":"value4","nodeType":"YulIdentifier","src":"965:6:4"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"950:6:4"},"nodeType":"YulFunctionCall","src":"950:22:4"},"nodeType":"YulExpressionStatement","src":"950:22:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"922:7:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"931:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"918:3:4"},"nodeType":"YulFunctionCall","src":"918:23:4"},{"kind":"number","nodeType":"YulLiteral","src":"943:3:4","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"914:3:4"},"nodeType":"YulFunctionCall","src":"914:33:4"},"nodeType":"YulIf","src":"911:2:4"},{"nodeType":"YulAssignment","src":"983:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"999:9:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"993:5:4"},"nodeType":"YulFunctionCall","src":"993:16:4"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"983:6:4"}]},{"nodeType":"YulAssignment","src":"1018:35:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1038:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"1049:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1034:3:4"},"nodeType":"YulFunctionCall","src":"1034:18:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1028:5:4"},"nodeType":"YulFunctionCall","src":"1028:25:4"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1018:6:4"}]},{"nodeType":"YulAssignment","src":"1062:35:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1082:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"1093:2:4","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1078:3:4"},"nodeType":"YulFunctionCall","src":"1078:18:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1072:5:4"},"nodeType":"YulFunctionCall","src":"1072:25:4"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1062:6:4"}]},{"nodeType":"YulAssignment","src":"1106:35:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1126:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"1137:2:4","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1122:3:4"},"nodeType":"YulFunctionCall","src":"1122:18:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1116:5:4"},"nodeType":"YulFunctionCall","src":"1116:25:4"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1106:6:4"}]},{"nodeType":"YulAssignment","src":"1150:36:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"1181:3:4","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:4"},"nodeType":"YulFunctionCall","src":"1166:19:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1160:5:4"},"nodeType":"YulFunctionCall","src":"1160:26:4"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"1150:6:4"}]},{"nodeType":"YulAssignment","src":"1195:36:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1215:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"1226:3:4","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1211:3:4"},"nodeType":"YulFunctionCall","src":"1211:19:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1205:5:4"},"nodeType":"YulFunctionCall","src":"1205:26:4"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"1195:6:4"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"827:9:4","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"838:7:4","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"850:6:4","type":""},{"name":"value1","nodeType":"YulTypedName","src":"858:6:4","type":""},{"name":"value2","nodeType":"YulTypedName","src":"866:6:4","type":""},{"name":"value3","nodeType":"YulTypedName","src":"874:6:4","type":""},{"name":"value4","nodeType":"YulTypedName","src":"882:6:4","type":""},{"name":"value5","nodeType":"YulTypedName","src":"890:6:4","type":""}],"src":"735:502:4"},{"body":{"nodeType":"YulBlock","src":"1367:156:4","statements":[{"nodeType":"YulAssignment","src":"1377:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1389:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"1400:2:4","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1385:3:4"},"nodeType":"YulFunctionCall","src":"1385:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1377:4:4"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1419:9:4"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1434:6:4"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1450:3:4","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1455:1:4","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1446:3:4"},"nodeType":"YulFunctionCall","src":"1446:11:4"},{"kind":"number","nodeType":"YulLiteral","src":"1459:1:4","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1442:3:4"},"nodeType":"YulFunctionCall","src":"1442:19:4"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1430:3:4"},"nodeType":"YulFunctionCall","src":"1430:32:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1412:6:4"},"nodeType":"YulFunctionCall","src":"1412:51:4"},"nodeType":"YulExpressionStatement","src":"1412:51:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1483:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"1494:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1479:3:4"},"nodeType":"YulFunctionCall","src":"1479:18:4"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1503:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"1511:4:4","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1499:3:4"},"nodeType":"YulFunctionCall","src":"1499:17:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1472:6:4"},"nodeType":"YulFunctionCall","src":"1472:45:4"},"nodeType":"YulExpressionStatement","src":"1472:45:4"}]},"name":"abi_encode_tuple_t_address_t_uint8__to_t_address_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1328:9:4","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1339:6:4","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1347:6:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1358:4:4","type":""}],"src":"1242:281:4"},{"body":{"nodeType":"YulBlock","src":"1723:755:4","statements":[{"nodeType":"YulAssignment","src":"1733:27:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1745:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"1756:3:4","type":"","value":"576"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1741:3:4"},"nodeType":"YulFunctionCall","src":"1741:19:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1733:4:4"}]},{"nodeType":"YulVariableDeclaration","src":"1769:20:4","value":{"name":"headStart","nodeType":"YulIdentifier","src":"1780:9:4"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"1773:3:4","type":""}]},{"nodeType":"YulAssignment","src":"1798:16:4","value":{"name":"headStart","nodeType":"YulIdentifier","src":"1805:9:4"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1798:3:4"}]},{"nodeType":"YulVariableDeclaration","src":"1823:20:4","value":{"name":"value0","nodeType":"YulIdentifier","src":"1837:6:4"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"1827:6:4","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1852:10:4","value":{"kind":"number","nodeType":"YulLiteral","src":"1861:1:4","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1856:1:4","type":""}]},{"body":{"nodeType":"YulBlock","src":"1918:554:4","statements":[{"nodeType":"YulVariableDeclaration","src":"1932:23:4","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"1948:6:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1942:5:4"},"nodeType":"YulFunctionCall","src":"1942:13:4"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1936:2:4","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1975:3:4"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1986:2:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1980:5:4"},"nodeType":"YulFunctionCall","src":"1980:9:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1968:6:4"},"nodeType":"YulFunctionCall","src":"1968:22:4"},"nodeType":"YulExpressionStatement","src":"1968:22:4"},{"nodeType":"YulVariableDeclaration","src":"2003:14:4","value":{"kind":"number","nodeType":"YulLiteral","src":"2013:4:4","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2007:2:4","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2041:3:4"},{"name":"_2","nodeType":"YulIdentifier","src":"2046:2:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2037:3:4"},"nodeType":"YulFunctionCall","src":"2037:12:4"},{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2061:2:4"},{"name":"_2","nodeType":"YulIdentifier","src":"2065:2:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2057:3:4"},"nodeType":"YulFunctionCall","src":"2057:11:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2051:5:4"},"nodeType":"YulFunctionCall","src":"2051:18:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2030:6:4"},"nodeType":"YulFunctionCall","src":"2030:40:4"},"nodeType":"YulExpressionStatement","src":"2030:40:4"},{"nodeType":"YulVariableDeclaration","src":"2083:14:4","value":{"kind":"number","nodeType":"YulLiteral","src":"2093:4:4","type":"","value":"0x40"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"2087:2:4","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2121:3:4"},{"name":"_3","nodeType":"YulIdentifier","src":"2126:2:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2117:3:4"},"nodeType":"YulFunctionCall","src":"2117:12:4"},{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2141:2:4"},{"name":"_3","nodeType":"YulIdentifier","src":"2145:2:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2137:3:4"},"nodeType":"YulFunctionCall","src":"2137:11:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2131:5:4"},"nodeType":"YulFunctionCall","src":"2131:18:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2110:6:4"},"nodeType":"YulFunctionCall","src":"2110:40:4"},"nodeType":"YulExpressionStatement","src":"2110:40:4"},{"nodeType":"YulVariableDeclaration","src":"2163:14:4","value":{"kind":"number","nodeType":"YulLiteral","src":"2173:4:4","type":"","value":"0x60"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"2167:2:4","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2201:3:4"},{"name":"_4","nodeType":"YulIdentifier","src":"2206:2:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2197:3:4"},"nodeType":"YulFunctionCall","src":"2197:12:4"},{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2221:2:4"},{"name":"_4","nodeType":"YulIdentifier","src":"2225:2:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2217:3:4"},"nodeType":"YulFunctionCall","src":"2217:11:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2211:5:4"},"nodeType":"YulFunctionCall","src":"2211:18:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2190:6:4"},"nodeType":"YulFunctionCall","src":"2190:40:4"},"nodeType":"YulExpressionStatement","src":"2190:40:4"},{"nodeType":"YulVariableDeclaration","src":"2243:14:4","value":{"kind":"number","nodeType":"YulLiteral","src":"2253:4:4","type":"","value":"0x80"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"2247:2:4","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2281:3:4"},{"name":"_5","nodeType":"YulIdentifier","src":"2286:2:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2277:3:4"},"nodeType":"YulFunctionCall","src":"2277:12:4"},{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2301:2:4"},{"name":"_5","nodeType":"YulIdentifier","src":"2305:2:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2297:3:4"},"nodeType":"YulFunctionCall","src":"2297:11:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2291:5:4"},"nodeType":"YulFunctionCall","src":"2291:18:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2270:6:4"},"nodeType":"YulFunctionCall","src":"2270:40:4"},"nodeType":"YulExpressionStatement","src":"2270:40:4"},{"nodeType":"YulVariableDeclaration","src":"2323:14:4","value":{"kind":"number","nodeType":"YulLiteral","src":"2333:4:4","type":"","value":"0xa0"},"variables":[{"name":"_6","nodeType":"YulTypedName","src":"2327:2:4","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2361:3:4"},{"name":"_6","nodeType":"YulIdentifier","src":"2366:2:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2357:3:4"},"nodeType":"YulFunctionCall","src":"2357:12:4"},{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2381:2:4"},{"name":"_6","nodeType":"YulIdentifier","src":"2385:2:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2377:3:4"},"nodeType":"YulFunctionCall","src":"2377:11:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2371:5:4"},"nodeType":"YulFunctionCall","src":"2371:18:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2350:6:4"},"nodeType":"YulFunctionCall","src":"2350:40:4"},"nodeType":"YulExpressionStatement","src":"2350:40:4"},{"nodeType":"YulAssignment","src":"2403:21:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2414:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"2419:4:4","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2410:3:4"},"nodeType":"YulFunctionCall","src":"2410:14:4"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2403:3:4"}]},{"nodeType":"YulAssignment","src":"2437:25:4","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2451:6:4"},{"name":"_2","nodeType":"YulIdentifier","src":"2459:2:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2447:3:4"},"nodeType":"YulFunctionCall","src":"2447:15:4"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2437:6:4"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1882:1:4"},{"kind":"number","nodeType":"YulLiteral","src":"1885:4:4","type":"","value":"0x03"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1879:2:4"},"nodeType":"YulFunctionCall","src":"1879:11:4"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1891:18:4","statements":[{"nodeType":"YulAssignment","src":"1893:14:4","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1902:1:4"},{"kind":"number","nodeType":"YulLiteral","src":"1905:1:4","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1898:3:4"},"nodeType":"YulFunctionCall","src":"1898:9:4"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1893:1:4"}]}]},"pre":{"nodeType":"YulBlock","src":"1875:3:4","statements":[]},"src":"1871:601:4"}]},"name":"abi_encode_tuple_t_array$_t_struct$_UserData_$18_memory_ptr_$3_memory_ptr__to_t_array$_t_struct$_UserData_$18_memory_ptr_$3_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1692:9:4","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1703:6:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1714:4:4","type":""}],"src":"1528:950:4"},{"body":{"nodeType":"YulBlock","src":"2528:231:4","statements":[{"nodeType":"YulVariableDeclaration","src":"2538:31:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2557:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"2564:4:4","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2553:3:4"},"nodeType":"YulFunctionCall","src":"2553:16:4"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"2542:7:4","type":""}]},{"body":{"nodeType":"YulBlock","src":"2607:115:4","statements":[{"expression":{"arguments":[{"name":"ret","nodeType":"YulIdentifier","src":"2628:3:4"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2637:3:4","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2642:10:4","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2633:3:4"},"nodeType":"YulFunctionCall","src":"2633:20:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2621:6:4"},"nodeType":"YulFunctionCall","src":"2621:33:4"},"nodeType":"YulExpressionStatement","src":"2621:33:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2674:1:4","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2677:4:4","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2667:6:4"},"nodeType":"YulFunctionCall","src":"2667:15:4"},"nodeType":"YulExpressionStatement","src":"2667:15:4"},{"expression":{"arguments":[{"name":"ret","nodeType":"YulIdentifier","src":"2702:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"2707:4:4","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2695:6:4"},"nodeType":"YulFunctionCall","src":"2695:17:4"},"nodeType":"YulExpressionStatement","src":"2695:17:4"}]},"condition":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"2584:7:4"},{"kind":"number","nodeType":"YulLiteral","src":"2593:4:4","type":"","value":"0xff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2581:2:4"},"nodeType":"YulFunctionCall","src":"2581:17:4"},"nodeType":"YulIf","src":"2578:2:4"},{"nodeType":"YulAssignment","src":"2731:22:4","value":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"2742:7:4"},{"kind":"number","nodeType":"YulLiteral","src":"2751:1:4","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2738:3:4"},"nodeType":"YulFunctionCall","src":"2738:15:4"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2731:3:4"}]}]},"name":"increment_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2510:5:4","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2520:3:4","type":""}],"src":"2483:276:4"}]},"contents":"{\n    { }\n    function abi_decode_t_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address_fromMemory(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_t_address_fromMemory(headStart)\n        value1 := abi_decode_t_address_fromMemory(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(value4, value4) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := mload(add(headStart, 128))\n        value5 := mload(add(headStart, 160))\n    }\n    function abi_encode_tuple_t_address_t_uint8__to_t_address_t_uint8__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, 0xff))\n    }\n    function abi_encode_tuple_t_array$_t_struct$_UserData_$18_memory_ptr_$3_memory_ptr__to_t_array$_t_struct$_UserData_$18_memory_ptr_$3_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 576)\n        let pos := headStart\n        pos := headStart\n        let srcPtr := value0\n        let i := 0\n        for { } lt(i, 0x03) { i := add(i, 1) }\n        {\n            let _1 := mload(srcPtr)\n            mstore(pos, mload(_1))\n            let _2 := 0x20\n            mstore(add(pos, _2), mload(add(_1, _2)))\n            let _3 := 0x40\n            mstore(add(pos, _3), mload(add(_1, _3)))\n            let _4 := 0x60\n            mstore(add(pos, _4), mload(add(_1, _4)))\n            let _5 := 0x80\n            mstore(add(pos, _5), mload(add(_1, _5)))\n            let _6 := 0xa0\n            mstore(add(pos, _6), mload(add(_1, _6)))\n            pos := add(pos, 0xc0)\n            srcPtr := add(srcPtr, _2)\n        }\n    }\n    function increment_t_uint8(value) -> ret\n    {\n        let value_1 := and(value, 0xff)\n        if eq(value_1, 0xff)\n        {\n            mstore(ret, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(ret, 0x24)\n        }\n        ret := add(value_1, 1)\n    }\n}","id":4,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b506040516103be3803806103be83398101604081905261002f91610291565b60008190506000816001600160a01b0316630261bf8b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561006f57600080fd5b505afa158015610083573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100a79190610270565b90506100b16101f1565b60005b60038160ff1610156101c457600080600080600080886001600160a01b03166360e963898d896040518363ffffffff1660e01b81526004016100f792919061030c565b60c06040518083038186803b15801561010f57600080fd5b505afa158015610123573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061014791906102c3565b9550955095509550955095506040518060c0016040528087815260200186815260200185815260200184815260200183815260200182815250888860ff16600381106101a357634e487b7160e01b600052603260045260246000fd5b602002018190525050505050505080806101bc90610391565b9150506100b4565b506000816040516020016101d89190610328565b6040516020818303038152906040529050805181602001f35b60405180606001604052806003905b61020861021e565b8152602001906001900390816102005790505090565b6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b80516001600160a01b038116811461026b57600080fd5b919050565b600060208284031215610281578081fd5b61028a82610254565b9392505050565b600080604083850312156102a3578081fd5b6102ac83610254565b91506102ba60208401610254565b90509250929050565b60008060008060008060c087890312156102db578182fd5b865195506020870151945060408701519350606087015192506080870151915060a087015190509295509295509295565b6001600160a01b0392909216825260ff16602082015260400190565b6102408101818360005b6003811015610388578151805184526020808201518186015260408083015190860152606080830151908601526080808301519086015260a0918201519185019190915260c09093019290910190600101610332565b50505092915050565b600060ff821660ff8114156103b457634e487b7160e01b82526011600452602482fd5b6001019291505056fe","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3BE CODESIZE SUB DUP1 PUSH2 0x3BE DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x291 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x261BF8B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x83 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA7 SWAP2 SWAP1 PUSH2 0x270 JUMP JUMPDEST SWAP1 POP PUSH2 0xB1 PUSH2 0x1F1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x60E96389 DUP14 DUP10 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF7 SWAP3 SWAP2 SWAP1 PUSH2 0x30C JUMP JUMPDEST PUSH1 0xC0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x123 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x2C3 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP DUP9 DUP9 PUSH1 0xFF AND PUSH1 0x3 DUP2 LT PUSH2 0x1A3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD DUP2 SWAP1 MSTORE POP POP POP POP POP POP POP DUP1 DUP1 PUSH2 0x1BC SWAP1 PUSH2 0x391 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB4 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x328 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 MLOAD DUP2 PUSH1 0x20 ADD RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SWAP1 JUMPDEST PUSH2 0x208 PUSH2 0x21E JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x200 JUMPI SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x281 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x28A DUP3 PUSH2 0x254 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A3 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2AC DUP4 PUSH2 0x254 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BA PUSH1 0x20 DUP5 ADD PUSH2 0x254 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2DB JUMPI DUP2 DUP3 REVERT JUMPDEST DUP7 MLOAD SWAP6 POP PUSH1 0x20 DUP8 ADD MLOAD SWAP5 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP4 POP PUSH1 0x60 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x80 DUP8 ADD MLOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD MLOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0xFF AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH2 0x240 DUP2 ADD DUP2 DUP4 PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x388 JUMPI DUP2 MLOAD DUP1 MLOAD DUP5 MSTORE PUSH1 0x20 DUP1 DUP3 ADD MLOAD DUP2 DUP7 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0x80 DUP1 DUP4 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0xA0 SWAP2 DUP3 ADD MLOAD SWAP2 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xC0 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x332 JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x3B4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP INVALID ","sourceMap":"426:1012:0:-:0;;;460:908;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;518:38;589:12;518:84;;612:24;652:8;-1:-1:-1;;;;;652:23:0;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;612:66;;688:29;;:::i;:::-;732:7;727:496;745:1;741;:5;;;727:496;;;785:26;829:20;867:27;912:35;965:11;994:20;1031:11;-1:-1:-1;;;;;1031:30:0;;1062:4;1068:1;1031:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;767:303;;;;;;;;;;;;1101:111;;;;;;;;1110:18;1101:111;;;;1130:12;1101:111;;;;1144:19;1101:111;;;;1165:27;1101:111;;;;1194:3;1101:111;;;;1199:12;1101:111;;;1085:10;1096:1;1085:13;;;;;;;-1:-1:-1;;;1085:13:0;;;;;;;;;;;;:127;;;;727:496;;;;;;748:3;;;;;:::i;:::-;;;;727:496;;;;1233:17;1264:10;1253:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;1233:42;;1338:4;1332:11;1325:4;1319;1315:15;1308:36;426:1012;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:179:4:-;95:13;;-1:-1:-1;;;;;137:31:4;;127:42;;117:2;;183:1;180;173:12;117:2;76:117;;;:::o;198:220::-;;321:2;309:9;300:7;296:23;292:32;289:2;;;342:6;334;327:22;289:2;370:42;402:9;370:42;:::i;:::-;360:52;279:139;-1:-1:-1;;;279:139:4:o;423:307::-;;;563:2;551:9;542:7;538:23;534:32;531:2;;;584:6;576;569:22;531:2;612:42;644:9;612:42;:::i;:::-;602:52;;673:51;720:2;709:9;705:18;673:51;:::i;:::-;663:61;;521:209;;;;;:::o;735:502::-;;;;;;;943:3;931:9;922:7;918:23;914:33;911:2;;;965:6;957;950:22;911:2;999:9;993:16;983:26;;1049:2;1038:9;1034:18;1028:25;1018:35;;1093:2;1082:9;1078:18;1072:25;1062:35;;1137:2;1126:9;1122:18;1116:25;1106:35;;1181:3;1170:9;1166:19;1160:26;1150:36;;1226:3;1215:9;1211:19;1205:26;1195:36;;901:336;;;;;;;;:::o;1242:281::-;-1:-1:-1;;;;;1430:32:4;;;;1412:51;;1511:4;1499:17;1494:2;1479:18;;1472:45;1400:2;1385:18;;1367:156::o;1528:950::-;1756:3;1741:19;;1745:9;1837:6;1528:950;1871:601;1885:4;1882:1;1879:11;1871:601;;;1942:13;;1980:9;;1968:22;;2013:4;2057:11;;;2051:18;2037:12;;;2030:40;2093:4;2137:11;;;2131:18;2117:12;;;2110:40;2173:4;2217:11;;;2211:18;2197:12;;;2190:40;2253:4;2297:11;;;2291:18;2277:12;;;2270:40;2333:4;2377:11;;;2371:18;2357:12;;;2350:40;;;;2419:4;2410:14;;;;2447:15;;;;1905:1;1898:9;1871:601;;;1875:3;;;1723:755;;;;:::o;2483:276::-;;2564:4;2557:5;2553:16;2593:4;2584:7;2581:17;2578:2;;;-1:-1:-1;;;2621:33:4;;2677:4;2674:1;2667:15;2707:4;2628:3;2695:17;2578:2;2751:1;2738:15;;2528:231;-1:-1:-1;;2528:231:4:o"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:966:4","statements":[{"nodeType":"YulBlock","src":"6:3:4","statements":[]},{"body":{"nodeType":"YulBlock","src":"209:755:4","statements":[{"nodeType":"YulAssignment","src":"219:27:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"231:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"242:3:4","type":"","value":"576"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"227:3:4"},"nodeType":"YulFunctionCall","src":"227:19:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"219:4:4"}]},{"nodeType":"YulVariableDeclaration","src":"255:20:4","value":{"name":"headStart","nodeType":"YulIdentifier","src":"266:9:4"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"259:3:4","type":""}]},{"nodeType":"YulAssignment","src":"284:16:4","value":{"name":"headStart","nodeType":"YulIdentifier","src":"291:9:4"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"284:3:4"}]},{"nodeType":"YulVariableDeclaration","src":"309:20:4","value":{"name":"value0","nodeType":"YulIdentifier","src":"323:6:4"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"313:6:4","type":""}]},{"nodeType":"YulVariableDeclaration","src":"338:10:4","value":{"kind":"number","nodeType":"YulLiteral","src":"347:1:4","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"342:1:4","type":""}]},{"body":{"nodeType":"YulBlock","src":"404:554:4","statements":[{"nodeType":"YulVariableDeclaration","src":"418:23:4","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"434:6:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"428:5:4"},"nodeType":"YulFunctionCall","src":"428:13:4"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"422:2:4","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"461:3:4"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"472:2:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"466:5:4"},"nodeType":"YulFunctionCall","src":"466:9:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"454:6:4"},"nodeType":"YulFunctionCall","src":"454:22:4"},"nodeType":"YulExpressionStatement","src":"454:22:4"},{"nodeType":"YulVariableDeclaration","src":"489:14:4","value":{"kind":"number","nodeType":"YulLiteral","src":"499:4:4","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"493:2:4","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"527:3:4"},{"name":"_2","nodeType":"YulIdentifier","src":"532:2:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"523:3:4"},"nodeType":"YulFunctionCall","src":"523:12:4"},{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"547:2:4"},{"name":"_2","nodeType":"YulIdentifier","src":"551:2:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"543:3:4"},"nodeType":"YulFunctionCall","src":"543:11:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"537:5:4"},"nodeType":"YulFunctionCall","src":"537:18:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"516:6:4"},"nodeType":"YulFunctionCall","src":"516:40:4"},"nodeType":"YulExpressionStatement","src":"516:40:4"},{"nodeType":"YulVariableDeclaration","src":"569:14:4","value":{"kind":"number","nodeType":"YulLiteral","src":"579:4:4","type":"","value":"0x40"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"573:2:4","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"607:3:4"},{"name":"_3","nodeType":"YulIdentifier","src":"612:2:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"603:3:4"},"nodeType":"YulFunctionCall","src":"603:12:4"},{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"627:2:4"},{"name":"_3","nodeType":"YulIdentifier","src":"631:2:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"623:3:4"},"nodeType":"YulFunctionCall","src":"623:11:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"617:5:4"},"nodeType":"YulFunctionCall","src":"617:18:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"596:6:4"},"nodeType":"YulFunctionCall","src":"596:40:4"},"nodeType":"YulExpressionStatement","src":"596:40:4"},{"nodeType":"YulVariableDeclaration","src":"649:14:4","value":{"kind":"number","nodeType":"YulLiteral","src":"659:4:4","type":"","value":"0x60"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"653:2:4","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"687:3:4"},{"name":"_4","nodeType":"YulIdentifier","src":"692:2:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"683:3:4"},"nodeType":"YulFunctionCall","src":"683:12:4"},{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"707:2:4"},{"name":"_4","nodeType":"YulIdentifier","src":"711:2:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"703:3:4"},"nodeType":"YulFunctionCall","src":"703:11:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"697:5:4"},"nodeType":"YulFunctionCall","src":"697:18:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"676:6:4"},"nodeType":"YulFunctionCall","src":"676:40:4"},"nodeType":"YulExpressionStatement","src":"676:40:4"},{"nodeType":"YulVariableDeclaration","src":"729:14:4","value":{"kind":"number","nodeType":"YulLiteral","src":"739:4:4","type":"","value":"0x80"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"733:2:4","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"767:3:4"},{"name":"_5","nodeType":"YulIdentifier","src":"772:2:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"763:3:4"},"nodeType":"YulFunctionCall","src":"763:12:4"},{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"787:2:4"},{"name":"_5","nodeType":"YulIdentifier","src":"791:2:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"783:3:4"},"nodeType":"YulFunctionCall","src":"783:11:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"777:5:4"},"nodeType":"YulFunctionCall","src":"777:18:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"756:6:4"},"nodeType":"YulFunctionCall","src":"756:40:4"},"nodeType":"YulExpressionStatement","src":"756:40:4"},{"nodeType":"YulVariableDeclaration","src":"809:14:4","value":{"kind":"number","nodeType":"YulLiteral","src":"819:4:4","type":"","value":"0xa0"},"variables":[{"name":"_6","nodeType":"YulTypedName","src":"813:2:4","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"847:3:4"},{"name":"_6","nodeType":"YulIdentifier","src":"852:2:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"843:3:4"},"nodeType":"YulFunctionCall","src":"843:12:4"},{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"867:2:4"},{"name":"_6","nodeType":"YulIdentifier","src":"871:2:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"863:3:4"},"nodeType":"YulFunctionCall","src":"863:11:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"857:5:4"},"nodeType":"YulFunctionCall","src":"857:18:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"836:6:4"},"nodeType":"YulFunctionCall","src":"836:40:4"},"nodeType":"YulExpressionStatement","src":"836:40:4"},{"nodeType":"YulAssignment","src":"889:21:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"900:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"905:4:4","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"896:3:4"},"nodeType":"YulFunctionCall","src":"896:14:4"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"889:3:4"}]},{"nodeType":"YulAssignment","src":"923:25:4","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"937:6:4"},{"name":"_2","nodeType":"YulIdentifier","src":"945:2:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:4"},"nodeType":"YulFunctionCall","src":"933:15:4"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"923:6:4"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"368:1:4"},{"kind":"number","nodeType":"YulLiteral","src":"371:4:4","type":"","value":"0x03"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"365:2:4"},"nodeType":"YulFunctionCall","src":"365:11:4"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"377:18:4","statements":[{"nodeType":"YulAssignment","src":"379:14:4","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"388:1:4"},{"kind":"number","nodeType":"YulLiteral","src":"391:1:4","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"384:3:4"},"nodeType":"YulFunctionCall","src":"384:9:4"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"379:1:4"}]}]},"pre":{"nodeType":"YulBlock","src":"361:3:4","statements":[]},"src":"357:601:4"}]},"name":"abi_encode_tuple_t_array$_t_struct$_UserData_$18_memory_ptr_$3_memory_ptr__to_t_array$_t_struct$_UserData_$18_memory_ptr_$3_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"178:9:4","type":""},{"name":"value0","nodeType":"YulTypedName","src":"189:6:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"200:4:4","type":""}],"src":"14:950:4"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_array$_t_struct$_UserData_$18_memory_ptr_$3_memory_ptr__to_t_array$_t_struct$_UserData_$18_memory_ptr_$3_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 576)\n        let pos := headStart\n        pos := headStart\n        let srcPtr := value0\n        let i := 0\n        for { } lt(i, 0x03) { i := add(i, 1) }\n        {\n            let _1 := mload(srcPtr)\n            mstore(pos, mload(_1))\n            let _2 := 0x20\n            mstore(add(pos, _2), mload(add(_1, _2)))\n            let _3 := 0x40\n            mstore(add(pos, _3), mload(add(_1, _3)))\n            let _4 := 0x60\n            mstore(add(pos, _4), mload(add(_1, _4)))\n            let _5 := 0x80\n            mstore(add(pos, _5), mload(add(_1, _5)))\n            let _6 := 0xa0\n            mstore(add(pos, _6), mload(add(_1, _6)))\n            pos := add(pos, 0xc0)\n            srcPtr := add(srcPtr, _2)\n        }\n    }\n}","id":4,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061002b5760003560e01c806315dae03e14610030575b600080fd5b61003861004e565b60405161004591906100bc565b60405180910390f35b610056610059565b90565b60405180606001604052806003905b610070610086565b8152602001906001900390816100685790505090565b6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6102408101818360005b600381101561011c578151805184526020808201518186015260408083015190860152606080830151908601526080808301519086015260a0918201519185019190915260c090930192909101906001016100c6565b5050509291505056fea26469706673582212209dd72c2759f9cd58cafb0811137bbf0fb80a24180a6e0d70b24c75a88721a48664736f6c63430008000033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x15DAE03E EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45 SWAP2 SWAP1 PUSH2 0xBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x56 PUSH2 0x59 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SWAP1 JUMPDEST PUSH2 0x70 PUSH2 0x86 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x68 JUMPI SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x240 DUP2 ADD DUP2 DUP4 PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x11C JUMPI DUP2 MLOAD DUP1 MLOAD DUP5 MSTORE PUSH1 0x20 DUP1 DUP3 ADD MLOAD DUP2 DUP7 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0x80 DUP1 DUP4 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0xA0 SWAP2 DUP3 ADD MLOAD SWAP2 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xC0 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xC6 JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 0xD7 0x2C 0x27 MSIZE 0xF9 0xCD PC 0xCA 0xFB ADDMOD GT SGT PUSH28 0xBF0FB80A24180A6E0D70B24C75A88721A48664736F6C634300080000 CALLER ","sourceMap":"426:1012:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1374:62;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;1414:18;;:::i;:::-;1374:62;:::o;-1:-1:-1:-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:950:4:-;242:3;227:19;;231:9;323:6;14:950;357:601;371:4;368:1;365:11;357:601;;;428:13;;466:9;;454:22;;499:4;543:11;;;537:18;523:12;;;516:40;579:4;623:11;;;617:18;603:12;;;596:40;659:4;703:11;;;697:18;683:12;;;676:40;739:4;783:11;;;777:18;763:12;;;756:40;819:4;863:11;;;857:18;843:12;;;836:40;;;;905:4;896:14;;;;933:15;;;;391:1;384:9;357:601;;;361:3;;;209:755;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"69400","executionCost":"infinite","totalCost":"infinite"},"external":{"getType()":"infinite"}},"methodIdentifiers":{"getType()":"15dae03e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"poolProvider\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getType\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"totalCollateralETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDebtETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"availableBorrowsETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentLiquidationThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ltv\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"healthFactor\",\"type\":\"uint256\"}],\"internalType\":\"struct UserData[3]\",\"name\":\"\",\"type\":\"tuple[3]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/analytics/queries/getUserTrancheData.sol\":\"getUserTrancheData\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/analytics/queries/getUserTrancheData.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\nimport { ILendingPool } from \\\"../../interfaces/ILendingPool.sol\\\";\\nimport { ILendingPoolAddressesProvider } from \\\"../../interfaces/ILendingPoolAddressesProvider.sol\\\";\\n\\n\\nstruct UserData {\\n    uint256 totalCollateralETH;\\n    uint256 totalDebtETH;\\n    uint256 availableBorrowsETH;\\n    uint256 currentLiquidationThreshold;\\n    uint256 ltv;\\n    uint256 healthFactor;\\n}\\n\\ncontract getUserTrancheData {\\n    constructor(address user, address poolProvider) {\\n        ILendingPoolAddressesProvider provider = ILendingPoolAddressesProvider(poolProvider);\\n        ILendingPool lendingPool = ILendingPool(provider.getLendingPool());\\n        UserData[3] memory returnData;\\n        for (uint8 i; i < 3; i++) {\\n            (\\n                uint256 totalCollateralETH,\\n                uint256 totalDebtETH,\\n                uint256 availableBorrowsETH,\\n                uint256 currentLiquidationThreshold,\\n                uint256 ltv,\\n                uint256 healthFactor\\n            ) = lendingPool.getUserAccountData(user, i);\\n\\n            returnData[i] = UserData(totalCollateralETH, totalDebtETH, availableBorrowsETH, currentLiquidationThreshold, ltv, healthFactor);\\n        }\\n\\n        bytes memory data = abi.encode(returnData);\\n        assembly {\\n            return(add(0x20, data), mload(data))\\n        }        \\n    }\\n\\n    function getType() public view returns (UserData[3] memory) {}\\n}\",\"keccak256\":\"0xa5c9199aa11d548eab822414946c9973f1d4d23095550c6b65dbfca218c70181\",\"license\":\"agpl-3.0\"},\"contracts/interfaces/ILendingPool.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\nimport {ILendingPoolAddressesProvider} from \\\"./ILendingPoolAddressesProvider.sol\\\";\\nimport {DataTypes} from \\\"../protocol/libraries/types/DataTypes.sol\\\";\\n\\ninterface ILendingPool {\\n    /**\\n     * @dev Emitted on deposit()\\n     * @param reserve The address of the underlying asset of the reserve\\n     * @param user The address initiating the deposit\\n     * @param onBehalfOf The beneficiary of the deposit, receiving the aTokens\\n     * @param amount The amount deposited\\n     * @param referral The referral code used\\n     **/\\n    event Deposit(\\n        address indexed reserve,\\n        uint8 tranche,\\n        address user,\\n        address indexed onBehalfOf,\\n        uint256 amount,\\n        uint16 indexed referral\\n    );\\n\\n    /**\\n     * @dev Emitted on withdraw()\\n     * @param reserve The address of the underlyng asset being withdrawn\\n     * @param user The address initiating the withdrawal, owner of aTokens\\n     * @param to Address that will receive the underlying\\n     * @param amount The amount to be withdrawn\\n     **/\\n    event Withdraw(\\n        address indexed reserve,\\n        address indexed user,\\n        address indexed to,\\n        uint256 amount\\n    );\\n\\n    /**\\n     * @dev Emitted on repay()\\n     * @param reserve The address of the underlying asset of the reserve\\n     * @param user The beneficiary of the repayment, getting his debt reduced\\n     * @param repayer The address of the user initiating the repay(), providing the funds\\n     * @param amount The amount repaid\\n     **/\\n    event Repay(\\n        address indexed reserve,\\n        address indexed user,\\n        address indexed repayer,\\n        uint256 amount\\n    );\\n\\n    /**\\n     * @dev Emitted on swapBorrowRateMode()\\n     * @param reserve The address of the underlying asset of the reserve\\n     * @param user The address of the user swapping his rate mode\\n     * @param rateMode The rate mode that the user wants to swap to\\n     **/\\n    event Swap(address indexed reserve, address indexed user, uint256 rateMode);\\n\\n    /**\\n     * @dev Emitted on setUserUseReserveAsCollateral()\\n     * @param reserve The address of the underlying asset of the reserve\\n     * @param user The address of the user enabling the usage as collateral\\n     **/\\n    event ReserveUsedAsCollateralEnabled(\\n        address indexed reserve,\\n        address indexed user\\n    );\\n\\n    /**\\n     * @dev Emitted on setUserUseReserveAsCollateral()\\n     * @param reserve The address of the underlying asset of the reserve\\n     * @param user The address of the user enabling the usage as collateral\\n     **/\\n    event ReserveUsedAsCollateralDisabled(\\n        address indexed reserve,\\n        address indexed user\\n    );\\n\\n    /**\\n     * @dev Emitted on rebalanceStableBorrowRate()\\n     * @param reserve The address of the underlying asset of the reserve\\n     * @param user The address of the user for which the rebalance has been executed\\n     **/\\n    event RebalanceStableBorrowRate(\\n        address indexed reserve,\\n        address indexed user\\n    );\\n\\n    /**\\n     * @dev Emitted on flashLoan()\\n     * @param target The address of the flash loan receiver contract\\n     * @param initiator The address initiating the flash loan\\n     * @param asset The address of the asset being flash borrowed\\n     * @param amount The amount flash borrowed\\n     * @param premium The fee flash borrowed\\n     * @param referralCode The referral code used\\n     **/\\n    event FlashLoan(\\n        address indexed target,\\n        address indexed initiator,\\n        address indexed asset,\\n        uint256 amount,\\n        uint256 premium,\\n        uint16 referralCode\\n    );\\n\\n    /**\\n     * @dev Emitted when the pause is triggered.\\n     */\\n    event Paused();\\n\\n    /**\\n     * @dev Emitted when the pause is lifted.\\n     */\\n    event Unpaused();\\n\\n    /**\\n     * @dev Emitted when a borrower is liquidated. This event is emitted by the LendingPool via\\n     * LendingPoolCollateral manager using a DELEGATECALL\\n     * This allows to have the events in the generated ABI for LendingPool.\\n     * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\\n     * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\\n     * @param user The address of the borrower getting liquidated\\n     * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\\n     * @param liquidatedCollateralAmount The amount of collateral received by the liiquidator\\n     * @param liquidator The address of the liquidator\\n     * @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\\n     * to receive the underlying collateral asset directly\\n     **/\\n    event LiquidationCall(\\n        address indexed collateralAsset,\\n        address indexed debtAsset,\\n        address indexed user,\\n        uint256 debtToCover,\\n        uint256 liquidatedCollateralAmount,\\n        address liquidator,\\n        bool receiveAToken\\n    );\\n\\n    /**\\n     * @dev Emitted when the state of a reserve is updated. NOTE: This event is actually declared\\n     * in the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal,\\n     * the event will actually be fired by the LendingPool contract. The event is therefore replicated here so it\\n     * gets added to the LendingPool ABI\\n     * @param reserve The address of the underlying asset of the reserve\\n     * @param liquidityRate The new liquidity rate\\n     * @param stableBorrowRate The new stable borrow rate\\n     * @param variableBorrowRate The new variable borrow rate\\n     * @param liquidityIndex The new liquidity index\\n     * @param variableBorrowIndex The new variable borrow index\\n     **/\\n    event ReserveDataUpdated(\\n        address indexed reserve,\\n        uint256 liquidityRate,\\n        uint256 stableBorrowRate,\\n        uint256 variableBorrowRate,\\n        uint256 liquidityIndex,\\n        uint256 variableBorrowIndex\\n    );\\n\\n    /**\\n     * @dev Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\\n     * - E.g. User deposits 100 USDC and gets in return 100 aUSDC\\n     * @param asset The address of the underlying asset to deposit\\n     * @param amount The amount to be deposited\\n     * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\\n     *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\\n     *   is a different wallet\\n     * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\\n     *   0 if the action is executed directly by the user, without any middle-man\\n     **/\\n    function deposit(\\n        address asset,\\n        uint8 tranche,\\n        bool isCollateral,\\n        uint256 amount,\\n        address onBehalfOf,\\n        uint16 referralCode\\n    ) external;\\n\\n    /**\\n     * @dev Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned\\n     * E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\\n     * @param asset The address of the underlying asset to withdraw\\n     * @param amount The underlying amount to be withdrawn\\n     *   - Send the value type(uint256).max in order to withdraw the whole aToken balance\\n     * @param to Address that will receive the underlying, same as msg.sender if the user\\n     *   wants to receive it on his own wallet, or a different address if the beneficiary is a\\n     *   different wallet\\n     * @return The final amount withdrawn\\n     **/\\n    function withdraw(\\n        address asset,\\n        uint8 tranche,\\n        uint256 amount,\\n        address to\\n    ) external returns (uint256);\\n\\n    /**\\n     * @dev Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower\\n     * already deposited enough collateral, or he was given enough allowance by a credit delegator on the\\n     * corresponding debt token (StableDebtToken or VariableDebtToken)\\n     * - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet\\n     *   and 100 stable/variable debt tokens, depending on the `interestRateMode`\\n     * @param asset The address of the underlying asset to borrow\\n     * @param amount The amount to be borrowed\\n     * @param interestRateMode The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\\n     * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\\n     *   0 if the action is executed directly by the user, without any middle-man\\n     * @param onBehalfOf Address of the user who will receive the debt. Should be the address of the borrower itself\\n     * calling the function if he wants to borrow against his own collateral, or the address of the credit delegator\\n     * if he has been given credit delegation allowance\\n     **/\\n    function borrow(\\n        address asset,\\n        uint8 tranche,\\n        uint256 amount,\\n        uint256 interestRateMode,\\n        uint16 referralCode,\\n        address onBehalfOf\\n    ) external;\\n\\n    /**\\n     * @notice Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned\\n     * - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\\n     * @param asset The address of the borrowed underlying asset previously borrowed\\n     * @param amount The amount to repay\\n     * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\\n     * @param rateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\\n     * @param onBehalfOf Address of the user who will get his debt reduced/removed. Should be the address of the\\n     * user calling the function if he wants to reduce/remove his own debt, or the address of any other\\n     * other borrower whose debt should be removed\\n     * @return The final amount repaid\\n     **/\\n    function repay(\\n        address asset,\\n        uint8 tranche,\\n        uint256 amount,\\n        uint256 rateMode,\\n        address onBehalfOf\\n    ) external returns (uint256);\\n\\n    /**\\n     * @dev Allows a borrower to swap his debt between stable and variable mode, or viceversa\\n     * @param asset The address of the underlying asset borrowed\\n     * @param rateMode The rate mode that the user wants to swap to\\n     **/\\n    function swapBorrowRateMode(\\n        address asset,\\n        uint8 tranche,\\n        uint256 rateMode\\n    ) external;\\n\\n    /**\\n     * @dev Rebalances the stable interest rate of a user to the current stable rate defined on the reserve.\\n     * - Users can be rebalanced if the following conditions are satisfied:\\n     *     1. Usage ratio is above 95%\\n     *     2. the current deposit APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been\\n     *        borrowed at a stable rate and depositors are not earning enough\\n     * @param asset The address of the underlying asset borrowed\\n     * @param user The address of the user to be rebalanced\\n     **/\\n    function rebalanceStableBorrowRate(\\n        address asset,\\n        uint8 tranche,\\n        address user\\n    ) external;\\n\\n    /**\\n     * @dev Allows depositors to enable/disable a specific deposited asset as collateral\\n     * @param asset The address of the underlying asset deposited\\n     * @param useAsCollateral `true` if the user wants to use the deposit as collateral, `false` otherwise\\n     **/\\n    function setUserUseReserveAsCollateral(\\n        address asset,\\n        uint8 tranche,\\n        bool useAsCollateral\\n    ) external;\\n\\n    /**\\n     * @dev Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1\\n     * - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives\\n     *   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\\n     * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\\n     * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\\n     * @param user The address of the borrower getting liquidated\\n     * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\\n     * @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\\n     * to receive the underlying collateral asset directly\\n     **/\\n    function liquidationCall(\\n        address collateralAsset,\\n        address debtAsset,\\n        uint8 tranche,\\n        address user,\\n        uint256 debtToCover,\\n        bool receiveAToken\\n    ) external;\\n\\n    /**\\n     * @dev Allows smartcontracts to access the liquidity of the pool within one transaction,\\n     * as long as the amount taken plus a fee is returned.\\n     * IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration.\\n     * For further details please visit https://developers.aave.com\\n     * @param receiverAddress The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface\\n     * @param assets The addresses of the assets being flash-borrowed\\n     * @param amounts The amounts amounts being flash-borrowed\\n     * @param modes Types of the debt to open if the flash loan is not returned:\\n     *   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver\\n     *   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\\n     *   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\\n     * @param onBehalfOf The address  that will receive the debt in the case of using on `modes` 1 or 2\\n     * @param params Variadic packed params to pass to the receiver as extra information\\n     * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\\n     *   0 if the action is executed directly by the user, without any middle-man\\n     **/\\n    function flashLoan(\\n        address receiverAddress,\\n        DataTypes.TrancheAddress[] calldata assets,\\n        uint256[] calldata amounts,\\n        uint256[] calldata modes,\\n        address onBehalfOf,\\n        bytes calldata params,\\n        uint16 referralCode\\n    ) external;\\n\\n    /**\\n     * @dev Returns the user account data across all the reserves\\n     * @param user The address of the user\\n     * @return totalCollateralETH the total collateral in ETH of the user\\n     * @return totalDebtETH the total debt in ETH of the user\\n     * @return availableBorrowsETH the borrowing power left of the user\\n     * @return currentLiquidationThreshold the liquidation threshold of the user\\n     * @return ltv the loan to value of the user\\n     * @return healthFactor the current health factor of the user\\n     **/\\n    function getUserAccountData(address user, uint8 tranche)\\n        external\\n        view\\n        returns (\\n            uint256 totalCollateralETH,\\n            uint256 totalDebtETH,\\n            uint256 availableBorrowsETH,\\n            uint256 currentLiquidationThreshold,\\n            uint256 ltv,\\n            uint256 healthFactor\\n        );\\n\\n    function initReserve(\\n        address reserve,\\n        address aTokenAddress,\\n        address stableDebtAddress,\\n        address variableDebtAddress,\\n        address interestRateStrategyAddress,\\n        uint8 tranche\\n    ) external;\\n\\n    /**\\n     * @dev Updates the address of the interest rate strategy contract\\n     * - Only callable by the LendingPoolConfigurator contract\\n     * @param asset The address of the underlying asset of the reserve\\n     * @param _risk The risk of the asset\\n     **/\\n    function setAssetData(\\n        address asset,\\n        uint8 _risk,\\n        bool _isLendable,\\n        bool _allowedHigherTranche,\\n        uint8 _assetType\\n    ) external;\\n\\n    function setReserveInterestRateStrategyAddress(\\n        address reserve,\\n        uint8 tranche,\\n        address rateStrategyAddress\\n    ) external;\\n\\n    function setConfiguration(\\n        address reserve,\\n        uint8 tranche,\\n        uint256 configuration\\n    ) external;\\n\\n    /**\\n     * @dev Returns the configuration of the reserve\\n     * @param asset The address of the underlying asset of the reserve\\n     * @return The configuration of the reserve\\n     **/\\n    function getConfiguration(address asset, uint8 tranche)\\n        external\\n        view\\n        returns (DataTypes.ReserveConfigurationMap memory);\\n\\n    /**\\n     * @dev Returns the configuration of the user across all the reserves\\n     * @param user The user address\\n     * @return The configuration of the user\\n     **/\\n    function getUserConfiguration(address user)\\n        external\\n        view\\n        returns (DataTypes.UserConfigurationMap memory);\\n\\n    /**\\n     * @dev Returns the normalized income normalized income of the reserve\\n     * @param asset The address of the underlying asset of the reserve\\n     * @return The reserve's normalized income\\n     */\\n    function getReserveNormalizedIncome(address asset, uint8 tranche)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /**\\n     * @dev Returns the normalized variable debt per unit of asset\\n     * @param asset The address of the underlying asset of the reserve\\n     * @return The reserve normalized variable debt\\n     */\\n    function getReserveNormalizedVariableDebt(address asset, uint8 tranche)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /**\\n     * @dev Returns the state and configuration of the reserve\\n     * @param asset The address of the underlying asset of the reserve\\n     * @return The state of the reserve\\n     **/\\n    function getReserveData(address asset, uint8 tranche)\\n        external\\n        view\\n        returns (DataTypes.ReserveData memory);\\n\\n    function finalizeTransfer(\\n        address asset,\\n        uint8 tranche,\\n        address from,\\n        address to,\\n        uint256 amount,\\n        uint256 balanceFromAfter,\\n        uint256 balanceToBefore\\n    ) external;\\n\\n    function getReservesList() external view returns (address[] memory);\\n\\n    function getAssetData(address asset)\\n        external\\n        view\\n        returns (DataTypes.AssetData memory);\\n\\n    function getAddressesProvider()\\n        external\\n        view\\n        returns (ILendingPoolAddressesProvider);\\n\\n    function setPause(bool val) external;\\n\\n    function paused() external view returns (bool);\\n\\n    function editTrancheMultiplier(\\n        uint8 tranche,\\n        uint256 _liquidityRateMultiplier,\\n        uint256 _variableBorrowRateMultiplier,\\n        uint256 _stableBorrowRateMultiplier\\n    ) external;\\n\\n    function getTrancheMultiplier(uint8 tranche)\\n        external\\n        view\\n        returns (DataTypes.TrancheMultiplier memory);\\n}\\n\",\"keccak256\":\"0xa749eacaf399a92bfe2441ca9f3c81a17c1823d122b98361771159b0ab660c8e\",\"license\":\"agpl-3.0\"},\"contracts/interfaces/ILendingPoolAddressesProvider.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\nimport {DataTypes} from \\\"../protocol/libraries/types/DataTypes.sol\\\";\\n\\n/**\\n * @title LendingPoolAddressesProvider contract\\n * @dev Main registry of addresses part of or connected to the protocol, including permissioned roles\\n * - Acting also as factory of proxies and admin of those, so with right to change its implementations\\n * - Owned by the Aave Governance\\n * @author Aave\\n **/\\ninterface ILendingPoolAddressesProvider {\\n    event MarketIdSet(string newMarketId);\\n    event LendingPoolUpdated(address indexed newAddress);\\n    event ConfigurationAdminUpdated(address indexed newAddress);\\n    event EmergencyAdminUpdated(address indexed newAddress);\\n    event LendingPoolConfiguratorUpdated(address indexed newAddress);\\n    event LendingPoolCollateralManagerUpdated(address indexed newAddress);\\n    event PriceOracleUpdated(address indexed newAddress);\\n    event CurvePriceOracleUpdated(address indexed newAddress);\\n    event CurvePriceOracleWrapperUpdated(address indexed newAddress);\\n    event CurveAddressProviderUpdated(address indexed newAddress);\\n    event LendingRateOracleUpdated(address indexed newAddress);\\n    event ProxyCreated(bytes32 id, address indexed newAddress);\\n    event AddressSet(bytes32 id, address indexed newAddress, bool hasProxy);\\n\\n    function getMarketId() external view returns (string memory);\\n\\n    function setMarketId(string calldata marketId) external;\\n\\n    function setAddress(bytes32 id, address newAddress) external;\\n\\n    function setAddressAsProxy(bytes32 id, address impl) external;\\n\\n    function getAddress(bytes32 id) external view returns (address);\\n\\n    function getLendingPool() external view returns (address);\\n\\n    function setLendingPoolImpl(address pool) external;\\n\\n    function getLendingPoolConfigurator() external view returns (address);\\n\\n    function setLendingPoolConfiguratorImpl(address configurator) external;\\n\\n    function getLendingPoolCollateralManager() external view returns (address);\\n\\n    function setLendingPoolCollateralManager(address manager) external;\\n\\n    function getPoolAdmin() external view returns (address);\\n\\n    function setPoolAdmin(address admin) external;\\n\\n    function getEmergencyAdmin() external view returns (address);\\n\\n    function setEmergencyAdmin(address admin) external;\\n\\n    function getPriceOracle(DataTypes.ReserveAssetType assetType)\\n        external\\n        view\\n        returns (address);\\n\\n    function getAavePriceOracle() external view returns (address);\\n\\n    function getCurvePriceOracle() external view returns (address);\\n\\n    function getCurvePriceOracleWrapper() external view returns (address);\\n\\n    function getCurveAddressProvider() external view returns (address);\\n\\n    function setAavePriceOracle(address priceOracle) external;\\n\\n    function setCurveAddressProvider(address addressProvider) external;\\n\\n    function setCurvePriceOracle(address priceOracle) external;\\n\\n    function setCurvePriceOracleWrapper(address priceOracle) external;\\n\\n    function getLendingRateOracle() external view returns (address);\\n\\n    function setLendingRateOracle(address lendingRateOracle) external;\\n}\\n\",\"keccak256\":\"0xd05a545a54108bcf8be808763206cadbceefbfdc9d3e0ceff97fbe7e767cfe5e\",\"license\":\"agpl-3.0\"},\"contracts/protocol/libraries/types/DataTypes.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\nlibrary DataTypes {\\n    // refer to the whitepaper, section 1.1 basic concepts for a formal description of these properties.\\n\\n    enum ReserveAssetType {\\n        AAVE,\\n        CURVE\\n    } //update with other possible types of the underlying asset\\n    //AAVE is the original assets in the aave protocol\\n    //CURVE is the new LP tokens we are providing support for\\n\\n    struct AssetData {\\n        uint8 collateralRisk;\\n        bool isLendable;\\n        bool isAllowedCollateralInHigherTranches;\\n        ReserveAssetType assetType;\\n    }\\n\\n    struct TrancheAddress {\\n        uint8 tranche;\\n        address asset;\\n    }\\n    struct ReserveData {\\n        //stores the reserve configuration\\n        ReserveConfigurationMap configuration;\\n        //the liquidity index. Expressed in ray\\n        uint128 liquidityIndex; //not used for nonlendable assets\\n        //variable borrow index. Expressed in ray\\n        uint128 variableBorrowIndex; //not used for nonlendable assets\\n        //the current supply rate. Expressed in ray\\n        uint128 currentLiquidityRate; //deposit APR is defined as liquidityRate / RAY //not used for nonlendable assets\\n        //the current variable borrow rate. Expressed in ray\\n        uint128 currentVariableBorrowRate; //not used for nonlendable assets\\n        //the current stable borrow rate. Expressed in ray\\n        uint128 currentStableBorrowRate; //not used for nonlendable assets\\n        uint40 lastUpdateTimestamp;\\n        //tokens addresses\\n        address aTokenAddress;\\n        address stableDebtTokenAddress; //not used for nonlendable assets\\n        address variableDebtTokenAddress; //not used for nonlendable assets\\n        //address of the interest rate strategy\\n        address interestRateStrategyAddress; //not used for nonlendable assets\\n        //the id of the reserve. Represents the position in the list of the active reserves\\n        uint8 id;\\n        uint8 tranche; //I think this will be used for nonlendable assets, cause your collateral only asset can be placed in higher tranche if necessary\\n    }\\n\\n    struct TrancheMultiplier {\\n        uint256 liquidityRateMultiplier;\\n        uint256 variableBorrowRateMultiplier;\\n        uint256 stableBorrowRateMultiplier;\\n    }\\n\\n    uint8 constant NUM_TRANCHES = 3;\\n\\n    struct ReserveConfigurationMap {\\n        //bit 0-15: LTV\\n        //bit 16-31: Liq. threshold\\n        //bit 32-47: Liq. bonus\\n        //bit 48-55: Decimals\\n        //bit 56: Reserve is active\\n        //bit 57: reserve is frozen\\n        //bit 58: borrowing is enabled\\n        //bit 59: stable rate borrowing enabled\\n        //bit 60-63: reserved\\n        //bit 64-79: reserve factor\\n        uint256 data;\\n    }\\n\\n    struct UserConfigurationMap {\\n        uint256 data;\\n    }\\n\\n    enum InterestRateMode {\\n        NONE,\\n        STABLE,\\n        VARIABLE\\n    }\\n\\n    struct AcctTranche {\\n        address user;\\n        uint8 tranche;\\n    }\\n\\n    struct DepositVars {\\n        address asset;\\n        uint8 tranche;\\n        uint8 risk;\\n        bool allowHigherTranche;\\n        bool isLendable;\\n        TrancheMultiplier t;\\n    }\\n\\n    struct ExecuteBorrowParams {\\n        address asset;\\n        uint8 tranche; //tranche the user wants to borrow out of\\n        address user;\\n        address onBehalfOf;\\n        uint256 amount;\\n        uint256 interestRateMode;\\n        address aTokenAddress;\\n        uint16 referralCode;\\n        bool releaseUnderlying;\\n        uint256 _maxStableRateBorrowSizePercent;\\n        uint256 _reservesCount;\\n        TrancheMultiplier t;\\n    }\\n\\n    struct WithdrawParams {\\n        uint256 _reservesCount;\\n        address asset;\\n        uint8 tranche;\\n        uint256 amount;\\n        address to;\\n        TrancheMultiplier t;\\n    }\\n\\n    struct ValidateSetUseReserveAsCollateralParams {\\n        uint8 risk;\\n        bool allowHigherTranche;\\n    }\\n\\n    struct calculateInterestRatesVars {\\n        address reserve;\\n        address aToken;\\n        uint256 liquidityAdded;\\n        uint256 liquidityTaken;\\n        uint256 reserveFactor;\\n    }\\n\\n    struct flashLoanVars {\\n        address receiverAddress;\\n        DataTypes.TrancheAddress[] assets;\\n        uint256[] amounts;\\n        uint256[] modes;\\n        address onBehalfOf;\\n        bytes params;\\n        uint16 referralCode;\\n        uint256 _flashLoanPremiumTotal;\\n        address oracle;\\n        uint256 _maxStableRateBorrowSizePercent;\\n        uint256 _reservesCount;\\n    }\\n}\\n\",\"keccak256\":\"0x7302b5b5775a9a0019bd062c95d5a94a0b7bfa4553ae872968cf8ecf7c35fc8f\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/ILendingPool.sol":{"ILendingPool":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":false,"internalType":"uint8","name":"tranche","type":"uint8"},{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"onBehalfOf","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":true,"internalType":"uint16","name":"referral","type":"uint16"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":true,"internalType":"address","name":"initiator","type":"address"},{"indexed":true,"internalType":"address","name":"asset","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"premium","type":"uint256"},{"indexed":false,"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"FlashLoan","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"collateralAsset","type":"address"},{"indexed":true,"internalType":"address","name":"debtAsset","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"debtToCover","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"liquidatedCollateralAmount","type":"uint256"},{"indexed":false,"internalType":"address","name":"liquidator","type":"address"},{"indexed":false,"internalType":"bool","name":"receiveAToken","type":"bool"}],"name":"LiquidationCall","type":"event"},{"anonymous":false,"inputs":[],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"RebalanceStableBorrowRate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"repayer","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Repay","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":false,"internalType":"uint256","name":"liquidityRate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"stableBorrowRate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"variableBorrowRate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"liquidityIndex","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"variableBorrowIndex","type":"uint256"}],"name":"ReserveDataUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"ReserveUsedAsCollateralDisabled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"ReserveUsedAsCollateralEnabled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"rateMode","type":"uint256"}],"name":"Swap","type":"event"},{"anonymous":false,"inputs":[],"name":"Unpaused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint8","name":"tranche","type":"uint8"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"interestRateMode","type":"uint256"},{"internalType":"uint16","name":"referralCode","type":"uint16"},{"internalType":"address","name":"onBehalfOf","type":"address"}],"name":"borrow","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint8","name":"tranche","type":"uint8"},{"internalType":"bool","name":"isCollateral","type":"bool"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"onBehalfOf","type":"address"},{"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint8","name":"tranche","type":"uint8"},{"internalType":"uint256","name":"_liquidityRateMultiplier","type":"uint256"},{"internalType":"uint256","name":"_variableBorrowRateMultiplier","type":"uint256"},{"internalType":"uint256","name":"_stableBorrowRateMultiplier","type":"uint256"}],"name":"editTrancheMultiplier","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint8","name":"tranche","type":"uint8"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"balanceFromAfter","type":"uint256"},{"internalType":"uint256","name":"balanceToBefore","type":"uint256"}],"name":"finalizeTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"receiverAddress","type":"address"},{"components":[{"internalType":"uint8","name":"tranche","type":"uint8"},{"internalType":"address","name":"asset","type":"address"}],"internalType":"struct DataTypes.TrancheAddress[]","name":"assets","type":"tuple[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"uint256[]","name":"modes","type":"uint256[]"},{"internalType":"address","name":"onBehalfOf","type":"address"},{"internalType":"bytes","name":"params","type":"bytes"},{"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"flashLoan","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getAddressesProvider","outputs":[{"internalType":"contract ILendingPoolAddressesProvider","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getAssetData","outputs":[{"components":[{"internalType":"uint8","name":"collateralRisk","type":"uint8"},{"internalType":"bool","name":"isLendable","type":"bool"},{"internalType":"bool","name":"isAllowedCollateralInHigherTranches","type":"bool"},{"internalType":"enum DataTypes.ReserveAssetType","name":"assetType","type":"uint8"}],"internalType":"struct DataTypes.AssetData","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint8","name":"tranche","type":"uint8"}],"name":"getConfiguration","outputs":[{"components":[{"internalType":"uint256","name":"data","type":"uint256"}],"internalType":"struct DataTypes.ReserveConfigurationMap","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint8","name":"tranche","type":"uint8"}],"name":"getReserveData","outputs":[{"components":[{"components":[{"internalType":"uint256","name":"data","type":"uint256"}],"internalType":"struct DataTypes.ReserveConfigurationMap","name":"configuration","type":"tuple"},{"internalType":"uint128","name":"liquidityIndex","type":"uint128"},{"internalType":"uint128","name":"variableBorrowIndex","type":"uint128"},{"internalType":"uint128","name":"currentLiquidityRate","type":"uint128"},{"internalType":"uint128","name":"currentVariableBorrowRate","type":"uint128"},{"internalType":"uint128","name":"currentStableBorrowRate","type":"uint128"},{"internalType":"uint40","name":"lastUpdateTimestamp","type":"uint40"},{"internalType":"address","name":"aTokenAddress","type":"address"},{"internalType":"address","name":"stableDebtTokenAddress","type":"address"},{"internalType":"address","name":"variableDebtTokenAddress","type":"address"},{"internalType":"address","name":"interestRateStrategyAddress","type":"address"},{"internalType":"uint8","name":"id","type":"uint8"},{"internalType":"uint8","name":"tranche","type":"uint8"}],"internalType":"struct DataTypes.ReserveData","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint8","name":"tranche","type":"uint8"}],"name":"getReserveNormalizedIncome","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint8","name":"tranche","type":"uint8"}],"name":"getReserveNormalizedVariableDebt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getReservesList","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint8","name":"tranche","type":"uint8"}],"name":"getTrancheMultiplier","outputs":[{"components":[{"internalType":"uint256","name":"liquidityRateMultiplier","type":"uint256"},{"internalType":"uint256","name":"variableBorrowRateMultiplier","type":"uint256"},{"internalType":"uint256","name":"stableBorrowRateMultiplier","type":"uint256"}],"internalType":"struct DataTypes.TrancheMultiplier","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint8","name":"tranche","type":"uint8"}],"name":"getUserAccountData","outputs":[{"internalType":"uint256","name":"totalCollateralETH","type":"uint256"},{"internalType":"uint256","name":"totalDebtETH","type":"uint256"},{"internalType":"uint256","name":"availableBorrowsETH","type":"uint256"},{"internalType":"uint256","name":"currentLiquidationThreshold","type":"uint256"},{"internalType":"uint256","name":"ltv","type":"uint256"},{"internalType":"uint256","name":"healthFactor","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserConfiguration","outputs":[{"components":[{"internalType":"uint256","name":"data","type":"uint256"}],"internalType":"struct DataTypes.UserConfigurationMap","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"reserve","type":"address"},{"internalType":"address","name":"aTokenAddress","type":"address"},{"internalType":"address","name":"stableDebtAddress","type":"address"},{"internalType":"address","name":"variableDebtAddress","type":"address"},{"internalType":"address","name":"interestRateStrategyAddress","type":"address"},{"internalType":"uint8","name":"tranche","type":"uint8"}],"name":"initReserve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"collateralAsset","type":"address"},{"internalType":"address","name":"debtAsset","type":"address"},{"internalType":"uint8","name":"tranche","type":"uint8"},{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"debtToCover","type":"uint256"},{"internalType":"bool","name":"receiveAToken","type":"bool"}],"name":"liquidationCall","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint8","name":"tranche","type":"uint8"},{"internalType":"address","name":"user","type":"address"}],"name":"rebalanceStableBorrowRate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint8","name":"tranche","type":"uint8"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"rateMode","type":"uint256"},{"internalType":"address","name":"onBehalfOf","type":"address"}],"name":"repay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint8","name":"_risk","type":"uint8"},{"internalType":"bool","name":"_isLendable","type":"bool"},{"internalType":"bool","name":"_allowedHigherTranche","type":"bool"},{"internalType":"uint8","name":"_assetType","type":"uint8"}],"name":"setAssetData","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"reserve","type":"address"},{"internalType":"uint8","name":"tranche","type":"uint8"},{"internalType":"uint256","name":"configuration","type":"uint256"}],"name":"setConfiguration","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"val","type":"bool"}],"name":"setPause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"reserve","type":"address"},{"internalType":"uint8","name":"tranche","type":"uint8"},{"internalType":"address","name":"rateStrategyAddress","type":"address"}],"name":"setReserveInterestRateStrategyAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint8","name":"tranche","type":"uint8"},{"internalType":"bool","name":"useAsCollateral","type":"bool"}],"name":"setUserUseReserveAsCollateral","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint8","name":"tranche","type":"uint8"},{"internalType":"uint256","name":"rateMode","type":"uint256"}],"name":"swapBorrowRateMode","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint8","name":"tranche","type":"uint8"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"name":"withdraw","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"Deposit(address,uint8,address,address,uint256,uint16)":{"details":"Emitted on deposit()","params":{"amount":"The amount deposited","onBehalfOf":"The beneficiary of the deposit, receiving the aTokens","referral":"The referral code used*","reserve":"The address of the underlying asset of the reserve","user":"The address initiating the deposit"}},"FlashLoan(address,address,address,uint256,uint256,uint16)":{"details":"Emitted on flashLoan()","params":{"amount":"The amount flash borrowed","asset":"The address of the asset being flash borrowed","initiator":"The address initiating the flash loan","premium":"The fee flash borrowed","referralCode":"The referral code used*","target":"The address of the flash loan receiver contract"}},"LiquidationCall(address,address,address,uint256,uint256,address,bool)":{"details":"Emitted when a borrower is liquidated. This event is emitted by the LendingPool via LendingPoolCollateral manager using a DELEGATECALL This allows to have the events in the generated ABI for LendingPool.","params":{"collateralAsset":"The address of the underlying asset used as collateral, to receive as result of the liquidation","debtAsset":"The address of the underlying borrowed asset to be repaid with the liquidation","debtToCover":"The debt amount of borrowed `asset` the liquidator wants to cover","liquidatedCollateralAmount":"The amount of collateral received by the liiquidator","liquidator":"The address of the liquidator","receiveAToken":"`true` if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly*","user":"The address of the borrower getting liquidated"}},"Paused()":{"details":"Emitted when the pause is triggered."},"RebalanceStableBorrowRate(address,address)":{"details":"Emitted on rebalanceStableBorrowRate()","params":{"reserve":"The address of the underlying asset of the reserve","user":"The address of the user for which the rebalance has been executed*"}},"Repay(address,address,address,uint256)":{"details":"Emitted on repay()","params":{"amount":"The amount repaid*","repayer":"The address of the user initiating the repay(), providing the funds","reserve":"The address of the underlying asset of the reserve","user":"The beneficiary of the repayment, getting his debt reduced"}},"ReserveDataUpdated(address,uint256,uint256,uint256,uint256,uint256)":{"details":"Emitted when the state of a reserve is updated. NOTE: This event is actually declared in the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal, the event will actually be fired by the LendingPool contract. The event is therefore replicated here so it gets added to the LendingPool ABI","params":{"liquidityIndex":"The new liquidity index","liquidityRate":"The new liquidity rate","reserve":"The address of the underlying asset of the reserve","stableBorrowRate":"The new stable borrow rate","variableBorrowIndex":"The new variable borrow index*","variableBorrowRate":"The new variable borrow rate"}},"ReserveUsedAsCollateralDisabled(address,address)":{"details":"Emitted on setUserUseReserveAsCollateral()","params":{"reserve":"The address of the underlying asset of the reserve","user":"The address of the user enabling the usage as collateral*"}},"ReserveUsedAsCollateralEnabled(address,address)":{"details":"Emitted on setUserUseReserveAsCollateral()","params":{"reserve":"The address of the underlying asset of the reserve","user":"The address of the user enabling the usage as collateral*"}},"Swap(address,address,uint256)":{"details":"Emitted on swapBorrowRateMode()","params":{"rateMode":"The rate mode that the user wants to swap to*","reserve":"The address of the underlying asset of the reserve","user":"The address of the user swapping his rate mode"}},"Unpaused()":{"details":"Emitted when the pause is lifted."},"Withdraw(address,address,address,uint256)":{"details":"Emitted on withdraw()","params":{"amount":"The amount to be withdrawn*","reserve":"The address of the underlyng asset being withdrawn","to":"Address that will receive the underlying","user":"The address initiating the withdrawal, owner of aTokens"}}},"kind":"dev","methods":{"borrow(address,uint8,uint256,uint256,uint16,address)":{"details":"Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower already deposited enough collateral, or he was given enough allowance by a credit delegator on the corresponding debt token (StableDebtToken or VariableDebtToken) - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet   and 100 stable/variable debt tokens, depending on the `interestRateMode`","params":{"amount":"The amount to be borrowed","asset":"The address of the underlying asset to borrow","interestRateMode":"The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable","onBehalfOf":"Address of the user who will receive the debt. Should be the address of the borrower itself calling the function if he wants to borrow against his own collateral, or the address of the credit delegator if he has been given credit delegation allowance*","referralCode":"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"}},"deposit(address,uint8,bool,uint256,address,uint16)":{"details":"Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User deposits 100 USDC and gets in return 100 aUSDC","params":{"amount":"The amount to be deposited","asset":"The address of the underlying asset to deposit","onBehalfOf":"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet","referralCode":"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*"}},"flashLoan(address,(uint8,address)[],uint256[],uint256[],address,bytes,uint16)":{"details":"Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned. IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://developers.aave.com","params":{"amounts":"The amounts amounts being flash-borrowed","assets":"The addresses of the assets being flash-borrowed","modes":"Types of the debt to open if the flash loan is not returned:   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address","onBehalfOf":"The address  that will receive the debt in the case of using on `modes` 1 or 2","params":"Variadic packed params to pass to the receiver as extra information","receiverAddress":"The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface","referralCode":"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*"}},"getConfiguration(address,uint8)":{"details":"Returns the configuration of the reserve","params":{"asset":"The address of the underlying asset of the reserve"},"returns":{"_0":"The configuration of the reserve*"}},"getReserveData(address,uint8)":{"details":"Returns the state and configuration of the reserve","params":{"asset":"The address of the underlying asset of the reserve"},"returns":{"_0":"The state of the reserve*"}},"getReserveNormalizedIncome(address,uint8)":{"details":"Returns the normalized income normalized income of the reserve","params":{"asset":"The address of the underlying asset of the reserve"},"returns":{"_0":"The reserve's normalized income"}},"getReserveNormalizedVariableDebt(address,uint8)":{"details":"Returns the normalized variable debt per unit of asset","params":{"asset":"The address of the underlying asset of the reserve"},"returns":{"_0":"The reserve normalized variable debt"}},"getUserAccountData(address,uint8)":{"details":"Returns the user account data across all the reserves","params":{"user":"The address of the user"},"returns":{"availableBorrowsETH":"the borrowing power left of the user","currentLiquidationThreshold":"the liquidation threshold of the user","healthFactor":"the current health factor of the user*","ltv":"the loan to value of the user","totalCollateralETH":"the total collateral in ETH of the user","totalDebtETH":"the total debt in ETH of the user"}},"getUserConfiguration(address)":{"details":"Returns the configuration of the user across all the reserves","params":{"user":"The user address"},"returns":{"_0":"The configuration of the user*"}},"liquidationCall(address,address,uint8,address,uint256,bool)":{"details":"Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1 - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk","params":{"collateralAsset":"The address of the underlying asset used as collateral, to receive as result of the liquidation","debtAsset":"The address of the underlying borrowed asset to be repaid with the liquidation","debtToCover":"The debt amount of borrowed `asset` the liquidator wants to cover","receiveAToken":"`true` if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly*","user":"The address of the borrower getting liquidated"}},"rebalanceStableBorrowRate(address,uint8,address)":{"details":"Rebalances the stable interest rate of a user to the current stable rate defined on the reserve. - Users can be rebalanced if the following conditions are satisfied:     1. Usage ratio is above 95%     2. the current deposit APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been        borrowed at a stable rate and depositors are not earning enough","params":{"asset":"The address of the underlying asset borrowed","user":"The address of the user to be rebalanced*"}},"repay(address,uint8,uint256,uint256,address)":{"params":{"amount":"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`","asset":"The address of the borrowed underlying asset previously borrowed","onBehalfOf":"Address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed","rateMode":"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable"},"returns":{"_0":"The final amount repaid*"}},"setAssetData(address,uint8,bool,bool,uint8)":{"details":"Updates the address of the interest rate strategy contract - Only callable by the LendingPoolConfigurator contract","params":{"_risk":"The risk of the asset*","asset":"The address of the underlying asset of the reserve"}},"setUserUseReserveAsCollateral(address,uint8,bool)":{"details":"Allows depositors to enable/disable a specific deposited asset as collateral","params":{"asset":"The address of the underlying asset deposited","useAsCollateral":"`true` if the user wants to use the deposit as collateral, `false` otherwise*"}},"swapBorrowRateMode(address,uint8,uint256)":{"details":"Allows a borrower to swap his debt between stable and variable mode, or viceversa","params":{"asset":"The address of the underlying asset borrowed","rateMode":"The rate mode that the user wants to swap to*"}},"withdraw(address,uint8,uint256,address)":{"details":"Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC","params":{"amount":"The underlying amount to be withdrawn   - Send the value type(uint256).max in order to withdraw the whole aToken balance","asset":"The address of the underlying asset to withdraw","to":"Address that will receive the underlying, same as msg.sender if the user   wants to receive it on his own wallet, or a different address if the beneficiary is a   different wallet"},"returns":{"_0":"The final amount withdrawn*"}}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"borrow(address,uint8,uint256,uint256,uint16,address)":"f182c036","deposit(address,uint8,bool,uint256,address,uint16)":"f6118476","editTrancheMultiplier(uint8,uint256,uint256,uint256)":"14058967","finalizeTransfer(address,uint8,address,address,uint256,uint256,uint256)":"c1fc1e90","flashLoan(address,(uint8,address)[],uint256[],uint256[],address,bytes,uint16)":"0782623e","getAddressesProvider()":"fe65acfe","getAssetData(address)":"1652e7b7","getConfiguration(address,uint8)":"39142300","getReserveData(address,uint8)":"3629e3cd","getReserveNormalizedIncome(address,uint8)":"776f6891","getReserveNormalizedVariableDebt(address,uint8)":"013351ef","getReservesList()":"d1946dbc","getTrancheMultiplier(uint8)":"bfb88060","getUserAccountData(address,uint8)":"60e96389","getUserConfiguration(address)":"4417a583","initReserve(address,address,address,address,address,uint8)":"7b6d52d4","liquidationCall(address,address,uint8,address,uint256,bool)":"3f2591f7","paused()":"5c975abb","rebalanceStableBorrowRate(address,uint8,address)":"a7c245f0","repay(address,uint8,uint256,uint256,address)":"624490d4","setAssetData(address,uint8,bool,bool,uint8)":"9f71ff22","setConfiguration(address,uint8,uint256)":"f13771da","setPause(bool)":"bedb86fb","setReserveInterestRateStrategyAddress(address,uint8,address)":"de14ae28","setUserUseReserveAsCollateral(address,uint8,bool)":"9372e1e7","swapBorrowRateMode(address,uint8,uint256)":"f2e1cf16","withdraw(address,uint8,uint256,address)":"452572f3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"tranche\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referral\",\"type\":\"uint16\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"FlashLoan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"debtAsset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"debtToCover\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidatedCollateralAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"receiveAToken\",\"type\":\"bool\"}],\"name\":\"LiquidationCall\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"RebalanceStableBorrowRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"repayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Repay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stableBorrowRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"variableBorrowRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"variableBorrowIndex\",\"type\":\"uint256\"}],\"name\":\"ReserveDataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ReserveUsedAsCollateralDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ReserveUsedAsCollateralEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rateMode\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"tranche\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"tranche\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isCollateral\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"tranche\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_liquidityRateMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_variableBorrowRateMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stableBorrowRateMultiplier\",\"type\":\"uint256\"}],\"name\":\"editTrancheMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"tranche\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceFromAfter\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceToBefore\",\"type\":\"uint256\"}],\"name\":\"finalizeTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"tranche\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"internalType\":\"struct DataTypes.TrancheAddress[]\",\"name\":\"assets\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"modes\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"flashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddressesProvider\",\"outputs\":[{\"internalType\":\"contract ILendingPoolAddressesProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"collateralRisk\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isLendable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isAllowedCollateralInHigherTranches\",\"type\":\"bool\"},{\"internalType\":\"enum DataTypes.ReserveAssetType\",\"name\":\"assetType\",\"type\":\"uint8\"}],\"internalType\":\"struct DataTypes.AssetData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"tranche\",\"type\":\"uint8\"}],\"name\":\"getConfiguration\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.ReserveConfigurationMap\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"tranche\",\"type\":\"uint8\"}],\"name\":\"getReserveData\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.ReserveConfigurationMap\",\"name\":\"configuration\",\"type\":\"tuple\"},{\"internalType\":\"uint128\",\"name\":\"liquidityIndex\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"variableBorrowIndex\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentLiquidityRate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentVariableBorrowRate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentStableBorrowRate\",\"type\":\"uint128\"},{\"internalType\":\"uint40\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint40\"},{\"internalType\":\"address\",\"name\":\"aTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stableDebtTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"variableDebtTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"interestRateStrategyAddress\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"tranche\",\"type\":\"uint8\"}],\"internalType\":\"struct DataTypes.ReserveData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"tranche\",\"type\":\"uint8\"}],\"name\":\"getReserveNormalizedIncome\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"tranche\",\"type\":\"uint8\"}],\"name\":\"getReserveNormalizedVariableDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReservesList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"tranche\",\"type\":\"uint8\"}],\"name\":\"getTrancheMultiplier\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"liquidityRateMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"variableBorrowRateMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stableBorrowRateMultiplier\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.TrancheMultiplier\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"tranche\",\"type\":\"uint8\"}],\"name\":\"getUserAccountData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalCollateralETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDebtETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"availableBorrowsETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentLiquidationThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ltv\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"healthFactor\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserConfiguration\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.UserConfigurationMap\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"aTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stableDebtAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"variableDebtAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"interestRateStrategyAddress\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"tranche\",\"type\":\"uint8\"}],\"name\":\"initReserve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"debtAsset\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"tranche\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"debtToCover\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"receiveAToken\",\"type\":\"bool\"}],\"name\":\"liquidationCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"tranche\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"rebalanceStableBorrowRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"tranche\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateMode\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"name\":\"repay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_risk\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"_isLendable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_allowedHigherTranche\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"_assetType\",\"type\":\"uint8\"}],\"name\":\"setAssetData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"tranche\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"configuration\",\"type\":\"uint256\"}],\"name\":\"setConfiguration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"val\",\"type\":\"bool\"}],\"name\":\"setPause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"tranche\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"rateStrategyAddress\",\"type\":\"address\"}],\"name\":\"setReserveInterestRateStrategyAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"tranche\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"useAsCollateral\",\"type\":\"bool\"}],\"name\":\"setUserUseReserveAsCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"tranche\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"rateMode\",\"type\":\"uint256\"}],\"name\":\"swapBorrowRateMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"tranche\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Deposit(address,uint8,address,address,uint256,uint16)\":{\"details\":\"Emitted on deposit()\",\"params\":{\"amount\":\"The amount deposited\",\"onBehalfOf\":\"The beneficiary of the deposit, receiving the aTokens\",\"referral\":\"The referral code used*\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address initiating the deposit\"}},\"FlashLoan(address,address,address,uint256,uint256,uint16)\":{\"details\":\"Emitted on flashLoan()\",\"params\":{\"amount\":\"The amount flash borrowed\",\"asset\":\"The address of the asset being flash borrowed\",\"initiator\":\"The address initiating the flash loan\",\"premium\":\"The fee flash borrowed\",\"referralCode\":\"The referral code used*\",\"target\":\"The address of the flash loan receiver contract\"}},\"LiquidationCall(address,address,address,uint256,uint256,address,bool)\":{\"details\":\"Emitted when a borrower is liquidated. This event is emitted by the LendingPool via LendingPoolCollateral manager using a DELEGATECALL This allows to have the events in the generated ABI for LendingPool.\",\"params\":{\"collateralAsset\":\"The address of the underlying asset used as collateral, to receive as result of the liquidation\",\"debtAsset\":\"The address of the underlying borrowed asset to be repaid with the liquidation\",\"debtToCover\":\"The debt amount of borrowed `asset` the liquidator wants to cover\",\"liquidatedCollateralAmount\":\"The amount of collateral received by the liiquidator\",\"liquidator\":\"The address of the liquidator\",\"receiveAToken\":\"`true` if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly*\",\"user\":\"The address of the borrower getting liquidated\"}},\"Paused()\":{\"details\":\"Emitted when the pause is triggered.\"},\"RebalanceStableBorrowRate(address,address)\":{\"details\":\"Emitted on rebalanceStableBorrowRate()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user for which the rebalance has been executed*\"}},\"Repay(address,address,address,uint256)\":{\"details\":\"Emitted on repay()\",\"params\":{\"amount\":\"The amount repaid*\",\"repayer\":\"The address of the user initiating the repay(), providing the funds\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The beneficiary of the repayment, getting his debt reduced\"}},\"ReserveDataUpdated(address,uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"Emitted when the state of a reserve is updated. NOTE: This event is actually declared in the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal, the event will actually be fired by the LendingPool contract. The event is therefore replicated here so it gets added to the LendingPool ABI\",\"params\":{\"liquidityIndex\":\"The new liquidity index\",\"liquidityRate\":\"The new liquidity rate\",\"reserve\":\"The address of the underlying asset of the reserve\",\"stableBorrowRate\":\"The new stable borrow rate\",\"variableBorrowIndex\":\"The new variable borrow index*\",\"variableBorrowRate\":\"The new variable borrow rate\"}},\"ReserveUsedAsCollateralDisabled(address,address)\":{\"details\":\"Emitted on setUserUseReserveAsCollateral()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user enabling the usage as collateral*\"}},\"ReserveUsedAsCollateralEnabled(address,address)\":{\"details\":\"Emitted on setUserUseReserveAsCollateral()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user enabling the usage as collateral*\"}},\"Swap(address,address,uint256)\":{\"details\":\"Emitted on swapBorrowRateMode()\",\"params\":{\"rateMode\":\"The rate mode that the user wants to swap to*\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user swapping his rate mode\"}},\"Unpaused()\":{\"details\":\"Emitted when the pause is lifted.\"},\"Withdraw(address,address,address,uint256)\":{\"details\":\"Emitted on withdraw()\",\"params\":{\"amount\":\"The amount to be withdrawn*\",\"reserve\":\"The address of the underlyng asset being withdrawn\",\"to\":\"Address that will receive the underlying\",\"user\":\"The address initiating the withdrawal, owner of aTokens\"}}},\"kind\":\"dev\",\"methods\":{\"borrow(address,uint8,uint256,uint256,uint16,address)\":{\"details\":\"Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower already deposited enough collateral, or he was given enough allowance by a credit delegator on the corresponding debt token (StableDebtToken or VariableDebtToken) - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet   and 100 stable/variable debt tokens, depending on the `interestRateMode`\",\"params\":{\"amount\":\"The amount to be borrowed\",\"asset\":\"The address of the underlying asset to borrow\",\"interestRateMode\":\"The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"Address of the user who will receive the debt. Should be the address of the borrower itself calling the function if he wants to borrow against his own collateral, or the address of the credit delegator if he has been given credit delegation allowance*\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"deposit(address,uint8,bool,uint256,address,uint16)\":{\"details\":\"Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User deposits 100 USDC and gets in return 100 aUSDC\",\"params\":{\"amount\":\"The amount to be deposited\",\"asset\":\"The address of the underlying asset to deposit\",\"onBehalfOf\":\"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*\"}},\"flashLoan(address,(uint8,address)[],uint256[],uint256[],address,bytes,uint16)\":{\"details\":\"Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned. IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://developers.aave.com\",\"params\":{\"amounts\":\"The amounts amounts being flash-borrowed\",\"assets\":\"The addresses of the assets being flash-borrowed\",\"modes\":\"Types of the debt to open if the flash loan is not returned:   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\",\"onBehalfOf\":\"The address  that will receive the debt in the case of using on `modes` 1 or 2\",\"params\":\"Variadic packed params to pass to the receiver as extra information\",\"receiverAddress\":\"The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*\"}},\"getConfiguration(address,uint8)\":{\"details\":\"Returns the configuration of the reserve\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The configuration of the reserve*\"}},\"getReserveData(address,uint8)\":{\"details\":\"Returns the state and configuration of the reserve\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The state of the reserve*\"}},\"getReserveNormalizedIncome(address,uint8)\":{\"details\":\"Returns the normalized income normalized income of the reserve\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The reserve's normalized income\"}},\"getReserveNormalizedVariableDebt(address,uint8)\":{\"details\":\"Returns the normalized variable debt per unit of asset\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The reserve normalized variable debt\"}},\"getUserAccountData(address,uint8)\":{\"details\":\"Returns the user account data across all the reserves\",\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"availableBorrowsETH\":\"the borrowing power left of the user\",\"currentLiquidationThreshold\":\"the liquidation threshold of the user\",\"healthFactor\":\"the current health factor of the user*\",\"ltv\":\"the loan to value of the user\",\"totalCollateralETH\":\"the total collateral in ETH of the user\",\"totalDebtETH\":\"the total debt in ETH of the user\"}},\"getUserConfiguration(address)\":{\"details\":\"Returns the configuration of the user across all the reserves\",\"params\":{\"user\":\"The user address\"},\"returns\":{\"_0\":\"The configuration of the user*\"}},\"liquidationCall(address,address,uint8,address,uint256,bool)\":{\"details\":\"Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1 - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\",\"params\":{\"collateralAsset\":\"The address of the underlying asset used as collateral, to receive as result of the liquidation\",\"debtAsset\":\"The address of the underlying borrowed asset to be repaid with the liquidation\",\"debtToCover\":\"The debt amount of borrowed `asset` the liquidator wants to cover\",\"receiveAToken\":\"`true` if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly*\",\"user\":\"The address of the borrower getting liquidated\"}},\"rebalanceStableBorrowRate(address,uint8,address)\":{\"details\":\"Rebalances the stable interest rate of a user to the current stable rate defined on the reserve. - Users can be rebalanced if the following conditions are satisfied:     1. Usage ratio is above 95%     2. the current deposit APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been        borrowed at a stable rate and depositors are not earning enough\",\"params\":{\"asset\":\"The address of the underlying asset borrowed\",\"user\":\"The address of the user to be rebalanced*\"}},\"repay(address,uint8,uint256,uint256,address)\":{\"params\":{\"amount\":\"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\",\"asset\":\"The address of the borrowed underlying asset previously borrowed\",\"onBehalfOf\":\"Address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed\",\"rateMode\":\"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\"},\"returns\":{\"_0\":\"The final amount repaid*\"}},\"setAssetData(address,uint8,bool,bool,uint8)\":{\"details\":\"Updates the address of the interest rate strategy contract - Only callable by the LendingPoolConfigurator contract\",\"params\":{\"_risk\":\"The risk of the asset*\",\"asset\":\"The address of the underlying asset of the reserve\"}},\"setUserUseReserveAsCollateral(address,uint8,bool)\":{\"details\":\"Allows depositors to enable/disable a specific deposited asset as collateral\",\"params\":{\"asset\":\"The address of the underlying asset deposited\",\"useAsCollateral\":\"`true` if the user wants to use the deposit as collateral, `false` otherwise*\"}},\"swapBorrowRateMode(address,uint8,uint256)\":{\"details\":\"Allows a borrower to swap his debt between stable and variable mode, or viceversa\",\"params\":{\"asset\":\"The address of the underlying asset borrowed\",\"rateMode\":\"The rate mode that the user wants to swap to*\"}},\"withdraw(address,uint8,uint256,address)\":{\"details\":\"Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\",\"params\":{\"amount\":\"The underlying amount to be withdrawn   - Send the value type(uint256).max in order to withdraw the whole aToken balance\",\"asset\":\"The address of the underlying asset to withdraw\",\"to\":\"Address that will receive the underlying, same as msg.sender if the user   wants to receive it on his own wallet, or a different address if the beneficiary is a   different wallet\"},\"returns\":{\"_0\":\"The final amount withdrawn*\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"repay(address,uint8,uint256,uint256,address)\":{\"notice\":\"Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ILendingPool.sol\":\"ILendingPool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ILendingPool.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\nimport {ILendingPoolAddressesProvider} from \\\"./ILendingPoolAddressesProvider.sol\\\";\\nimport {DataTypes} from \\\"../protocol/libraries/types/DataTypes.sol\\\";\\n\\ninterface ILendingPool {\\n    /**\\n     * @dev Emitted on deposit()\\n     * @param reserve The address of the underlying asset of the reserve\\n     * @param user The address initiating the deposit\\n     * @param onBehalfOf The beneficiary of the deposit, receiving the aTokens\\n     * @param amount The amount deposited\\n     * @param referral The referral code used\\n     **/\\n    event Deposit(\\n        address indexed reserve,\\n        uint8 tranche,\\n        address user,\\n        address indexed onBehalfOf,\\n        uint256 amount,\\n        uint16 indexed referral\\n    );\\n\\n    /**\\n     * @dev Emitted on withdraw()\\n     * @param reserve The address of the underlyng asset being withdrawn\\n     * @param user The address initiating the withdrawal, owner of aTokens\\n     * @param to Address that will receive the underlying\\n     * @param amount The amount to be withdrawn\\n     **/\\n    event Withdraw(\\n        address indexed reserve,\\n        address indexed user,\\n        address indexed to,\\n        uint256 amount\\n    );\\n\\n    /**\\n     * @dev Emitted on repay()\\n     * @param reserve The address of the underlying asset of the reserve\\n     * @param user The beneficiary of the repayment, getting his debt reduced\\n     * @param repayer The address of the user initiating the repay(), providing the funds\\n     * @param amount The amount repaid\\n     **/\\n    event Repay(\\n        address indexed reserve,\\n        address indexed user,\\n        address indexed repayer,\\n        uint256 amount\\n    );\\n\\n    /**\\n     * @dev Emitted on swapBorrowRateMode()\\n     * @param reserve The address of the underlying asset of the reserve\\n     * @param user The address of the user swapping his rate mode\\n     * @param rateMode The rate mode that the user wants to swap to\\n     **/\\n    event Swap(address indexed reserve, address indexed user, uint256 rateMode);\\n\\n    /**\\n     * @dev Emitted on setUserUseReserveAsCollateral()\\n     * @param reserve The address of the underlying asset of the reserve\\n     * @param user The address of the user enabling the usage as collateral\\n     **/\\n    event ReserveUsedAsCollateralEnabled(\\n        address indexed reserve,\\n        address indexed user\\n    );\\n\\n    /**\\n     * @dev Emitted on setUserUseReserveAsCollateral()\\n     * @param reserve The address of the underlying asset of the reserve\\n     * @param user The address of the user enabling the usage as collateral\\n     **/\\n    event ReserveUsedAsCollateralDisabled(\\n        address indexed reserve,\\n        address indexed user\\n    );\\n\\n    /**\\n     * @dev Emitted on rebalanceStableBorrowRate()\\n     * @param reserve The address of the underlying asset of the reserve\\n     * @param user The address of the user for which the rebalance has been executed\\n     **/\\n    event RebalanceStableBorrowRate(\\n        address indexed reserve,\\n        address indexed user\\n    );\\n\\n    /**\\n     * @dev Emitted on flashLoan()\\n     * @param target The address of the flash loan receiver contract\\n     * @param initiator The address initiating the flash loan\\n     * @param asset The address of the asset being flash borrowed\\n     * @param amount The amount flash borrowed\\n     * @param premium The fee flash borrowed\\n     * @param referralCode The referral code used\\n     **/\\n    event FlashLoan(\\n        address indexed target,\\n        address indexed initiator,\\n        address indexed asset,\\n        uint256 amount,\\n        uint256 premium,\\n        uint16 referralCode\\n    );\\n\\n    /**\\n     * @dev Emitted when the pause is triggered.\\n     */\\n    event Paused();\\n\\n    /**\\n     * @dev Emitted when the pause is lifted.\\n     */\\n    event Unpaused();\\n\\n    /**\\n     * @dev Emitted when a borrower is liquidated. This event is emitted by the LendingPool via\\n     * LendingPoolCollateral manager using a DELEGATECALL\\n     * This allows to have the events in the generated ABI for LendingPool.\\n     * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\\n     * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\\n     * @param user The address of the borrower getting liquidated\\n     * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\\n     * @param liquidatedCollateralAmount The amount of collateral received by the liiquidator\\n     * @param liquidator The address of the liquidator\\n     * @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\\n     * to receive the underlying collateral asset directly\\n     **/\\n    event LiquidationCall(\\n        address indexed collateralAsset,\\n        address indexed debtAsset,\\n        address indexed user,\\n        uint256 debtToCover,\\n        uint256 liquidatedCollateralAmount,\\n        address liquidator,\\n        bool receiveAToken\\n    );\\n\\n    /**\\n     * @dev Emitted when the state of a reserve is updated. NOTE: This event is actually declared\\n     * in the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal,\\n     * the event will actually be fired by the LendingPool contract. The event is therefore replicated here so it\\n     * gets added to the LendingPool ABI\\n     * @param reserve The address of the underlying asset of the reserve\\n     * @param liquidityRate The new liquidity rate\\n     * @param stableBorrowRate The new stable borrow rate\\n     * @param variableBorrowRate The new variable borrow rate\\n     * @param liquidityIndex The new liquidity index\\n     * @param variableBorrowIndex The new variable borrow index\\n     **/\\n    event ReserveDataUpdated(\\n        address indexed reserve,\\n        uint256 liquidityRate,\\n        uint256 stableBorrowRate,\\n        uint256 variableBorrowRate,\\n        uint256 liquidityIndex,\\n        uint256 variableBorrowIndex\\n    );\\n\\n    /**\\n     * @dev Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\\n     * - E.g. User deposits 100 USDC and gets in return 100 aUSDC\\n     * @param asset The address of the underlying asset to deposit\\n     * @param amount The amount to be deposited\\n     * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\\n     *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\\n     *   is a different wallet\\n     * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\\n     *   0 if the action is executed directly by the user, without any middle-man\\n     **/\\n    function deposit(\\n        address asset,\\n        uint8 tranche,\\n        bool isCollateral,\\n        uint256 amount,\\n        address onBehalfOf,\\n        uint16 referralCode\\n    ) external;\\n\\n    /**\\n     * @dev Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned\\n     * E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\\n     * @param asset The address of the underlying asset to withdraw\\n     * @param amount The underlying amount to be withdrawn\\n     *   - Send the value type(uint256).max in order to withdraw the whole aToken balance\\n     * @param to Address that will receive the underlying, same as msg.sender if the user\\n     *   wants to receive it on his own wallet, or a different address if the beneficiary is a\\n     *   different wallet\\n     * @return The final amount withdrawn\\n     **/\\n    function withdraw(\\n        address asset,\\n        uint8 tranche,\\n        uint256 amount,\\n        address to\\n    ) external returns (uint256);\\n\\n    /**\\n     * @dev Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower\\n     * already deposited enough collateral, or he was given enough allowance by a credit delegator on the\\n     * corresponding debt token (StableDebtToken or VariableDebtToken)\\n     * - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet\\n     *   and 100 stable/variable debt tokens, depending on the `interestRateMode`\\n     * @param asset The address of the underlying asset to borrow\\n     * @param amount The amount to be borrowed\\n     * @param interestRateMode The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\\n     * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\\n     *   0 if the action is executed directly by the user, without any middle-man\\n     * @param onBehalfOf Address of the user who will receive the debt. Should be the address of the borrower itself\\n     * calling the function if he wants to borrow against his own collateral, or the address of the credit delegator\\n     * if he has been given credit delegation allowance\\n     **/\\n    function borrow(\\n        address asset,\\n        uint8 tranche,\\n        uint256 amount,\\n        uint256 interestRateMode,\\n        uint16 referralCode,\\n        address onBehalfOf\\n    ) external;\\n\\n    /**\\n     * @notice Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned\\n     * - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\\n     * @param asset The address of the borrowed underlying asset previously borrowed\\n     * @param amount The amount to repay\\n     * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\\n     * @param rateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\\n     * @param onBehalfOf Address of the user who will get his debt reduced/removed. Should be the address of the\\n     * user calling the function if he wants to reduce/remove his own debt, or the address of any other\\n     * other borrower whose debt should be removed\\n     * @return The final amount repaid\\n     **/\\n    function repay(\\n        address asset,\\n        uint8 tranche,\\n        uint256 amount,\\n        uint256 rateMode,\\n        address onBehalfOf\\n    ) external returns (uint256);\\n\\n    /**\\n     * @dev Allows a borrower to swap his debt between stable and variable mode, or viceversa\\n     * @param asset The address of the underlying asset borrowed\\n     * @param rateMode The rate mode that the user wants to swap to\\n     **/\\n    function swapBorrowRateMode(\\n        address asset,\\n        uint8 tranche,\\n        uint256 rateMode\\n    ) external;\\n\\n    /**\\n     * @dev Rebalances the stable interest rate of a user to the current stable rate defined on the reserve.\\n     * - Users can be rebalanced if the following conditions are satisfied:\\n     *     1. Usage ratio is above 95%\\n     *     2. the current deposit APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been\\n     *        borrowed at a stable rate and depositors are not earning enough\\n     * @param asset The address of the underlying asset borrowed\\n     * @param user The address of the user to be rebalanced\\n     **/\\n    function rebalanceStableBorrowRate(\\n        address asset,\\n        uint8 tranche,\\n        address user\\n    ) external;\\n\\n    /**\\n     * @dev Allows depositors to enable/disable a specific deposited asset as collateral\\n     * @param asset The address of the underlying asset deposited\\n     * @param useAsCollateral `true` if the user wants to use the deposit as collateral, `false` otherwise\\n     **/\\n    function setUserUseReserveAsCollateral(\\n        address asset,\\n        uint8 tranche,\\n        bool useAsCollateral\\n    ) external;\\n\\n    /**\\n     * @dev Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1\\n     * - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives\\n     *   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\\n     * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\\n     * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\\n     * @param user The address of the borrower getting liquidated\\n     * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\\n     * @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\\n     * to receive the underlying collateral asset directly\\n     **/\\n    function liquidationCall(\\n        address collateralAsset,\\n        address debtAsset,\\n        uint8 tranche,\\n        address user,\\n        uint256 debtToCover,\\n        bool receiveAToken\\n    ) external;\\n\\n    /**\\n     * @dev Allows smartcontracts to access the liquidity of the pool within one transaction,\\n     * as long as the amount taken plus a fee is returned.\\n     * IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration.\\n     * For further details please visit https://developers.aave.com\\n     * @param receiverAddress The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface\\n     * @param assets The addresses of the assets being flash-borrowed\\n     * @param amounts The amounts amounts being flash-borrowed\\n     * @param modes Types of the debt to open if the flash loan is not returned:\\n     *   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver\\n     *   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\\n     *   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\\n     * @param onBehalfOf The address  that will receive the debt in the case of using on `modes` 1 or 2\\n     * @param params Variadic packed params to pass to the receiver as extra information\\n     * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\\n     *   0 if the action is executed directly by the user, without any middle-man\\n     **/\\n    function flashLoan(\\n        address receiverAddress,\\n        DataTypes.TrancheAddress[] calldata assets,\\n        uint256[] calldata amounts,\\n        uint256[] calldata modes,\\n        address onBehalfOf,\\n        bytes calldata params,\\n        uint16 referralCode\\n    ) external;\\n\\n    /**\\n     * @dev Returns the user account data across all the reserves\\n     * @param user The address of the user\\n     * @return totalCollateralETH the total collateral in ETH of the user\\n     * @return totalDebtETH the total debt in ETH of the user\\n     * @return availableBorrowsETH the borrowing power left of the user\\n     * @return currentLiquidationThreshold the liquidation threshold of the user\\n     * @return ltv the loan to value of the user\\n     * @return healthFactor the current health factor of the user\\n     **/\\n    function getUserAccountData(address user, uint8 tranche)\\n        external\\n        view\\n        returns (\\n            uint256 totalCollateralETH,\\n            uint256 totalDebtETH,\\n            uint256 availableBorrowsETH,\\n            uint256 currentLiquidationThreshold,\\n            uint256 ltv,\\n            uint256 healthFactor\\n        );\\n\\n    function initReserve(\\n        address reserve,\\n        address aTokenAddress,\\n        address stableDebtAddress,\\n        address variableDebtAddress,\\n        address interestRateStrategyAddress,\\n        uint8 tranche\\n    ) external;\\n\\n    /**\\n     * @dev Updates the address of the interest rate strategy contract\\n     * - Only callable by the LendingPoolConfigurator contract\\n     * @param asset The address of the underlying asset of the reserve\\n     * @param _risk The risk of the asset\\n     **/\\n    function setAssetData(\\n        address asset,\\n        uint8 _risk,\\n        bool _isLendable,\\n        bool _allowedHigherTranche,\\n        uint8 _assetType\\n    ) external;\\n\\n    function setReserveInterestRateStrategyAddress(\\n        address reserve,\\n        uint8 tranche,\\n        address rateStrategyAddress\\n    ) external;\\n\\n    function setConfiguration(\\n        address reserve,\\n        uint8 tranche,\\n        uint256 configuration\\n    ) external;\\n\\n    /**\\n     * @dev Returns the configuration of the reserve\\n     * @param asset The address of the underlying asset of the reserve\\n     * @return The configuration of the reserve\\n     **/\\n    function getConfiguration(address asset, uint8 tranche)\\n        external\\n        view\\n        returns (DataTypes.ReserveConfigurationMap memory);\\n\\n    /**\\n     * @dev Returns the configuration of the user across all the reserves\\n     * @param user The user address\\n     * @return The configuration of the user\\n     **/\\n    function getUserConfiguration(address user)\\n        external\\n        view\\n        returns (DataTypes.UserConfigurationMap memory);\\n\\n    /**\\n     * @dev Returns the normalized income normalized income of the reserve\\n     * @param asset The address of the underlying asset of the reserve\\n     * @return The reserve's normalized income\\n     */\\n    function getReserveNormalizedIncome(address asset, uint8 tranche)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /**\\n     * @dev Returns the normalized variable debt per unit of asset\\n     * @param asset The address of the underlying asset of the reserve\\n     * @return The reserve normalized variable debt\\n     */\\n    function getReserveNormalizedVariableDebt(address asset, uint8 tranche)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /**\\n     * @dev Returns the state and configuration of the reserve\\n     * @param asset The address of the underlying asset of the reserve\\n     * @return The state of the reserve\\n     **/\\n    function getReserveData(address asset, uint8 tranche)\\n        external\\n        view\\n        returns (DataTypes.ReserveData memory);\\n\\n    function finalizeTransfer(\\n        address asset,\\n        uint8 tranche,\\n        address from,\\n        address to,\\n        uint256 amount,\\n        uint256 balanceFromAfter,\\n        uint256 balanceToBefore\\n    ) external;\\n\\n    function getReservesList() external view returns (address[] memory);\\n\\n    function getAssetData(address asset)\\n        external\\n        view\\n        returns (DataTypes.AssetData memory);\\n\\n    function getAddressesProvider()\\n        external\\n        view\\n        returns (ILendingPoolAddressesProvider);\\n\\n    function setPause(bool val) external;\\n\\n    function paused() external view returns (bool);\\n\\n    function editTrancheMultiplier(\\n        uint8 tranche,\\n        uint256 _liquidityRateMultiplier,\\n        uint256 _variableBorrowRateMultiplier,\\n        uint256 _stableBorrowRateMultiplier\\n    ) external;\\n\\n    function getTrancheMultiplier(uint8 tranche)\\n        external\\n        view\\n        returns (DataTypes.TrancheMultiplier memory);\\n}\\n\",\"keccak256\":\"0xa749eacaf399a92bfe2441ca9f3c81a17c1823d122b98361771159b0ab660c8e\",\"license\":\"agpl-3.0\"},\"contracts/interfaces/ILendingPoolAddressesProvider.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\nimport {DataTypes} from \\\"../protocol/libraries/types/DataTypes.sol\\\";\\n\\n/**\\n * @title LendingPoolAddressesProvider contract\\n * @dev Main registry of addresses part of or connected to the protocol, including permissioned roles\\n * - Acting also as factory of proxies and admin of those, so with right to change its implementations\\n * - Owned by the Aave Governance\\n * @author Aave\\n **/\\ninterface ILendingPoolAddressesProvider {\\n    event MarketIdSet(string newMarketId);\\n    event LendingPoolUpdated(address indexed newAddress);\\n    event ConfigurationAdminUpdated(address indexed newAddress);\\n    event EmergencyAdminUpdated(address indexed newAddress);\\n    event LendingPoolConfiguratorUpdated(address indexed newAddress);\\n    event LendingPoolCollateralManagerUpdated(address indexed newAddress);\\n    event PriceOracleUpdated(address indexed newAddress);\\n    event CurvePriceOracleUpdated(address indexed newAddress);\\n    event CurvePriceOracleWrapperUpdated(address indexed newAddress);\\n    event CurveAddressProviderUpdated(address indexed newAddress);\\n    event LendingRateOracleUpdated(address indexed newAddress);\\n    event ProxyCreated(bytes32 id, address indexed newAddress);\\n    event AddressSet(bytes32 id, address indexed newAddress, bool hasProxy);\\n\\n    function getMarketId() external view returns (string memory);\\n\\n    function setMarketId(string calldata marketId) external;\\n\\n    function setAddress(bytes32 id, address newAddress) external;\\n\\n    function setAddressAsProxy(bytes32 id, address impl) external;\\n\\n    function getAddress(bytes32 id) external view returns (address);\\n\\n    function getLendingPool() external view returns (address);\\n\\n    function setLendingPoolImpl(address pool) external;\\n\\n    function getLendingPoolConfigurator() external view returns (address);\\n\\n    function setLendingPoolConfiguratorImpl(address configurator) external;\\n\\n    function getLendingPoolCollateralManager() external view returns (address);\\n\\n    function setLendingPoolCollateralManager(address manager) external;\\n\\n    function getPoolAdmin() external view returns (address);\\n\\n    function setPoolAdmin(address admin) external;\\n\\n    function getEmergencyAdmin() external view returns (address);\\n\\n    function setEmergencyAdmin(address admin) external;\\n\\n    function getPriceOracle(DataTypes.ReserveAssetType assetType)\\n        external\\n        view\\n        returns (address);\\n\\n    function getAavePriceOracle() external view returns (address);\\n\\n    function getCurvePriceOracle() external view returns (address);\\n\\n    function getCurvePriceOracleWrapper() external view returns (address);\\n\\n    function getCurveAddressProvider() external view returns (address);\\n\\n    function setAavePriceOracle(address priceOracle) external;\\n\\n    function setCurveAddressProvider(address addressProvider) external;\\n\\n    function setCurvePriceOracle(address priceOracle) external;\\n\\n    function setCurvePriceOracleWrapper(address priceOracle) external;\\n\\n    function getLendingRateOracle() external view returns (address);\\n\\n    function setLendingRateOracle(address lendingRateOracle) external;\\n}\\n\",\"keccak256\":\"0xd05a545a54108bcf8be808763206cadbceefbfdc9d3e0ceff97fbe7e767cfe5e\",\"license\":\"agpl-3.0\"},\"contracts/protocol/libraries/types/DataTypes.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\nlibrary DataTypes {\\n    // refer to the whitepaper, section 1.1 basic concepts for a formal description of these properties.\\n\\n    enum ReserveAssetType {\\n        AAVE,\\n        CURVE\\n    } //update with other possible types of the underlying asset\\n    //AAVE is the original assets in the aave protocol\\n    //CURVE is the new LP tokens we are providing support for\\n\\n    struct AssetData {\\n        uint8 collateralRisk;\\n        bool isLendable;\\n        bool isAllowedCollateralInHigherTranches;\\n        ReserveAssetType assetType;\\n    }\\n\\n    struct TrancheAddress {\\n        uint8 tranche;\\n        address asset;\\n    }\\n    struct ReserveData {\\n        //stores the reserve configuration\\n        ReserveConfigurationMap configuration;\\n        //the liquidity index. Expressed in ray\\n        uint128 liquidityIndex; //not used for nonlendable assets\\n        //variable borrow index. Expressed in ray\\n        uint128 variableBorrowIndex; //not used for nonlendable assets\\n        //the current supply rate. Expressed in ray\\n        uint128 currentLiquidityRate; //deposit APR is defined as liquidityRate / RAY //not used for nonlendable assets\\n        //the current variable borrow rate. Expressed in ray\\n        uint128 currentVariableBorrowRate; //not used for nonlendable assets\\n        //the current stable borrow rate. Expressed in ray\\n        uint128 currentStableBorrowRate; //not used for nonlendable assets\\n        uint40 lastUpdateTimestamp;\\n        //tokens addresses\\n        address aTokenAddress;\\n        address stableDebtTokenAddress; //not used for nonlendable assets\\n        address variableDebtTokenAddress; //not used for nonlendable assets\\n        //address of the interest rate strategy\\n        address interestRateStrategyAddress; //not used for nonlendable assets\\n        //the id of the reserve. Represents the position in the list of the active reserves\\n        uint8 id;\\n        uint8 tranche; //I think this will be used for nonlendable assets, cause your collateral only asset can be placed in higher tranche if necessary\\n    }\\n\\n    struct TrancheMultiplier {\\n        uint256 liquidityRateMultiplier;\\n        uint256 variableBorrowRateMultiplier;\\n        uint256 stableBorrowRateMultiplier;\\n    }\\n\\n    uint8 constant NUM_TRANCHES = 3;\\n\\n    struct ReserveConfigurationMap {\\n        //bit 0-15: LTV\\n        //bit 16-31: Liq. threshold\\n        //bit 32-47: Liq. bonus\\n        //bit 48-55: Decimals\\n        //bit 56: Reserve is active\\n        //bit 57: reserve is frozen\\n        //bit 58: borrowing is enabled\\n        //bit 59: stable rate borrowing enabled\\n        //bit 60-63: reserved\\n        //bit 64-79: reserve factor\\n        uint256 data;\\n    }\\n\\n    struct UserConfigurationMap {\\n        uint256 data;\\n    }\\n\\n    enum InterestRateMode {\\n        NONE,\\n        STABLE,\\n        VARIABLE\\n    }\\n\\n    struct AcctTranche {\\n        address user;\\n        uint8 tranche;\\n    }\\n\\n    struct DepositVars {\\n        address asset;\\n        uint8 tranche;\\n        uint8 risk;\\n        bool allowHigherTranche;\\n        bool isLendable;\\n        TrancheMultiplier t;\\n    }\\n\\n    struct ExecuteBorrowParams {\\n        address asset;\\n        uint8 tranche; //tranche the user wants to borrow out of\\n        address user;\\n        address onBehalfOf;\\n        uint256 amount;\\n        uint256 interestRateMode;\\n        address aTokenAddress;\\n        uint16 referralCode;\\n        bool releaseUnderlying;\\n        uint256 _maxStableRateBorrowSizePercent;\\n        uint256 _reservesCount;\\n        TrancheMultiplier t;\\n    }\\n\\n    struct WithdrawParams {\\n        uint256 _reservesCount;\\n        address asset;\\n        uint8 tranche;\\n        uint256 amount;\\n        address to;\\n        TrancheMultiplier t;\\n    }\\n\\n    struct ValidateSetUseReserveAsCollateralParams {\\n        uint8 risk;\\n        bool allowHigherTranche;\\n    }\\n\\n    struct calculateInterestRatesVars {\\n        address reserve;\\n        address aToken;\\n        uint256 liquidityAdded;\\n        uint256 liquidityTaken;\\n        uint256 reserveFactor;\\n    }\\n\\n    struct flashLoanVars {\\n        address receiverAddress;\\n        DataTypes.TrancheAddress[] assets;\\n        uint256[] amounts;\\n        uint256[] modes;\\n        address onBehalfOf;\\n        bytes params;\\n        uint16 referralCode;\\n        uint256 _flashLoanPremiumTotal;\\n        address oracle;\\n        uint256 _maxStableRateBorrowSizePercent;\\n        uint256 _reservesCount;\\n    }\\n}\\n\",\"keccak256\":\"0x7302b5b5775a9a0019bd062c95d5a94a0b7bfa4553ae872968cf8ecf7c35fc8f\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"repay(address,uint8,uint256,uint256,address)":{"notice":"Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address"}},"version":1}}},"contracts/interfaces/ILendingPoolAddressesProvider.sol":{"ILendingPoolAddressesProvider":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"id","type":"bytes32"},{"indexed":true,"internalType":"address","name":"newAddress","type":"address"},{"indexed":false,"internalType":"bool","name":"hasProxy","type":"bool"}],"name":"AddressSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"ConfigurationAdminUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"CurveAddressProviderUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"CurvePriceOracleUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"CurvePriceOracleWrapperUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"EmergencyAdminUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"LendingPoolCollateralManagerUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"LendingPoolConfiguratorUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"LendingPoolUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"LendingRateOracleUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"newMarketId","type":"string"}],"name":"MarketIdSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"PriceOracleUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"id","type":"bytes32"},{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"ProxyCreated","type":"event"},{"inputs":[],"name":"getAavePriceOracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"getAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurveAddressProvider","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurvePriceOracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurvePriceOracleWrapper","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getEmergencyAdmin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLendingPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLendingPoolCollateralManager","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLendingPoolConfigurator","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLendingRateOracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMarketId","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPoolAdmin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum DataTypes.ReserveAssetType","name":"assetType","type":"uint8"}],"name":"getPriceOracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"priceOracle","type":"address"}],"name":"setAavePriceOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"address","name":"newAddress","type":"address"}],"name":"setAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"address","name":"impl","type":"address"}],"name":"setAddressAsProxy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"addressProvider","type":"address"}],"name":"setCurveAddressProvider","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"priceOracle","type":"address"}],"name":"setCurvePriceOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"priceOracle","type":"address"}],"name":"setCurvePriceOracleWrapper","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"setEmergencyAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"manager","type":"address"}],"name":"setLendingPoolCollateralManager","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"configurator","type":"address"}],"name":"setLendingPoolConfiguratorImpl","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"setLendingPoolImpl","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"lendingRateOracle","type":"address"}],"name":"setLendingRateOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"marketId","type":"string"}],"name":"setMarketId","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"setPoolAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Aave*","details":"Main registry of addresses part of or connected to the protocol, including permissioned roles - Acting also as factory of proxies and admin of those, so with right to change its implementations - Owned by the Aave Governance","kind":"dev","methods":{},"title":"LendingPoolAddressesProvider contract","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getAavePriceOracle()":"f139dc81","getAddress(bytes32)":"21f8a721","getCurveAddressProvider()":"59696e16","getCurvePriceOracle()":"ba61fe31","getCurvePriceOracleWrapper()":"992ecae7","getEmergencyAdmin()":"ddcaa9ea","getLendingPool()":"0261bf8b","getLendingPoolCollateralManager()":"712d9171","getLendingPoolConfigurator()":"85c858b1","getLendingRateOracle()":"3618abba","getMarketId()":"568ef470","getPoolAdmin()":"aecda378","getPriceOracle(uint8)":"1a9dffb3","setAavePriceOracle(address)":"985420f4","setAddress(bytes32,address)":"ca446dd9","setAddressAsProxy(bytes32,address)":"5dcc528c","setCurveAddressProvider(address)":"9bc3d098","setCurvePriceOracle(address)":"0aafb34e","setCurvePriceOracleWrapper(address)":"e4bc9d64","setEmergencyAdmin(address)":"35da3394","setLendingPoolCollateralManager(address)":"398e5553","setLendingPoolConfiguratorImpl(address)":"c12542df","setLendingPoolImpl(address)":"5aef021f","setLendingRateOracle(address)":"820d1274","setMarketId(string)":"f67b1847","setPoolAdmin(address)":"283d62ad"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"hasProxy\",\"type\":\"bool\"}],\"name\":\"AddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ConfigurationAdminUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"CurveAddressProviderUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"CurvePriceOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"CurvePriceOracleWrapperUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"EmergencyAdminUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingPoolCollateralManagerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingPoolConfiguratorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingPoolUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingRateOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newMarketId\",\"type\":\"string\"}],\"name\":\"MarketIdSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PriceOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ProxyCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getAavePriceOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurveAddressProvider\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurvePriceOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurvePriceOracleWrapper\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEmergencyAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingPoolCollateralManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingPoolConfigurator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingRateOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMarketId\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum DataTypes.ReserveAssetType\",\"name\":\"assetType\",\"type\":\"uint8\"}],\"name\":\"getPriceOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceOracle\",\"type\":\"address\"}],\"name\":\"setAavePriceOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"impl\",\"type\":\"address\"}],\"name\":\"setAddressAsProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressProvider\",\"type\":\"address\"}],\"name\":\"setCurveAddressProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceOracle\",\"type\":\"address\"}],\"name\":\"setCurvePriceOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceOracle\",\"type\":\"address\"}],\"name\":\"setCurvePriceOracleWrapper\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"setEmergencyAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"setLendingPoolCollateralManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"configurator\",\"type\":\"address\"}],\"name\":\"setLendingPoolConfiguratorImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"setLendingPoolImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lendingRateOracle\",\"type\":\"address\"}],\"name\":\"setLendingRateOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"marketId\",\"type\":\"string\"}],\"name\":\"setMarketId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"setPoolAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave*\",\"details\":\"Main registry of addresses part of or connected to the protocol, including permissioned roles - Acting also as factory of proxies and admin of those, so with right to change its implementations - Owned by the Aave Governance\",\"kind\":\"dev\",\"methods\":{},\"title\":\"LendingPoolAddressesProvider contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ILendingPoolAddressesProvider.sol\":\"ILendingPoolAddressesProvider\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ILendingPoolAddressesProvider.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\nimport {DataTypes} from \\\"../protocol/libraries/types/DataTypes.sol\\\";\\n\\n/**\\n * @title LendingPoolAddressesProvider contract\\n * @dev Main registry of addresses part of or connected to the protocol, including permissioned roles\\n * - Acting also as factory of proxies and admin of those, so with right to change its implementations\\n * - Owned by the Aave Governance\\n * @author Aave\\n **/\\ninterface ILendingPoolAddressesProvider {\\n    event MarketIdSet(string newMarketId);\\n    event LendingPoolUpdated(address indexed newAddress);\\n    event ConfigurationAdminUpdated(address indexed newAddress);\\n    event EmergencyAdminUpdated(address indexed newAddress);\\n    event LendingPoolConfiguratorUpdated(address indexed newAddress);\\n    event LendingPoolCollateralManagerUpdated(address indexed newAddress);\\n    event PriceOracleUpdated(address indexed newAddress);\\n    event CurvePriceOracleUpdated(address indexed newAddress);\\n    event CurvePriceOracleWrapperUpdated(address indexed newAddress);\\n    event CurveAddressProviderUpdated(address indexed newAddress);\\n    event LendingRateOracleUpdated(address indexed newAddress);\\n    event ProxyCreated(bytes32 id, address indexed newAddress);\\n    event AddressSet(bytes32 id, address indexed newAddress, bool hasProxy);\\n\\n    function getMarketId() external view returns (string memory);\\n\\n    function setMarketId(string calldata marketId) external;\\n\\n    function setAddress(bytes32 id, address newAddress) external;\\n\\n    function setAddressAsProxy(bytes32 id, address impl) external;\\n\\n    function getAddress(bytes32 id) external view returns (address);\\n\\n    function getLendingPool() external view returns (address);\\n\\n    function setLendingPoolImpl(address pool) external;\\n\\n    function getLendingPoolConfigurator() external view returns (address);\\n\\n    function setLendingPoolConfiguratorImpl(address configurator) external;\\n\\n    function getLendingPoolCollateralManager() external view returns (address);\\n\\n    function setLendingPoolCollateralManager(address manager) external;\\n\\n    function getPoolAdmin() external view returns (address);\\n\\n    function setPoolAdmin(address admin) external;\\n\\n    function getEmergencyAdmin() external view returns (address);\\n\\n    function setEmergencyAdmin(address admin) external;\\n\\n    function getPriceOracle(DataTypes.ReserveAssetType assetType)\\n        external\\n        view\\n        returns (address);\\n\\n    function getAavePriceOracle() external view returns (address);\\n\\n    function getCurvePriceOracle() external view returns (address);\\n\\n    function getCurvePriceOracleWrapper() external view returns (address);\\n\\n    function getCurveAddressProvider() external view returns (address);\\n\\n    function setAavePriceOracle(address priceOracle) external;\\n\\n    function setCurveAddressProvider(address addressProvider) external;\\n\\n    function setCurvePriceOracle(address priceOracle) external;\\n\\n    function setCurvePriceOracleWrapper(address priceOracle) external;\\n\\n    function getLendingRateOracle() external view returns (address);\\n\\n    function setLendingRateOracle(address lendingRateOracle) external;\\n}\\n\",\"keccak256\":\"0xd05a545a54108bcf8be808763206cadbceefbfdc9d3e0ceff97fbe7e767cfe5e\",\"license\":\"agpl-3.0\"},\"contracts/protocol/libraries/types/DataTypes.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\nlibrary DataTypes {\\n    // refer to the whitepaper, section 1.1 basic concepts for a formal description of these properties.\\n\\n    enum ReserveAssetType {\\n        AAVE,\\n        CURVE\\n    } //update with other possible types of the underlying asset\\n    //AAVE is the original assets in the aave protocol\\n    //CURVE is the new LP tokens we are providing support for\\n\\n    struct AssetData {\\n        uint8 collateralRisk;\\n        bool isLendable;\\n        bool isAllowedCollateralInHigherTranches;\\n        ReserveAssetType assetType;\\n    }\\n\\n    struct TrancheAddress {\\n        uint8 tranche;\\n        address asset;\\n    }\\n    struct ReserveData {\\n        //stores the reserve configuration\\n        ReserveConfigurationMap configuration;\\n        //the liquidity index. Expressed in ray\\n        uint128 liquidityIndex; //not used for nonlendable assets\\n        //variable borrow index. Expressed in ray\\n        uint128 variableBorrowIndex; //not used for nonlendable assets\\n        //the current supply rate. Expressed in ray\\n        uint128 currentLiquidityRate; //deposit APR is defined as liquidityRate / RAY //not used for nonlendable assets\\n        //the current variable borrow rate. Expressed in ray\\n        uint128 currentVariableBorrowRate; //not used for nonlendable assets\\n        //the current stable borrow rate. Expressed in ray\\n        uint128 currentStableBorrowRate; //not used for nonlendable assets\\n        uint40 lastUpdateTimestamp;\\n        //tokens addresses\\n        address aTokenAddress;\\n        address stableDebtTokenAddress; //not used for nonlendable assets\\n        address variableDebtTokenAddress; //not used for nonlendable assets\\n        //address of the interest rate strategy\\n        address interestRateStrategyAddress; //not used for nonlendable assets\\n        //the id of the reserve. Represents the position in the list of the active reserves\\n        uint8 id;\\n        uint8 tranche; //I think this will be used for nonlendable assets, cause your collateral only asset can be placed in higher tranche if necessary\\n    }\\n\\n    struct TrancheMultiplier {\\n        uint256 liquidityRateMultiplier;\\n        uint256 variableBorrowRateMultiplier;\\n        uint256 stableBorrowRateMultiplier;\\n    }\\n\\n    uint8 constant NUM_TRANCHES = 3;\\n\\n    struct ReserveConfigurationMap {\\n        //bit 0-15: LTV\\n        //bit 16-31: Liq. threshold\\n        //bit 32-47: Liq. bonus\\n        //bit 48-55: Decimals\\n        //bit 56: Reserve is active\\n        //bit 57: reserve is frozen\\n        //bit 58: borrowing is enabled\\n        //bit 59: stable rate borrowing enabled\\n        //bit 60-63: reserved\\n        //bit 64-79: reserve factor\\n        uint256 data;\\n    }\\n\\n    struct UserConfigurationMap {\\n        uint256 data;\\n    }\\n\\n    enum InterestRateMode {\\n        NONE,\\n        STABLE,\\n        VARIABLE\\n    }\\n\\n    struct AcctTranche {\\n        address user;\\n        uint8 tranche;\\n    }\\n\\n    struct DepositVars {\\n        address asset;\\n        uint8 tranche;\\n        uint8 risk;\\n        bool allowHigherTranche;\\n        bool isLendable;\\n        TrancheMultiplier t;\\n    }\\n\\n    struct ExecuteBorrowParams {\\n        address asset;\\n        uint8 tranche; //tranche the user wants to borrow out of\\n        address user;\\n        address onBehalfOf;\\n        uint256 amount;\\n        uint256 interestRateMode;\\n        address aTokenAddress;\\n        uint16 referralCode;\\n        bool releaseUnderlying;\\n        uint256 _maxStableRateBorrowSizePercent;\\n        uint256 _reservesCount;\\n        TrancheMultiplier t;\\n    }\\n\\n    struct WithdrawParams {\\n        uint256 _reservesCount;\\n        address asset;\\n        uint8 tranche;\\n        uint256 amount;\\n        address to;\\n        TrancheMultiplier t;\\n    }\\n\\n    struct ValidateSetUseReserveAsCollateralParams {\\n        uint8 risk;\\n        bool allowHigherTranche;\\n    }\\n\\n    struct calculateInterestRatesVars {\\n        address reserve;\\n        address aToken;\\n        uint256 liquidityAdded;\\n        uint256 liquidityTaken;\\n        uint256 reserveFactor;\\n    }\\n\\n    struct flashLoanVars {\\n        address receiverAddress;\\n        DataTypes.TrancheAddress[] assets;\\n        uint256[] amounts;\\n        uint256[] modes;\\n        address onBehalfOf;\\n        bytes params;\\n        uint16 referralCode;\\n        uint256 _flashLoanPremiumTotal;\\n        address oracle;\\n        uint256 _maxStableRateBorrowSizePercent;\\n        uint256 _reservesCount;\\n    }\\n}\\n\",\"keccak256\":\"0x7302b5b5775a9a0019bd062c95d5a94a0b7bfa4553ae872968cf8ecf7c35fc8f\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/protocol/libraries/types/DataTypes.sol":{"DataTypes":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d6f5ea1b7545b0ab0f713103a7996c42753c25a811d36d8ab0abbb43cf295b2964736f6c63430008000033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 CREATE2 0xEA SHL PUSH22 0x45B0AB0F713103A7996C42753C25A811D36D8AB0ABBB NUMBER 0xCF 0x29 JUMPDEST 0x29 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ","sourceMap":"63:4392:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;63:4392:3;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d6f5ea1b7545b0ab0f713103a7996c42753c25a811d36d8ab0abbb43cf295b2964736f6c63430008000033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 CREATE2 0xEA SHL PUSH22 0x45B0AB0F713103A7996C42753C25A811D36D8AB0ABBB NUMBER 0xCF 0x29 JUMPDEST 0x29 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ","sourceMap":"63:4392:3:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/protocol/libraries/types/DataTypes.sol\":\"DataTypes\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/protocol/libraries/types/DataTypes.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\nlibrary DataTypes {\\n    // refer to the whitepaper, section 1.1 basic concepts for a formal description of these properties.\\n\\n    enum ReserveAssetType {\\n        AAVE,\\n        CURVE\\n    } //update with other possible types of the underlying asset\\n    //AAVE is the original assets in the aave protocol\\n    //CURVE is the new LP tokens we are providing support for\\n\\n    struct AssetData {\\n        uint8 collateralRisk;\\n        bool isLendable;\\n        bool isAllowedCollateralInHigherTranches;\\n        ReserveAssetType assetType;\\n    }\\n\\n    struct TrancheAddress {\\n        uint8 tranche;\\n        address asset;\\n    }\\n    struct ReserveData {\\n        //stores the reserve configuration\\n        ReserveConfigurationMap configuration;\\n        //the liquidity index. Expressed in ray\\n        uint128 liquidityIndex; //not used for nonlendable assets\\n        //variable borrow index. Expressed in ray\\n        uint128 variableBorrowIndex; //not used for nonlendable assets\\n        //the current supply rate. Expressed in ray\\n        uint128 currentLiquidityRate; //deposit APR is defined as liquidityRate / RAY //not used for nonlendable assets\\n        //the current variable borrow rate. Expressed in ray\\n        uint128 currentVariableBorrowRate; //not used for nonlendable assets\\n        //the current stable borrow rate. Expressed in ray\\n        uint128 currentStableBorrowRate; //not used for nonlendable assets\\n        uint40 lastUpdateTimestamp;\\n        //tokens addresses\\n        address aTokenAddress;\\n        address stableDebtTokenAddress; //not used for nonlendable assets\\n        address variableDebtTokenAddress; //not used for nonlendable assets\\n        //address of the interest rate strategy\\n        address interestRateStrategyAddress; //not used for nonlendable assets\\n        //the id of the reserve. Represents the position in the list of the active reserves\\n        uint8 id;\\n        uint8 tranche; //I think this will be used for nonlendable assets, cause your collateral only asset can be placed in higher tranche if necessary\\n    }\\n\\n    struct TrancheMultiplier {\\n        uint256 liquidityRateMultiplier;\\n        uint256 variableBorrowRateMultiplier;\\n        uint256 stableBorrowRateMultiplier;\\n    }\\n\\n    uint8 constant NUM_TRANCHES = 3;\\n\\n    struct ReserveConfigurationMap {\\n        //bit 0-15: LTV\\n        //bit 16-31: Liq. threshold\\n        //bit 32-47: Liq. bonus\\n        //bit 48-55: Decimals\\n        //bit 56: Reserve is active\\n        //bit 57: reserve is frozen\\n        //bit 58: borrowing is enabled\\n        //bit 59: stable rate borrowing enabled\\n        //bit 60-63: reserved\\n        //bit 64-79: reserve factor\\n        uint256 data;\\n    }\\n\\n    struct UserConfigurationMap {\\n        uint256 data;\\n    }\\n\\n    enum InterestRateMode {\\n        NONE,\\n        STABLE,\\n        VARIABLE\\n    }\\n\\n    struct AcctTranche {\\n        address user;\\n        uint8 tranche;\\n    }\\n\\n    struct DepositVars {\\n        address asset;\\n        uint8 tranche;\\n        uint8 risk;\\n        bool allowHigherTranche;\\n        bool isLendable;\\n        TrancheMultiplier t;\\n    }\\n\\n    struct ExecuteBorrowParams {\\n        address asset;\\n        uint8 tranche; //tranche the user wants to borrow out of\\n        address user;\\n        address onBehalfOf;\\n        uint256 amount;\\n        uint256 interestRateMode;\\n        address aTokenAddress;\\n        uint16 referralCode;\\n        bool releaseUnderlying;\\n        uint256 _maxStableRateBorrowSizePercent;\\n        uint256 _reservesCount;\\n        TrancheMultiplier t;\\n    }\\n\\n    struct WithdrawParams {\\n        uint256 _reservesCount;\\n        address asset;\\n        uint8 tranche;\\n        uint256 amount;\\n        address to;\\n        TrancheMultiplier t;\\n    }\\n\\n    struct ValidateSetUseReserveAsCollateralParams {\\n        uint8 risk;\\n        bool allowHigherTranche;\\n    }\\n\\n    struct calculateInterestRatesVars {\\n        address reserve;\\n        address aToken;\\n        uint256 liquidityAdded;\\n        uint256 liquidityTaken;\\n        uint256 reserveFactor;\\n    }\\n\\n    struct flashLoanVars {\\n        address receiverAddress;\\n        DataTypes.TrancheAddress[] assets;\\n        uint256[] amounts;\\n        uint256[] modes;\\n        address onBehalfOf;\\n        bytes params;\\n        uint16 referralCode;\\n        uint256 _flashLoanPremiumTotal;\\n        address oracle;\\n        uint256 _maxStableRateBorrowSizePercent;\\n        uint256 _reservesCount;\\n    }\\n}\\n\",\"keccak256\":\"0x7302b5b5775a9a0019bd062c95d5a94a0b7bfa4553ae872968cf8ecf7c35fc8f\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}