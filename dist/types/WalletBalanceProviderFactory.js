"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.WalletBalanceProviderFactory = void 0;
const contracts_1 = require("@ethersproject/contracts");
class WalletBalanceProviderFactory extends contracts_1.ContractFactory {
    constructor(signer) {
        super(_abi, _bytecode, signer);
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static connect(address, signerOrProvider) {
        return new contracts_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.WalletBalanceProviderFactory = WalletBalanceProviderFactory;
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "user",
                type: "address",
            },
            {
                internalType: "address",
                name: "token",
                type: "address",
            },
        ],
        name: "balanceOf",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address[]",
                name: "users",
                type: "address[]",
            },
            {
                internalType: "address[]",
                name: "tokens",
                type: "address[]",
            },
        ],
        name: "batchBalanceOf",
        outputs: [
            {
                internalType: "uint256[]",
                name: "",
                type: "uint256[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                internalType: "address",
                name: "user",
                type: "address",
            },
        ],
        name: "getUserWalletBalances",
        outputs: [
            {
                internalType: "address[]",
                name: "",
                type: "address[]",
            },
            {
                internalType: "uint256[]",
                name: "",
                type: "uint256[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        stateMutability: "payable",
        type: "receive",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b50610c83806100206000396000f3fe6080604052600436106100385760003560e01c80630240534314610072578063b59b28ef146100a9578063f7888aec146100d65761006d565b3661006d5761004633610103565b61006b5760405162461bcd60e51b815260040161006290610b48565b60405180910390fd5b005b600080fd5b34801561007e57600080fd5b5061009261008d366004610897565b61013f565b6040516100a0929190610aae565b60405180910390f35b3480156100b557600080fd5b506100c96100c43660046108cf565b610599565b6040516100a09190610b0e565b3480156100e257600080fd5b506100f66100f1366004610897565b6106ea565b6040516100a09190610b64565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061013757508115155b949350505050565b6060806000846001600160a01b0316630261bf8b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561017d57600080fd5b505afa158015610191573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b5919061087b565b90506000816001600160a01b031663d1946dbc6040518163ffffffff1660e01b815260040160006040518083038186803b1580156101f257600080fd5b505afa158015610206573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261022e9190810190610938565b90506000815160016102409190610b97565b67ffffffffffffffff81111561026657634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561028f578160200160208202803683370190505b50905060005b8251811015610310578281815181106102be57634e487b7160e01b600052603260045260246000fd5b60200260200101518282815181106102e657634e487b7160e01b600052603260045260246000fd5b6001600160a01b03909216602092830291909101909101528061030881610bce565b915050610295565b5073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8183518151811061034757634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b0316815250506000815167ffffffffffffffff81111561039157634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156103ba578160200160208202803683370190505b50905060005b835181101561053f5760006103d6600383610be9565b90506000866001600160a01b0316633914230086858151811061040957634e487b7160e01b600052603260045260246000fd5b6020026020010151846040518363ffffffff1660e01b815260040161042f929190610a92565b60206040518083038186803b15801561044757600080fd5b505afa15801561045b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047f91906109eb565b9050600061048c826107da565b5050509050806104cc5760008585815181106104b857634e487b7160e01b600052603260045260246000fd5b60200260200101818152505050505061052d565b6104fd8b8786815181106104f057634e487b7160e01b600052603260045260246000fd5b60200260200101516106ea565b85858151811061051d57634e487b7160e01b600052603260045260246000fd5b6020026020010181815250505050505b8061053781610bce565b9150506103c0565b5061055e8773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6106ea565b8184518151811061057f57634e487b7160e01b600052603260045260246000fd5b6020908102919091010152909450925050505b9250929050565b606060006105a78386610baf565b67ffffffffffffffff8111156105cd57634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156105f6578160200160208202803683370190505b50905060005b858110156106e05760005b848110156106cd5761067c88888481811061063257634e487b7160e01b600052603260045260246000fd5b90506020020160208101906106479190610858565b87878481811061066757634e487b7160e01b600052603260045260246000fd5b90506020020160208101906100f19190610858565b83826106888886610baf565b6106929190610b97565b815181106106b057634e487b7160e01b600052603260045260246000fd5b6020908102919091010152806106c581610bce565b915050610607565b50806106d881610bce565b9150506105fc565b5095945050505050565b60006001600160a01b03821673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee141561072257506001600160a01b038216316107d4565b610734826001600160a01b0316610103565b156107bc576040516370a0823160e01b81526001600160a01b038316906370a0823190610765908690600401610a7e565b60206040518083038186803b15801561077d57600080fd5b505afa158015610791573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b59190610a2c565b90506107d4565b60405162461bcd60e51b815260040161006290610b21565b92915050565b51670100000000000000811615159167020000000000000082161515916704000000000000008116151591670800000000000000909116151590565b60008083601f840112610827578081fd5b50813567ffffffffffffffff81111561083e578182fd5b602083019150836020808302850101111561059257600080fd5b600060208284031215610869578081fd5b813561087481610c35565b9392505050565b60006020828403121561088c578081fd5b815161087481610c35565b600080604083850312156108a9578081fd5b82356108b481610c35565b915060208301356108c481610c35565b809150509250929050565b600080600080604085870312156108e4578182fd5b843567ffffffffffffffff808211156108fb578384fd5b61090788838901610816565b9096509450602087013591508082111561091f578384fd5b5061092c87828801610816565b95989497509550505050565b6000602080838503121561094a578182fd5b825167ffffffffffffffff80821115610961578384fd5b818501915085601f830112610974578384fd5b81518181111561098657610986610c1f565b8381029150610996848301610b6d565b8181528481019084860184860187018a10156109b0578788fd5b8795505b838610156109de57805194506109c985610c35565b848352600195909501949186019186016109b4565b5098975050505050505050565b6000602082840312156109fc578081fd5b6040516020810181811067ffffffffffffffff82111715610a1f57610a1f610c1f565b6040529151825250919050565b600060208284031215610a3d578081fd5b5051919050565b6000815180845260208085019450808401835b83811015610a7357815187529582019590820190600101610a57565b509495945050505050565b6001600160a01b0391909116815260200190565b6001600160a01b0392909216825260ff16602082015260400190565b604080825283519082018190526000906020906060840190828701845b82811015610af05781516001600160a01b031684529284019290840190600101610acb565b50505083810382850152610b048186610a44565b9695505050505050565b6000602082526108746020830184610a44565b6020808252600d908201526c24a72b20a624a22faa27a5a2a760991b604082015260600190565b602080825260029082015261191960f11b604082015260600190565b90815260200190565b60405181810167ffffffffffffffff81118282101715610b8f57610b8f610c1f565b604052919050565b60008219821115610baa57610baa610c09565b500190565b6000816000190483118215151615610bc957610bc9610c09565b500290565b6000600019821415610be257610be2610c09565b5060010190565b600082610c0457634e487b7160e01b81526012600452602481fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610c4a57600080fd5b5056fea2646970667358221220180529305da060e3088e0f4b25e665ba5f83ac1078267ab68b978c0eb9b2f07564736f6c63430008000033";
