"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DefenderRelayQueryProvider = void 0;
const relayer_1 = require("../relayer");
class DefenderRelayQueryProvider {
    constructor(relayerCredentials) {
        this.id = 1;
        this.relayer = relayer_1.isRelayer(relayerCredentials) ? relayerCredentials : new relayer_1.Relayer(relayerCredentials);
    }
    sendAsync(payload, callback) {
        return this.send(payload, callback);
    }
    send(payload, callback) {
        var _a;
        const payloadId = typeof payload.id === 'string' ? parseInt(payload.id) : payload.id;
        this.relayer
            .call(payload.method, (_a = payload.params) !== null && _a !== void 0 ? _a : [])
            .then((response) => {
            var _a;
            return callback(null, {
                ...response,
                id: (_a = payloadId !== null && payloadId !== void 0 ? payloadId : response.id) !== null && _a !== void 0 ? _a : this.id++,
            });
        })
            .catch((err) => callback(err, undefined));
    }
}
exports.DefenderRelayQueryProvider = DefenderRelayQueryProvider;
