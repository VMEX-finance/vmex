/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { DataUtility } from "./DataUtility";

export class DataUtilityFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<DataUtility> {
    return super.deploy(overrides || {}) as Promise<DataUtility>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DataUtility {
    return super.attach(address) as DataUtility;
  }
  connect(signer: Signer): DataUtilityFactory {
    return super.connect(signer) as DataUtilityFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DataUtility {
    return new Contract(address, _abi, signerOrProvider) as DataUtility;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address[][]",
        name: "_tokens",
        type: "address[][]",
      },
    ],
    name: "getTokenInfo",
    outputs: [
      {
        internalType: "int256[]",
        name: "",
        type: "int256[]",
      },
      {
        internalType: "int256[]",
        name: "",
        type: "int256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6104aa61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c80634b7765601461003a575b600080fd5b61004d61004836600461026a565b610064565b60405161005b9291906103bb565b60405180910390f35b60608060608060005b855181101561025f5785818151811061009657634e487b7160e01b600052603260045260246000fd5b60200260200101516000815181106100be57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156100fe57600080fd5b505afa158015610112573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101369190610369565b83828151811061015657634e487b7160e01b600052603260045260246000fd5b60200260200101818152505085818151811061018257634e487b7160e01b600052603260045260246000fd5b60200260200101516001815181106101aa57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156101ea57600080fd5b505afa1580156101fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102229190610369565b82828151811061024257634e487b7160e01b600052603260045260246000fd5b60209081029190910101528061025781610437565b91505061006d565b509092509050915091565b6000602080838503121561027c578182fd5b823567ffffffffffffffff811115610292578283fd5b8301601f810185136102a2578283fd5b80356102b56102b082610413565b6103e9565b81815283810190838501865b8481101561035b57813586018a603f8201126102db578889fd5b8781013560406102ed6102b083610413565b808382528b820191508285018f848e8702880101111561030b578d8efd5b8d95505b8486101561034457803593506001600160a01b038416841461032f578d8efd5b83835260019590950194918c01918c0161030f565b5088525050509387019350908601906001016102c1565b509098975050505050505050565b60006020828403121561037a578081fd5b5051919050565b6000815180845260208085019450808401835b838110156103b057815187529582019590820190600101610394565b509495945050505050565b6000604082526103ce6040830185610381565b82810360208401526103e08185610381565b95945050505050565b60405181810167ffffffffffffffff8111828210171561040b5761040b61045e565b604052919050565b600067ffffffffffffffff82111561042d5761042d61045e565b5060209081020190565b600060001982141561045757634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fdfea264697066735822122018f051a12173126e5d84dd38aafeb28efaf9ea14062ec5ce85a334e7c119a27e64736f6c63430008000033";
