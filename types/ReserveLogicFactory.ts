/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { ReserveLogic } from "./ReserveLogic";

export class ReserveLogicFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<ReserveLogic> {
    return super.deploy(overrides || {}) as Promise<ReserveLogic>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ReserveLogic {
    return super.attach(address) as ReserveLogic;
  }
  connect(signer: Signer): ReserveLogicFactory {
    return super.connect(signer) as ReserveLogicFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReserveLogic {
    return new Contract(address, _abi, signerOrProvider) as ReserveLogic;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "liquidityRate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stableBorrowRate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "variableBorrowRate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "liquidityIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "variableBorrowIndex",
        type: "uint256",
      },
    ],
    name: "ReserveDataUpdated",
    type: "event",
  },
];

const _bytecode =
  "0x6102a161003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063192876901461003a575b600080fd5b81801561004657600080fd5b5061005a6100553660046101a3565b61005c565b005b6004860154604080518082019091526002815261199960f11b6020820152906001600160a01b0316156100ab5760405162461bcd60e51b81526004016100a29190610218565b60405180910390fd5b506100b4610177565b6001870180546fffffffffffffffffffffffffffffffff19166001600160801b03929092169190911790556100e7610177565b6001870180546001600160801b03928316600160801b0292169190911790556004860180546001600160a01b039687166001600160a01b03199182161790915560058701805495871695821695909517909455600686018054938616938516939093179092556007909401805460ff909216600160a81b0260ff60a81b1995909416919092161792909216179055565b6b033b2e3c9fd0803ce800000090565b80356001600160a01b038116811461019e57600080fd5b919050565b60008060008060008060c087890312156101bb578182fd5b863595506101cb60208801610187565b94506101d960408801610187565b93506101e760608801610187565b92506101f560808801610187565b915060a087013560ff8116811461020a578182fd5b809150509295509295509295565b6000602080835283518082850152825b8181101561024457858101830151858201604001528201610228565b818111156102555783604083870101525b50601f01601f191692909201604001939250505056fea26469706673582212204face8159654e9406d159a9f20506e1a24f8467cff90a5ae4f700ba45faecdd164736f6c63430008000033";
