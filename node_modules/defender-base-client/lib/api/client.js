"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaseApiClient = void 0;
const api_1 = require("./api");
class BaseApiClient {
    constructor(params) {
        if (!params.apiKey)
            throw new Error(`API key is required`);
        if (!params.apiSecret)
            throw new Error(`API secret is required`);
        this.apiKey = params.apiKey;
        this.apiSecret = params.apiSecret;
    }
    async init() {
        if (!this.api) {
            const userPass = { Username: this.apiKey, Password: this.apiSecret };
            const poolData = { UserPoolId: this.getPoolId(), ClientId: this.getPoolClientId() };
            this.api = api_1.createAuthenticatedApi(userPass, poolData, this.getApiUrl());
        }
        return this.api;
    }
    async apiCall(fn) {
        const api = await this.init();
        try {
            return await fn(api);
        }
        catch (error) {
            // this means ID token has expired so we'll recreate session and try again
            if (error.response && error.response.status === 401 && error.response.statusText === 'Unauthorized') {
                this.api = undefined;
                const api = await this.init();
                return await fn(api);
            }
            throw error;
        }
    }
}
exports.BaseApiClient = BaseApiClient;
