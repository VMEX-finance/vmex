/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import { Contract, ContractTransaction } from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface DepositWithdrawLogicInterface extends ethers.utils.Interface {
  functions: {};

  events: {
    "Borrow(address,address,address,uint256,uint256,uint256,uint16)": EventFragment;
    "Deposit(address,uint64,address,address,uint256,uint16)": EventFragment;
    "FlashLoan(address,address,address,uint64,uint256,uint256,uint16)": EventFragment;
    "ReserveUsedAsCollateralDisabled(address,address)": EventFragment;
    "ReserveUsedAsCollateralEnabled(address,address)": EventFragment;
    "Withdraw(address,address,address,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "Borrow"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Deposit"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "FlashLoan"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ReserveUsedAsCollateralDisabled"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ReserveUsedAsCollateralEnabled"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Withdraw"): EventFragment;
}

export class DepositWithdrawLogic extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: DepositWithdrawLogicInterface;

  functions: {};

  callStatic: {};

  filters: {
    Borrow(
      reserve: string | null,
      user: null,
      onBehalfOf: string | null,
      amount: null,
      borrowRateMode: null,
      borrowRate: null,
      referral: BigNumberish | null
    ): EventFilter;

    Deposit(
      reserve: string | null,
      trancheId: null,
      user: null,
      onBehalfOf: string | null,
      amount: null,
      referral: BigNumberish | null
    ): EventFilter;

    FlashLoan(
      target: string | null,
      initiator: string | null,
      asset: string | null,
      trancheId: null,
      amount: null,
      premium: null,
      referralCode: null
    ): EventFilter;

    ReserveUsedAsCollateralDisabled(
      reserve: string | null,
      user: string | null
    ): EventFilter;

    ReserveUsedAsCollateralEnabled(
      reserve: string | null,
      user: string | null
    ): EventFilter;

    Withdraw(
      reserve: string | null,
      user: string | null,
      to: string | null,
      amount: null
    ): EventFilter;
  };

  estimateGas: {};

  populateTransaction: {};
}
