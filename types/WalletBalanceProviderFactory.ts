/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { WalletBalanceProvider } from "./WalletBalanceProvider";

export class WalletBalanceProviderFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<WalletBalanceProvider> {
    return super.deploy(overrides || {}) as Promise<WalletBalanceProvider>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): WalletBalanceProvider {
    return super.attach(address) as WalletBalanceProvider;
  }
  connect(signer: Signer): WalletBalanceProviderFactory {
    return super.connect(signer) as WalletBalanceProviderFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WalletBalanceProvider {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as WalletBalanceProvider;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "users",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "batchBalanceOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserWalletBalances",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610c78806100206000396000f3fe6080604052600436106100385760003560e01c80630240534314610072578063b59b28ef146100a9578063f7888aec146100d65761006d565b3661006d5761004633610103565b61006b5760405162461bcd60e51b815260040161006290610b3d565b60405180910390fd5b005b600080fd5b34801561007e57600080fd5b5061009261008d36600461088c565b610134565b6040516100a0929190610aa3565b60405180910390f35b3480156100b557600080fd5b506100c96100c43660046108c4565b61058e565b6040516100a09190610b03565b3480156100e257600080fd5b506100f66100f136600461088c565b6106df565b6040516100a09190610b59565b600080826001600160a01b0316803b806020016040519081016040528181526000908060200190933c511192915050565b6060806000846001600160a01b0316630261bf8b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561017257600080fd5b505afa158015610186573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101aa9190610870565b90506000816001600160a01b031663d1946dbc6040518163ffffffff1660e01b815260040160006040518083038186803b1580156101e757600080fd5b505afa1580156101fb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610223919081019061092d565b90506000815160016102359190610b8c565b67ffffffffffffffff81111561025b57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610284578160200160208202803683370190505b50905060005b8251811015610305578281815181106102b357634e487b7160e01b600052603260045260246000fd5b60200260200101518282815181106102db57634e487b7160e01b600052603260045260246000fd5b6001600160a01b0390921660209283029190910190910152806102fd81610bc3565b91505061028a565b5073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8183518151811061033c57634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b0316815250506000815167ffffffffffffffff81111561038657634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156103af578160200160208202803683370190505b50905060005b83518110156105345760006103cb600383610bde565b90506000866001600160a01b031663391423008685815181106103fe57634e487b7160e01b600052603260045260246000fd5b6020026020010151846040518363ffffffff1660e01b8152600401610424929190610a87565b60206040518083038186803b15801561043c57600080fd5b505afa158015610450573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047491906109e0565b90506000610481826107cf565b5050509050806104c15760008585815181106104ad57634e487b7160e01b600052603260045260246000fd5b602002602001018181525050505050610522565b6104f28b8786815181106104e557634e487b7160e01b600052603260045260246000fd5b60200260200101516106df565b85858151811061051257634e487b7160e01b600052603260045260246000fd5b6020026020010181815250505050505b8061052c81610bc3565b9150506103b5565b506105538773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6106df565b8184518151811061057457634e487b7160e01b600052603260045260246000fd5b6020908102919091010152909450925050505b9250929050565b6060600061059c8386610ba4565b67ffffffffffffffff8111156105c257634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156105eb578160200160208202803683370190505b50905060005b858110156106d55760005b848110156106c25761067188888481811061062757634e487b7160e01b600052603260045260246000fd5b905060200201602081019061063c919061084d565b87878481811061065c57634e487b7160e01b600052603260045260246000fd5b90506020020160208101906100f1919061084d565b838261067d8886610ba4565b6106879190610b8c565b815181106106a557634e487b7160e01b600052603260045260246000fd5b6020908102919091010152806106ba81610bc3565b9150506105fc565b50806106cd81610bc3565b9150506105f1565b5095945050505050565b60006001600160a01b03821673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee141561071757506001600160a01b038216316107c9565b610729826001600160a01b0316610103565b156107b1576040516370a0823160e01b81526001600160a01b038316906370a082319061075a908690600401610a73565b60206040518083038186803b15801561077257600080fd5b505afa158015610786573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107aa9190610a21565b90506107c9565b60405162461bcd60e51b815260040161006290610b16565b92915050565b51670100000000000000811615159167020000000000000082161515916704000000000000008116151591670800000000000000909116151590565b60008083601f84011261081c578081fd5b50813567ffffffffffffffff811115610833578182fd5b602083019150836020808302850101111561058757600080fd5b60006020828403121561085e578081fd5b813561086981610c2a565b9392505050565b600060208284031215610881578081fd5b815161086981610c2a565b6000806040838503121561089e578081fd5b82356108a981610c2a565b915060208301356108b981610c2a565b809150509250929050565b600080600080604085870312156108d9578182fd5b843567ffffffffffffffff808211156108f0578384fd5b6108fc8883890161080b565b90965094506020870135915080821115610914578384fd5b506109218782880161080b565b95989497509550505050565b6000602080838503121561093f578182fd5b825167ffffffffffffffff80821115610956578384fd5b818501915085601f830112610969578384fd5b81518181111561097b5761097b610c14565b838102915061098b848301610b62565b8181528481019084860184860187018a10156109a5578788fd5b8795505b838610156109d357805194506109be85610c2a565b848352600195909501949186019186016109a9565b5098975050505050505050565b6000602082840312156109f1578081fd5b6040516020810181811067ffffffffffffffff82111715610a1457610a14610c14565b6040529151825250919050565b600060208284031215610a32578081fd5b5051919050565b6000815180845260208085019450808401835b83811015610a6857815187529582019590820190600101610a4c565b509495945050505050565b6001600160a01b0391909116815260200190565b6001600160a01b0392909216825260ff16602082015260400190565b604080825283519082018190526000906020906060840190828701845b82811015610ae55781516001600160a01b031684529284019290840190600101610ac0565b50505083810382850152610af98186610a39565b9695505050505050565b6000602082526108696020830184610a39565b6020808252600d908201526c24a72b20a624a22faa27a5a2a760991b604082015260600190565b602080825260029082015261191960f11b604082015260600190565b90815260200190565b60405181810167ffffffffffffffff81118282101715610b8457610b84610c14565b604052919050565b60008219821115610b9f57610b9f610bfe565b500190565b6000816000190483118215151615610bbe57610bbe610bfe565b500290565b6000600019821415610bd757610bd7610bfe565b5060010190565b600082610bf957634e487b7160e01b81526012600452602481fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610c3f57600080fd5b5056fea264697066735822122023f00e4986dc081ad4c517f5dedb1854c8a31823514db5f019952a8600d2fd4864736f6c63430008000033";
