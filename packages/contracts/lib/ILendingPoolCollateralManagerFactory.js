"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ILendingPoolCollateralManagerFactory = void 0;
const ethers_1 = require("ethers");
class ILendingPoolCollateralManagerFactory {
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.ILendingPoolCollateralManagerFactory = ILendingPoolCollateralManagerFactory;
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "collateral",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "principal",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "user",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "debtToCover",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "liquidatedCollateralAmount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "address",
                name: "liquidator",
                type: "address",
            },
            {
                indexed: false,
                internalType: "bool",
                name: "receiveAToken",
                type: "bool",
            },
        ],
        name: "LiquidationCall",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "reserve",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "user",
                type: "address",
            },
        ],
        name: "ReserveUsedAsCollateralDisabled",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "reserve",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "user",
                type: "address",
            },
        ],
        name: "ReserveUsedAsCollateralEnabled",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "collateral",
                type: "address",
            },
            {
                internalType: "address",
                name: "principal",
                type: "address",
            },
            {
                internalType: "uint64",
                name: "trancheId",
                type: "uint64",
            },
            {
                internalType: "address",
                name: "user",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "debtToCover",
                type: "uint256",
            },
            {
                internalType: "bool",
                name: "receiveAToken",
                type: "bool",
            },
        ],
        name: "liquidationCall",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
];
//# sourceMappingURL=ILendingPoolCollateralManagerFactory.js.map