"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MockAggregatorFactory = void 0;
const contracts_1 = require("@ethersproject/contracts");
class MockAggregatorFactory extends contracts_1.ContractFactory {
    constructor(signer) {
        super(_abi, _bytecode, signer);
    }
    deploy(_initialAnswer, overrides) {
        return super.deploy(_initialAnswer, overrides || {});
    }
    getDeployTransaction(_initialAnswer, overrides) {
        return super.getDeployTransaction(_initialAnswer, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static connect(address, signerOrProvider) {
        return new contracts_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.MockAggregatorFactory = MockAggregatorFactory;
const _abi = [
    {
        inputs: [
            {
                internalType: "int256",
                name: "_initialAnswer",
                type: "int256",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "int256",
                name: "current",
                type: "int256",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "roundId",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "timestamp",
                type: "uint256",
            },
        ],
        name: "AnswerUpdated",
        type: "event",
    },
    {
        inputs: [],
        name: "getTokenType",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "latestAnswer",
        outputs: [
            {
                internalType: "int256",
                name: "",
                type: "int256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b5060405161014438038061014483398101604081905261002f91610074565b600081815560405182907f0559884fd3a460db3073b7fc896cc77986f16e378210ded43186175bf646fc5f9061006690429061008c565b60405180910390a350610095565b600060208284031215610085578081fd5b5051919050565b90815260200190565b60a1806100a36000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c806350d25bcd146037578063fcab1819146051575b600080fd5b603d6057565b604051604891906062565b60405180910390f35b603d605d565b60005490565b600190565b9081526020019056fea26469706673582212207579509e296a862e73999f33170f25b4bb37fc07b87363f4f3c25e0a2ae2a0fd64736f6c63430008000033";
//# sourceMappingURL=MockAggregatorFactory.js.map