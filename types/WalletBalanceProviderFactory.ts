/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { WalletBalanceProvider } from "./WalletBalanceProvider";

export class WalletBalanceProviderFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<WalletBalanceProvider> {
    return super.deploy(overrides || {}) as Promise<WalletBalanceProvider>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): WalletBalanceProvider {
    return super.attach(address) as WalletBalanceProvider;
  }
  connect(signer: Signer): WalletBalanceProviderFactory {
    return super.connect(signer) as WalletBalanceProviderFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WalletBalanceProvider {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as WalletBalanceProvider;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "users",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "batchBalanceOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserWalletBalances",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610c34806100206000396000f3fe6080604052600436106100385760003560e01c80630240534314610072578063b59b28ef146100a9578063f7888aec146100d65761006d565b3661006d5761004633610103565b61006b5760405162461bcd60e51b815260040161006290610b19565b60405180910390fd5b005b600080fd5b34801561007e57600080fd5b5061009261008d366004610884565b61013f565b6040516100a0929190610a7f565b60405180910390f35b3480156100b557600080fd5b506100c96100c43660046108bc565b610586565b6040516100a09190610adf565b3480156100e257600080fd5b506100f66100f1366004610884565b6106d7565b6040516100a09190610b35565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061013757508115155b949350505050565b6060806000846001600160a01b0316630261bf8b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561017d57600080fd5b505afa158015610191573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b59190610868565b90506000816001600160a01b031663d1946dbc6040518163ffffffff1660e01b815260040160006040518083038186803b1580156101f257600080fd5b505afa158015610206573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261022e9190810190610925565b90506000815160016102409190610b68565b67ffffffffffffffff81111561026657634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561028f578160200160208202803683370190505b50905060005b8251811015610310578281815181106102be57634e487b7160e01b600052603260045260246000fd5b60200260200101518282815181106102e657634e487b7160e01b600052603260045260246000fd5b6001600160a01b03909216602092830291909101909101528061030881610b9f565b915050610295565b5073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8183518151811061034757634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b0316815250506000815167ffffffffffffffff81111561039157634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156103ba578160200160208202803683370190505b50905060005b835181101561052c576000856001600160a01b031663c44b11f78584815181106103fa57634e487b7160e01b600052603260045260246000fd5b60200260200101516040518263ffffffff1660e01b815260040161041e9190610a6b565b60206040518083038186803b15801561043657600080fd5b505afa15801561044a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046e91906109d8565b9050600061047b826107c7565b5050509050806104ba5760008484815181106104a757634e487b7160e01b600052603260045260246000fd5b602002602001018181525050505061051a565b6104eb8a8685815181106104de57634e487b7160e01b600052603260045260246000fd5b60200260200101516106d7565b84848151811061050b57634e487b7160e01b600052603260045260246000fd5b60200260200101818152505050505b8061052481610b9f565b9150506103c0565b5061054b8773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6106d7565b8184518151811061056c57634e487b7160e01b600052603260045260246000fd5b6020908102919091010152909450925050505b9250929050565b606060006105948386610b80565b67ffffffffffffffff8111156105ba57634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156105e3578160200160208202803683370190505b50905060005b858110156106cd5760005b848110156106ba5761066988888481811061061f57634e487b7160e01b600052603260045260246000fd5b90506020020160208101906106349190610845565b87878481811061065457634e487b7160e01b600052603260045260246000fd5b90506020020160208101906100f19190610845565b83826106758886610b80565b61067f9190610b68565b8151811061069d57634e487b7160e01b600052603260045260246000fd5b6020908102919091010152806106b281610b9f565b9150506105f4565b50806106c581610b9f565b9150506105e9565b5095945050505050565b60006001600160a01b03821673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee141561070f57506001600160a01b038216316107c1565b610721826001600160a01b0316610103565b156107a9576040516370a0823160e01b81526001600160a01b038316906370a0823190610752908690600401610a6b565b60206040518083038186803b15801561076a57600080fd5b505afa15801561077e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a29190610a19565b90506107c1565b60405162461bcd60e51b815260040161006290610af2565b92915050565b51670100000000000000811615159167020000000000000082161515916704000000000000008116151591670800000000000000909116151590565b60008083601f840112610814578081fd5b50813567ffffffffffffffff81111561082b578182fd5b602083019150836020808302850101111561057f57600080fd5b600060208284031215610856578081fd5b813561086181610be6565b9392505050565b600060208284031215610879578081fd5b815161086181610be6565b60008060408385031215610896578081fd5b82356108a181610be6565b915060208301356108b181610be6565b809150509250929050565b600080600080604085870312156108d1578182fd5b843567ffffffffffffffff808211156108e8578384fd5b6108f488838901610803565b9096509450602087013591508082111561090c578384fd5b5061091987828801610803565b95989497509550505050565b60006020808385031215610937578182fd5b825167ffffffffffffffff8082111561094e578384fd5b818501915085601f830112610961578384fd5b81518181111561097357610973610bd0565b8381029150610983848301610b3e565b8181528481019084860184860187018a101561099d578788fd5b8795505b838610156109cb57805194506109b685610be6565b848352600195909501949186019186016109a1565b5098975050505050505050565b6000602082840312156109e9578081fd5b6040516020810181811067ffffffffffffffff82111715610a0c57610a0c610bd0565b6040529151825250919050565b600060208284031215610a2a578081fd5b5051919050565b6000815180845260208085019450808401835b83811015610a6057815187529582019590820190600101610a44565b509495945050505050565b6001600160a01b0391909116815260200190565b604080825283519082018190526000906020906060840190828701845b82811015610ac15781516001600160a01b031684529284019290840190600101610a9c565b50505083810382850152610ad58186610a31565b9695505050505050565b6000602082526108616020830184610a31565b6020808252600d908201526c24a72b20a624a22faa27a5a2a760991b604082015260600190565b602080825260029082015261191960f11b604082015260600190565b90815260200190565b60405181810167ffffffffffffffff81118282101715610b6057610b60610bd0565b604052919050565b60008219821115610b7b57610b7b610bba565b500190565b6000816000190483118215151615610b9a57610b9a610bba565b500290565b6000600019821415610bb357610bb3610bba565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610bfb57600080fd5b5056fea2646970667358221220873c2e6a693df9d09d57030cb9eea7a62b2855ed7b8b9eaef863cd8c47b5ead264736f6c63430008000033";
