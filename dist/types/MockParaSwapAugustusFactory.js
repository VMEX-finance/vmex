"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MockParaSwapAugustusFactory = void 0;
const contracts_1 = require("@ethersproject/contracts");
class MockParaSwapAugustusFactory extends contracts_1.ContractFactory {
    constructor(signer) {
        super(_abi, _bytecode, signer);
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static connect(address, signerOrProvider) {
        return new contracts_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.MockParaSwapAugustusFactory = MockParaSwapAugustusFactory;
const _abi = [
    {
        inputs: [],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "fromToken",
                type: "address",
            },
            {
                internalType: "address",
                name: "toToken",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "fromAmountMin",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "fromAmountMax",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "receivedAmount",
                type: "uint256",
            },
        ],
        name: "expectSwap",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "getTokenTransferProxy",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "fromToken",
                type: "address",
            },
            {
                internalType: "address",
                name: "toToken",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "fromAmount",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "toAmount",
                type: "uint256",
            },
        ],
        name: "swap",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x60a060405234801561001057600080fd5b5060405161001d9061004f565b604051809103906000f080158015610039573d6000803e3d6000fd5b5060601b6001600160601b03191660805261005c565b6104bb8061067a83390190565b60805160601c6105fa6100806000396000818160ec015261020201526105fa6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063b166d5f014610046578063d2c4b5981461005b578063fe02915614610079575b600080fd5b6100596100543660046103e2565b610099565b005b6100636100ea565b6040516100709190610455565b60405180910390f35b61008c6100873660046103a1565b61010e565b60405161007091906105bb565b60008054600160ff199091168117610100600160a81b0319166101006001600160a01b03988916021790915580546001600160a01b0319169490951693909317909355600255600391909155600455565b7f000000000000000000000000000000000000000000000000000000000000000090565b6000805460ff1661013a5760405162461bcd60e51b815260040161013190610533565b60405180910390fd5b6000546001600160a01b03868116610100909204161461016c5760405162461bcd60e51b81526004016101319061058c565b6001546001600160a01b038581169116146101995760405162461bcd60e51b81526004016101319061055f565b60025483101580156101ad57506003548311155b6101c95760405162461bcd60e51b8152600401610131906104fc565b8160045410156101eb5760405162461bcd60e51b8152600401610131906104ac565b604051630aed65f560e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906315dacbea9061023d908890339030908990600401610469565b600060405180830381600087803b15801561025757600080fd5b505af115801561026b573d6000803e3d6000fd5b50506004805460405163140e25ad60e31b81526001600160a01b038916945063a0712d68935061029b92016105bb565b602060405180830381600087803b1580156102b557600080fd5b505af11580156102c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ed919061042e565b506004805460405163a9059cbb60e01b81526001600160a01b0387169263a9059cbb9261031c92339201610493565b602060405180830381600087803b15801561033657600080fd5b505af115801561034a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036e919061042e565b50506000805460ff19169055600454949350505050565b80356001600160a01b038116811461039c57600080fd5b919050565b600080600080608085870312156103b6578384fd5b6103bf85610385565b93506103cd60208601610385565b93969395505050506040820135916060013590565b600080600080600060a086880312156103f9578081fd5b61040286610385565b945061041060208701610385565b94979496505050506040830135926060810135926080909101359150565b60006020828403121561043f578081fd5b8151801515811461044e578182fd5b9392505050565b6001600160a01b0391909116815260200190565b6001600160a01b039485168152928416602084015292166040820152606081019190915260800190565b6001600160a01b03929092168252602082015260400190565b60208082526030908201527f526563656976656420616d6f756e74206f6620746f6b656e7320617265206c6560408201526f1cdcc81d1a185b88195e1c1958dd195960821b606082015260800190565b60208082526018908201527f46726f6d20616d6f756e74206f7574206f662072616e67650000000000000000604082015260600190565b60208082526012908201527104e6f7420657870656374696e6720737761760741b604082015260600190565b6020808252601390820152722ab732bc3832b1ba32b2103a37903a37b5b2b760691b604082015260600190565b6020808252601590820152742ab732bc3832b1ba32b210333937b6903a37b5b2b760591b604082015260600190565b9081526020019056fea26469706673582212205f23d902651023524006953fbbf0787fda08b8e3ef6c2345b2183ba5e8e7d9da64736f6c63430008000033608060405234801561001057600080fd5b50600061001b61006a565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061006e565b3390565b61043e8061007d6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806315dacbea14610051578063715018a6146100665780638da5cb5b1461006e578063f2fde38b1461008c575b600080fd5b61006461005f3660046102eb565b61009f565b005b610064610166565b6100766101e5565b6040516100839190610355565b60405180910390f35b61006461009a3660046102ca565b6101f4565b6100a76102aa565b6000546001600160a01b039081169116146100dd5760405162461bcd60e51b81526004016100d4906103d3565b60405180910390fd5b6040516323b872dd60e01b81526001600160a01b038516906323b872dd9061010d90869086908690600401610369565b602060405180830381600087803b15801561012757600080fd5b505af115801561013b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015f9190610335565b5050505050565b61016e6102aa565b6000546001600160a01b0390811691161461019b5760405162461bcd60e51b81526004016100d4906103d3565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6101fc6102aa565b6000546001600160a01b039081169116146102295760405162461bcd60e51b81526004016100d4906103d3565b6001600160a01b03811661024f5760405162461bcd60e51b81526004016100d49061038d565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b80356001600160a01b03811681146102c557600080fd5b919050565b6000602082840312156102db578081fd5b6102e4826102ae565b9392505050565b60008060008060808587031215610300578283fd5b610309856102ae565b9350610317602086016102ae565b9250610325604086016102ae565b9396929550929360600135925050565b600060208284031215610346578081fd5b815180151581146102e4578182fd5b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea26469706673582212207b42130a80f7a4287df512046da353e9bcbe451d910f40eaa87b000944e8152e64736f6c63430008000033";
