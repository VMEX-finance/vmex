/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { MockFlashLoanReceiver } from "./MockFlashLoanReceiver";

export class MockFlashLoanReceiverFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    provider: string,
    overrides?: Overrides
  ): Promise<MockFlashLoanReceiver> {
    return super.deploy(
      provider,
      overrides || {}
    ) as Promise<MockFlashLoanReceiver>;
  }
  getDeployTransaction(
    provider: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(provider, overrides || {});
  }
  attach(address: string): MockFlashLoanReceiver {
    return super.attach(address) as MockFlashLoanReceiver;
  }
  connect(signer: Signer): MockFlashLoanReceiverFactory {
    return super.connect(signer) as MockFlashLoanReceiverFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockFlashLoanReceiver {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockFlashLoanReceiver;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ILendingPoolAddressesProvider",
        name: "provider",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "_assets",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_premiums",
        type: "uint256[]",
      },
    ],
    name: "ExecutedWithFail",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "_assets",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_premiums",
        type: "uint256[]",
      },
    ],
    name: "ExecutedWithSuccess",
    type: "event",
  },
  {
    inputs: [],
    name: "ADDRESSES_PROVIDER",
    outputs: [
      {
        internalType: "contract ILendingPoolAddressesProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LENDING_POOL",
    outputs: [
      {
        internalType: "contract ILendingPool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "amountToApprove",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "tranche",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
        ],
        internalType: "struct DataTypes.TrancheAddress[]",
        name: "assets",
        type: "tuple[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "premiums",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
    ],
    name: "executeOperation",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountToApprove",
        type: "uint256",
      },
    ],
    name: "setAmountToApprove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "fail",
        type: "bool",
      },
    ],
    name: "setFailExecutionTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "flag",
        type: "bool",
      },
    ],
    name: "setSimulateEOA",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "simulateEOA",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610ca1380380610ca183398101604081905261002f916100d6565b80806001600160a01b03166080816001600160a01b031660601b81525050806001600160a01b0316630261bf8b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561008657600080fd5b505afa15801561009a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100be91906100d6565b60601b6001600160601b03191660a052506101119050565b6000602082840312156100e7578081fd5b81516100f2816100f9565b9392505050565b6001600160a01b038116811461010e57600080fd5b50565b60805160601c60a05160601c610b5e6101436000396000818161017801526104950152600061012d0152610b5e6000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063bb271c4d1161005b578063bb271c4d146100dd578063bf443f85146100f2578063c4783a4714610105578063e9a6a25b1461011857610088565b80630542975c1461008d578063388f70f1146100ab5780634444f331146100c0578063b4dcfc77146100d5575b600080fd5b61009561012b565b6040516100a2919061097f565b60405180910390f35b6100be6100b93660046108dd565b61014f565b005b6100c861016d565b6040516100a29190610a21565b610095610176565b6100e561019a565b6040516100a29190610a61565b6100be610100366004610915565b6101a0565b6100c8610113366004610784565b6101a5565b6100be6101263660046108dd565b61058b565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008054911515600160a01b0260ff60a01b19909216919091179055565b60025460ff1690565b7f000000000000000000000000000000000000000000000000000000000000000081565b60015490565b600155565b60008054600160a01b900460ff1615610208577f9972b212e52913783072b960dd41527ae8b6e609d017b64039758dda0ce412786101e28761059e565b86866040516101f3939291906109ac565b60405180910390a15060025460ff1615610582565b60005b865181101561053a57600087828151811061023657634e487b7160e01b600052603260045260246000fd5b602002602001015160200151905087828151811061026457634e487b7160e01b600052603260045260246000fd5b6020026020010151602001516001600160a01b03166370a08231306040518263ffffffff1660e01b815260040161029b919061097f565b60206040518083038186803b1580156102b357600080fd5b505afa1580156102c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102eb919061092d565b87838151811061030b57634e487b7160e01b600052603260045260246000fd5b6020026020010151111561033a5760405162461bcd60e51b815260040161033190610a2c565b60405180910390fd5b6000600154600014156103ad576103a887848151811061036a57634e487b7160e01b600052603260045260246000fd5b602002602001015189858151811061039257634e487b7160e01b600052603260045260246000fd5b602002602001015161068390919063ffffffff16565b6103b1565b6001545b9050816001600160a01b031663a0712d688885815181106103e257634e487b7160e01b600052603260045260246000fd5b60200260200101516040518263ffffffff1660e01b81526004016104069190610a61565b602060405180830381600087803b15801561042057600080fd5b505af1158015610434573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045891906108f9565b5088838151811061047957634e487b7160e01b600052603260045260246000fd5b6020026020010151602001516001600160a01b031663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000836040518363ffffffff1660e01b81526004016104d2929190610993565b602060405180830381600087803b1580156104ec57600080fd5b505af1158015610500573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052491906108f9565b505050808061053290610ad0565b91505061020b565b507fbd6b6bfac59612765a81cc4fdee74ab4859671fa14a562056f9eea438735a78a6105658761059e565b8686604051610576939291906109ac565b60405180910390a15060015b95945050505050565b6002805460ff1916911515919091179055565b805160609060008167ffffffffffffffff8111156105cc57634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156105f5578160200160208202803683370190505b50905060005b828110156106795784818151811061062357634e487b7160e01b600052603260045260246000fd5b60200260200101516020015182828151811061064f57634e487b7160e01b600052603260045260246000fd5b6001600160a01b03909216602092830291909101909101528061067181610ad0565b9150506105fb565b509150505b919050565b600061068f8284610ab8565b9392505050565b80356001600160a01b038116811461067e57600080fd5b600082601f8301126106bd578081fd5b813560206106d26106cd83610a94565b610a6a565b82815281810190858301838502870184018810156106ee578586fd5b855b8581101561070c578135845292840192908401906001016106f0565b5090979650505050505050565b600082601f830112610729578081fd5b813567ffffffffffffffff81111561074357610743610b01565b610756601f8201601f1916602001610a6a565b81815284602083860101111561076a578283fd5b816020850160208301379081016020019190915292915050565b600080600080600060a0868803121561079b578081fd5b67ffffffffffffffff80873511156107b1578182fd5b8635870188601f8201126107c3578283fd5b803560206107d36106cd83610a94565b8281528181019084830160408502860184018e10156107f0578788fd5b8795505b8486101561085f576040818f03121561080b578788fd5b60405160408101818110898211171561082657610826610b01565b604052813560ff8116811461083957898afd5b8152610846828601610696565b81860152835260019590950194918301916040016107f4565b5099505089013591505081811115610875578283fd5b61088189828a016106ad565b955050604087013581811115610895578283fd5b6108a189828a016106ad565b9450506108b060608801610696565b92506080870135818111156108c3578283fd5b6108cf89828a01610719565b925050509295509295909350565b6000602082840312156108ee578081fd5b813561068f81610b17565b60006020828403121561090a578081fd5b815161068f81610b17565b600060208284031215610926578081fd5b5035919050565b60006020828403121561093e578081fd5b5051919050565b6000815180845260208085019450808401835b8381101561097457815187529582019590820190600101610958565b509495945050505050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b606080825284519082018190526000906020906080840190828801845b828110156109ee5781516001600160a01b0316845292840192908401906001016109c9565b50505083810382850152610a028187610945565b9150508281036040840152610a178185610945565b9695505050505050565b901515815260200190565b6020808252818101527f496e76616c69642062616c616e636520666f722074686520636f6e7472616374604082015260600190565b90815260200190565b60405181810167ffffffffffffffff81118282101715610a8c57610a8c610b01565b604052919050565b600067ffffffffffffffff821115610aae57610aae610b01565b5060209081020190565b60008219821115610acb57610acb610aeb565b500190565b6000600019821415610ae457610ae4610aeb565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b8015158114610b2557600080fd5b5056fea26469706673582212207b3d80cb225c9cc91e5cc248904d6b69a948431a1647c007d6b0486d2e8e565c64736f6c63430008000033";
