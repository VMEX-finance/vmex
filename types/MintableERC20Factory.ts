/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BigNumberish } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { MintableERC20 } from "./MintableERC20";

export class MintableERC20Factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    name: string,
    symbol: string,
    decimals: BigNumberish,
    overrides?: Overrides
  ): Promise<MintableERC20> {
    return super.deploy(
      name,
      symbol,
      decimals,
      overrides || {}
    ) as Promise<MintableERC20>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    decimals: BigNumberish,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, decimals, overrides || {});
  }
  attach(address: string): MintableERC20 {
    return super.attach(address) as MintableERC20;
  }
  connect(signer: Signer): MintableERC20Factory {
    return super.connect(signer) as MintableERC20Factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MintableERC20 {
    return new Contract(address, _abi, signerOrProvider) as MintableERC20;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000d7e38038062000d7e8339810160408190526200003491620001ee565b8251839083906200004d9060039060208501906200009d565b508051620000639060049060208401906200009d565b50506005805460ff19166012179055506200007e8162000087565b505050620002c2565b6005805460ff191660ff92909216919091179055565b828054620000ab906200026f565b90600052602060002090601f016020900481019282620000cf57600085556200011a565b82601f10620000ea57805160ff19168380011785556200011a565b828001600101855582156200011a579182015b828111156200011a578251825591602001919060010190620000fd565b50620001289291506200012c565b5090565b5b808211156200012857600081556001016200012d565b600082601f83011262000154578081fd5b81516001600160401b0380821115620001715762000171620002ac565b6040516020601f8401601f1916820181018381118382101715620001995762000199620002ac565b6040528382528584018101871015620001b0578485fd5b8492505b83831015620001d35785830181015182840182015291820191620001b4565b83831115620001e457848185840101525b5095945050505050565b60008060006060848603121562000203578283fd5b83516001600160401b03808211156200021a578485fd5b620002288783880162000143565b945060208601519150808211156200023e578384fd5b506200024d8682870162000143565b925050604084015160ff8116811462000264578182fd5b809150509250925092565b6002810460018216806200028457607f821691505b60208210811415620002a657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b610aac80620002d26000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a082311461014757806395d89b411461015a578063a0712d6814610162578063a457c2d714610175578063a9059cbb14610188578063dd62ed3e1461019b576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100f757806323b872dd1461010c578063313ce5671461011f5780633950935114610134575b600080fd5b6100c16101ae565b6040516100ce91906107f5565b60405180910390f35b6100ea6100e53660046107a9565b610240565b6040516100ce91906107ea565b6100ff61025d565b6040516100ce919061098d565b6100ea61011a36600461076e565b610263565b6101276102ea565b6040516100ce9190610996565b6100ea6101423660046107a9565b6102f3565b6100ff610155366004610722565b610341565b6100c1610360565b6100ea6101703660046107d2565b61036f565b6100ea6101833660046107a9565b61038a565b6100ea6101963660046107a9565b6103f2565b6100ff6101a936600461073c565b610406565b6060600380546101bd906109c8565b80601f01602080910402602001604051908101604052809291908181526020018280546101e9906109c8565b80156102365780601f1061020b57610100808354040283529160200191610236565b820191906000526020600020905b81548152906001019060200180831161021957829003601f168201915b5050505050905090565b600061025461024d610431565b8484610435565b50600192915050565b60025490565b60006102708484846104f2565b6102e08461027c610431565b6102db85604051806060016040528060288152602001610a2a602891396001600160a01b038a166000908152600160205260408120906102ba610431565b6001600160a01b031681526020810191909152604001600020549190610607565b610435565b5060019392505050565b60055460ff1690565b6000610254610300610431565b846102db8560016000610311610431565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610633565b6001600160a01b0381166000908152602081905260409020545b919050565b6060600480546101bd906109c8565b600061038261037c610431565b83610646565b506001919050565b6000610254610397610431565b846102db85604051806060016040528060258152602001610a5260259139600160006103c1610431565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190610607565b60006102546103ff610431565b84846104f2565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166104645760405162461bcd60e51b815260040161045b90610912565b60405180910390fd5b6001600160a01b03821661048a5760405162461bcd60e51b815260040161045b9061088b565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906104e590859061098d565b60405180910390a3505050565b6001600160a01b0383166105185760405162461bcd60e51b815260040161045b906108cd565b6001600160a01b03821661053e5760405162461bcd60e51b815260040161045b90610848565b610549838383610706565b61058681604051806060016040528060268152602001610a04602691396001600160a01b0386166000908152602081905260409020549190610607565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546105b59082610633565b6001600160a01b0380841660008181526020819052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906104e590859061098d565b6000818484111561062b5760405162461bcd60e51b815260040161045b91906107f5565b505050900390565b600061063f82846109a4565b9392505050565b6001600160a01b03821661066c5760405162461bcd60e51b815260040161045b90610956565b61067860008383610706565b6002546106859082610633565b6002556001600160a01b0382166000908152602081905260409020546106ab9082610633565b6001600160a01b0383166000818152602081905260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906106fa90859061098d565b60405180910390a35050565b505050565b80356001600160a01b038116811461035b57600080fd5b600060208284031215610733578081fd5b61063f8261070b565b6000806040838503121561074e578081fd5b6107578361070b565b91506107656020840161070b565b90509250929050565b600080600060608486031215610782578081fd5b61078b8461070b565b92506107996020850161070b565b9150604084013590509250925092565b600080604083850312156107bb578182fd5b6107c48361070b565b946020939093013593505050565b6000602082840312156107e3578081fd5b5035919050565b901515815260200190565b6000602080835283518082850152825b8181101561082157858101830151858201604001528201610805565b818111156108325783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b600082198211156109c357634e487b7160e01b81526011600452602481fd5b500190565b6002810460018216806109dc57607f821691505b602082108114156109fd57634e487b7160e01b600052602260045260246000fd5b5091905056fe45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220f9fe1ee8188a37ca7c7ce80874dee4f27ddfb2872e6f139012e6d4553b24613d64736f6c63430008000033";
