/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { CurvePool } from "./CurvePool";

export class CurvePoolFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<CurvePool> {
    return super.deploy(overrides || {}) as Promise<CurvePool>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CurvePool {
    return super.attach(address) as CurvePool;
  }
  connect(signer: Signer): CurvePoolFactory {
    return super.connect(signer) as CurvePoolFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CurvePool {
    return new Contract(address, _abi, signerOrProvider) as CurvePool;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "arg0",
        type: "uint256",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "out",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "arg0",
        type: "uint256",
      },
    ],
    name: "coins",
    outputs: [
      {
        internalType: "address",
        name: "out",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060e08061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80634903b0d1146037578063c661065714605a575b600080fd5b604660423660046076565b6070565b6040516051919060a1565b60405180910390f35b606560423660046076565b60405160519190608d565b50600090565b6000602082840312156086578081fd5b5035919050565b6001600160a01b0391909116815260200190565b9081526020019056fea2646970667358221220dd99019eee3f49be01f936b1ccd00e1cd0ff6e05713c2cf1c9f082e0eaaa06be64736f6c63430008000033";
