/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { InitializableUpgradeabilityProxy } from "./InitializableUpgradeabilityProxy";

export class InitializableUpgradeabilityProxyFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<InitializableUpgradeabilityProxy> {
    return super.deploy(
      overrides || {}
    ) as Promise<InitializableUpgradeabilityProxy>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): InitializableUpgradeabilityProxy {
    return super.attach(address) as InitializableUpgradeabilityProxy;
  }
  connect(signer: Signer): InitializableUpgradeabilityProxyFactory {
    return super.connect(signer) as InitializableUpgradeabilityProxyFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): InitializableUpgradeabilityProxy {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as InitializableUpgradeabilityProxy;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_logic",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506103f4806100206000396000f3fe60806040526004361061001e5760003560e01c8063d1f5789414610028575b61002661003b565b005b61002661003636600461022e565b610055565b610043610053565b61005361004e610157565b61017c565b565b600061005f610157565b6001600160a01b03161461007257600080fd5b61009d60017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd610385565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc146100d957634e487b7160e01b600052600160045260246000fd5b6100e2826101a0565b805115610153576000826001600160a01b03168260405161010391906102ef565b600060405180830381855af49150503d806000811461013e576040519150601f19603f3d011682016040523d82523d6000602084013e610143565b606091505b505090508061015157600080fd5b505b5050565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b3660008037600080366000845af43d6000803e80801561019b573d6000f35b3d6000fd5b6101a9816101f2565b6101ce5760405162461bcd60e51b81526004016101c590610328565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061022657508115155b949350505050565b60008060408385031215610240578182fd5b82356001600160a01b0381168114610256578283fd5b915060208381013567ffffffffffffffff80821115610273578384fd5b818601915086601f830112610286578384fd5b813581811115610298576102986103a8565b604051601f8201601f19168101850183811182821017156102bb576102bb6103a8565b60405281815283820185018910156102d1578586fd5b81858501868301378585838301015280955050505050509250929050565b60008251815b8181101561030f57602081860181015185830152016102f5565b8181111561031d5782828501525b509190910192915050565b6020808252603b908201527f43616e6e6f742073657420612070726f787920696d706c656d656e746174696f60408201527f6e20746f2061206e6f6e2d636f6e747261637420616464726573730000000000606082015260800190565b6000828210156103a357634e487b7160e01b81526011600452602481fd5b500390565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220ef26d39bbfd0f5d8809491bf8590ff0495efa8d2e3da16018e3a8fb45f3e118864736f6c63430008000033";
