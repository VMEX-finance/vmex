/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import { Contract, ContractTransaction } from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface ILendingPoolConfiguratorInterface extends ethers.utils.Interface {
  functions: {};

  events: {
    "ATokenUpgraded(address,address,address)": EventFragment;
    "AssetDataChanged(address,uint8)": EventFragment;
    "BorrowingDisabledOnReserve(address)": EventFragment;
    "BorrowingEnabledOnReserve(address,bool)": EventFragment;
    "CollateralConfigurationChanged(address,uint256,uint256,uint256)": EventFragment;
    "ReserveActivated(address)": EventFragment;
    "ReserveDeactivated(address)": EventFragment;
    "ReserveDecimalsChanged(address,uint256)": EventFragment;
    "ReserveInitialized(address,address,address,address,address)": EventFragment;
    "ReserveInterestRateStrategyChanged(address,address)": EventFragment;
    "StableDebtTokenUpgraded(address,address,address)": EventFragment;
    "StableRateDisabledOnReserve(address)": EventFragment;
    "StableRateEnabledOnReserve(address)": EventFragment;
    "StrategyAdded(address,uint64,address)": EventFragment;
    "VariableDebtTokenUpgraded(address,address,address)": EventFragment;
    "WithdrawFromStrategy(address,uint64,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "ATokenUpgraded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "AssetDataChanged"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "BorrowingDisabledOnReserve"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "BorrowingEnabledOnReserve"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "CollateralConfigurationChanged"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ReserveActivated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ReserveDeactivated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ReserveDecimalsChanged"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ReserveInitialized"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ReserveInterestRateStrategyChanged"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "StableDebtTokenUpgraded"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "StableRateDisabledOnReserve"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "StableRateEnabledOnReserve"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "StrategyAdded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "VariableDebtTokenUpgraded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "WithdrawFromStrategy"): EventFragment;
}

export class ILendingPoolConfigurator extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: ILendingPoolConfiguratorInterface;

  functions: {};

  callStatic: {};

  filters: {
    ATokenUpgraded(
      asset: string | null,
      proxy: string | null,
      implementation: string | null
    ): EventFilter;

    AssetDataChanged(asset: string | null, _assetType: null): EventFilter;

    BorrowingDisabledOnReserve(asset: string | null): EventFilter;

    BorrowingEnabledOnReserve(
      asset: string | null,
      stableRateEnabled: null
    ): EventFilter;

    CollateralConfigurationChanged(
      asset: string | null,
      ltv: null,
      liquidationThreshold: null,
      liquidationBonus: null
    ): EventFilter;

    ReserveActivated(asset: string | null): EventFilter;

    ReserveDeactivated(asset: string | null): EventFilter;

    ReserveDecimalsChanged(asset: string | null, decimals: null): EventFilter;

    ReserveInitialized(
      asset: string | null,
      aToken: string | null,
      stableDebtToken: null,
      variableDebtToken: null,
      interestRateStrategyAddress: null
    ): EventFilter;

    ReserveInterestRateStrategyChanged(
      asset: string | null,
      strategy: null
    ): EventFilter;

    StableDebtTokenUpgraded(
      asset: string | null,
      proxy: string | null,
      implementation: string | null
    ): EventFilter;

    StableRateDisabledOnReserve(asset: string | null): EventFilter;

    StableRateEnabledOnReserve(asset: string | null): EventFilter;

    StrategyAdded(asset: null, trancheId: null, strategy: null): EventFilter;

    VariableDebtTokenUpgraded(
      asset: string | null,
      proxy: string | null,
      implementation: string | null
    ): EventFilter;

    WithdrawFromStrategy(
      asset: null,
      trancheId: null,
      amount: null
    ): EventFilter;
  };

  estimateGas: {};

  populateTransaction: {};
}
