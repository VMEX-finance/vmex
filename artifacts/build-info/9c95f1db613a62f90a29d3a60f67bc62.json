{"id":"9c95f1db613a62f90a29d3a60f67bc62","_format":"hh-sol-build-info-1","solcVersion":"0.8.0","solcLongVersion":"0.8.0+commit.c7dfd78e","input":{"language":"Solidity","sources":{"contracts/oracles/CurveWrapper.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity >=0.8.0;\n\nimport {Ownable} from \"../dependencies/openzeppelin/contracts/Ownable.sol\";\nimport {IERC20} from \"../dependencies/openzeppelin/contracts/IERC20.sol\";\n\nimport {IPriceOracleGetter} from \"../interfaces/IPriceOracleGetter.sol\";\nimport {SafeERC20} from \"../dependencies/openzeppelin/contracts/SafeERC20.sol\";\nimport {AaveOracle} from \"../misc/AaveOracle.sol\";\nimport {ILendingPoolAddressesProvider} from \"../interfaces/ILendingPoolAddressesProvider.sol\";\nimport {ICurveOracle} from \"./interfaces/ICurveOracle.sol\";\n\n// import {IPriceOracleGetter} from \"../interfaces/IPriceOracleGetter.sol\";\n// import {ICurveAddressProvider} from \"./interfaces/ICurveAddressProvider.sol\";\n// import {ICurveRegistry} from \"./interfaces/ICurveRegistry.sol\";\n\n/// @title AaveOracle\n/// @author Aave\n/// @notice Proxy smart contract to get the price of an asset from a price source, with Chainlink Aggregator\n///         smart contracts as primary option\n/// - If the returned price by a Chainlink aggregator is <= 0, the call is forwarded to a fallbackOracle\n/// - Owned by the Aave governance system, allowed to add sources for assets, replace them\n///   and change the fallbackOracle\n\n//TODO: this contract needs the addressprovider contract to get the addressprovider of the Curve pools (we don't know what network yet)\ncontract CurveWrapper is IPriceOracleGetter, Ownable {\n    using SafeERC20 for IERC20;\n\n    event BaseCurrencySet(\n        address indexed baseCurrency,\n        uint256 baseCurrencyUnit\n    );\n    event AssetSourceUpdated(address indexed asset, address indexed source);\n    event FallbackOracleUpdated(address indexed fallbackOracle);\n\n    ILendingPoolAddressesProvider internal _addressesProvider;\n    IPriceOracleGetter private _fallbackOracle;\n    address public immutable BASE_CURRENCY;\n    uint256 public immutable BASE_CURRENCY_UNIT;\n    mapping(address => address) internal lpTokenToPool;\n    mapping(address => uint256) internal numCoins; //pool address to number of coins\n    //underlyingCoins[tricrypto2 pool add][0] gets the address of the first underlying coin\n    mapping(address => mapping(uint256 => address)) internal underlyingCoins;\n\n    /// @notice Constructor\n    /// @param addressProvider The address of the vmex address provider (not the curve address provider)\n    /// @param fallbackOracle The address of the fallback oracle to use if the data of an\n    ///        aggregator is not consistent\n    /// @param baseCurrency the base currency used for the price quotes. If USD is used, base currency is 0x0\n    /// @param baseCurrencyUnit the unit of the base currency\n    constructor(\n        address addressProvider,\n        address fallbackOracle, //this will likely not be set for the Curve wrappers, maybe can use the fallback oracles from AaveOracle, but if the pool price cannot be determined then it doesn't matter if the other asset prices can be determined\n        address baseCurrency,\n        uint256 baseCurrencyUnit\n    ) public {\n        _addressesProvider = ILendingPoolAddressesProvider(addressProvider);\n        _setFallbackOracle(fallbackOracle);\n        BASE_CURRENCY = baseCurrency;\n        BASE_CURRENCY_UNIT = baseCurrencyUnit;\n        initializeMappings();\n\n        emit BaseCurrencySet(baseCurrency, baseCurrencyUnit);\n    }\n\n    function setAddressProvider(address addressProvider) external onlyOwner {\n        _addressesProvider = ILendingPoolAddressesProvider(addressProvider);\n    }\n\n    function initializeMappings() internal {\n        //Tricrypto2\n        lpTokenToPool[\n            0xc4AD29ba4B3c580e6D59105FFf484999997675Ff\n        ] = 0xD51a44d3FaE010294C616388b506AcdA1bfAAE46; //Tricrypto2\n        numCoins[0xD51a44d3FaE010294C616388b506AcdA1bfAAE46] = 3; //3 coins in tricrypto2\n        underlyingCoins[0xD51a44d3FaE010294C616388b506AcdA1bfAAE46][\n            0\n        ] = 0xdAC17F958D2ee523a2206206994597C13D831ec7; //first underlying coin is USDT\n        underlyingCoins[0xD51a44d3FaE010294C616388b506AcdA1bfAAE46][\n            1\n        ] = 0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599; //first underlying coin is WBTC\n        underlyingCoins[0xD51a44d3FaE010294C616388b506AcdA1bfAAE46][\n            2\n        ] = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2; //first underlying coin is WETH\n\n        //3pool\n        lpTokenToPool[\n            0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490\n        ] = 0xbEbc44782C7dB0a1A60Cb6fe97d0b483032FF1C7;\n        numCoins[0xbEbc44782C7dB0a1A60Cb6fe97d0b483032FF1C7] = 3; //3 coins in tricrypto2\n        underlyingCoins[0xbEbc44782C7dB0a1A60Cb6fe97d0b483032FF1C7][\n            0\n        ] = 0x6B175474E89094C44Da98b954EedeAC495271d0F; //first underlying coin is DAI\n        underlyingCoins[0xbEbc44782C7dB0a1A60Cb6fe97d0b483032FF1C7][\n            1\n        ] = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48; //first underlying coin is USDC\n        underlyingCoins[0xbEbc44782C7dB0a1A60Cb6fe97d0b483032FF1C7][\n            2\n        ] = 0xdAC17F958D2ee523a2206206994597C13D831ec7; //first underlying coin is USDT\n\n        //StethEth\n        lpTokenToPool[\n            0x06325440D014e39736583c165C2963BA99fAf14E\n        ] = 0xDC24316b9AE028F1497c275EB9192a3Ea0f67022;\n        numCoins[0xDC24316b9AE028F1497c275EB9192a3Ea0f67022] = 2; //2 coins in StethEth\n        underlyingCoins[0xDC24316b9AE028F1497c275EB9192a3Ea0f67022][\n            0\n        ] = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2; //first underlying coin is WETH\n        underlyingCoins[0xDC24316b9AE028F1497c275EB9192a3Ea0f67022][\n            1\n        ] = 0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84; //first underlying coin is Steth\n\n        //fraxusdc\n        lpTokenToPool[\n            0x3175Df0976dFA876431C2E9eE6Bc45b65d3473CC\n        ] = 0xDcEF968d416a41Cdac0ED8702fAC8128A64241A2;\n        numCoins[0xDcEF968d416a41Cdac0ED8702fAC8128A64241A2] = 2; //2 coins in fraxusdc\n        underlyingCoins[0xDcEF968d416a41Cdac0ED8702fAC8128A64241A2][\n            0\n        ] = 0x853d955aCEf822Db058eb8505911ED77F175b99e; //first underlying coin is frax\n        underlyingCoins[0xDcEF968d416a41Cdac0ED8702fAC8128A64241A2][\n            1\n        ] = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48; //first underlying coin is usdc\n\n        //frax3crv\n        lpTokenToPool[\n            0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B\n        ] = 0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B; //same pool and token addresses\n        numCoins[0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B] = 2; //2 coins in frax + 3crv\n        underlyingCoins[0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B][\n            0\n        ] = 0x853d955aCEf822Db058eb8505911ED77F175b99e; //first underlying coin is frax\n        underlyingCoins[0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B][\n            1\n        ] = 0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490; //first underlying coin is 3crv\n    }\n\n    /// @notice Sets the fallbackOracle\n    /// - Callable only by the Aave governance\n    /// @param fallbackOracle The address of the fallbackOracle\n    function setFallbackOracle(address fallbackOracle) external onlyOwner {\n        _setFallbackOracle(fallbackOracle);\n    }\n\n    /// @notice Internal function to set the fallbackOracle\n    /// @param fallbackOracle The address of the fallbackOracle\n    function _setFallbackOracle(address fallbackOracle) internal {\n        _fallbackOracle = IPriceOracleGetter(fallbackOracle);\n        emit FallbackOracleUpdated(fallbackOracle);\n    }\n\n    /// @notice Gets an asset price by address\n    /// @param asset The asset address\n    function getAssetPrice(\n        address asset //this will be the token address, not the pool address\n    ) public view override returns (uint256) {\n        if (asset == BASE_CURRENCY) {\n            return BASE_CURRENCY_UNIT;\n        }\n        //need to import the curve address provider interface X\n        // ICurveAddressProvider provider =\n        //     ICurveAddressProvider(_addressesProvider.getCurveAddressProvider());\n        //need to import the registry interface Y\n        // ICurveRegistry registry = ICurveRegistry(provider.get_registry()); //registry contains the addresses for the pools\n\n        address pool = lpTokenToPool[asset]; //asset is the LP token\n\n        //TODO: check if we should use underlying or not. [0] is not underlying, [1] includes underlying\n        uint256 num_coins = numCoins[pool];\n\n        uint256[] memory prices = new uint256[](num_coins);\n\n        for (uint256 i = 0; i < num_coins; i++) {\n            address underlying = underlyingCoins[pool][i];\n            IPriceOracleGetter aave_oracle;\n            if (underlying == 0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490) {\n                //this is the only underlying in our supported assets that is a curve token instead of aave token\n                aave_oracle = IPriceOracleGetter(\n                    _addressesProvider.getCurvePriceOracleWrapper()\n                );\n            } else {\n                aave_oracle = IPriceOracleGetter(\n                    _addressesProvider.getAavePriceOracle()\n                );\n            }\n\n            require(underlying != address(0), \"underlying token is null\");\n            prices[i] = aave_oracle.getAssetPrice(underlying);\n            require(prices[i] > 0, \"aave oracle encountered an error\");\n        }\n\n        ICurveOracle oracle = ICurveOracle(\n            _addressesProvider.getCurvePriceOracle()\n        );\n\n        uint256 price = oracle.get_price(pool, prices);\n        //TODO: incorporate backup oracles here?\n        require(price > 0, \"Curve oracle encountered an error\");\n        return price;\n    }\n\n    /// @notice Gets a list of prices from a list of assets addresses\n    /// @param assets The list of assets addresses\n    function getAssetsPrices(address[] calldata assets)\n        external\n        view\n        returns (uint256[] memory)\n    {\n        uint256[] memory prices = new uint256[](assets.length);\n        for (uint256 i = 0; i < assets.length; i++) {\n            prices[i] = getAssetPrice(assets[i]);\n        }\n        return prices;\n    }\n\n    /// @notice Gets the address of the fallback oracle\n    /// @return address The addres of the fallback oracle\n    function getFallbackOracle() external view returns (address) {\n        return address(_fallbackOracle);\n    }\n}\n"},"contracts/dependencies/openzeppelin/contracts/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity >=0.8.0;\n\nimport \"./Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\ncontract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(\n        address indexed previousOwner,\n        address indexed newOwner\n    );\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(\n            newOwner != address(0),\n            \"Ownable: new owner is the zero address\"\n        );\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n"},"contracts/dependencies/openzeppelin/contracts/IERC20.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity >=0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount)\n        external\n        returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender)\n        external\n        view\n        returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n}\n"},"contracts/interfaces/IPriceOracleGetter.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity >=0.8.0;\n\n/**\n * @title IPriceOracleGetter interface\n * @notice Interface for the Aave price oracle.\n **/\n\ninterface IPriceOracleGetter {\n    /**\n     * @dev returns the asset price in ETH\n     * @param asset the address of the asset\n     * @return the ETH price of the asset\n     **/\n    function getAssetPrice(address asset) external view returns (uint256);\n}\n"},"contracts/dependencies/openzeppelin/contracts/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.8.0;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {SafeMath} from \"./SafeMath.sol\";\nimport {Address} from \"./Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        callOptionalReturn(\n            token,\n            abi.encodeWithSelector(token.transfer.selector, to, value)\n        );\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        callOptionalReturn(\n            token,\n            abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\n        );\n    }\n\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        callOptionalReturn(\n            token,\n            abi.encodeWithSelector(token.approve.selector, spender, value)\n        );\n    }\n\n    function callOptionalReturn(IERC20 token, bytes memory data) private {\n        require(address(token).isContract(), \"SafeERC20: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = address(token).call(data);\n        require(success, \"SafeERC20: low-level call failed\");\n\n        if (returndata.length > 0) {\n            // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(\n                abi.decode(returndata, (bool)),\n                \"SafeERC20: ERC20 operation did not succeed\"\n            );\n        }\n    }\n}\n"},"contracts/misc/AaveOracle.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity >=0.8.0;\n\nimport {Ownable} from \"../dependencies/openzeppelin/contracts/Ownable.sol\";\nimport {IERC20} from \"../dependencies/openzeppelin/contracts/IERC20.sol\";\n\nimport {IPriceOracleGetter} from \"../interfaces/IPriceOracleGetter.sol\";\nimport {IChainlinkAggregator} from \"../interfaces/IChainlinkAggregator.sol\";\nimport {SafeERC20} from \"../dependencies/openzeppelin/contracts/SafeERC20.sol\";\n\n/// @title AaveOracle\n/// @author Aave\n/// @notice Proxy smart contract to get the price of an asset from a price source, with Chainlink Aggregator\n///         smart contracts as primary option\n/// - If the returned price by a Chainlink aggregator is <= 0, the call is forwarded to a fallbackOracle\n/// - Owned by the Aave governance system, allowed to add sources for assets, replace them\n///   and change the fallbackOracle\ncontract AaveOracle is IPriceOracleGetter, Ownable {\n    using SafeERC20 for IERC20;\n\n    event BaseCurrencySet(\n        address indexed baseCurrency,\n        uint256 baseCurrencyUnit\n    );\n    event AssetSourceUpdated(address indexed asset, address indexed source);\n    event FallbackOracleUpdated(address indexed fallbackOracle);\n\n    mapping(address => IChainlinkAggregator) private assetsSources;\n    IPriceOracleGetter private _fallbackOracle;\n    address public immutable BASE_CURRENCY;\n    uint256 public immutable BASE_CURRENCY_UNIT;\n\n    /// @notice Constructor\n    /// @param assets The addresses of the assets\n    /// @param sources The address of the source of each asset\n    /// @param fallbackOracle The address of the fallback oracle to use if the data of an\n    ///        aggregator is not consistent\n    /// @param baseCurrency the base currency used for the price quotes. If USD is used, base currency is 0x0\n    /// @param baseCurrencyUnit the unit of the base currency\n    constructor(\n        address[] memory assets,\n        address[] memory sources,\n        address fallbackOracle,\n        address baseCurrency,\n        uint256 baseCurrencyUnit\n    ) public {\n        _setFallbackOracle(fallbackOracle);\n        _setAssetsSources(assets, sources);\n        BASE_CURRENCY = baseCurrency;\n        BASE_CURRENCY_UNIT = baseCurrencyUnit;\n        emit BaseCurrencySet(baseCurrency, baseCurrencyUnit);\n    }\n\n    /// @notice External function called by the Aave governance to set or replace sources of assets\n    /// @param assets The addresses of the assets\n    /// @param sources The address of the source of each asset\n    function setAssetSources(\n        address[] calldata assets,\n        address[] calldata sources\n    ) external onlyOwner {\n        _setAssetsSources(assets, sources);\n    }\n\n    /// @notice Sets the fallbackOracle\n    /// - Callable only by the Aave governance\n    /// @param fallbackOracle The address of the fallbackOracle\n    function setFallbackOracle(address fallbackOracle) external onlyOwner {\n        _setFallbackOracle(fallbackOracle);\n    }\n\n    /// @notice Internal function to set the sources for each asset\n    /// @param assets The addresses of the assets\n    /// @param sources The address of the source of each asset\n    function _setAssetsSources(\n        address[] memory assets,\n        address[] memory sources\n    ) internal {\n        require(assets.length == sources.length, \"INCONSISTENT_PARAMS_LENGTH\");\n        for (uint256 i = 0; i < assets.length; i++) {\n            assetsSources[assets[i]] = IChainlinkAggregator(sources[i]);\n            emit AssetSourceUpdated(assets[i], sources[i]);\n        }\n    }\n\n    /// @notice Internal function to set the fallbackOracle\n    /// @param fallbackOracle The address of the fallbackOracle\n    function _setFallbackOracle(address fallbackOracle) internal {\n        _fallbackOracle = IPriceOracleGetter(fallbackOracle);\n        emit FallbackOracleUpdated(fallbackOracle);\n    }\n\n    /// @notice Gets an asset price by address\n    /// @param asset The asset address\n    function getAssetPrice(address asset)\n        public\n        view\n        override\n        returns (uint256)\n    {\n        IChainlinkAggregator source = assetsSources[asset];\n\n        if (asset == BASE_CURRENCY) {\n            return BASE_CURRENCY_UNIT;\n        } else if (address(source) == address(0)) {\n            return _fallbackOracle.getAssetPrice(asset);\n        } else {\n            int256 price = IChainlinkAggregator(source).latestAnswer();\n            if (price > 0) {\n                return uint256(price);\n            } else {\n                return _fallbackOracle.getAssetPrice(asset);\n            }\n        }\n    }\n\n    /// @notice Gets a list of prices from a list of assets addresses\n    /// @param assets The list of assets addresses\n    function getAssetsPrices(address[] calldata assets)\n        external\n        view\n        returns (uint256[] memory)\n    {\n        uint256[] memory prices = new uint256[](assets.length);\n        for (uint256 i = 0; i < assets.length; i++) {\n            prices[i] = getAssetPrice(assets[i]);\n        }\n        return prices;\n    }\n\n    /// @notice Gets the address of the source for an asset address\n    /// @param asset The address of the asset\n    /// @return address The address of the source\n    function getSourceOfAsset(address asset) external view returns (address) {\n        return address(assetsSources[asset]);\n    }\n\n    /// @notice Gets the address of the fallback oracle\n    /// @return address The addres of the fallback oracle\n    function getFallbackOracle() external view returns (address) {\n        return address(_fallbackOracle);\n    }\n}\n"},"contracts/interfaces/ILendingPoolAddressesProvider.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity >=0.8.0;\n\nimport {DataTypes} from \"../protocol/libraries/types/DataTypes.sol\";\n\n/**\n * @title LendingPoolAddressesProvider contract\n * @dev Main registry of addresses part of or connected to the protocol, including permissioned roles\n * - Acting also as factory of proxies and admin of those, so with right to change its implementations\n * - Owned by the Aave Governance\n * @author Aave\n **/\ninterface ILendingPoolAddressesProvider {\n    event MarketIdSet(string newMarketId);\n    event LendingPoolUpdated(address indexed newAddress);\n    event ConfigurationAdminUpdated(address indexed newAddress);\n    event EmergencyAdminUpdated(address indexed newAddress);\n    event LendingPoolConfiguratorUpdated(address indexed newAddress);\n    event LendingPoolCollateralManagerUpdated(address indexed newAddress);\n    event PriceOracleUpdated(address indexed newAddress);\n    event CurvePriceOracleUpdated(address indexed newAddress);\n    event CurvePriceOracleWrapperUpdated(address indexed newAddress);\n    event CurveAddressProviderUpdated(address indexed newAddress);\n    event LendingRateOracleUpdated(address indexed newAddress);\n    event ProxyCreated(bytes32 id, address indexed newAddress);\n    event AddressSet(bytes32 id, address indexed newAddress, bool hasProxy);\n\n    function getMarketId() external view returns (string memory);\n\n    function setMarketId(string calldata marketId) external;\n\n    function setAddress(bytes32 id, address newAddress) external;\n\n    function setAddressAsProxy(bytes32 id, address impl) external;\n\n    function getAddress(bytes32 id) external view returns (address);\n\n    function getLendingPool() external view returns (address);\n\n    function setLendingPoolImpl(address pool) external;\n\n    function getLendingPoolConfigurator() external view returns (address);\n\n    function setLendingPoolConfiguratorImpl(address configurator) external;\n\n    function getLendingPoolCollateralManager() external view returns (address);\n\n    function setLendingPoolCollateralManager(address manager) external;\n\n    function getPoolAdmin() external view returns (address);\n\n    function setPoolAdmin(address admin) external;\n\n    function getEmergencyAdmin() external view returns (address);\n\n    function setEmergencyAdmin(address admin) external;\n\n    function getPriceOracle(DataTypes.ReserveAssetType assetType)\n        external\n        view\n        returns (address);\n\n    function getAavePriceOracle() external view returns (address);\n\n    function getCurvePriceOracle() external view returns (address);\n\n    function getCurvePriceOracleWrapper() external view returns (address);\n\n    function getCurveAddressProvider() external view returns (address);\n\n    function setAavePriceOracle(address priceOracle) external;\n\n    function setCurveAddressProvider(address addressProvider) external;\n\n    function setCurvePriceOracle(address priceOracle) external;\n\n    function setCurvePriceOracleWrapper(address priceOracle) external;\n\n    function getLendingRateOracle() external view returns (address);\n\n    function setLendingRateOracle(address lendingRateOracle) external;\n}\n"},"contracts/oracles/interfaces/ICurveOracle.sol":{"content":"pragma solidity >=0.8.0;\n\ninterface ICurveOracle {\n    function get_price(address curve_pool, uint256[] memory prices)\n        external\n        view\n        returns (uint256);\n}\n"},"contracts/dependencies/openzeppelin/contracts/Context.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity >=0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"},"contracts/dependencies/openzeppelin/contracts/SafeMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b)\n        internal\n        pure\n        returns (bool, uint256)\n    {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b)\n        internal\n        pure\n        returns (bool, uint256)\n    {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b)\n        internal\n        pure\n        returns (bool, uint256)\n    {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b)\n        internal\n        pure\n        returns (bool, uint256)\n    {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b)\n        internal\n        pure\n        returns (bool, uint256)\n    {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"},"contracts/dependencies/openzeppelin/contracts/Address.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity >=0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\n        // for accounts without code, i.e. `keccak256('')`\n        // bytes32 codehash;\n        // bytes32 accountHash =\n        //     0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\n        // // solhint-disable-next-line no-inline-assembly\n        // assembly {\n        //     codehash := extcodehash(account)\n        // }\n        // return (codehash != accountHash && codehash != 0x0);\n        return account.code.length > 0; //updated\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(\n            address(this).balance >= amount,\n            \"Address: insufficient balance\"\n        );\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(\n            success,\n            \"Address: unable to send value, recipient may have reverted\"\n        );\n    }\n}\n"},"contracts/interfaces/IChainlinkAggregator.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity >=0.8.0;\n\ninterface IChainlinkAggregator {\n    function decimals() external view returns (uint8);\n\n    function latestAnswer() external view returns (int256);\n\n    function latestTimestamp() external view returns (uint256);\n\n    function latestRound() external view returns (uint256);\n\n    function getAnswer(uint256 roundId) external view returns (int256);\n\n    function getTimestamp(uint256 roundId) external view returns (uint256);\n\n    event AnswerUpdated(\n        int256 indexed current,\n        uint256 indexed roundId,\n        uint256 timestamp\n    );\n    event NewRound(uint256 indexed roundId, address indexed startedBy);\n}\n"},"contracts/protocol/libraries/types/DataTypes.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity >=0.8.0;\n\nlibrary DataTypes {\n    // refer to the whitepaper, section 1.1 basic concepts for a formal description of these properties.\n\n    enum ReserveAssetType {\n        AAVE,\n        CURVE\n    } //update with other possible types of the underlying asset\n    //AAVE is the original assets in the aave protocol\n    //CURVE is the new LP tokens we are providing support for\n\n    struct AssetData {\n        uint8 collateralRisk;\n        bool isLendable;\n        bool isAllowedCollateralInHigherTranches;\n        ReserveAssetType assetType;\n    }\n\n    struct TrancheAddress {\n        uint8 tranche;\n        address asset;\n    }\n    struct ReserveData {\n        //stores the reserve configuration\n        ReserveConfigurationMap configuration;\n        //the liquidity index. Expressed in ray\n        uint128 liquidityIndex; //not used for nonlendable assets\n        //variable borrow index. Expressed in ray\n        uint128 variableBorrowIndex; //not used for nonlendable assets\n        //the current supply rate. Expressed in ray\n        uint128 currentLiquidityRate; //deposit APR is defined as liquidityRate / RAY //not used for nonlendable assets\n        //the current variable borrow rate. Expressed in ray\n        uint128 currentVariableBorrowRate; //not used for nonlendable assets\n        //the current stable borrow rate. Expressed in ray\n        uint128 currentStableBorrowRate; //not used for nonlendable assets\n        uint40 lastUpdateTimestamp;\n        //tokens addresses\n        address aTokenAddress;\n        address stableDebtTokenAddress; //not used for nonlendable assets\n        address variableDebtTokenAddress; //not used for nonlendable assets\n        //address of the interest rate strategy\n        address interestRateStrategyAddress; //not used for nonlendable assets\n        //the id of the reserve. Represents the position in the list of the active reserves\n        uint8 id;\n        uint8 tranche; //I think this will be used for nonlendable assets, cause your collateral only asset can be placed in higher tranche if necessary\n    }\n\n    struct TrancheMultiplier {\n        uint256 liquidityRateMultiplier;\n        uint256 variableBorrowRateMultiplier;\n        uint256 stableBorrowRateMultiplier;\n    }\n\n    uint8 constant NUM_TRANCHES = 3;\n\n    struct ReserveConfigurationMap {\n        //bit 0-15: LTV\n        //bit 16-31: Liq. threshold\n        //bit 32-47: Liq. bonus\n        //bit 48-55: Decimals\n        //bit 56: Reserve is active\n        //bit 57: reserve is frozen\n        //bit 58: borrowing is enabled\n        //bit 59: stable rate borrowing enabled\n        //bit 60-63: reserved\n        //bit 64-79: reserve factor\n        uint256 data;\n    }\n\n    struct UserConfigurationMap {\n        uint256 data;\n    }\n\n    enum InterestRateMode {\n        NONE,\n        STABLE,\n        VARIABLE\n    }\n\n    struct AcctTranche {\n        address user;\n        uint8 tranche;\n    }\n\n    struct DepositVars {\n        address asset;\n        uint8 tranche;\n        uint8 risk;\n        bool allowHigherTranche;\n        bool isLendable;\n        TrancheMultiplier t;\n    }\n\n    struct ExecuteBorrowParams {\n        address asset;\n        uint8 tranche; //tranche the user wants to borrow out of\n        address user;\n        address onBehalfOf;\n        uint256 amount;\n        uint256 interestRateMode;\n        address aTokenAddress;\n        uint16 referralCode;\n        bool releaseUnderlying;\n        uint256 _maxStableRateBorrowSizePercent;\n        uint256 _reservesCount;\n        TrancheMultiplier t;\n    }\n\n    struct WithdrawParams {\n        uint256 _reservesCount;\n        address asset;\n        uint8 tranche;\n        uint256 amount;\n        address to;\n        TrancheMultiplier t;\n    }\n\n    struct ValidateSetUseReserveAsCollateralParams {\n        uint8 risk;\n        bool allowHigherTranche;\n    }\n\n    struct calculateInterestRatesVars {\n        address reserve;\n        address aToken;\n        uint256 liquidityAdded;\n        uint256 liquidityTaken;\n        uint256 reserveFactor;\n    }\n\n    struct flashLoanVars {\n        address receiverAddress;\n        DataTypes.TrancheAddress[] assets;\n        uint256[] amounts;\n        uint256[] modes;\n        address onBehalfOf;\n        bytes params;\n        uint16 referralCode;\n        uint256 _flashLoanPremiumTotal;\n        address oracle;\n        uint256 _maxStableRateBorrowSizePercent;\n        uint256 _reservesCount;\n    }\n}\n"},"contracts/oracles/CurveOracleV2.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity >=0.8.0;\n\nimport {ICurvePool} from \"./interfaces/ICurvePoolV1.sol\";\nimport {ICurveOracle} from \"./interfaces/ICurveOracle.sol\";\nimport {vMath} from \"./libs/vMath.sol\";\n\ncontract CurveOracleV2 is ICurveOracle {\n    function get_price(address curve_pool, uint256[] memory prices)\n        external\n        view\n        override\n        returns (uint256)\n    {\n        uint256 virtual_price = ICurvePool(curve_pool).get_virtual_price();\n\n        uint256 lp_price = calculate_v2_token_price(\n            uint8(prices.length),\n            virtual_price,\n            prices\n        );\n\n        return lp_price;\n    }\n\n    //returns n_token * vp * (p1 * p2 * p3) ^1/n\n    //n should only ever be 2, 3, or 4\n    //returns the lp_price scaled by 1e36, so scale down by 1e36\n    function calculate_v2_token_price(\n        uint8 n,\n        uint256 virtual_price,\n        uint256[] memory prices\n    ) internal pure returns (uint256) {\n        uint256 product = vMath.product(prices);\n        uint256 geo_mean = vMath.geometric_mean(n, product);\n        return (n * virtual_price * geo_mean) / 10**18; //since virtual price has 18 decimals\n    }\n}\n"},"contracts/oracles/interfaces/ICurvePoolV1.sol":{"content":"pragma solidity >=0.8.0;\n\ninterface ICurvePool {\n    function get_virtual_price() external view returns (uint256);\n\n    function coins(uint256 n) external view returns (address);\n}\n"},"contracts/oracles/libs/vMath.sol":{"content":"pragma solidity >=0.8.0;\n\nimport {FixedPointMathLib} from \"./FixedPointMathLib.sol\";\nimport {IntegralMath} from \"./IntegralMath.sol\";\n\nlibrary vMath {\n    uint256 internal constant WAD = 1e18; // The scalar of ETH and most ERC20s.\n\n    function min(uint256[] calldata array) external pure returns (uint256) {\n        uint256 min = array[0];\n        for (uint8 i = 1; i < array.length; i++) {\n            if (min > array[i]) {\n                min = array[i];\n            }\n        }\n        return min;\n    }\n\n    function product(uint256[] calldata nums) external pure returns (uint256) {\n        uint256 product = nums[0];\n        for (uint256 i = 1; i < nums.length; i++) {\n            product *= nums[i];\n        }\n        return product;\n    }\n\n    //limited to curve pools only, either 2 or 3 assets (mostly 2)\n    function geometric_mean(uint8 n, uint256 product)\n        external\n        pure\n        returns (uint256)\n    {\n        if (n == 2) {\n            return FixedPointMathLib.sqrt(product);\n        } else {\n            //n == 3\n            return IntegralMath.floorCbrt(product);\n        }\n    }\n}\n"},"contracts/oracles/libs/FixedPointMathLib.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity >=0.8.0;\n\n/// @notice Arithmetic library with operations for fixed-point numbers.\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/utils/FixedPointMathLib.sol)\n/// @author Inspired by USM (https://github.com/usmfum/USM/blob/master/contracts/WadMath.sol)\nlibrary FixedPointMathLib {\n    /*//////////////////////////////////////////////////////////////\n                    SIMPLIFIED FIXED POINT OPERATIONS\n    //////////////////////////////////////////////////////////////*/\n\n    uint256 internal constant WAD = 1e18; // The scalar of ETH and most ERC20s.\n\n    function mulWadDown(uint256 x, uint256 y) internal pure returns (uint256) {\n        return mulDivDown(x, y, WAD); // Equivalent to (x * y) / WAD rounded down.\n    }\n\n    function mulWadUp(uint256 x, uint256 y) internal pure returns (uint256) {\n        return mulDivUp(x, y, WAD); // Equivalent to (x * y) / WAD rounded up.\n    }\n\n    function divWadDown(uint256 x, uint256 y) internal pure returns (uint256) {\n        return mulDivDown(x, WAD, y); // Equivalent to (x * WAD) / y rounded down.\n    }\n\n    function divWadUp(uint256 x, uint256 y) internal pure returns (uint256) {\n        return mulDivUp(x, WAD, y); // Equivalent to (x * WAD) / y rounded up.\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                    LOW LEVEL FIXED POINT OPERATIONS\n    //////////////////////////////////////////////////////////////*/\n\n    function mulDivDown(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 z) {\n        assembly {\n            // Store x * y in z for now.\n            z := mul(x, y)\n\n            // Equivalent to require(denominator != 0 && (x == 0 || (x * y) / x == y))\n            if iszero(\n                and(\n                    iszero(iszero(denominator)),\n                    or(iszero(x), eq(div(z, x), y))\n                )\n            ) {\n                revert(0, 0)\n            }\n\n            // Divide z by the denominator.\n            z := div(z, denominator)\n        }\n    }\n\n    function mulDivUp(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 z) {\n        assembly {\n            // Store x * y in z for now.\n            z := mul(x, y)\n\n            // Equivalent to require(denominator != 0 && (x == 0 || (x * y) / x == y))\n            if iszero(\n                and(\n                    iszero(iszero(denominator)),\n                    or(iszero(x), eq(div(z, x), y))\n                )\n            ) {\n                revert(0, 0)\n            }\n\n            // First, divide z - 1 by the denominator and add 1.\n            // We allow z - 1 to underflow if z is 0, because we multiply the\n            // end result by 0 if z is zero, ensuring we return 0 if z is zero.\n            z := mul(iszero(iszero(z)), add(div(sub(z, 1), denominator), 1))\n        }\n    }\n\n    function rpow(\n        uint256 x,\n        uint256 n,\n        uint256 scalar\n    ) internal pure returns (uint256 z) {\n        assembly {\n            switch x\n            case 0 {\n                switch n\n                case 0 {\n                    // 0 ** 0 = 1\n                    z := scalar\n                }\n                default {\n                    // 0 ** n = 0\n                    z := 0\n                }\n            }\n            default {\n                switch mod(n, 2)\n                case 0 {\n                    // If n is even, store scalar in z for now.\n                    z := scalar\n                }\n                default {\n                    // If n is odd, store x in z for now.\n                    z := x\n                }\n\n                // Shifting right by 1 is like dividing by 2.\n                let half := shr(1, scalar)\n\n                for {\n                    // Shift n right by 1 before looping to halve it.\n                    n := shr(1, n)\n                } n {\n                    // Shift n right by 1 each iteration to halve it.\n                    n := shr(1, n)\n                } {\n                    // Revert immediately if x ** 2 would overflow.\n                    // Equivalent to iszero(eq(div(xx, x), x)) here.\n                    if shr(128, x) {\n                        revert(0, 0)\n                    }\n\n                    // Store x squared.\n                    let xx := mul(x, x)\n\n                    // Round to the nearest number.\n                    let xxRound := add(xx, half)\n\n                    // Revert if xx + half overflowed.\n                    if lt(xxRound, xx) {\n                        revert(0, 0)\n                    }\n\n                    // Set x to scaled xxRound.\n                    x := div(xxRound, scalar)\n\n                    // If n is even:\n                    if mod(n, 2) {\n                        // Compute z * x.\n                        let zx := mul(z, x)\n\n                        // If z * x overflowed:\n                        if iszero(eq(div(zx, x), z)) {\n                            // Revert if x is non-zero.\n                            if iszero(iszero(x)) {\n                                revert(0, 0)\n                            }\n                        }\n\n                        // Round to the nearest number.\n                        let zxRound := add(zx, half)\n\n                        // Revert if zx + half overflowed.\n                        if lt(zxRound, zx) {\n                            revert(0, 0)\n                        }\n\n                        // Return properly scaled zxRound.\n                        z := div(zxRound, scalar)\n                    }\n                }\n            }\n        }\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                        GENERAL NUMBER UTILITIES\n    //////////////////////////////////////////////////////////////*/\n\n    function sqrt(uint256 x) internal pure returns (uint256 z) {\n        assembly {\n            // Start off with z at 1.\n            z := 1\n\n            // Used below to help find a nearby power of 2.\n            let y := x\n\n            // Find the lowest power of 2 that is at least sqrt(x).\n            if iszero(lt(y, 0x100000000000000000000000000000000)) {\n                y := shr(128, y) // Like dividing by 2 ** 128.\n                z := shl(64, z) // Like multiplying by 2 ** 64.\n            }\n            if iszero(lt(y, 0x10000000000000000)) {\n                y := shr(64, y) // Like dividing by 2 ** 64.\n                z := shl(32, z) // Like multiplying by 2 ** 32.\n            }\n            if iszero(lt(y, 0x100000000)) {\n                y := shr(32, y) // Like dividing by 2 ** 32.\n                z := shl(16, z) // Like multiplying by 2 ** 16.\n            }\n            if iszero(lt(y, 0x10000)) {\n                y := shr(16, y) // Like dividing by 2 ** 16.\n                z := shl(8, z) // Like multiplying by 2 ** 8.\n            }\n            if iszero(lt(y, 0x100)) {\n                y := shr(8, y) // Like dividing by 2 ** 8.\n                z := shl(4, z) // Like multiplying by 2 ** 4.\n            }\n            if iszero(lt(y, 0x10)) {\n                y := shr(4, y) // Like dividing by 2 ** 4.\n                z := shl(2, z) // Like multiplying by 2 ** 2.\n            }\n            if iszero(lt(y, 0x8)) {\n                // Equivalent to 2 ** z.\n                z := shl(1, z)\n            }\n\n            // Shifting right by 1 is like dividing by 2.\n            z := shr(1, add(z, div(x, z)))\n            z := shr(1, add(z, div(x, z)))\n            z := shr(1, add(z, div(x, z)))\n            z := shr(1, add(z, div(x, z)))\n            z := shr(1, add(z, div(x, z)))\n            z := shr(1, add(z, div(x, z)))\n            z := shr(1, add(z, div(x, z)))\n\n            // Compute a rounded down version of z.\n            let zRoundDown := div(x, z)\n\n            // If zRoundDown is smaller, use it.\n            if lt(zRoundDown, z) {\n                z := zRoundDown\n            }\n        }\n    }\n}\n"},"contracts/oracles/libs/IntegralMath.sol":{"content":"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\npragma solidity >=0.8.0;\n\nimport \"./Uint.sol\";\n\nlibrary IntegralMath {\n    /**\n     * @dev Compute the largest integer smaller than or equal to the binary logarithm of `n`\n     */\n    function floorLog2(uint256 n) internal pure returns (uint8) {\n        unchecked {\n            uint8 res = 0;\n\n            if (n < 256) {\n                // at most 8 iterations\n                while (n > 1) {\n                    n >>= 1;\n                    res += 1;\n                }\n            } else {\n                // exactly 8 iterations\n                for (uint8 s = 128; s > 0; s >>= 1) {\n                    if (n >= 1 << s) {\n                        n >>= s;\n                        res |= s;\n                    }\n                }\n            }\n\n            return res;\n        }\n    }\n\n    /**\n     * @dev Compute the largest integer smaller than or equal to the square root of `n`\n     */\n    function floorSqrt(uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n > 0) {\n                uint256 x = n / 2 + 1;\n                uint256 y = (x + n / x) / 2;\n                while (x > y) {\n                    x = y;\n                    y = (x + n / x) / 2;\n                }\n                return x;\n            }\n            return 0;\n        }\n    }\n\n    /**\n     * @dev Compute the smallest integer larger than or equal to the square root of `n`\n     */\n    function ceilSqrt(uint256 n) internal pure returns (uint256) {\n        unchecked {\n            uint256 x = floorSqrt(n);\n            return x**2 == n ? x : x + 1;\n        }\n    }\n\n    /**\n     * @dev Compute the largest integer smaller than or equal to the cubic root of `n`\n     */\n    function floorCbrt(uint256 n) internal pure returns (uint256) {\n        unchecked {\n            uint256 x = 0;\n            for (uint256 y = 1 << 255; y > 0; y >>= 3) {\n                x <<= 1;\n                uint256 z = 3 * x * (x + 1) + 1;\n                if (n / y >= z) {\n                    n -= y * z;\n                    x += 1;\n                }\n            }\n            return x;\n        }\n    }\n\n    /**\n     * @dev Compute the smallest integer larger than or equal to the cubic root of `n`\n     */\n    function ceilCbrt(uint256 n) internal pure returns (uint256) {\n        unchecked {\n            uint256 x = floorCbrt(n);\n            return x**3 == n ? x : x + 1;\n        }\n    }\n\n    /**\n     * @dev Compute the nearest integer to the quotient of `n` and `d` (or `n / d`)\n     */\n    function roundDiv(uint256 n, uint256 d) internal pure returns (uint256) {\n        unchecked {\n            return n / d + (n % d) / (d - d / 2);\n        }\n    }\n\n    /**\n     * @dev Compute the largest integer smaller than or equal to `x * y / z`\n     */\n    function mulDivF(\n        uint256 x,\n        uint256 y,\n        uint256 z\n    ) internal pure returns (uint256) {\n        unchecked {\n            (uint256 xyh, uint256 xyl) = mul512(x, y);\n            if (xyh == 0) {\n                // `x * y < 2 ^ 256`\n                return xyl / z;\n            }\n            if (xyh < z) {\n                // `x * y / z < 2 ^ 256`\n                uint256 m = mulMod(x, y, z); // `m = x * y % z`\n                (uint256 nh, uint256 nl) = sub512(xyh, xyl, m); // `n = x * y - m` hence `n / z = floor(x * y / z)`\n                if (nh == 0) {\n                    // `n < 2 ^ 256`\n                    return nl / z;\n                }\n                uint256 p = unsafeSub(0, z) & z; // `p` is the largest power of 2 which `z` is divisible by\n                uint256 q = div512(nh, nl, p); // `n` is divisible by `p` because `n` is divisible by `z` and `z` is divisible by `p`\n                uint256 r = inv256(z / p); // `z / p = 1 mod 2` hence `inverse(z / p) = 1 mod 2 ^ 256`\n                return unsafeMul(q, r); // `q * r = (n / p) * inverse(z / p) = n / z`\n            }\n            revert(); // `x * y / z >= 2 ^ 256`\n        }\n    }\n\n    /**\n     * @dev Compute the smallest integer larger than or equal to `x * y / z`\n     */\n    function mulDivC(\n        uint256 x,\n        uint256 y,\n        uint256 z\n    ) internal pure returns (uint256) {\n        unchecked {\n            uint256 w = mulDivF(x, y, z);\n            if (mulMod(x, y, z) > 0) return safeAdd(w, 1);\n            return w;\n        }\n    }\n\n    /**\n     * @dev Compute the value of `x * y`\n     */\n    function mul512(uint256 x, uint256 y)\n        private\n        pure\n        returns (uint256, uint256)\n    {\n        unchecked {\n            uint256 p = mulModMax(x, y);\n            uint256 q = unsafeMul(x, y);\n            if (p >= q) return (p - q, q);\n            return (unsafeSub(p, q) - 1, q);\n        }\n    }\n\n    /**\n     * @dev Compute the value of `2 ^ 256 * xh + xl - y`, where `2 ^ 256 * xh + xl >= y`\n     */\n    function sub512(\n        uint256 xh,\n        uint256 xl,\n        uint256 y\n    ) private pure returns (uint256, uint256) {\n        unchecked {\n            if (xl >= y) return (xh, xl - y);\n            return (xh - 1, unsafeSub(xl, y));\n        }\n    }\n\n    /**\n     * @dev Compute the value of `(2 ^ 256 * xh + xl) / pow2n`, where `xl` is divisible by `pow2n`\n     */\n    function div512(\n        uint256 xh,\n        uint256 xl,\n        uint256 pow2n\n    ) private pure returns (uint256) {\n        unchecked {\n            uint256 pow2nInv = unsafeAdd(unsafeSub(0, pow2n) / pow2n, 1); // `1 << (256 - n)`\n            return unsafeMul(xh, pow2nInv) | (xl / pow2n); // `(xh << (256 - n)) | (xl >> n)`\n        }\n    }\n\n    /**\n     * @dev Compute the inverse of `d` modulo `2 ^ 256`, where `d` is congruent to `1` modulo `2`\n     */\n    function inv256(uint256 d) private pure returns (uint256) {\n        unchecked {\n            // approximate the root of `f(x) = 1 / x - d` using the newton–raphson convergence method\n            uint256 x = 1;\n            for (uint256 i = 0; i < 8; ++i)\n                x = unsafeMul(x, unsafeSub(2, unsafeMul(x, d))); // `x = x * (2 - x * d) mod 2 ^ 256`\n            return x;\n        }\n    }\n}\n"},"contracts/oracles/libs/Uint.sol":{"content":"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\npragma solidity >=0.8.0;\n\nuint256 constant MAX_VAL = type(uint256).max;\n\n// reverts on overflow\nfunction safeAdd(uint256 x, uint256 y) pure returns (uint256) {\n    return x + y;\n}\n\n// does not revert on overflow\nfunction unsafeAdd(uint256 x, uint256 y) pure returns (uint256) {\n    unchecked {\n        return x + y;\n    }\n}\n\n// does not revert on overflow\nfunction unsafeSub(uint256 x, uint256 y) pure returns (uint256) {\n    unchecked {\n        return x - y;\n    }\n}\n\n// does not revert on overflow\nfunction unsafeMul(uint256 x, uint256 y) pure returns (uint256) {\n    unchecked {\n        return x * y;\n    }\n}\n\n// does not overflow\nfunction mulModMax(uint256 x, uint256 y) pure returns (uint256) {\n    unchecked {\n        return mulmod(x, y, MAX_VAL);\n    }\n}\n\n// does not overflow\nfunction mulMod(\n    uint256 x,\n    uint256 y,\n    uint256 z\n) pure returns (uint256) {\n    unchecked {\n        return mulmod(x, y, z);\n    }\n}\n"},"contracts/oracles/ConvexOracleV2.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity >=0.8.0;\n\n//import {IBooster} from \"../utils/interfaces/IBooster.sol\";\nimport {CurveOracleV2} from \"./CurveOracleV2.sol\";\nimport {FixedPointMathLib} from \"./libs/FixedPointMathLib.sol\";\nimport {IERC20} from \"./interfaces/IERC20.sol\";\n\n//assuming we can price Convex pools like UniV2 pools more than like Curve pools\ncontract ConvexOracleV2 {\n    //address private constant BOOSTER = 0xF403C135812408BFbE8713b5A23a04b3D48AAE31; //convex deposit contract\n    CurveOracleV2 private curve_oracle;\n\n    //get total underlying in USD and divide by num of tokens\n    //use external script to get pid by curve lp token\n    constructor(CurveOracleV2 _curve_oracle) {\n        curve_oracle = _curve_oracle;\n    }\n\n    //get curve lp tokens price, get convex lp token \"depositToken\", divide\n    function get_convex_price(\n        address curve_pool,\n        uint256[] memory prices,\n        uint16 pid,\n        address convex_lp,\n        address curve_lp\n    ) external view returns (uint256) {\n        uint256 curve_lp_price = curve_oracle.get_price(curve_pool, prices); //returns 1e36 scaled uint\n        //\tuint256 curve_supply = IERC20(curve_lp).totalSupply();\n        //\tuint256 convex_supply = IERC20(convex_lp).totalSupply();\n\n        //\tuint256 convex_price = calculate_convex_price(\n        //\t\tcurve_lp_price,\n        //\t\tcurve_supply,\n        //\t\tconvex_supply\n        //\t);\n\n        return curve_lp_price;\n    }\n\n    //not sure how vulnerable this is, check back later\n    function calculate_convex_price(\n        uint256 curve_lp_price,\n        uint256 curve_supply,\n        uint256 convex_supply\n    ) internal pure returns (uint256) {\n        return (curve_lp_price * curve_supply) / convex_supply;\n    }\n}\n"},"contracts/oracles/interfaces/IERC20.sol":{"content":"pragma solidity >=0.8.0;\n\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the token decimals.\n     */\n    function decimals() external view returns (uint8);\n\n    /**\n     * @dev Returns the token symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the token name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the bep token owner.\n     */\n    function getOwner() external view returns (address);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount)\n        external\n        returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address _owner, address spender)\n        external\n        view\n        returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n}\n"},"contracts/analytics/libraries/AnalyticsUtilities.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity >=0.8.0;\nimport {ILendingPool} from \"../../interfaces/ILendingPool.sol\";\nimport {DataTypes} from \"../../protocol/libraries/types/DataTypes.sol\";\nimport {Constants} from \"./Constants.sol\";\nimport {UserBalances, UserAccountData, AggregatedData, TokenReserveData} from \"../types/AnalyticsDataTypes.sol\";\nimport {IChainlinkAggregator} from \"../../interfaces/IChainlinkAggregator.sol\";\nimport {IERC20Detailed} from \"../../dependencies/openzeppelin/contracts/IERC20Detailed.sol\";\nimport {ILendingPoolAddressesProvider} from \"../../interfaces/ILendingPoolAddressesProvider.sol\";\nimport {IAaveOracle} from \"../../misc/interfaces/IAaveOracle.sol\";\nimport {AggregateData, TokenData} from \"../types/Tokens.sol\";\n\nlibrary AnalyticsUtilities {\n    function getTokenReserveData(\n        ILendingPoolAddressesProvider provider,\n        uint8 tranche\n    ) internal view returns (TokenData[22] memory) {\n        address[22] memory tokens = Constants.token();\n        string[22] memory names = Constants.tokenNames();\n        ILendingPool lendingPool = ILendingPool(provider.getLendingPool());\n        TokenData[22] memory returnData;\n        for (uint8 i = 0; i < tokens.length; i++) {\n            TokenData memory data = TokenData(\n                names[i],\n                lendingPool.getReserveData(tokens[i], tranche),\n                lendingPool.getAssetData(tokens[i])\n            );\n\n            returnData[i] = data;\n        }\n\n        return returnData;\n    }\n\n    // function getUserTokenInfo(ILendingPoolAddressProvider provider, uint8 tranche, address user)\n    //     internal\n    //     view\n    //     returns (memory)\n    // {\n\n    // }\n}\n"},"contracts/interfaces/ILendingPool.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity >=0.8.0;\n\nimport {ILendingPoolAddressesProvider} from \"./ILendingPoolAddressesProvider.sol\";\nimport {DataTypes} from \"../protocol/libraries/types/DataTypes.sol\";\n\ninterface ILendingPool {\n    /**\n     * @dev Emitted on deposit()\n     * @param reserve The address of the underlying asset of the reserve\n     * @param user The address initiating the deposit\n     * @param onBehalfOf The beneficiary of the deposit, receiving the aTokens\n     * @param amount The amount deposited\n     * @param referral The referral code used\n     **/\n    event Deposit(\n        address indexed reserve,\n        uint8 tranche,\n        address user,\n        address indexed onBehalfOf,\n        uint256 amount,\n        uint16 indexed referral\n    );\n\n    /**\n     * @dev Emitted on withdraw()\n     * @param reserve The address of the underlyng asset being withdrawn\n     * @param user The address initiating the withdrawal, owner of aTokens\n     * @param to Address that will receive the underlying\n     * @param amount The amount to be withdrawn\n     **/\n    event Withdraw(\n        address indexed reserve,\n        address indexed user,\n        address indexed to,\n        uint256 amount\n    );\n\n    /**\n     * @dev Emitted on repay()\n     * @param reserve The address of the underlying asset of the reserve\n     * @param user The beneficiary of the repayment, getting his debt reduced\n     * @param repayer The address of the user initiating the repay(), providing the funds\n     * @param amount The amount repaid\n     **/\n    event Repay(\n        address indexed reserve,\n        address indexed user,\n        address indexed repayer,\n        uint256 amount\n    );\n\n    /**\n     * @dev Emitted on swapBorrowRateMode()\n     * @param reserve The address of the underlying asset of the reserve\n     * @param user The address of the user swapping his rate mode\n     * @param rateMode The rate mode that the user wants to swap to\n     **/\n    event Swap(address indexed reserve, address indexed user, uint256 rateMode);\n\n    /**\n     * @dev Emitted on setUserUseReserveAsCollateral()\n     * @param reserve The address of the underlying asset of the reserve\n     * @param user The address of the user enabling the usage as collateral\n     **/\n    event ReserveUsedAsCollateralEnabled(\n        address indexed reserve,\n        address indexed user\n    );\n\n    /**\n     * @dev Emitted on setUserUseReserveAsCollateral()\n     * @param reserve The address of the underlying asset of the reserve\n     * @param user The address of the user enabling the usage as collateral\n     **/\n    event ReserveUsedAsCollateralDisabled(\n        address indexed reserve,\n        address indexed user\n    );\n\n    /**\n     * @dev Emitted on rebalanceStableBorrowRate()\n     * @param reserve The address of the underlying asset of the reserve\n     * @param user The address of the user for which the rebalance has been executed\n     **/\n    event RebalanceStableBorrowRate(\n        address indexed reserve,\n        address indexed user\n    );\n\n    /**\n     * @dev Emitted on flashLoan()\n     * @param target The address of the flash loan receiver contract\n     * @param initiator The address initiating the flash loan\n     * @param asset The address of the asset being flash borrowed\n     * @param amount The amount flash borrowed\n     * @param premium The fee flash borrowed\n     * @param referralCode The referral code used\n     **/\n    event FlashLoan(\n        address indexed target,\n        address indexed initiator,\n        address indexed asset,\n        uint256 amount,\n        uint256 premium,\n        uint16 referralCode\n    );\n\n    /**\n     * @dev Emitted when the pause is triggered.\n     */\n    event Paused();\n\n    /**\n     * @dev Emitted when the pause is lifted.\n     */\n    event Unpaused();\n\n    /**\n     * @dev Emitted when a borrower is liquidated. This event is emitted by the LendingPool via\n     * LendingPoolCollateral manager using a DELEGATECALL\n     * This allows to have the events in the generated ABI for LendingPool.\n     * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n     * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n     * @param user The address of the borrower getting liquidated\n     * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n     * @param liquidatedCollateralAmount The amount of collateral received by the liiquidator\n     * @param liquidator The address of the liquidator\n     * @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\n     * to receive the underlying collateral asset directly\n     **/\n    event LiquidationCall(\n        address indexed collateralAsset,\n        address indexed debtAsset,\n        address indexed user,\n        uint256 debtToCover,\n        uint256 liquidatedCollateralAmount,\n        address liquidator,\n        bool receiveAToken\n    );\n\n    /**\n     * @dev Emitted when the state of a reserve is updated. NOTE: This event is actually declared\n     * in the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal,\n     * the event will actually be fired by the LendingPool contract. The event is therefore replicated here so it\n     * gets added to the LendingPool ABI\n     * @param reserve The address of the underlying asset of the reserve\n     * @param liquidityRate The new liquidity rate\n     * @param stableBorrowRate The new stable borrow rate\n     * @param variableBorrowRate The new variable borrow rate\n     * @param liquidityIndex The new liquidity index\n     * @param variableBorrowIndex The new variable borrow index\n     **/\n    event ReserveDataUpdated(\n        address indexed reserve,\n        uint256 liquidityRate,\n        uint256 stableBorrowRate,\n        uint256 variableBorrowRate,\n        uint256 liquidityIndex,\n        uint256 variableBorrowIndex\n    );\n\n    /**\n     * @dev Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\n     * - E.g. User deposits 100 USDC and gets in return 100 aUSDC\n     * @param asset The address of the underlying asset to deposit\n     * @param amount The amount to be deposited\n     * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n     *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n     *   is a different wallet\n     * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n     *   0 if the action is executed directly by the user, without any middle-man\n     **/\n    function deposit(\n        address asset,\n        uint8 tranche,\n        bool isCollateral,\n        uint256 amount,\n        address onBehalfOf,\n        uint16 referralCode\n    ) external;\n\n    /**\n     * @dev Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned\n     * E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\n     * @param asset The address of the underlying asset to withdraw\n     * @param amount The underlying amount to be withdrawn\n     *   - Send the value type(uint256).max in order to withdraw the whole aToken balance\n     * @param to Address that will receive the underlying, same as msg.sender if the user\n     *   wants to receive it on his own wallet, or a different address if the beneficiary is a\n     *   different wallet\n     * @return The final amount withdrawn\n     **/\n    function withdraw(\n        address asset,\n        uint8 tranche,\n        uint256 amount,\n        address to\n    ) external returns (uint256);\n\n    /**\n     * @dev Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower\n     * already deposited enough collateral, or he was given enough allowance by a credit delegator on the\n     * corresponding debt token (StableDebtToken or VariableDebtToken)\n     * - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet\n     *   and 100 stable/variable debt tokens, depending on the `interestRateMode`\n     * @param asset The address of the underlying asset to borrow\n     * @param amount The amount to be borrowed\n     * @param interestRateMode The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\n     * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n     *   0 if the action is executed directly by the user, without any middle-man\n     * @param onBehalfOf Address of the user who will receive the debt. Should be the address of the borrower itself\n     * calling the function if he wants to borrow against his own collateral, or the address of the credit delegator\n     * if he has been given credit delegation allowance\n     **/\n    function borrow(\n        address asset,\n        uint8 tranche,\n        uint256 amount,\n        uint256 interestRateMode,\n        uint16 referralCode,\n        address onBehalfOf\n    ) external;\n\n    /**\n     * @notice Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned\n     * - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\n     * @param asset The address of the borrowed underlying asset previously borrowed\n     * @param amount The amount to repay\n     * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n     * @param rateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n     * @param onBehalfOf Address of the user who will get his debt reduced/removed. Should be the address of the\n     * user calling the function if he wants to reduce/remove his own debt, or the address of any other\n     * other borrower whose debt should be removed\n     * @return The final amount repaid\n     **/\n    function repay(\n        address asset,\n        uint8 tranche,\n        uint256 amount,\n        uint256 rateMode,\n        address onBehalfOf\n    ) external returns (uint256);\n\n    /**\n     * @dev Allows a borrower to swap his debt between stable and variable mode, or viceversa\n     * @param asset The address of the underlying asset borrowed\n     * @param rateMode The rate mode that the user wants to swap to\n     **/\n    function swapBorrowRateMode(\n        address asset,\n        uint8 tranche,\n        uint256 rateMode\n    ) external;\n\n    /**\n     * @dev Rebalances the stable interest rate of a user to the current stable rate defined on the reserve.\n     * - Users can be rebalanced if the following conditions are satisfied:\n     *     1. Usage ratio is above 95%\n     *     2. the current deposit APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been\n     *        borrowed at a stable rate and depositors are not earning enough\n     * @param asset The address of the underlying asset borrowed\n     * @param user The address of the user to be rebalanced\n     **/\n    function rebalanceStableBorrowRate(\n        address asset,\n        uint8 tranche,\n        address user\n    ) external;\n\n    /**\n     * @dev Allows depositors to enable/disable a specific deposited asset as collateral\n     * @param asset The address of the underlying asset deposited\n     * @param useAsCollateral `true` if the user wants to use the deposit as collateral, `false` otherwise\n     **/\n    function setUserUseReserveAsCollateral(\n        address asset,\n        uint8 tranche,\n        bool useAsCollateral\n    ) external;\n\n    /**\n     * @dev Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1\n     * - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives\n     *   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\n     * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n     * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n     * @param user The address of the borrower getting liquidated\n     * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n     * @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\n     * to receive the underlying collateral asset directly\n     **/\n    function liquidationCall(\n        address collateralAsset,\n        address debtAsset,\n        uint8 tranche,\n        address user,\n        uint256 debtToCover,\n        bool receiveAToken\n    ) external;\n\n    /**\n     * @dev Allows smartcontracts to access the liquidity of the pool within one transaction,\n     * as long as the amount taken plus a fee is returned.\n     * IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration.\n     * For further details please visit https://developers.aave.com\n     * @param receiverAddress The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface\n     * @param assets The addresses of the assets being flash-borrowed\n     * @param amounts The amounts amounts being flash-borrowed\n     * @param modes Types of the debt to open if the flash loan is not returned:\n     *   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver\n     *   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n     *   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n     * @param onBehalfOf The address  that will receive the debt in the case of using on `modes` 1 or 2\n     * @param params Variadic packed params to pass to the receiver as extra information\n     * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n     *   0 if the action is executed directly by the user, without any middle-man\n     **/\n    function flashLoan(\n        address receiverAddress,\n        DataTypes.TrancheAddress[] calldata assets,\n        uint256[] calldata amounts,\n        uint256[] calldata modes,\n        address onBehalfOf,\n        bytes calldata params,\n        uint16 referralCode\n    ) external;\n\n    /**\n     * @dev Returns the user account data across all the reserves\n     * @param user The address of the user\n     * @return totalCollateralETH the total collateral in ETH of the user\n     * @return totalDebtETH the total debt in ETH of the user\n     * @return availableBorrowsETH the borrowing power left of the user\n     * @return currentLiquidationThreshold the liquidation threshold of the user\n     * @return ltv the loan to value of the user\n     * @return healthFactor the current health factor of the user\n     **/\n    function getUserAccountData(address user, uint8 tranche)\n        external\n        view\n        returns (\n            uint256 totalCollateralETH,\n            uint256 totalDebtETH,\n            uint256 availableBorrowsETH,\n            uint256 currentLiquidationThreshold,\n            uint256 ltv,\n            uint256 healthFactor\n        );\n\n    function initReserve(\n        address reserve,\n        address aTokenAddress,\n        address stableDebtAddress,\n        address variableDebtAddress,\n        address interestRateStrategyAddress,\n        uint8 tranche\n    ) external;\n\n    /**\n     * @dev Updates the address of the interest rate strategy contract\n     * - Only callable by the LendingPoolConfigurator contract\n     * @param asset The address of the underlying asset of the reserve\n     * @param _risk The risk of the asset\n     **/\n    function setAssetData(\n        address asset,\n        uint8 _risk,\n        bool _isLendable,\n        bool _allowedHigherTranche,\n        uint8 _assetType\n    ) external;\n\n    function setReserveInterestRateStrategyAddress(\n        address reserve,\n        uint8 tranche,\n        address rateStrategyAddress\n    ) external;\n\n    function setConfiguration(\n        address reserve,\n        uint8 tranche,\n        uint256 configuration\n    ) external;\n\n    /**\n     * @dev Returns the configuration of the reserve\n     * @param asset The address of the underlying asset of the reserve\n     * @return The configuration of the reserve\n     **/\n    function getConfiguration(address asset, uint8 tranche)\n        external\n        view\n        returns (DataTypes.ReserveConfigurationMap memory);\n\n    /**\n     * @dev Returns the configuration of the user across all the reserves\n     * @param user The user address\n     * @return The configuration of the user\n     **/\n    function getUserConfiguration(address user)\n        external\n        view\n        returns (DataTypes.UserConfigurationMap memory);\n\n    /**\n     * @dev Returns the normalized income normalized income of the reserve\n     * @param asset The address of the underlying asset of the reserve\n     * @return The reserve's normalized income\n     */\n    function getReserveNormalizedIncome(address asset, uint8 tranche)\n        external\n        view\n        returns (uint256);\n\n    /**\n     * @dev Returns the normalized variable debt per unit of asset\n     * @param asset The address of the underlying asset of the reserve\n     * @return The reserve normalized variable debt\n     */\n    function getReserveNormalizedVariableDebt(address asset, uint8 tranche)\n        external\n        view\n        returns (uint256);\n\n    /**\n     * @dev Returns the state and configuration of the reserve\n     * @param asset The address of the underlying asset of the reserve\n     * @return The state of the reserve\n     **/\n    function getReserveData(address asset, uint8 tranche)\n        external\n        view\n        returns (DataTypes.ReserveData memory);\n\n    function finalizeTransfer(\n        address asset,\n        uint8 tranche,\n        address from,\n        address to,\n        uint256 amount,\n        uint256 balanceFromAfter,\n        uint256 balanceToBefore\n    ) external;\n\n    function getReservesList() external view returns (address[] memory);\n\n    function getAssetData(address asset)\n        external\n        view\n        returns (DataTypes.AssetData memory);\n\n    function getAddressesProvider()\n        external\n        view\n        returns (ILendingPoolAddressesProvider);\n\n    function setPause(bool val) external;\n\n    function paused() external view returns (bool);\n\n    function editTrancheMultiplier(\n        uint8 tranche,\n        uint256 _liquidityRateMultiplier,\n        uint256 _variableBorrowRateMultiplier,\n        uint256 _stableBorrowRateMultiplier\n    ) external;\n\n    function getTrancheMultiplier(uint8 tranche)\n        external\n        view\n        returns (DataTypes.TrancheMultiplier memory);\n}\n"},"contracts/analytics/libraries/Constants.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity >=0.8.0;\n\nlibrary Constants {\n    function token() internal pure returns (address[22] memory) {\n        address[22] memory tokens = [\n            0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9,\n            0x0D8775F648430679A709E98d2b0Cb6250d2887EF,\n            0x4Fabb145d64652a948d72533023f6E7A623C7C53,\n            0x6B175474E89094C44Da98b954EedeAC495271d0F,\n            0xF629cBd94d3791C9250152BD8dfBDF380E2a3B9c,\n            0xdd974D5C2e2928deA5F71b9825b8b646686BD200,\n            0x514910771AF9Ca656af840dff83E8264EcF986CA,\n            0x0F5D2fB29fb7d3CFeE444a200298f468908cC942,\n            0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2,\n            0x408e41876cCCDC0F92210600ef50372656052a38,\n            0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F,\n            0x57Ab1ec28D129707052df4dF418D58a2D46d5f51,\n            0x0000000000085d4780B73119b644AE5ecd22b376,\n            0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984,\n            0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48,\n            0xdAC17F958D2ee523a2206206994597C13D831ec7,\n            0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599,\n            0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2,\n            0x0bc529c00C6401aEF6D220BE8C6Ea1667F6Ad93e,\n            0xE41d2489571d322189246DaFA5ebDe1F4699F498,\n            0x8798249c2E607446EfB7Ad49eC89dD1865Ff4272,\n            0xc4AD29ba4B3c580e6D59105FFf484999997675Ff\n        ];\n        return tokens;\n    }\n\n    function tokenNames() internal pure returns (string[22] memory) {\n        string[22] memory data = [\n            \"AAVE\",\n            \"BAT\",\n            \"BUSD\",\n            \"DAI\",\n            \"ENJ\",\n            \"KNC\",\n            \"LINK\",\n            \"MANA\",\n            \"MKR\",\n            \"REN\",\n            \"SNX\",\n            \"SUSD\",\n            \"TUSD\",\n            \"UNI\",\n            \"USDC\",\n            \"USDT\",\n            \"WBTC\",\n            \"WETH\",\n            \"YFI\",\n            \"ZRX\",\n            \"xSUSHI\",\n            \"crv3crypto\"\n        ];\n        return data;\n    }\n\n    function ETHPriceOracles() internal pure returns (address[20] memory) {\n        address[20] memory data = [\n            0x6Df09E975c830ECae5bd4eD9d90f3A95a4f88012,\n            0x0d16d4528239e9ee52fa531af613AcdB23D88c94,\n            0x614715d2Af89E6EC99A233818275142cE88d1Cfd,\n            0x773616E4d11A78F511299002da57A0a94577F1f4,\n            0x24D9aB51950F3d62E9144fdC2f3135DAA6Ce8D1B,\n            0x656c0544eF4C98A6a98491833A89204Abb045d6b,\n            0xDC530D9457755926550b59e8ECcdaE7624181557,\n            0x82A44D92D6c329826dc557c5E1Be6ebeC5D5FeB9,\n            0x24551a8Fb2A7211A25a17B1481f043A8a8adC7f2,\n            0x3147D7203354Dc06D9fd350c7a2437bcA92387a4,\n            0x79291A9d692Df95334B1a0B3B4AE6bC606782f8c,\n            0x8e0b7e6062272B5eF4524250bFFF8e5Bd3497757,\n            0x3886BA987236181D98F2401c507Fb8BeA7871dF2,\n            0xD6aA3D25116d8dA79Ea0246c4826EB951872e02e,\n            0x986b5E1e1755e3C2440e960477f25201B0a8bbD4,\n            0xEe9F2375b4bdF6387aa8265dD4FB8F16512A1d46,\n            0xdeb288F737066589598e9214E782fa5A8eD689e8,\n            0x7c5d4F8345e66f68099581Db340cd65B078C41f4,\n            0x2Da4983a622a8498bb1a21FaE9D8F6C664939962,\n            0x9b26214bEC078E68a394AaEbfbffF406Ce14893F\n        ];\n        return data;\n    }\n\n    function USDPriceOracles() internal pure returns (address[20] memory) {\n        address[20] memory data = [\n            0x547a514d5e3769680Ce22B2361c10Ea13619e8a9,\n            0x9441D7556e7820B5ca42082cfa99487D56AcA958,\n            0x833D8Eb16D306ed1FbB5D7A2E019e106B960965A,\n            0xAed0c38402a5d19df6E4c03F4E2DceD6e29c1ee9,\n            0x23905C55dC11D609D5d11Dc604905779545De9a7,\n            0xf8fF43E991A81e6eC886a3D281A2C6cC19aE70Fc,\n            0x2c1d072e956AFFC0D435Cb7AC38EF18d24d9127c,\n            0x56a4857acbcfe3a66965c251628B1c9f1c408C19,\n            0xec1D1B3b0443256cc3860e24a46F108e699484Aa,\n            0x0f59666EDE214281e956cb3b2D0d69415AfF4A01,\n            0xDC3EA94CD0AC27d9A86C180091e7f78C683d3699,\n            0xad35Bd71b9aFE6e4bDc266B345c198eaDEf9Ad94,\n            0xec746eCF986E2927Abd291a2A1716c940100f8Ba,\n            0x553303d460EE0afB37EdFf9bE42922D8FF63220e,\n            0x8fFfFfd4AfB6115b954Bd326cbe7B4BA576818f6,\n            0x3E7d1eAB13ad0104d2750B8863b489D65364e32D,\n            0xF4030086522a5bEEa4988F8cA5B36dbC97BeE88c,\n            0xA027702dbb89fbd58938e4324ac03B58d812b0E1,\n            0x2885d15b8Af22648b98B122b22FDF4D2a56c6023,\n            0xCC1f5d9e6956447630d703C8e93b2345c2DE3D13\n        ];\n        return data;\n    }\n}\n"},"contracts/analytics/types/AnalyticsDataTypes.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity >=0.8.0;\n\nstruct UserBalances {\n    int256[20] ethBalances;\n    int256[20] usdBalances;\n    uint256[20] userBalance;\n    string[20] tokenNames;\n}\n\nstruct UserAccountData {\n    uint256 totalCollateralETH;\n    uint256 totalDebtETH;\n    uint256 availableBorrowsETH;\n    uint256 currentLiquidationThreshold;\n    uint256 ltv;\n    uint256 healthFactor;\n}\n\nstruct TokenReserveData {\n    uint128 liquidityIndex;\n    uint128 variableBorrowIndex;\n    uint128 currentLiquidityRate;\n    uint128 currentVariableBorrowRate;\n    uint128 currentStableBorrowRate;\n    uint40 lastUpdateTimestamp;\n    address aTokenAddress;\n    address stableDebtTokenAddress;\n    address variableDebtTokenAddress;\n    address interestRateStrategyAddress;\n    uint8 id;\n    uint8 tranche;\n}\n\nstruct ApiDataType {\n    UserBalances userBalances;\n    UserAccountData[3] userTrancheData;\n    address[] reserveList;\n    // TokenReserveData[20] tokenReserveData;\n}\n\nstruct AggregatedData {\n    TokenReserveData[] reserveData;\n}\n"},"contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity >=0.8.0;\n\nimport {IERC20} from \"./IERC20.sol\";\n\ninterface IERC20Detailed is IERC20 {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n"},"contracts/misc/interfaces/IAaveOracle.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity >=0.8.0;\n\n/**\n * @title IAaveOracle interface\n * @notice Interface for the Aave oracle.\n **/\n\ninterface IAaveOracle {\n    function BASE_CURRENCY() external view returns (address); // if usd returns 0x0, if eth returns weth address\n\n    function BASE_CURRENCY_UNIT() external view returns (uint256);\n\n    /***********\n    @dev returns the asset price in ETH\n     */\n    function getAssetPrice(address asset) external view returns (uint256);\n}\n"},"contracts/analytics/types/Tokens.sol":{"content":"// SPDX-License-Identifier: agpl 3.0\npragma solidity >=0.8.0;\nimport {DataTypes} from \"../../protocol/libraries/types/DataTypes.sol\";\n\nstruct TokenInfo {\n    string[] names;\n}\n\nstruct TokenData {\n    string symbol;\n    DataTypes.ReserveData reserveData;\n    DataTypes.AssetData assetData;\n}\n\nstruct AggregateData {\n    TokenData[] data;\n}\n"},"contracts/analytics/queries/getTokenReserveData.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity >=0.8.0;\nimport {AnalyticsUtilities} from \"../libraries/AnalyticsUtilities.sol\";\nimport {Constants} from \"../libraries/Constants.sol\";\nimport {IUiPoolDataProviderV2} from \"../../misc/interfaces/IUiPoolDataProviderV2.sol\";\nimport {ILendingPoolAddressesProvider} from \"../../interfaces/ILendingPoolAddressesProvider.sol\";\nimport {TokenReserveData} from \"../types/AnalyticsDataTypes.sol\";\nimport {TokenData} from \"../types/Tokens.sol\";\n\ncontract getTokenReserveData {\n    constructor(address pool, uint8 tranche) {\n        TokenData[22] memory returnData = AnalyticsUtilities\n            .getTokenReserveData(ILendingPoolAddressesProvider(pool), tranche);\n\n        bytes memory _data = abi.encode(returnData);\n        assembly {\n            return(add(0x20, _data), mload(_data))\n        }\n    }\n\n    function getType() public view returns (TokenData[22] memory) {}\n}\n"},"contracts/misc/interfaces/IUiPoolDataProviderV2.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity >=0.8.0;\n\nimport {\n    ILendingPoolAddressesProvider\n} from \"../../interfaces/ILendingPoolAddressesProvider.sol\";\n\ninterface IUiPoolDataProviderV2 {\n    struct AggregatedReserveData {\n        address underlyingAsset;\n        string name;\n        string symbol;\n        uint256 decimals;\n        uint256 baseLTVasCollateral;\n        uint256 reserveLiquidationThreshold;\n        uint256 reserveLiquidationBonus;\n        uint256 reserveFactor;\n        bool usageAsCollateralEnabled;\n        bool borrowingEnabled;\n        bool stableBorrowRateEnabled;\n        bool isActive;\n        bool isFrozen;\n        // base data\n        uint128 liquidityIndex;\n        uint128 variableBorrowIndex;\n        uint128 liquidityRate;\n        uint128 variableBorrowRate;\n        uint128 stableBorrowRate;\n        uint40 lastUpdateTimestamp;\n        address aTokenAddress;\n        address stableDebtTokenAddress;\n        address variableDebtTokenAddress;\n        address interestRateStrategyAddress;\n        //\n        uint256 availableLiquidity;\n        uint256 totalPrincipalStableDebt;\n        uint256 averageStableRate;\n        uint256 stableDebtLastUpdateTimestamp;\n        uint256 totalScaledVariableDebt;\n        uint256 priceInMarketReferenceCurrency;\n        uint256 variableRateSlope1;\n        uint256 variableRateSlope2;\n        uint256 stableRateSlope1;\n        uint256 stableRateSlope2;\n    }\n\n    struct UserReserveData {\n        address underlyingAsset;\n        uint256 scaledATokenBalance;\n        bool usageAsCollateralEnabledOnUser;\n        uint256 stableBorrowRate;\n        uint256 scaledVariableDebt;\n        uint256 principalStableDebt;\n        uint256 stableBorrowLastUpdateTimestamp;\n    }\n\n    struct BaseCurrencyInfo {\n        uint256 marketReferenceCurrencyUnit;\n        int256 marketReferenceCurrencyPriceInUsd;\n        int256 networkBaseTokenPriceInUsd;\n        uint8 networkBaseTokenPriceDecimals;\n    }\n\n    function getReservesList(ILendingPoolAddressesProvider provider)\n        external\n        view\n        returns (address[] memory);\n\n    function getReservesData(ILendingPoolAddressesProvider provider)\n        external\n        view\n        returns (AggregatedReserveData[] memory, BaseCurrencyInfo memory);\n\n    function getUserReservesData(\n        ILendingPoolAddressesProvider provider,\n        address user\n    ) external view returns (UserReserveData[] memory);\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"istanbul","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/oracles/interfaces/ICurveOracle.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/oracles/interfaces/ICurveOracle.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/oracles/interfaces/ICurvePoolV1.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/oracles/interfaces/ICurvePoolV1.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/oracles/interfaces/IERC20.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/oracles/interfaces/IERC20.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/oracles/libs/vMath.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/oracles/libs/vMath.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"8760","formattedMessage":"Warning: This declaration has the same name as another declaration.\n  --> contracts/oracles/libs/vMath.sol:10:9:\n   |\n10 |         uint256 min = array[0];\n   |         ^^^^^^^^^^^\nNote: The other declaration is here:\n --> contracts/oracles/libs/vMath.sol:9:5:\n  |\n9 |     function min(uint256[] calldata array) external pure returns (uint256) {\n  |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"This declaration has the same name as another declaration.","secondarySourceLocations":[{"end":507,"file":"contracts/oracles/libs/vMath.sol","message":"The other declaration is here:","start":236}],"severity":"warning","sourceLocation":{"end":328,"file":"contracts/oracles/libs/vMath.sol","start":317},"type":"Warning"},{"component":"general","errorCode":"8760","formattedMessage":"Warning: This declaration has the same name as another declaration.\n  --> contracts/oracles/libs/vMath.sol:20:9:\n   |\n20 |         uint256 product = nums[0];\n   |         ^^^^^^^^^^^^^^^\nNote: The other declaration is here:\n  --> contracts/oracles/libs/vMath.sol:19:5:\n   |\n19 |     function product(uint256[] calldata nums) external pure returns (uint256) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"This declaration has the same name as another declaration.","secondarySourceLocations":[{"end":747,"file":"contracts/oracles/libs/vMath.sol","message":"The other declaration is here:","start":513}],"severity":"warning","sourceLocation":{"end":612,"file":"contracts/oracles/libs/vMath.sol","start":597},"type":"Warning"},{"component":"general","errorCode":"8760","formattedMessage":"Warning: This declaration has the same name as another declaration.\n  --> contracts/oracles/libs/vMath.sol:28:38:\n   |\n28 |     function geometric_mean(uint8 n, uint256 product)\n   |                                      ^^^^^^^^^^^^^^^\nNote: The other declaration is here:\n  --> contracts/oracles/libs/vMath.sol:19:5:\n   |\n19 |     function product(uint256[] calldata nums) external pure returns (uint256) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"This declaration has the same name as another declaration.","secondarySourceLocations":[{"end":747,"file":"contracts/oracles/libs/vMath.sol","message":"The other declaration is here:","start":513}],"severity":"warning","sourceLocation":{"end":868,"file":"contracts/oracles/libs/vMath.sol","start":853},"type":"Warning"},{"component":"general","errorCode":"2462","formattedMessage":"Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> contracts/misc/AaveOracle.sol:40:5:\n   |\n40 |     constructor(\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.","severity":"warning","sourceLocation":{"end":2296,"file":"contracts/misc/AaveOracle.sol","start":1866},"type":"Warning"},{"component":"general","errorCode":"2462","formattedMessage":"Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> contracts/oracles/CurveWrapper.sol:51:5:\n   |\n51 |     constructor(\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.","severity":"warning","sourceLocation":{"end":3333,"file":"contracts/oracles/CurveWrapper.sol","start":2657},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/oracles/ConvexOracleV2.sol:24:9:\n   |\n24 |         uint16 pid,\n   |         ^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":944,"file":"contracts/oracles/ConvexOracleV2.sol","start":934},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/oracles/ConvexOracleV2.sol:25:9:\n   |\n25 |         address convex_lp,\n   |         ^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":971,"file":"contracts/oracles/ConvexOracleV2.sol","start":954},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/oracles/ConvexOracleV2.sol:26:9:\n   |\n26 |         address curve_lp\n   |         ^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":997,"file":"contracts/oracles/ConvexOracleV2.sol","start":981},"type":"Warning"}],"sources":{"contracts/analytics/libraries/AnalyticsUtilities.sol":{"ast":{"absolutePath":"contracts/analytics/libraries/AnalyticsUtilities.sol","exportedSymbols":{"AggregateData":[426],"AggregatedData":[404],"AnalyticsUtilities":[117],"Constants":[276],"DataTypes":[4238],"IAaveOracle":[2244],"IChainlinkAggregator":[1235],"IERC20Detailed":[602],"ILendingPool":[1676],"ILendingPoolAddressesProvider":[1879],"TokenData":[421],"TokenReserveData":[387],"UserAccountData":[362],"UserBalances":[349]},"id":118,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"37:24:0"},{"absolutePath":"contracts/interfaces/ILendingPool.sol","file":"../../interfaces/ILendingPool.sol","id":3,"nodeType":"ImportDirective","scope":118,"sourceUnit":1677,"src":"62:63:0","symbolAliases":[{"foreign":{"id":2,"name":"ILendingPool","nodeType":"Identifier","overloadedDeclarations":[],"src":"70:12:0","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/protocol/libraries/types/DataTypes.sol","file":"../../protocol/libraries/types/DataTypes.sol","id":5,"nodeType":"ImportDirective","scope":118,"sourceUnit":4239,"src":"126:71:0","symbolAliases":[{"foreign":{"id":4,"name":"DataTypes","nodeType":"Identifier","overloadedDeclarations":[],"src":"134:9:0","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/analytics/libraries/Constants.sol","file":"./Constants.sol","id":7,"nodeType":"ImportDirective","scope":118,"sourceUnit":277,"src":"198:42:0","symbolAliases":[{"foreign":{"id":6,"name":"Constants","nodeType":"Identifier","overloadedDeclarations":[],"src":"206:9:0","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/analytics/types/AnalyticsDataTypes.sol","file":"../types/AnalyticsDataTypes.sol","id":12,"nodeType":"ImportDirective","scope":118,"sourceUnit":405,"src":"241:112:0","symbolAliases":[{"foreign":{"id":8,"name":"UserBalances","nodeType":"Identifier","overloadedDeclarations":[],"src":"249:12:0","typeDescriptions":{}}},{"foreign":{"id":9,"name":"UserAccountData","nodeType":"Identifier","overloadedDeclarations":[],"src":"263:15:0","typeDescriptions":{}}},{"foreign":{"id":10,"name":"AggregatedData","nodeType":"Identifier","overloadedDeclarations":[],"src":"280:14:0","typeDescriptions":{}}},{"foreign":{"id":11,"name":"TokenReserveData","nodeType":"Identifier","overloadedDeclarations":[],"src":"296:16:0","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IChainlinkAggregator.sol","file":"../../interfaces/IChainlinkAggregator.sol","id":14,"nodeType":"ImportDirective","scope":118,"sourceUnit":1236,"src":"354:79:0","symbolAliases":[{"foreign":{"id":13,"name":"IChainlinkAggregator","nodeType":"Identifier","overloadedDeclarations":[],"src":"362:20:0","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol","file":"../../dependencies/openzeppelin/contracts/IERC20Detailed.sol","id":16,"nodeType":"ImportDirective","scope":118,"sourceUnit":603,"src":"434:92:0","symbolAliases":[{"foreign":{"id":15,"name":"IERC20Detailed","nodeType":"Identifier","overloadedDeclarations":[],"src":"442:14:0","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/interfaces/ILendingPoolAddressesProvider.sol","file":"../../interfaces/ILendingPoolAddressesProvider.sol","id":18,"nodeType":"ImportDirective","scope":118,"sourceUnit":1880,"src":"527:97:0","symbolAliases":[{"foreign":{"id":17,"name":"ILendingPoolAddressesProvider","nodeType":"Identifier","overloadedDeclarations":[],"src":"535:29:0","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/misc/interfaces/IAaveOracle.sol","file":"../../misc/interfaces/IAaveOracle.sol","id":20,"nodeType":"ImportDirective","scope":118,"sourceUnit":2245,"src":"625:66:0","symbolAliases":[{"foreign":{"id":19,"name":"IAaveOracle","nodeType":"Identifier","overloadedDeclarations":[],"src":"633:11:0","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/analytics/types/Tokens.sol","file":"../types/Tokens.sol","id":23,"nodeType":"ImportDirective","scope":118,"sourceUnit":427,"src":"692:61:0","symbolAliases":[{"foreign":{"id":21,"name":"AggregateData","nodeType":"Identifier","overloadedDeclarations":[],"src":"700:13:0","typeDescriptions":{}}},{"foreign":{"id":22,"name":"TokenData","nodeType":"Identifier","overloadedDeclarations":[],"src":"715:9:0","typeDescriptions":{}}}],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":117,"linearizedBaseContracts":[117],"name":"AnalyticsUtilities","nodeType":"ContractDefinition","nodes":[{"body":{"id":115,"nodeType":"Block","src":"939:566:0","statements":[{"assignments":[41],"declarations":[{"constant":false,"id":41,"mutability":"mutable","name":"tokens","nodeType":"VariableDeclaration","scope":115,"src":"949:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$22_memory_ptr","typeString":"address[22]"},"typeName":{"baseType":{"id":39,"name":"address","nodeType":"ElementaryTypeName","src":"949:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":40,"length":{"hexValue":"3232","id":38,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"957:2:0","typeDescriptions":{"typeIdentifier":"t_rational_22_by_1","typeString":"int_const 22"},"value":"22"},"nodeType":"ArrayTypeName","src":"949:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$22_storage_ptr","typeString":"address[22]"}},"visibility":"internal"}],"id":45,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":42,"name":"Constants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"977:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Constants_$276_$","typeString":"type(library Constants)"}},"id":43,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"token","nodeType":"MemberAccess","referencedDeclaration":159,"src":"977:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_array$_t_address_$22_memory_ptr_$","typeString":"function () pure returns (address[22] memory)"}},"id":44,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"977:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$22_memory_ptr","typeString":"address[22] memory"}},"nodeType":"VariableDeclarationStatement","src":"949:45:0"},{"assignments":[51],"declarations":[{"constant":false,"id":51,"mutability":"mutable","name":"names","nodeType":"VariableDeclaration","scope":115,"src":"1004:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$22_memory_ptr","typeString":"string[22]"},"typeName":{"baseType":{"id":49,"name":"string","nodeType":"ElementaryTypeName","src":"1004:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":50,"length":{"hexValue":"3232","id":48,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1011:2:0","typeDescriptions":{"typeIdentifier":"t_rational_22_by_1","typeString":"int_const 22"},"value":"22"},"nodeType":"ArrayTypeName","src":"1004:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$22_storage_ptr","typeString":"string[22]"}},"visibility":"internal"}],"id":55,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":52,"name":"Constants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"1030:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Constants_$276_$","typeString":"type(library Constants)"}},"id":53,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"tokenNames","nodeType":"MemberAccess","referencedDeclaration":199,"src":"1030:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_array$_t_string_memory_ptr_$22_memory_ptr_$","typeString":"function () pure returns (string memory[22] memory)"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1030:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$22_memory_ptr","typeString":"string memory[22] memory"}},"nodeType":"VariableDeclarationStatement","src":"1004:48:0"},{"assignments":[58],"declarations":[{"constant":false,"id":58,"mutability":"mutable","name":"lendingPool","nodeType":"VariableDeclaration","scope":115,"src":"1062:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPool_$1676","typeString":"contract ILendingPool"},"typeName":{"id":57,"nodeType":"UserDefinedTypeName","pathNode":{"id":56,"name":"ILendingPool","nodeType":"IdentifierPath","referencedDeclaration":1676,"src":"1062:12:0"},"referencedDeclaration":1676,"src":"1062:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPool_$1676","typeString":"contract ILendingPool"}},"visibility":"internal"}],"id":64,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":60,"name":"provider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"1102:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPoolAddressesProvider_$1879","typeString":"contract ILendingPoolAddressesProvider"}},"id":61,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getLendingPool","nodeType":"MemberAccess","referencedDeclaration":1775,"src":"1102:23:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":62,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1102:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":59,"name":"ILendingPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"1089:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILendingPool_$1676_$","typeString":"type(contract ILendingPool)"}},"id":63,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1089:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPool_$1676","typeString":"contract ILendingPool"}},"nodeType":"VariableDeclarationStatement","src":"1062:66:0"},{"assignments":[70],"declarations":[{"constant":false,"id":70,"mutability":"mutable","name":"returnData","nodeType":"VariableDeclaration","scope":115,"src":"1138:31:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenData_$421_memory_ptr_$22_memory_ptr","typeString":"struct TokenData[22]"},"typeName":{"baseType":{"id":68,"nodeType":"UserDefinedTypeName","pathNode":{"id":67,"name":"TokenData","nodeType":"IdentifierPath","referencedDeclaration":421,"src":"1138:9:0"},"referencedDeclaration":421,"src":"1138:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_TokenData_$421_storage_ptr","typeString":"struct TokenData"}},"id":69,"length":{"hexValue":"3232","id":66,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1148:2:0","typeDescriptions":{"typeIdentifier":"t_rational_22_by_1","typeString":"int_const 22"},"value":"22"},"nodeType":"ArrayTypeName","src":"1138:13:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenData_$421_storage_$22_storage_ptr","typeString":"struct TokenData[22]"}},"visibility":"internal"}],"id":71,"nodeType":"VariableDeclarationStatement","src":"1138:31:0"},{"body":{"id":111,"nodeType":"Block","src":"1221:250:0","statements":[{"assignments":[85],"declarations":[{"constant":false,"id":85,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":111,"src":"1235:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenData_$421_memory_ptr","typeString":"struct TokenData"},"typeName":{"id":84,"nodeType":"UserDefinedTypeName","pathNode":{"id":83,"name":"TokenData","nodeType":"IdentifierPath","referencedDeclaration":421,"src":"1235:9:0"},"referencedDeclaration":421,"src":"1235:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_TokenData_$421_storage_ptr","typeString":"struct TokenData"}},"visibility":"internal"}],"id":104,"initialValue":{"arguments":[{"baseExpression":{"id":87,"name":"names","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"1286:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$22_memory_ptr","typeString":"string memory[22] memory"}},"id":89,"indexExpression":{"id":88,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"1292:1:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1286:8:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"baseExpression":{"id":92,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"1339:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$22_memory_ptr","typeString":"address[22] memory"}},"id":94,"indexExpression":{"id":93,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"1346:1:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1339:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":95,"name":"tranche","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"1350:7:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":90,"name":"lendingPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"1312:11:0","typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPool_$1676","typeString":"contract ILendingPool"}},"id":91,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getReserveData","nodeType":"MemberAccess","referencedDeclaration":1609,"src":"1312:26:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint8_$returns$_t_struct$_ReserveData_$4115_memory_ptr_$","typeString":"function (address,uint8) view external returns (struct DataTypes.ReserveData memory)"}},"id":96,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1312:46:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReserveData_$4115_memory_ptr","typeString":"struct DataTypes.ReserveData memory"}},{"arguments":[{"baseExpression":{"id":99,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"1401:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$22_memory_ptr","typeString":"address[22] memory"}},"id":101,"indexExpression":{"id":100,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"1408:1:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1401:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":97,"name":"lendingPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"1376:11:0","typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPool_$1676","typeString":"contract ILendingPool"}},"id":98,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAssetData","nodeType":"MemberAccess","referencedDeclaration":1640,"src":"1376:24:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_struct$_AssetData_$4082_memory_ptr_$","typeString":"function (address) view external returns (struct DataTypes.AssetData memory)"}},"id":102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1376:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$4082_memory_ptr","typeString":"struct DataTypes.AssetData memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_struct$_ReserveData_$4115_memory_ptr","typeString":"struct DataTypes.ReserveData memory"},{"typeIdentifier":"t_struct$_AssetData_$4082_memory_ptr","typeString":"struct DataTypes.AssetData memory"}],"id":86,"name":"TokenData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"1259:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_TokenData_$421_storage_ptr_$","typeString":"type(struct TokenData storage pointer)"}},"id":103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1259:166:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TokenData_$421_memory_ptr","typeString":"struct TokenData memory"}},"nodeType":"VariableDeclarationStatement","src":"1235:190:0"},{"expression":{"id":109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":105,"name":"returnData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":70,"src":"1440:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenData_$421_memory_ptr_$22_memory_ptr","typeString":"struct TokenData memory[22] memory"}},"id":107,"indexExpression":{"id":106,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"1451:1:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1440:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_TokenData_$421_memory_ptr","typeString":"struct TokenData memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":108,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"1456:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_TokenData_$421_memory_ptr","typeString":"struct TokenData memory"}},"src":"1440:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_TokenData_$421_memory_ptr","typeString":"struct TokenData memory"}},"id":110,"nodeType":"ExpressionStatement","src":"1440:20:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":76,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"1197:1:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":77,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"1201:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$22_memory_ptr","typeString":"address[22] memory"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1201:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1197:17:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":112,"initializationExpression":{"assignments":[73],"declarations":[{"constant":false,"id":73,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":112,"src":"1184:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":72,"name":"uint8","nodeType":"ElementaryTypeName","src":"1184:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":75,"initialValue":{"hexValue":"30","id":74,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1194:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1184:11:0"},"loopExpression":{"expression":{"id":81,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1216:3:0","subExpression":{"id":80,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"1216:1:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":82,"nodeType":"ExpressionStatement","src":"1216:3:0"},"nodeType":"ForStatement","src":"1179:292:0"},{"expression":{"id":113,"name":"returnData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":70,"src":"1488:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenData_$421_memory_ptr_$22_memory_ptr","typeString":"struct TokenData memory[22] memory"}},"functionReturnParameters":35,"id":114,"nodeType":"Return","src":"1481:17:0"}]},"id":116,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenReserveData","nodeType":"FunctionDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26,"mutability":"mutable","name":"provider","nodeType":"VariableDeclaration","scope":116,"src":"826:38:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPoolAddressesProvider_$1879","typeString":"contract ILendingPoolAddressesProvider"},"typeName":{"id":25,"nodeType":"UserDefinedTypeName","pathNode":{"id":24,"name":"ILendingPoolAddressesProvider","nodeType":"IdentifierPath","referencedDeclaration":1879,"src":"826:29:0"},"referencedDeclaration":1879,"src":"826:29:0","typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPoolAddressesProvider_$1879","typeString":"contract ILendingPoolAddressesProvider"}},"visibility":"internal"},{"constant":false,"id":28,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":116,"src":"874:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":27,"name":"uint8","nodeType":"ElementaryTypeName","src":"874:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"816:77:0"},"returnParameters":{"id":35,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":116,"src":"917:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenData_$421_memory_ptr_$22_memory_ptr","typeString":"struct TokenData[22]"},"typeName":{"baseType":{"id":31,"nodeType":"UserDefinedTypeName","pathNode":{"id":30,"name":"TokenData","nodeType":"IdentifierPath","referencedDeclaration":421,"src":"917:9:0"},"referencedDeclaration":421,"src":"917:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_TokenData_$421_storage_ptr","typeString":"struct TokenData"}},"id":33,"length":{"hexValue":"3232","id":32,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"927:2:0","typeDescriptions":{"typeIdentifier":"t_rational_22_by_1","typeString":"int_const 22"},"value":"22"},"nodeType":"ArrayTypeName","src":"917:13:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenData_$421_storage_$22_storage_ptr","typeString":"struct TokenData[22]"}},"visibility":"internal"}],"src":"916:22:0"},"scope":117,"src":"788:717:0","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":118,"src":"755:936:0"}],"src":"37:1655:0"},"id":0},"contracts/analytics/libraries/Constants.sol":{"ast":{"absolutePath":"contracts/analytics/libraries/Constants.sol","exportedSymbols":{"Constants":[276]},"id":277,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":119,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"37:24:1"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":276,"linearizedBaseContracts":[276],"name":"Constants","nodeType":"ContractDefinition","nodes":[{"body":{"id":158,"nodeType":"Block","src":"147:1310:1","statements":[{"assignments":[131],"declarations":[{"constant":false,"id":131,"mutability":"mutable","name":"tokens","nodeType":"VariableDeclaration","scope":158,"src":"157:25:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$22_memory_ptr","typeString":"address[22]"},"typeName":{"baseType":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"157:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":130,"length":{"hexValue":"3232","id":128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"165:2:1","typeDescriptions":{"typeIdentifier":"t_rational_22_by_1","typeString":"int_const 22"},"value":"22"},"nodeType":"ArrayTypeName","src":"157:11:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$22_storage_ptr","typeString":"address[22]"}},"visibility":"internal"}],"id":155,"initialValue":{"components":[{"hexValue":"307837466336363530306338344137364164376539633933343337624663354163333345324444614539","id":132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"199:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9"},{"hexValue":"307830443837373546363438343330363739413730394539386432623043623632353064323838374546","id":133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"255:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0D8775F648430679A709E98d2b0Cb6250d2887EF"},{"hexValue":"307834466162623134356436343635326139343864373235333330323366364537413632334337433533","id":134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"311:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x4Fabb145d64652a948d72533023f6E7A623C7C53"},{"hexValue":"307836423137353437344538393039344334344461393862393534456564654143343935323731643046","id":135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"367:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x6B175474E89094C44Da98b954EedeAC495271d0F"},{"hexValue":"307846363239634264393464333739314339323530313532424438646642444633383045326133423963","id":136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"423:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xF629cBd94d3791C9250152BD8dfBDF380E2a3B9c"},{"hexValue":"307864643937344435433265323932386465413546373162393832356238623634363638364244323030","id":137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"479:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xdd974D5C2e2928deA5F71b9825b8b646686BD200"},{"hexValue":"307835313439313037373141463943613635366166383430646666383345383236344563463938364341","id":138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"535:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x514910771AF9Ca656af840dff83E8264EcF986CA"},{"hexValue":"307830463544326642323966623764334346654534343461323030323938663436383930386343393432","id":139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"591:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0F5D2fB29fb7d3CFeE444a200298f468908cC942"},{"hexValue":"307839663846373261413933303463384235393364353535463132654636353839634333413537394132","id":140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"647:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2"},{"hexValue":"307834303865343138373663434344433046393232313036303065663530333732363536303532613338","id":141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"703:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x408e41876cCCDC0F92210600ef50372656052a38"},{"hexValue":"307843303131613733656538353736466234364635453163353735316341334239466530616632613646","id":142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"759:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F"},{"hexValue":"307835374162316563323844313239373037303532646634644634313844353861324434366435663531","id":143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"815:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x57Ab1ec28D129707052df4dF418D58a2D46d5f51"},{"hexValue":"307830303030303030303030303835643437383042373331313962363434414535656364323262333736","id":144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"871:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0000000000085d4780B73119b644AE5ecd22b376"},{"hexValue":"307831663938343061383564356146356266314431373632463932354244414464433432303146393834","id":145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"927:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984"},{"hexValue":"307841306238363939316336323138623336633164313944346132653945623063453336303665423438","id":146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"983:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"},{"hexValue":"307864414331374639353844326565353233613232303632303639393435393743313344383331656337","id":147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1039:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xdAC17F958D2ee523a2206206994597C13D831ec7"},{"hexValue":"307832323630464143354535353432613737334161343466424366654466374331393362633243353939","id":148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1095:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599"},{"hexValue":"307843303261614133396232323346453844304130653543344632376541443930383343373536436332","id":149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1151:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"},{"hexValue":"307830626335323963303043363430316145463644323230424538433645613136363746364164393365","id":150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1207:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0bc529c00C6401aEF6D220BE8C6Ea1667F6Ad93e"},{"hexValue":"307845343164323438393537316433323231383932343644614641356562446531463436393946343938","id":151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1263:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xE41d2489571d322189246DaFA5ebDe1F4699F498"},{"hexValue":"307838373938323439633245363037343436456642374164343965433839644431383635466634323732","id":152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1319:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x8798249c2E607446EfB7Ad49eC89dD1865Ff4272"},{"hexValue":"307863344144323962613442336335383065364435393130354646663438343939393939373637354666","id":153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1375:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xc4AD29ba4B3c580e6D59105FFf484999997675Ff"}],"id":154,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"185:1242:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$22_memory_ptr","typeString":"address[22] memory"}},"nodeType":"VariableDeclarationStatement","src":"157:1270:1"},{"expression":{"id":156,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"1444:6:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$22_memory_ptr","typeString":"address[22] memory"}},"functionReturnParameters":125,"id":157,"nodeType":"Return","src":"1437:13:1"}]},"id":159,"implemented":true,"kind":"function","modifiers":[],"name":"token","nodeType":"FunctionDefinition","parameters":{"id":120,"nodeType":"ParameterList","parameters":[],"src":"101:2:1"},"returnParameters":{"id":125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":124,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":159,"src":"127:18:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$22_memory_ptr","typeString":"address[22]"},"typeName":{"baseType":{"id":121,"name":"address","nodeType":"ElementaryTypeName","src":"127:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":123,"length":{"hexValue":"3232","id":122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"135:2:1","typeDescriptions":{"typeIdentifier":"t_rational_22_by_1","typeString":"int_const 22"},"value":"22"},"nodeType":"ArrayTypeName","src":"127:11:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$22_storage_ptr","typeString":"address[22]"}},"visibility":"internal"}],"src":"126:20:1"},"scope":276,"src":"87:1370:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":198,"nodeType":"Block","src":"1527:511:1","statements":[{"assignments":[171],"declarations":[{"constant":false,"id":171,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":198,"src":"1537:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$22_memory_ptr","typeString":"string[22]"},"typeName":{"baseType":{"id":169,"name":"string","nodeType":"ElementaryTypeName","src":"1537:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":170,"length":{"hexValue":"3232","id":168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1544:2:1","typeDescriptions":{"typeIdentifier":"t_rational_22_by_1","typeString":"int_const 22"},"value":"22"},"nodeType":"ArrayTypeName","src":"1537:10:1","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$22_storage_ptr","typeString":"string[22]"}},"visibility":"internal"}],"id":195,"initialValue":{"components":[{"hexValue":"41415645","id":172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1576:6:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_de46fbfa339d54cd65b79d8320a7a53c78177565c2aaf4c8b13eed7865e7cfc8","typeString":"literal_string \"AAVE\""},"value":"AAVE"},{"hexValue":"424154","id":173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1596:5:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_3ec6762bdf44eb044276fec7d12c1bb640cb139cfd533f93eeebba5414f5db55","typeString":"literal_string \"BAT\""},"value":"BAT"},{"hexValue":"42555344","id":174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1615:6:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_54c512ac779647672b8d02e2fe2dc10f79bbf19f719d887221696215fd24e9f1","typeString":"literal_string \"BUSD\""},"value":"BUSD"},{"hexValue":"444149","id":175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1635:5:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_a5e92f3efb6826155f1f728e162af9d7cda33a574a1153b58f03ea01cc37e568","typeString":"literal_string \"DAI\""},"value":"DAI"},{"hexValue":"454e4a","id":176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1654:5:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_d2e8a4874d10e66c97831ca0878a1d2d65c936343f42a44dc1fcb40475db34fa","typeString":"literal_string \"ENJ\""},"value":"ENJ"},{"hexValue":"4b4e43","id":177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1673:5:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_e44e7f628ff17b7c7961d3f0150b75ab99038e99c1bfc32d5721c1ca23747cbc","typeString":"literal_string \"KNC\""},"value":"KNC"},{"hexValue":"4c494e4b","id":178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1692:6:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_921a3539bcb764c889432630877414523e7fbca00c211bc787aeae69e2e3a779","typeString":"literal_string \"LINK\""},"value":"LINK"},{"hexValue":"4d414e41","id":179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1712:6:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_4605d046b0132734b6fc45e75049e1422f8ec9d9cdeec93f928bdb57662cecdc","typeString":"literal_string \"MANA\""},"value":"MANA"},{"hexValue":"4d4b52","id":180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1732:5:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_ec76ec3a7e5f010a9229e69fa1945af6f0c6cc5b0a625bf03bd6381222192020","typeString":"literal_string \"MKR\""},"value":"MKR"},{"hexValue":"52454e","id":181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1751:5:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f3045e2a4127a16411506ed3ee0d680edc88abec4ec54f5803cb81605dbdf79","typeString":"literal_string \"REN\""},"value":"REN"},{"hexValue":"534e58","id":182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1770:5:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c33e514e79311fe606801af4b4f343c83a3b72dca711239a516f2103673922d1","typeString":"literal_string \"SNX\""},"value":"SNX"},{"hexValue":"53555344","id":183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1789:6:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_e18df262d6d0bec60a8d935280235a1a1ee38eabbe83ca3eb9a1ed48b31ac8cb","typeString":"literal_string \"SUSD\""},"value":"SUSD"},{"hexValue":"54555344","id":184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1809:6:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_a1b8d8f7e538bb573797c963eeeed40d0bcb9f28c56104417d0da1b372ae3051","typeString":"literal_string \"TUSD\""},"value":"TUSD"},{"hexValue":"554e49","id":185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1829:5:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_fba01d52a7cd84480d0573725899486a0b5e55c20ff45d6628874349375d1650","typeString":"literal_string \"UNI\""},"value":"UNI"},{"hexValue":"55534443","id":186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1848:6:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_d6aca1be9729c13d677335161321649cccae6a591554772516700f986f942eaa","typeString":"literal_string \"USDC\""},"value":"USDC"},{"hexValue":"55534454","id":187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1868:6:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0","typeString":"literal_string \"USDT\""},"value":"USDT"},{"hexValue":"57425443","id":188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1888:6:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_98da2c5e4c6b1db946694570273b859a6e4083ccc8faa155edfc4c54eb3cfd73","typeString":"literal_string \"WBTC\""},"value":"WBTC"},{"hexValue":"57455448","id":189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1908:6:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_0f8a193ff464434486c0daf7db2a895884365d2bc84ba47a68fcf89c1b14b5b8","typeString":"literal_string \"WETH\""},"value":"WETH"},{"hexValue":"594649","id":190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1928:5:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_ec34391362c28ee226b3b8624a699ee507a40fa771fd01d38b03ac7b70998bbe","typeString":"literal_string \"YFI\""},"value":"YFI"},{"hexValue":"5a5258","id":191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1947:5:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_b8612e326dd19fc983e73ae3bc23fa1c78a3e01478574fa7ceb5b57e589dcebd","typeString":"literal_string \"ZRX\""},"value":"ZRX"},{"hexValue":"785355534849","id":192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1966:8:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_eafaa563273a4fdf984f5a9f1836dba7d5800658b802d449eb6ee18fce3d7c81","typeString":"literal_string \"xSUSHI\""},"value":"xSUSHI"},{"hexValue":"6372763363727970746f","id":193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1988:12:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_3bccc030cdb0fe19b168c7c1df8f9f5a357c03eb49b70f7713ae503a67eebf81","typeString":"literal_string \"crv3crypto\""},"value":"crv3crypto"}],"id":194,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1562:448:1","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$22_memory_ptr","typeString":"string memory[22] memory"}},"nodeType":"VariableDeclarationStatement","src":"1537:473:1"},{"expression":{"id":196,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"2027:4:1","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$22_memory_ptr","typeString":"string memory[22] memory"}},"functionReturnParameters":165,"id":197,"nodeType":"Return","src":"2020:11:1"}]},"id":199,"implemented":true,"kind":"function","modifiers":[],"name":"tokenNames","nodeType":"FunctionDefinition","parameters":{"id":160,"nodeType":"ParameterList","parameters":[],"src":"1482:2:1"},"returnParameters":{"id":165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":164,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":199,"src":"1508:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$22_memory_ptr","typeString":"string[22]"},"typeName":{"baseType":{"id":161,"name":"string","nodeType":"ElementaryTypeName","src":"1508:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":163,"length":{"hexValue":"3232","id":162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1515:2:1","typeDescriptions":{"typeIdentifier":"t_rational_22_by_1","typeString":"int_const 22"},"value":"22"},"nodeType":"ArrayTypeName","src":"1508:10:1","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$22_storage_ptr","typeString":"string[22]"}},"visibility":"internal"}],"src":"1507:19:1"},"scope":276,"src":"1463:575:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":236,"nodeType":"Block","src":"2114:1194:1","statements":[{"assignments":[211],"declarations":[{"constant":false,"id":211,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":236,"src":"2124:23:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$20_memory_ptr","typeString":"address[20]"},"typeName":{"baseType":{"id":209,"name":"address","nodeType":"ElementaryTypeName","src":"2124:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":210,"length":{"hexValue":"3230","id":208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2132:2:1","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"nodeType":"ArrayTypeName","src":"2124:11:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$20_storage_ptr","typeString":"address[20]"}},"visibility":"internal"}],"id":233,"initialValue":{"components":[{"hexValue":"307836446630394539373563383330454361653562643465443964393066334139356134663838303132","id":212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2164:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x6Df09E975c830ECae5bd4eD9d90f3A95a4f88012"},{"hexValue":"307830643136643435323832333965396565353266613533316166363133416364423233443838633934","id":213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2220:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0d16d4528239e9ee52fa531af613AcdB23D88c94"},{"hexValue":"307836313437313564324166383945364543393941323333383138323735313432634538386431436664","id":214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2276:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x614715d2Af89E6EC99A233818275142cE88d1Cfd"},{"hexValue":"307837373336313645346431314137384635313132393930303264613537413061393435373746316634","id":215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2332:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x773616E4d11A78F511299002da57A0a94577F1f4"},{"hexValue":"307832344439614235313935304633643632453931343466644332663331333544414136436538443142","id":216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2388:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x24D9aB51950F3d62E9144fdC2f3135DAA6Ce8D1B"},{"hexValue":"307836353663303534346546344339384136613938343931383333413839323034416262303435643662","id":217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2444:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x656c0544eF4C98A6a98491833A89204Abb045d6b"},{"hexValue":"307844433533304439343537373535393236353530623539653845436364614537363234313831353537","id":218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2500:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xDC530D9457755926550b59e8ECcdaE7624181557"},{"hexValue":"307838324134344439324436633332393832366463353537633545314265366562654335443546654239","id":219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2556:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x82A44D92D6c329826dc557c5E1Be6ebeC5D5FeB9"},{"hexValue":"307832343535316138466232413732313141323561313742313438316630343341386138616443376632","id":220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2612:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x24551a8Fb2A7211A25a17B1481f043A8a8adC7f2"},{"hexValue":"307833313437443732303333353444633036443966643335306337613234333762634139323338376134","id":221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2668:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x3147D7203354Dc06D9fd350c7a2437bcA92387a4"},{"hexValue":"307837393239314139643639324466393533333442316130423342344145366243363036373832663863","id":222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2724:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x79291A9d692Df95334B1a0B3B4AE6bC606782f8c"},{"hexValue":"307838653062376536303632323732423565463435323432353062464646386535426433343937373537","id":223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x8e0b7e6062272B5eF4524250bFFF8e5Bd3497757"},{"hexValue":"307833383836424139383732333631383144393846323430316335303746623842654137383731644632","id":224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2836:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x3886BA987236181D98F2401c507Fb8BeA7871dF2"},{"hexValue":"307844366141334432353131366438644137394561303234366334383236454239353138373265303265","id":225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2892:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xD6aA3D25116d8dA79Ea0246c4826EB951872e02e"},{"hexValue":"307839383662354531653137353565334332343430653936303437376632353230314230613862624434","id":226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2948:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x986b5E1e1755e3C2440e960477f25201B0a8bbD4"},{"hexValue":"307845653946323337356234626446363338376161383236356444344642384631363531324131643436","id":227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3004:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xEe9F2375b4bdF6387aa8265dD4FB8F16512A1d46"},{"hexValue":"307864656232383846373337303636353839353938653932313445373832666135413865443638396538","id":228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3060:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xdeb288F737066589598e9214E782fa5A8eD689e8"},{"hexValue":"307837633564344638333435653636663638303939353831446233343063643635423037384334316634","id":229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3116:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x7c5d4F8345e66f68099581Db340cd65B078C41f4"},{"hexValue":"307832446134393833613632326138343938626231613231466145394438463643363634393339393632","id":230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3172:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x2Da4983a622a8498bb1a21FaE9D8F6C664939962"},{"hexValue":"307839623236323134624543303738453638613339344161456266626666463430364365313438393346","id":231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3228:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x9b26214bEC078E68a394AaEbfbffF406Ce14893F"}],"id":232,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2150:1130:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$20_memory_ptr","typeString":"address[20] memory"}},"nodeType":"VariableDeclarationStatement","src":"2124:1156:1"},{"expression":{"id":234,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"3297:4:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$20_memory_ptr","typeString":"address[20] memory"}},"functionReturnParameters":205,"id":235,"nodeType":"Return","src":"3290:11:1"}]},"id":237,"implemented":true,"kind":"function","modifiers":[],"name":"ETHPriceOracles","nodeType":"FunctionDefinition","parameters":{"id":200,"nodeType":"ParameterList","parameters":[],"src":"2068:2:1"},"returnParameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":237,"src":"2094:18:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$20_memory_ptr","typeString":"address[20]"},"typeName":{"baseType":{"id":201,"name":"address","nodeType":"ElementaryTypeName","src":"2094:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":203,"length":{"hexValue":"3230","id":202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2102:2:1","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"nodeType":"ArrayTypeName","src":"2094:11:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$20_storage_ptr","typeString":"address[20]"}},"visibility":"internal"}],"src":"2093:20:1"},"scope":276,"src":"2044:1264:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":274,"nodeType":"Block","src":"3384:1194:1","statements":[{"assignments":[249],"declarations":[{"constant":false,"id":249,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":274,"src":"3394:23:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$20_memory_ptr","typeString":"address[20]"},"typeName":{"baseType":{"id":247,"name":"address","nodeType":"ElementaryTypeName","src":"3394:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":248,"length":{"hexValue":"3230","id":246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3402:2:1","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"nodeType":"ArrayTypeName","src":"3394:11:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$20_storage_ptr","typeString":"address[20]"}},"visibility":"internal"}],"id":271,"initialValue":{"components":[{"hexValue":"307835343761353134643565333736393638304365323242323336316331304561313336313965386139","id":250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3434:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x547a514d5e3769680Ce22B2361c10Ea13619e8a9"},{"hexValue":"307839343431443735353665373832304235636134323038326366613939343837443536416341393538","id":251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3490:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x9441D7556e7820B5ca42082cfa99487D56AcA958"},{"hexValue":"307838333344384562313644333036656431466242354437413245303139653130364239363039363541","id":252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3546:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x833D8Eb16D306ed1FbB5D7A2E019e106B960965A"},{"hexValue":"307841656430633338343032613564313964663645346330334634453244636544366532396331656539","id":253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3602:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xAed0c38402a5d19df6E4c03F4E2DceD6e29c1ee9"},{"hexValue":"307832333930354335356443313144363039443564313144633630343930353737393534354465396137","id":254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3658:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x23905C55dC11D609D5d11Dc604905779545De9a7"},{"hexValue":"307866386646343345393931413831653665433838366133443238314132433663433139614537304663","id":255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3714:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xf8fF43E991A81e6eC886a3D281A2C6cC19aE70Fc"},{"hexValue":"307832633164303732653935364146464330443433354362374143333845463138643234643931323763","id":256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3770:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x2c1d072e956AFFC0D435Cb7AC38EF18d24d9127c"},{"hexValue":"307835366134383537616362636665336136363936356332353136323842316339663163343038433139","id":257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3826:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x56a4857acbcfe3a66965c251628B1c9f1c408C19"},{"hexValue":"307865633144314233623034343332353663633338363065323461343646313038653639393438344161","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3882:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xec1D1B3b0443256cc3860e24a46F108e699484Aa"},{"hexValue":"307830663539363636454445323134323831653935366362336232443064363934313541664634413031","id":259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3938:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0f59666EDE214281e956cb3b2D0d69415AfF4A01"},{"hexValue":"307844433345413934434430414332376439413836433138303039316537663738433638336433363939","id":260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3994:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xDC3EA94CD0AC27d9A86C180091e7f78C683d3699"},{"hexValue":"307861643335426437316239614645366534624463323636423334356331393865614445663941643934","id":261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4050:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xad35Bd71b9aFE6e4bDc266B345c198eaDEf9Ad94"},{"hexValue":"307865633734366543463938364532393237416264323931613241313731366339343031303066384261","id":262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4106:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xec746eCF986E2927Abd291a2A1716c940100f8Ba"},{"hexValue":"307835353333303364343630454530616642333745644666396245343239323244384646363332323065","id":263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4162:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x553303d460EE0afB37EdFf9bE42922D8FF63220e"},{"hexValue":"307838664666466664344166423631313562393534426433323663626537423442413537363831386636","id":264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4218:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x8fFfFfd4AfB6115b954Bd326cbe7B4BA576818f6"},{"hexValue":"307833453764316541423133616430313034643237353042383836336234383944363533363465333244","id":265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4274:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x3E7d1eAB13ad0104d2750B8863b489D65364e32D"},{"hexValue":"307846343033303038363532326135624545613439383846386341354233366462433937426545383863","id":266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4330:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xF4030086522a5bEEa4988F8cA5B36dbC97BeE88c"},{"hexValue":"307841303237373032646262383966626435383933386534333234616330334235386438313262304531","id":267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4386:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xA027702dbb89fbd58938e4324ac03B58d812b0E1"},{"hexValue":"307832383835643135623841663232363438623938423132326232324644463444326135366336303233","id":268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4442:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x2885d15b8Af22648b98B122b22FDF4D2a56c6023"},{"hexValue":"307843433166356439653639353634343736333064373033433865393362323334356332444533443133","id":269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4498:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xCC1f5d9e6956447630d703C8e93b2345c2DE3D13"}],"id":270,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3420:1130:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$20_memory_ptr","typeString":"address[20] memory"}},"nodeType":"VariableDeclarationStatement","src":"3394:1156:1"},{"expression":{"id":272,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"4567:4:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$20_memory_ptr","typeString":"address[20] memory"}},"functionReturnParameters":243,"id":273,"nodeType":"Return","src":"4560:11:1"}]},"id":275,"implemented":true,"kind":"function","modifiers":[],"name":"USDPriceOracles","nodeType":"FunctionDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[],"src":"3338:2:1"},"returnParameters":{"id":243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":242,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":275,"src":"3364:18:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$20_memory_ptr","typeString":"address[20]"},"typeName":{"baseType":{"id":239,"name":"address","nodeType":"ElementaryTypeName","src":"3364:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":241,"length":{"hexValue":"3230","id":240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3372:2:1","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"nodeType":"ArrayTypeName","src":"3364:11:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$20_storage_ptr","typeString":"address[20]"}},"visibility":"internal"}],"src":"3363:20:1"},"scope":276,"src":"3314:1264:1","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":277,"src":"63:4517:1"}],"src":"37:4544:1"},"id":1},"contracts/analytics/queries/getTokenReserveData.sol":{"ast":{"absolutePath":"contracts/analytics/queries/getTokenReserveData.sol","exportedSymbols":{"AnalyticsUtilities":[117],"Constants":[276],"ILendingPoolAddressesProvider":[1879],"IUiPoolDataProviderV2":[2374],"TokenData":[421],"TokenReserveData":[387],"getTokenReserveData":[330]},"id":331,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":278,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"37:24:2"},{"absolutePath":"contracts/analytics/libraries/AnalyticsUtilities.sol","file":"../libraries/AnalyticsUtilities.sol","id":280,"nodeType":"ImportDirective","scope":331,"sourceUnit":118,"src":"62:71:2","symbolAliases":[{"foreign":{"id":279,"name":"AnalyticsUtilities","nodeType":"Identifier","overloadedDeclarations":[],"src":"70:18:2","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/analytics/libraries/Constants.sol","file":"../libraries/Constants.sol","id":282,"nodeType":"ImportDirective","scope":331,"sourceUnit":277,"src":"134:53:2","symbolAliases":[{"foreign":{"id":281,"name":"Constants","nodeType":"Identifier","overloadedDeclarations":[],"src":"142:9:2","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/misc/interfaces/IUiPoolDataProviderV2.sol","file":"../../misc/interfaces/IUiPoolDataProviderV2.sol","id":284,"nodeType":"ImportDirective","scope":331,"sourceUnit":2375,"src":"188:86:2","symbolAliases":[{"foreign":{"id":283,"name":"IUiPoolDataProviderV2","nodeType":"Identifier","overloadedDeclarations":[],"src":"196:21:2","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/interfaces/ILendingPoolAddressesProvider.sol","file":"../../interfaces/ILendingPoolAddressesProvider.sol","id":286,"nodeType":"ImportDirective","scope":331,"sourceUnit":1880,"src":"275:97:2","symbolAliases":[{"foreign":{"id":285,"name":"ILendingPoolAddressesProvider","nodeType":"Identifier","overloadedDeclarations":[],"src":"283:29:2","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/analytics/types/AnalyticsDataTypes.sol","file":"../types/AnalyticsDataTypes.sol","id":288,"nodeType":"ImportDirective","scope":331,"sourceUnit":405,"src":"373:65:2","symbolAliases":[{"foreign":{"id":287,"name":"TokenReserveData","nodeType":"Identifier","overloadedDeclarations":[],"src":"381:16:2","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/analytics/types/Tokens.sol","file":"../types/Tokens.sol","id":290,"nodeType":"ImportDirective","scope":331,"sourceUnit":427,"src":"439:46:2","symbolAliases":[{"foreign":{"id":289,"name":"TokenData","nodeType":"Identifier","overloadedDeclarations":[],"src":"447:9:2","typeDescriptions":{}}}],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":330,"linearizedBaseContracts":[330],"name":"getTokenReserveData","nodeType":"ContractDefinition","nodes":[{"body":{"id":319,"nodeType":"Block","src":"563:282:2","statements":[{"assignments":[302],"declarations":[{"constant":false,"id":302,"mutability":"mutable","name":"returnData","nodeType":"VariableDeclaration","scope":319,"src":"573:31:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenData_$421_memory_ptr_$22_memory_ptr","typeString":"struct TokenData[22]"},"typeName":{"baseType":{"id":300,"nodeType":"UserDefinedTypeName","pathNode":{"id":299,"name":"TokenData","nodeType":"IdentifierPath","referencedDeclaration":421,"src":"573:9:2"},"referencedDeclaration":421,"src":"573:9:2","typeDescriptions":{"typeIdentifier":"t_struct$_TokenData_$421_storage_ptr","typeString":"struct TokenData"}},"id":301,"length":{"hexValue":"3232","id":298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"583:2:2","typeDescriptions":{"typeIdentifier":"t_rational_22_by_1","typeString":"int_const 22"},"value":"22"},"nodeType":"ArrayTypeName","src":"573:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenData_$421_storage_$22_storage_ptr","typeString":"struct TokenData[22]"}},"visibility":"internal"}],"id":310,"initialValue":{"arguments":[{"arguments":[{"id":306,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"689:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":305,"name":"ILendingPoolAddressesProvider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"659:29:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILendingPoolAddressesProvider_$1879_$","typeString":"type(contract ILendingPoolAddressesProvider)"}},"id":307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"659:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPoolAddressesProvider_$1879","typeString":"contract ILendingPoolAddressesProvider"}},{"id":308,"name":"tranche","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"696:7:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ILendingPoolAddressesProvider_$1879","typeString":"contract ILendingPoolAddressesProvider"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":303,"name":"AnalyticsUtilities","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"607:18:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AnalyticsUtilities_$117_$","typeString":"type(library AnalyticsUtilities)"}},"id":304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getTokenReserveData","nodeType":"MemberAccess","referencedDeclaration":116,"src":"607:51:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_contract$_ILendingPoolAddressesProvider_$1879_$_t_uint8_$returns$_t_array$_t_struct$_TokenData_$421_memory_ptr_$22_memory_ptr_$","typeString":"function (contract ILendingPoolAddressesProvider,uint8) view returns (struct TokenData memory[22] memory)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"607:97:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenData_$421_memory_ptr_$22_memory_ptr","typeString":"struct TokenData memory[22] memory"}},"nodeType":"VariableDeclarationStatement","src":"573:131:2"},{"assignments":[312],"declarations":[{"constant":false,"id":312,"mutability":"mutable","name":"_data","nodeType":"VariableDeclaration","scope":319,"src":"715:18:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":311,"name":"bytes","nodeType":"ElementaryTypeName","src":"715:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":317,"initialValue":{"arguments":[{"id":315,"name":"returnData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"747:10:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenData_$421_memory_ptr_$22_memory_ptr","typeString":"struct TokenData memory[22] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_TokenData_$421_memory_ptr_$22_memory_ptr","typeString":"struct TokenData memory[22] memory"}],"expression":{"id":313,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"736:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"736:10:2","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"736:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"715:43:2"},{"AST":{"nodeType":"YulBlock","src":"777:62:2","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"802:4:2","type":"","value":"0x20"},{"name":"_data","nodeType":"YulIdentifier","src":"808:5:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"798:3:2"},"nodeType":"YulFunctionCall","src":"798:16:2"},{"arguments":[{"name":"_data","nodeType":"YulIdentifier","src":"822:5:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"816:5:2"},"nodeType":"YulFunctionCall","src":"816:12:2"}],"functionName":{"name":"return","nodeType":"YulIdentifier","src":"791:6:2"},"nodeType":"YulFunctionCall","src":"791:38:2"},"nodeType":"YulExpressionStatement","src":"791:38:2"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":312,"isOffset":false,"isSlot":false,"src":"808:5:2","valueSize":1},{"declaration":312,"isOffset":false,"isSlot":false,"src":"822:5:2","valueSize":1}],"id":318,"nodeType":"InlineAssembly","src":"768:71:2"}]},"id":320,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":292,"mutability":"mutable","name":"pool","nodeType":"VariableDeclaration","scope":320,"src":"534:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":291,"name":"address","nodeType":"ElementaryTypeName","src":"534:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":294,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":320,"src":"548:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":293,"name":"uint8","nodeType":"ElementaryTypeName","src":"548:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"533:29:2"},"returnParameters":{"id":296,"nodeType":"ParameterList","parameters":[],"src":"563:0:2"},"scope":330,"src":"522:323:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":328,"nodeType":"Block","src":"913:2:2","statements":[]},"functionSelector":"15dae03e","id":329,"implemented":true,"kind":"function","modifiers":[],"name":"getType","nodeType":"FunctionDefinition","parameters":{"id":321,"nodeType":"ParameterList","parameters":[],"src":"867:2:2"},"returnParameters":{"id":327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":326,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":329,"src":"891:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenData_$421_memory_ptr_$22_memory_ptr","typeString":"struct TokenData[22]"},"typeName":{"baseType":{"id":323,"nodeType":"UserDefinedTypeName","pathNode":{"id":322,"name":"TokenData","nodeType":"IdentifierPath","referencedDeclaration":421,"src":"891:9:2"},"referencedDeclaration":421,"src":"891:9:2","typeDescriptions":{"typeIdentifier":"t_struct$_TokenData_$421_storage_ptr","typeString":"struct TokenData"}},"id":325,"length":{"hexValue":"3232","id":324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"901:2:2","typeDescriptions":{"typeIdentifier":"t_rational_22_by_1","typeString":"int_const 22"},"value":"22"},"nodeType":"ArrayTypeName","src":"891:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenData_$421_storage_$22_storage_ptr","typeString":"struct TokenData[22]"}},"visibility":"internal"}],"src":"890:22:2"},"scope":330,"src":"851:64:2","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":331,"src":"487:430:2"}],"src":"37:881:2"},"id":2},"contracts/analytics/types/AnalyticsDataTypes.sol":{"ast":{"absolutePath":"contracts/analytics/types/AnalyticsDataTypes.sol","exportedSymbols":{"AggregatedData":[404],"ApiDataType":[399],"TokenReserveData":[387],"UserAccountData":[362],"UserBalances":[349]},"id":405,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":332,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"37:24:3"},{"canonicalName":"UserBalances","id":349,"members":[{"constant":false,"id":336,"mutability":"mutable","name":"ethBalances","nodeType":"VariableDeclaration","scope":349,"src":"89:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$20_storage_ptr","typeString":"int256[20]"},"typeName":{"baseType":{"id":333,"name":"int256","nodeType":"ElementaryTypeName","src":"89:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":335,"length":{"hexValue":"3230","id":334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"96:2:3","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"nodeType":"ArrayTypeName","src":"89:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$20_storage_ptr","typeString":"int256[20]"}},"visibility":"internal"},{"constant":false,"id":340,"mutability":"mutable","name":"usdBalances","nodeType":"VariableDeclaration","scope":349,"src":"117:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$20_storage_ptr","typeString":"int256[20]"},"typeName":{"baseType":{"id":337,"name":"int256","nodeType":"ElementaryTypeName","src":"117:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":339,"length":{"hexValue":"3230","id":338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"124:2:3","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"nodeType":"ArrayTypeName","src":"117:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$20_storage_ptr","typeString":"int256[20]"}},"visibility":"internal"},{"constant":false,"id":344,"mutability":"mutable","name":"userBalance","nodeType":"VariableDeclaration","scope":349,"src":"145:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$20_storage_ptr","typeString":"uint256[20]"},"typeName":{"baseType":{"id":341,"name":"uint256","nodeType":"ElementaryTypeName","src":"145:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":343,"length":{"hexValue":"3230","id":342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"153:2:3","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"nodeType":"ArrayTypeName","src":"145:11:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$20_storage_ptr","typeString":"uint256[20]"}},"visibility":"internal"},{"constant":false,"id":348,"mutability":"mutable","name":"tokenNames","nodeType":"VariableDeclaration","scope":349,"src":"174:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$20_storage_ptr","typeString":"string[20]"},"typeName":{"baseType":{"id":345,"name":"string","nodeType":"ElementaryTypeName","src":"174:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":347,"length":{"hexValue":"3230","id":346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"181:2:3","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"nodeType":"ArrayTypeName","src":"174:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$20_storage_ptr","typeString":"string[20]"}},"visibility":"internal"}],"name":"UserBalances","nodeType":"StructDefinition","scope":405,"src":"63:135:3","visibility":"public"},{"canonicalName":"UserAccountData","id":362,"members":[{"constant":false,"id":351,"mutability":"mutable","name":"totalCollateralETH","nodeType":"VariableDeclaration","scope":362,"src":"229:26:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":350,"name":"uint256","nodeType":"ElementaryTypeName","src":"229:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":353,"mutability":"mutable","name":"totalDebtETH","nodeType":"VariableDeclaration","scope":362,"src":"261:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":352,"name":"uint256","nodeType":"ElementaryTypeName","src":"261:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":355,"mutability":"mutable","name":"availableBorrowsETH","nodeType":"VariableDeclaration","scope":362,"src":"287:27:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":354,"name":"uint256","nodeType":"ElementaryTypeName","src":"287:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":357,"mutability":"mutable","name":"currentLiquidationThreshold","nodeType":"VariableDeclaration","scope":362,"src":"320:35:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":356,"name":"uint256","nodeType":"ElementaryTypeName","src":"320:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":359,"mutability":"mutable","name":"ltv","nodeType":"VariableDeclaration","scope":362,"src":"361:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":358,"name":"uint256","nodeType":"ElementaryTypeName","src":"361:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":361,"mutability":"mutable","name":"healthFactor","nodeType":"VariableDeclaration","scope":362,"src":"378:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":360,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"UserAccountData","nodeType":"StructDefinition","scope":405,"src":"200:201:3","visibility":"public"},{"canonicalName":"TokenReserveData","id":387,"members":[{"constant":false,"id":364,"mutability":"mutable","name":"liquidityIndex","nodeType":"VariableDeclaration","scope":387,"src":"433:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":363,"name":"uint128","nodeType":"ElementaryTypeName","src":"433:7:3","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":366,"mutability":"mutable","name":"variableBorrowIndex","nodeType":"VariableDeclaration","scope":387,"src":"461:27:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":365,"name":"uint128","nodeType":"ElementaryTypeName","src":"461:7:3","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":368,"mutability":"mutable","name":"currentLiquidityRate","nodeType":"VariableDeclaration","scope":387,"src":"494:28:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":367,"name":"uint128","nodeType":"ElementaryTypeName","src":"494:7:3","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":370,"mutability":"mutable","name":"currentVariableBorrowRate","nodeType":"VariableDeclaration","scope":387,"src":"528:33:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":369,"name":"uint128","nodeType":"ElementaryTypeName","src":"528:7:3","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":372,"mutability":"mutable","name":"currentStableBorrowRate","nodeType":"VariableDeclaration","scope":387,"src":"567:31:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":371,"name":"uint128","nodeType":"ElementaryTypeName","src":"567:7:3","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":374,"mutability":"mutable","name":"lastUpdateTimestamp","nodeType":"VariableDeclaration","scope":387,"src":"604:26:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":373,"name":"uint40","nodeType":"ElementaryTypeName","src":"604:6:3","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"},{"constant":false,"id":376,"mutability":"mutable","name":"aTokenAddress","nodeType":"VariableDeclaration","scope":387,"src":"636:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":375,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":378,"mutability":"mutable","name":"stableDebtTokenAddress","nodeType":"VariableDeclaration","scope":387,"src":"663:30:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":377,"name":"address","nodeType":"ElementaryTypeName","src":"663:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":380,"mutability":"mutable","name":"variableDebtTokenAddress","nodeType":"VariableDeclaration","scope":387,"src":"699:32:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":379,"name":"address","nodeType":"ElementaryTypeName","src":"699:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":382,"mutability":"mutable","name":"interestRateStrategyAddress","nodeType":"VariableDeclaration","scope":387,"src":"737:35:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":381,"name":"address","nodeType":"ElementaryTypeName","src":"737:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":384,"mutability":"mutable","name":"id","nodeType":"VariableDeclaration","scope":387,"src":"778:8:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":383,"name":"uint8","nodeType":"ElementaryTypeName","src":"778:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":386,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":387,"src":"792:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":385,"name":"uint8","nodeType":"ElementaryTypeName","src":"792:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"name":"TokenReserveData","nodeType":"StructDefinition","scope":405,"src":"403:405:3","visibility":"public"},{"canonicalName":"ApiDataType","id":399,"members":[{"constant":false,"id":390,"mutability":"mutable","name":"userBalances","nodeType":"VariableDeclaration","scope":399,"src":"835:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_UserBalances_$349_storage_ptr","typeString":"struct UserBalances"},"typeName":{"id":389,"nodeType":"UserDefinedTypeName","pathNode":{"id":388,"name":"UserBalances","nodeType":"IdentifierPath","referencedDeclaration":349,"src":"835:12:3"},"referencedDeclaration":349,"src":"835:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserBalances_$349_storage_ptr","typeString":"struct UserBalances"}},"visibility":"internal"},{"constant":false,"id":395,"mutability":"mutable","name":"userTrancheData","nodeType":"VariableDeclaration","scope":399,"src":"866:34:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserAccountData_$362_storage_$3_storage_ptr","typeString":"struct UserAccountData[3]"},"typeName":{"baseType":{"id":392,"nodeType":"UserDefinedTypeName","pathNode":{"id":391,"name":"UserAccountData","nodeType":"IdentifierPath","referencedDeclaration":362,"src":"866:15:3"},"referencedDeclaration":362,"src":"866:15:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserAccountData_$362_storage_ptr","typeString":"struct UserAccountData"}},"id":394,"length":{"hexValue":"33","id":393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"882:1:3","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"866:18:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserAccountData_$362_storage_$3_storage_ptr","typeString":"struct UserAccountData[3]"}},"visibility":"internal"},{"constant":false,"id":398,"mutability":"mutable","name":"reserveList","nodeType":"VariableDeclaration","scope":399,"src":"906:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":396,"name":"address","nodeType":"ElementaryTypeName","src":"906:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":397,"nodeType":"ArrayTypeName","src":"906:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"name":"ApiDataType","nodeType":"StructDefinition","scope":405,"src":"810:166:3","visibility":"public"},{"canonicalName":"AggregatedData","id":404,"members":[{"constant":false,"id":403,"mutability":"mutable","name":"reserveData","nodeType":"VariableDeclaration","scope":404,"src":"1006:30:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenReserveData_$387_storage_$dyn_storage_ptr","typeString":"struct TokenReserveData[]"},"typeName":{"baseType":{"id":401,"nodeType":"UserDefinedTypeName","pathNode":{"id":400,"name":"TokenReserveData","nodeType":"IdentifierPath","referencedDeclaration":387,"src":"1006:16:3"},"referencedDeclaration":387,"src":"1006:16:3","typeDescriptions":{"typeIdentifier":"t_struct$_TokenReserveData_$387_storage_ptr","typeString":"struct TokenReserveData"}},"id":402,"nodeType":"ArrayTypeName","src":"1006:18:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenReserveData_$387_storage_$dyn_storage_ptr","typeString":"struct TokenReserveData[]"}},"visibility":"internal"}],"name":"AggregatedData","nodeType":"StructDefinition","scope":405,"src":"978:61:3","visibility":"public"}],"src":"37:1003:3"},"id":3},"contracts/analytics/types/Tokens.sol":{"ast":{"absolutePath":"contracts/analytics/types/Tokens.sol","exportedSymbols":{"AggregateData":[426],"DataTypes":[4238],"TokenData":[421],"TokenInfo":[412]},"id":427,"license":"agpl 3.0","nodeType":"SourceUnit","nodes":[{"id":406,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"37:24:4"},{"absolutePath":"contracts/protocol/libraries/types/DataTypes.sol","file":"../../protocol/libraries/types/DataTypes.sol","id":408,"nodeType":"ImportDirective","scope":427,"sourceUnit":4239,"src":"62:71:4","symbolAliases":[{"foreign":{"id":407,"name":"DataTypes","nodeType":"Identifier","overloadedDeclarations":[],"src":"70:9:4","typeDescriptions":{}}}],"unitAlias":""},{"canonicalName":"TokenInfo","id":412,"members":[{"constant":false,"id":411,"mutability":"mutable","name":"names","nodeType":"VariableDeclaration","scope":412,"src":"158:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":409,"name":"string","nodeType":"ElementaryTypeName","src":"158:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":410,"nodeType":"ArrayTypeName","src":"158:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"name":"TokenInfo","nodeType":"StructDefinition","scope":427,"src":"135:40:4","visibility":"public"},{"canonicalName":"TokenData","id":421,"members":[{"constant":false,"id":414,"mutability":"mutable","name":"symbol","nodeType":"VariableDeclaration","scope":421,"src":"200:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":413,"name":"string","nodeType":"ElementaryTypeName","src":"200:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":417,"mutability":"mutable","name":"reserveData","nodeType":"VariableDeclaration","scope":421,"src":"219:33:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveData_$4115_storage_ptr","typeString":"struct DataTypes.ReserveData"},"typeName":{"id":416,"nodeType":"UserDefinedTypeName","pathNode":{"id":415,"name":"DataTypes.ReserveData","nodeType":"IdentifierPath","referencedDeclaration":4115,"src":"219:21:4"},"referencedDeclaration":4115,"src":"219:21:4","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveData_$4115_storage_ptr","typeString":"struct DataTypes.ReserveData"}},"visibility":"internal"},{"constant":false,"id":420,"mutability":"mutable","name":"assetData","nodeType":"VariableDeclaration","scope":421,"src":"258:29:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$4082_storage_ptr","typeString":"struct DataTypes.AssetData"},"typeName":{"id":419,"nodeType":"UserDefinedTypeName","pathNode":{"id":418,"name":"DataTypes.AssetData","nodeType":"IdentifierPath","referencedDeclaration":4082,"src":"258:19:4"},"referencedDeclaration":4082,"src":"258:19:4","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$4082_storage_ptr","typeString":"struct DataTypes.AssetData"}},"visibility":"internal"}],"name":"TokenData","nodeType":"StructDefinition","scope":427,"src":"177:113:4","visibility":"public"},{"canonicalName":"AggregateData","id":426,"members":[{"constant":false,"id":425,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":426,"src":"319:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenData_$421_storage_$dyn_storage_ptr","typeString":"struct TokenData[]"},"typeName":{"baseType":{"id":423,"nodeType":"UserDefinedTypeName","pathNode":{"id":422,"name":"TokenData","nodeType":"IdentifierPath","referencedDeclaration":421,"src":"319:9:4"},"referencedDeclaration":421,"src":"319:9:4","typeDescriptions":{"typeIdentifier":"t_struct$_TokenData_$421_storage_ptr","typeString":"struct TokenData"}},"id":424,"nodeType":"ArrayTypeName","src":"319:11:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenData_$421_storage_$dyn_storage_ptr","typeString":"struct TokenData[]"}},"visibility":"internal"}],"name":"AggregateData","nodeType":"StructDefinition","scope":427,"src":"292:46:4","visibility":"public"}],"src":"37:302:4"},"id":4},"contracts/dependencies/openzeppelin/contracts/Address.sol":{"ast":{"absolutePath":"contracts/dependencies/openzeppelin/contracts/Address.sol","exportedSymbols":{"Address":[479]},"id":480,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":428,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"37:24:5"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":429,"nodeType":"StructuredDocumentation","src":"63:67:5","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":479,"linearizedBaseContracts":[479],"name":"Address","nodeType":"ContractDefinition","nodes":[{"body":{"id":443,"nodeType":"Block","src":"789:650:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":437,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"1399:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1399:12:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1399:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1421:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1399:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":436,"id":442,"nodeType":"Return","src":"1392:30:5"}]},"documentation":{"id":430,"nodeType":"StructuredDocumentation","src":"153:565:5","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="},"id":444,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nodeType":"FunctionDefinition","parameters":{"id":433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":432,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":444,"src":"743:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":431,"name":"address","nodeType":"ElementaryTypeName","src":"743:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"742:17:5"},"returnParameters":{"id":436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":435,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":444,"src":"783:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":434,"name":"bool","nodeType":"ElementaryTypeName","src":"783:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"782:6:5"},"scope":479,"src":"723:716:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":477,"nodeType":"Block","src":"2427:386:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":455,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2466:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$479","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$479","typeString":"library Address"}],"id":454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2458:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":453,"name":"address","nodeType":"ElementaryTypeName","src":"2458:7:5","typeDescriptions":{}}},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2458:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2458:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":458,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"2483:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2458:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2503:31:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":452,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2437:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2437:107:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":462,"nodeType":"ExpressionStatement","src":"2437:107:5"},{"assignments":[464,null],"declarations":[{"constant":false,"id":464,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":477,"src":"2633:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":463,"name":"bool","nodeType":"ElementaryTypeName","src":"2633:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":471,"initialValue":{"arguments":[{"hexValue":"","id":469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2681:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":465,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"2651:9:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2651:14:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":467,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"2673:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2651:29:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2651:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2632:52:5"},{"expression":{"arguments":[{"id":473,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"2715:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2736:60:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":472,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2694:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2694:112:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":476,"nodeType":"ExpressionStatement","src":"2694:112:5"}]},"documentation":{"id":445,"nodeType":"StructuredDocumentation","src":"1445:906:5","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":478,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nodeType":"FunctionDefinition","parameters":{"id":450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":447,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":478,"src":"2375:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":446,"name":"address","nodeType":"ElementaryTypeName","src":"2375:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":449,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":478,"src":"2402:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":448,"name":"uint256","nodeType":"ElementaryTypeName","src":"2402:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2374:43:5"},"returnParameters":{"id":451,"nodeType":"ParameterList","parameters":[],"src":"2427:0:5"},"scope":479,"src":"2356:457:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":480,"src":"131:2684:5"}],"src":"37:2779:5"},"id":5},"contracts/dependencies/openzeppelin/contracts/Context.sol":{"ast":{"absolutePath":"contracts/dependencies/openzeppelin/contracts/Context.sol","exportedSymbols":{"Context":[502]},"id":503,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":481,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"32:24:6"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":502,"linearizedBaseContracts":[502],"name":"Context","nodeType":"ContractDefinition","nodes":[{"body":{"id":489,"nodeType":"Block","src":"652:34:6","statements":[{"expression":{"expression":{"id":486,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"669:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"669:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":485,"id":488,"nodeType":"Return","src":"662:17:6"}]},"id":490,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nodeType":"FunctionDefinition","parameters":{"id":482,"nodeType":"ParameterList","parameters":[],"src":"609:2:6"},"returnParameters":{"id":485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":484,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":490,"src":"643:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":483,"name":"address","nodeType":"ElementaryTypeName","src":"643:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"642:9:6"},"scope":502,"src":"590:96:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":500,"nodeType":"Block","src":"757:165:6","statements":[{"expression":{"id":495,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"767:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_Context_$502","typeString":"contract Context"}},"id":496,"nodeType":"ExpressionStatement","src":"767:4:6"},{"expression":{"expression":{"id":497,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"907:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"907:8:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":494,"id":499,"nodeType":"Return","src":"900:15:6"}]},"id":501,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nodeType":"FunctionDefinition","parameters":{"id":491,"nodeType":"ParameterList","parameters":[],"src":"709:2:6"},"returnParameters":{"id":494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":493,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":501,"src":"743:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":492,"name":"bytes","nodeType":"ElementaryTypeName","src":"743:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"742:14:6"},"scope":502,"src":"692:230:6","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":503,"src":"558:366:6"}],"src":"32:893:6"},"id":6},"contracts/dependencies/openzeppelin/contracts/IERC20.sol":{"ast":{"absolutePath":"contracts/dependencies/openzeppelin/contracts/IERC20.sol","exportedSymbols":{"IERC20":[580]},"id":581,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":504,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"37:24:7"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":505,"nodeType":"StructuredDocumentation","src":"63:70:7","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":580,"linearizedBaseContracts":[580],"name":"IERC20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":506,"nodeType":"StructuredDocumentation","src":"157:66:7","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":511,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nodeType":"FunctionDefinition","parameters":{"id":507,"nodeType":"ParameterList","parameters":[],"src":"248:2:7"},"returnParameters":{"id":510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":509,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":511,"src":"274:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":508,"name":"uint256","nodeType":"ElementaryTypeName","src":"274:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"273:9:7"},"scope":580,"src":"228:55:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":512,"nodeType":"StructuredDocumentation","src":"289:72:7","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":519,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nodeType":"FunctionDefinition","parameters":{"id":515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":514,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":519,"src":"385:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":513,"name":"address","nodeType":"ElementaryTypeName","src":"385:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"384:17:7"},"returnParameters":{"id":518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":517,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":519,"src":"425:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":516,"name":"uint256","nodeType":"ElementaryTypeName","src":"425:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"424:9:7"},"scope":580,"src":"366:68:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":520,"nodeType":"StructuredDocumentation","src":"440:209:7","text":" @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":529,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","parameters":{"id":525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":522,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":529,"src":"672:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":521,"name":"address","nodeType":"ElementaryTypeName","src":"672:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":524,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":529,"src":"691:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":523,"name":"uint256","nodeType":"ElementaryTypeName","src":"691:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"671:35:7"},"returnParameters":{"id":528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":527,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":529,"src":"741:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":526,"name":"bool","nodeType":"ElementaryTypeName","src":"741:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"740:6:7"},"scope":580,"src":"654:93:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":530,"nodeType":"StructuredDocumentation","src":"753:264:7","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":539,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","parameters":{"id":535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":532,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":539,"src":"1041:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":531,"name":"address","nodeType":"ElementaryTypeName","src":"1041:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":534,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":539,"src":"1056:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":533,"name":"address","nodeType":"ElementaryTypeName","src":"1056:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1040:32:7"},"returnParameters":{"id":538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":537,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":539,"src":"1120:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":536,"name":"uint256","nodeType":"ElementaryTypeName","src":"1120:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1119:9:7"},"scope":580,"src":"1022:107:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":540,"nodeType":"StructuredDocumentation","src":"1135:642:7","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":549,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":542,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":549,"src":"1799:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":541,"name":"address","nodeType":"ElementaryTypeName","src":"1799:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":544,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":549,"src":"1816:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":543,"name":"uint256","nodeType":"ElementaryTypeName","src":"1816:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1798:33:7"},"returnParameters":{"id":548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":547,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":549,"src":"1850:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":546,"name":"bool","nodeType":"ElementaryTypeName","src":"1850:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1849:6:7"},"scope":580,"src":"1782:74:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":550,"nodeType":"StructuredDocumentation","src":"1862:296:7","text":" @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":561,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":552,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":561,"src":"2194:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":551,"name":"address","nodeType":"ElementaryTypeName","src":"2194:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":554,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":561,"src":"2218:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":553,"name":"address","nodeType":"ElementaryTypeName","src":"2218:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":556,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":561,"src":"2245:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":555,"name":"uint256","nodeType":"ElementaryTypeName","src":"2245:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2184:81:7"},"returnParameters":{"id":560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":559,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":561,"src":"2284:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":558,"name":"bool","nodeType":"ElementaryTypeName","src":"2284:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2283:6:7"},"scope":580,"src":"2163:127:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":562,"nodeType":"StructuredDocumentation","src":"2296:158:7","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":570,"name":"Transfer","nodeType":"EventDefinition","parameters":{"id":569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":564,"indexed":true,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":570,"src":"2474:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":563,"name":"address","nodeType":"ElementaryTypeName","src":"2474:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":566,"indexed":true,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":570,"src":"2496:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":565,"name":"address","nodeType":"ElementaryTypeName","src":"2496:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":568,"indexed":false,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":570,"src":"2516:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":567,"name":"uint256","nodeType":"ElementaryTypeName","src":"2516:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2473:57:7"},"src":"2459:72:7"},{"anonymous":false,"documentation":{"id":571,"nodeType":"StructuredDocumentation","src":"2537:148:7","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":579,"name":"Approval","nodeType":"EventDefinition","parameters":{"id":578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":573,"indexed":true,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":579,"src":"2714:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":572,"name":"address","nodeType":"ElementaryTypeName","src":"2714:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":575,"indexed":true,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":579,"src":"2745:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":574,"name":"address","nodeType":"ElementaryTypeName","src":"2745:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":577,"indexed":false,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":579,"src":"2778:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":576,"name":"uint256","nodeType":"ElementaryTypeName","src":"2778:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2704:93:7"},"src":"2690:108:7"}],"scope":581,"src":"134:2666:7"}],"src":"37:2764:7"},"id":7},"contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol":{"ast":{"absolutePath":"contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol","exportedSymbols":{"IERC20":[580],"IERC20Detailed":[602]},"id":603,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":582,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"37:24:8"},{"absolutePath":"contracts/dependencies/openzeppelin/contracts/IERC20.sol","file":"./IERC20.sol","id":584,"nodeType":"ImportDirective","scope":603,"sourceUnit":581,"src":"63:36:8","symbolAliases":[{"foreign":{"id":583,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"src":"71:6:8","typeDescriptions":{}}}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":585,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":580,"src":"129:6:8"},"id":586,"nodeType":"InheritanceSpecifier","src":"129:6:8"}],"contractDependencies":[580],"contractKind":"interface","fullyImplemented":false,"id":602,"linearizedBaseContracts":[602,580],"name":"IERC20Detailed","nodeType":"ContractDefinition","nodes":[{"functionSelector":"06fdde03","id":591,"implemented":false,"kind":"function","modifiers":[],"name":"name","nodeType":"FunctionDefinition","parameters":{"id":587,"nodeType":"ParameterList","parameters":[],"src":"155:2:8"},"returnParameters":{"id":590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":589,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":591,"src":"181:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":588,"name":"string","nodeType":"ElementaryTypeName","src":"181:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"180:15:8"},"scope":602,"src":"142:54:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"95d89b41","id":596,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nodeType":"FunctionDefinition","parameters":{"id":592,"nodeType":"ParameterList","parameters":[],"src":"217:2:8"},"returnParameters":{"id":595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":594,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":596,"src":"243:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":593,"name":"string","nodeType":"ElementaryTypeName","src":"243:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"242:15:8"},"scope":602,"src":"202:56:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"313ce567","id":601,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nodeType":"FunctionDefinition","parameters":{"id":597,"nodeType":"ParameterList","parameters":[],"src":"281:2:8"},"returnParameters":{"id":600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":599,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":601,"src":"307:5:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":598,"name":"uint8","nodeType":"ElementaryTypeName","src":"307:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"306:7:8"},"scope":602,"src":"264:50:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":603,"src":"101:215:8"}],"src":"37:280:8"},"id":8},"contracts/dependencies/openzeppelin/contracts/Ownable.sol":{"ast":{"absolutePath":"contracts/dependencies/openzeppelin/contracts/Ownable.sol","exportedSymbols":{"Context":[502],"Ownable":[711]},"id":712,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":604,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"32:24:9"},{"absolutePath":"contracts/dependencies/openzeppelin/contracts/Context.sol","file":"./Context.sol","id":605,"nodeType":"ImportDirective","scope":712,"sourceUnit":503,"src":"58:23:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":607,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":502,"src":"598:7:9"},"id":608,"nodeType":"InheritanceSpecifier","src":"598:7:9"}],"contractDependencies":[502],"contractKind":"contract","documentation":{"id":606,"nodeType":"StructuredDocumentation","src":"83:494:9","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":711,"linearizedBaseContracts":[711,502],"name":"Ownable","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":610,"mutability":"mutable","name":"_owner","nodeType":"VariableDeclaration","scope":711,"src":"612:22:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":609,"name":"address","nodeType":"ElementaryTypeName","src":"612:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":616,"name":"OwnershipTransferred","nodeType":"EventDefinition","parameters":{"id":615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":612,"indexed":true,"mutability":"mutable","name":"previousOwner","nodeType":"VariableDeclaration","scope":616,"src":"677:29:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":611,"name":"address","nodeType":"ElementaryTypeName","src":"677:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":614,"indexed":true,"mutability":"mutable","name":"newOwner","nodeType":"VariableDeclaration","scope":616,"src":"716:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":613,"name":"address","nodeType":"ElementaryTypeName","src":"716:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"667:79:9"},"src":"641:106:9"},{"body":{"id":637,"nodeType":"Block","src":"863:135:9","statements":[{"assignments":[621],"declarations":[{"constant":false,"id":621,"mutability":"mutable","name":"msgSender","nodeType":"VariableDeclaration","scope":637,"src":"873:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":620,"name":"address","nodeType":"ElementaryTypeName","src":"873:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":624,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":622,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"893:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"893:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"873:32:9"},{"expression":{"id":627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":625,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"915:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":626,"name":"msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"924:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"915:18:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":628,"nodeType":"ExpressionStatement","src":"915:18:9"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"977:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"969:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":630,"name":"address","nodeType":"ElementaryTypeName","src":"969:7:9","typeDescriptions":{}}},"id":633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"969:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":634,"name":"msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"981:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":629,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"948:20:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"948:43:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":636,"nodeType":"EmitStatement","src":"943:48:9"}]},"documentation":{"id":617,"nodeType":"StructuredDocumentation","src":"753:91:9","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":638,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":618,"nodeType":"ParameterList","parameters":[],"src":"860:2:9"},"returnParameters":{"id":619,"nodeType":"ParameterList","parameters":[],"src":"863:0:9"},"scope":711,"src":"849:149:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":646,"nodeType":"Block","src":"1121:30:9","statements":[{"expression":{"id":644,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"1138:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":643,"id":645,"nodeType":"Return","src":"1131:13:9"}]},"documentation":{"id":639,"nodeType":"StructuredDocumentation","src":"1004:65:9","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":647,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nodeType":"FunctionDefinition","parameters":{"id":640,"nodeType":"ParameterList","parameters":[],"src":"1088:2:9"},"returnParameters":{"id":643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":642,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":647,"src":"1112:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":641,"name":"address","nodeType":"ElementaryTypeName","src":"1112:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1111:9:9"},"scope":711,"src":"1074:77:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":659,"nodeType":"Block","src":"1260:95:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":651,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"1278:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":652,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"1288:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1288:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1278:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1302:34:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":650,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1270:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1270:67:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":657,"nodeType":"ExpressionStatement","src":"1270:67:9"},{"id":658,"nodeType":"PlaceholderStatement","src":"1347:1:9"}]},"documentation":{"id":648,"nodeType":"StructuredDocumentation","src":"1157:77:9","text":" @dev Throws if called by any account other than the owner."},"id":660,"name":"onlyOwner","nodeType":"ModifierDefinition","parameters":{"id":649,"nodeType":"ParameterList","parameters":[],"src":"1257:2:9"},"src":"1239:116:9","virtual":false,"visibility":"internal"},{"body":{"id":681,"nodeType":"Block","src":"1751:91:9","statements":[{"eventCall":{"arguments":[{"id":667,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"1787:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1803:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1795:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":668,"name":"address","nodeType":"ElementaryTypeName","src":"1795:7:9","typeDescriptions":{}}},"id":671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1795:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":666,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"1766:20:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1766:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":673,"nodeType":"EmitStatement","src":"1761:45:9"},{"expression":{"id":679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":674,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"1816:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1833:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1825:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":675,"name":"address","nodeType":"ElementaryTypeName","src":"1825:7:9","typeDescriptions":{}}},"id":678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1825:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1816:19:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":680,"nodeType":"ExpressionStatement","src":"1816:19:9"}]},"documentation":{"id":661,"nodeType":"StructuredDocumentation","src":"1361:331:9","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":682,"implemented":true,"kind":"function","modifiers":[{"id":664,"modifierName":{"id":663,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":660,"src":"1741:9:9"},"nodeType":"ModifierInvocation","src":"1741:9:9"}],"name":"renounceOwnership","nodeType":"FunctionDefinition","parameters":{"id":662,"nodeType":"ParameterList","parameters":[],"src":"1723:2:9"},"returnParameters":{"id":665,"nodeType":"ParameterList","parameters":[],"src":"1751:0:9"},"scope":711,"src":"1697:145:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":709,"nodeType":"Block","src":"2061:204:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":691,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"2092:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2112:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2104:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":692,"name":"address","nodeType":"ElementaryTypeName","src":"2104:7:9","typeDescriptions":{}}},"id":695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2104:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2092:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2128:40:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":690,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2071:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2071:107:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":699,"nodeType":"ExpressionStatement","src":"2071:107:9"},{"eventCall":{"arguments":[{"id":701,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"2214:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":702,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"2222:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":700,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"2193:20:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2193:38:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":704,"nodeType":"EmitStatement","src":"2188:43:9"},{"expression":{"id":707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":705,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"2241:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":706,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"2250:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2241:17:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":708,"nodeType":"ExpressionStatement","src":"2241:17:9"}]},"documentation":{"id":683,"nodeType":"StructuredDocumentation","src":"1848:138:9","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":710,"implemented":true,"kind":"function","modifiers":[{"id":688,"modifierName":{"id":687,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":660,"src":"2051:9:9"},"nodeType":"ModifierInvocation","src":"2051:9:9"}],"name":"transferOwnership","nodeType":"FunctionDefinition","parameters":{"id":686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":685,"mutability":"mutable","name":"newOwner","nodeType":"VariableDeclaration","scope":710,"src":"2018:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":684,"name":"address","nodeType":"ElementaryTypeName","src":"2018:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2017:18:9"},"returnParameters":{"id":689,"nodeType":"ParameterList","parameters":[],"src":"2061:0:9"},"scope":711,"src":"1991:274:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":712,"src":"578:1689:9"}],"src":"32:2236:9"},"id":9},"contracts/dependencies/openzeppelin/contracts/SafeERC20.sol":{"ast":{"absolutePath":"contracts/dependencies/openzeppelin/contracts/SafeERC20.sol","exportedSymbols":{"Address":[479],"IERC20":[580],"SafeERC20":[872],"SafeMath":[1184]},"id":873,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":713,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"33:24:10"},{"absolutePath":"contracts/dependencies/openzeppelin/contracts/IERC20.sol","file":"./IERC20.sol","id":715,"nodeType":"ImportDirective","scope":873,"sourceUnit":581,"src":"59:36:10","symbolAliases":[{"foreign":{"id":714,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"src":"67:6:10","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/dependencies/openzeppelin/contracts/SafeMath.sol","file":"./SafeMath.sol","id":717,"nodeType":"ImportDirective","scope":873,"sourceUnit":1185,"src":"96:40:10","symbolAliases":[{"foreign":{"id":716,"name":"SafeMath","nodeType":"Identifier","overloadedDeclarations":[],"src":"104:8:10","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/dependencies/openzeppelin/contracts/Address.sol","file":"./Address.sol","id":719,"nodeType":"ImportDirective","scope":873,"sourceUnit":480,"src":"137:38:10","symbolAliases":[{"foreign":{"id":718,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"src":"145:7:10","typeDescriptions":{}}}],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":720,"nodeType":"StructuredDocumentation","src":"177:457:10","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":872,"linearizedBaseContracts":[872],"name":"SafeERC20","nodeType":"ContractDefinition","nodes":[{"id":723,"libraryName":{"id":721,"name":"SafeMath","nodeType":"IdentifierPath","referencedDeclaration":1184,"src":"665:8:10"},"nodeType":"UsingForDirective","src":"659:27:10","typeName":{"id":722,"name":"uint256","nodeType":"ElementaryTypeName","src":"678:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":726,"libraryName":{"id":724,"name":"Address","nodeType":"IdentifierPath","referencedDeclaration":479,"src":"697:7:10"},"nodeType":"UsingForDirective","src":"691:26:10","typeName":{"id":725,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":748,"nodeType":"Block","src":"825:136:10","statements":[{"expression":{"arguments":[{"id":737,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"867:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$580","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":740,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"909:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$580","typeString":"contract IERC20"}},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":529,"src":"909:14:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"909:23:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":743,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"934:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"938:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":738,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"886:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"886:22:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"886:58:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$580","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":736,"name":"callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"835:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$580_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"835:119:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":747,"nodeType":"ExpressionStatement","src":"835:119:10"}]},"id":749,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nodeType":"FunctionDefinition","parameters":{"id":734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":729,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":749,"src":"754:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$580","typeString":"contract IERC20"},"typeName":{"id":728,"nodeType":"UserDefinedTypeName","pathNode":{"id":727,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":580,"src":"754:6:10"},"referencedDeclaration":580,"src":"754:6:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$580","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":731,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":749,"src":"776:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":730,"name":"address","nodeType":"ElementaryTypeName","src":"776:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":733,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":749,"src":"796:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":732,"name":"uint256","nodeType":"ElementaryTypeName","src":"796:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"744:71:10"},"returnParameters":{"id":735,"nodeType":"ParameterList","parameters":[],"src":"825:0:10"},"scope":872,"src":"723:238:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":774,"nodeType":"Block","src":"1095:146:10","statements":[{"expression":{"arguments":[{"id":762,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"1137:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$580","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":765,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"1179:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$580","typeString":"contract IERC20"}},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":561,"src":"1179:18:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1179:27:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":768,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"1208:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":769,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"1214:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"1218:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":763,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1156:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1156:22:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1156:68:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$580","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":761,"name":"callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"1105:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$580_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1105:129:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":773,"nodeType":"ExpressionStatement","src":"1105:129:10"}]},"id":775,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nodeType":"FunctionDefinition","parameters":{"id":759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":775,"src":"1002:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$580","typeString":"contract IERC20"},"typeName":{"id":751,"nodeType":"UserDefinedTypeName","pathNode":{"id":750,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":580,"src":"1002:6:10"},"referencedDeclaration":580,"src":"1002:6:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$580","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":754,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":775,"src":"1024:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":753,"name":"address","nodeType":"ElementaryTypeName","src":"1024:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":756,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":775,"src":"1046:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":755,"name":"address","nodeType":"ElementaryTypeName","src":"1046:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":758,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":775,"src":"1066:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":757,"name":"uint256","nodeType":"ElementaryTypeName","src":"1066:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"992:93:10"},"returnParameters":{"id":760,"nodeType":"ParameterList","parameters":[],"src":"1095:0:10"},"scope":872,"src":"967:274:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":817,"nodeType":"Block","src":"1353:313:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"1385:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1394:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1385:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":789,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1384:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":794,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1425:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$872","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$872","typeString":"library SafeERC20"}],"id":793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1417:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":792,"name":"address","nodeType":"ElementaryTypeName","src":"1417:7:10","typeDescriptions":{}}},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1417:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":796,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"1432:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":790,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"1401:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$580","typeString":"contract IERC20"}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":539,"src":"1401:15:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1401:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1444:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1401:44:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":800,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1400:46:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1384:62:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1460:56:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":785,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1363:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1363:163:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":804,"nodeType":"ExpressionStatement","src":"1363:163:10"},{"expression":{"arguments":[{"id":806,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"1568:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$580","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":809,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"1610:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$580","typeString":"contract IERC20"}},"id":810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":549,"src":"1610:13:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1610:22:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":812,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"1634:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":813,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"1643:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":807,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1587:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1587:22:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1587:62:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$580","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":805,"name":"callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"1536:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$580_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1536:123:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":816,"nodeType":"ExpressionStatement","src":"1536:123:10"}]},"id":818,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nodeType":"FunctionDefinition","parameters":{"id":783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":778,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":818,"src":"1277:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$580","typeString":"contract IERC20"},"typeName":{"id":777,"nodeType":"UserDefinedTypeName","pathNode":{"id":776,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":580,"src":"1277:6:10"},"referencedDeclaration":580,"src":"1277:6:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$580","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":780,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":818,"src":"1299:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"1299:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":782,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":818,"src":"1324:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":781,"name":"uint256","nodeType":"ElementaryTypeName","src":"1324:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1267:76:10"},"returnParameters":{"id":784,"nodeType":"ParameterList","parameters":[],"src":"1353:0:10"},"scope":872,"src":"1247:419:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":870,"nodeType":"Block","src":"1741:576:10","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":829,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"1767:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$580","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$580","typeString":"contract IERC20"}],"id":828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1759:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":827,"name":"address","nodeType":"ElementaryTypeName","src":"1759:7:10","typeDescriptions":{}}},"id":830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1759:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":444,"src":"1759:25:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1759:27:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2063616c6c20746f206e6f6e2d636f6e7472616374","id":833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1788:33:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_f6ce7bfd656f35145dec774d6f7e67f4cba158373d2dd7a0f8273e232f86148d","typeString":"literal_string \"SafeERC20: call to non-contract\""},"value":"SafeERC20: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f6ce7bfd656f35145dec774d6f7e67f4cba158373d2dd7a0f8273e232f86148d","typeString":"literal_string \"SafeERC20: call to non-contract\""}],"id":826,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1751:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1751:71:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":835,"nodeType":"ExpressionStatement","src":"1751:71:10"},{"assignments":[837,839],"declarations":[{"constant":false,"id":837,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":870,"src":"1893:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":836,"name":"bool","nodeType":"ElementaryTypeName","src":"1893:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":839,"mutability":"mutable","name":"returndata","nodeType":"VariableDeclaration","scope":870,"src":"1907:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":838,"name":"bytes","nodeType":"ElementaryTypeName","src":"1907:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":847,"initialValue":{"arguments":[{"id":845,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"1954:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":842,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"1942:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$580","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$580","typeString":"contract IERC20"}],"id":841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1934:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":840,"name":"address","nodeType":"ElementaryTypeName","src":"1934:7:10","typeDescriptions":{}}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1934:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"1934:19:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1934:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1892:67:10"},{"expression":{"arguments":[{"id":849,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"1977:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1986:34:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"id":848,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1969:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1969:52:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":852,"nodeType":"ExpressionStatement","src":"1969:52:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":853,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"2036:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2036:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2056:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2036:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":869,"nodeType":"IfStatement","src":"2032:279:10","trueBody":{"id":868,"nodeType":"Block","src":"2059:252:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":860,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"2205:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2218:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":861,"name":"bool","nodeType":"ElementaryTypeName","src":"2218:4:10","typeDescriptions":{}}}],"id":863,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2217:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":858,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2194:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"2194:10:10","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2194:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2242:44:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":857,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2169:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2169:131:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":867,"nodeType":"ExpressionStatement","src":"2169:131:10"}]}}]},"id":871,"implemented":true,"kind":"function","modifiers":[],"name":"callOptionalReturn","nodeType":"FunctionDefinition","parameters":{"id":824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":821,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":871,"src":"1700:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$580","typeString":"contract IERC20"},"typeName":{"id":820,"nodeType":"UserDefinedTypeName","pathNode":{"id":819,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":580,"src":"1700:6:10"},"referencedDeclaration":580,"src":"1700:6:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$580","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":823,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":871,"src":"1714:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":822,"name":"bytes","nodeType":"ElementaryTypeName","src":"1714:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1699:33:10"},"returnParameters":{"id":825,"nodeType":"ParameterList","parameters":[],"src":"1741:0:10"},"scope":872,"src":"1672:645:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":873,"src":"635:1684:10"}],"src":"33:2287:10"},"id":10},"contracts/dependencies/openzeppelin/contracts/SafeMath.sol":{"ast":{"absolutePath":"contracts/dependencies/openzeppelin/contracts/SafeMath.sol","exportedSymbols":{"SafeMath":[1184]},"id":1185,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":874,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:11"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":875,"nodeType":"StructuredDocumentation","src":"285:196:11","text":" @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."},"fullyImplemented":true,"id":1184,"linearizedBaseContracts":[1184],"name":"SafeMath","nodeType":"ContractDefinition","nodes":[{"body":{"id":906,"nodeType":"Block","src":"745:140:11","statements":[{"id":905,"nodeType":"UncheckedBlock","src":"755:124:11","statements":[{"assignments":[888],"declarations":[{"constant":false,"id":888,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":905,"src":"779:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":887,"name":"uint256","nodeType":"ElementaryTypeName","src":"779:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":892,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":889,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"791:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":890,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"795:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"791:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"779:17:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":893,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"814:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":894,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"818:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"814:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":900,"nodeType":"IfStatement","src":"810:28:11","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"829:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"836:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":898,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"828:10:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":886,"id":899,"nodeType":"Return","src":"821:17:11"}},{"expression":{"components":[{"hexValue":"74727565","id":901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"860:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":902,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"866:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":903,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"859:9:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":886,"id":904,"nodeType":"Return","src":"852:16:11"}]}]},"documentation":{"id":876,"nodeType":"StructuredDocumentation","src":"505:131:11","text":" @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":907,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nodeType":"FunctionDefinition","parameters":{"id":881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":878,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":907,"src":"657:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":877,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":880,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":907,"src":"668:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":879,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:22:11"},"returnParameters":{"id":886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":883,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":907,"src":"726:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":882,"name":"bool","nodeType":"ElementaryTypeName","src":"726:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":885,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":907,"src":"732:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":884,"name":"uint256","nodeType":"ElementaryTypeName","src":"732:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"725:15:11"},"scope":1184,"src":"641:244:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":934,"nodeType":"Block","src":"1134:113:11","statements":[{"id":933,"nodeType":"UncheckedBlock","src":"1144:97:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":919,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"1172:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":920,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"1176:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1172:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":926,"nodeType":"IfStatement","src":"1168:28:11","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1187:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1194:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":924,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1186:10:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":918,"id":925,"nodeType":"Return","src":"1179:17:11"}},{"expression":{"components":[{"hexValue":"74727565","id":927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1218:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":928,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"1224:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":929,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"1228:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1224:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":931,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1217:13:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":918,"id":932,"nodeType":"Return","src":"1210:20:11"}]}]},"documentation":{"id":908,"nodeType":"StructuredDocumentation","src":"891:134:11","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":935,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nodeType":"FunctionDefinition","parameters":{"id":913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":910,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":935,"src":"1046:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":909,"name":"uint256","nodeType":"ElementaryTypeName","src":"1046:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":912,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":935,"src":"1057:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":911,"name":"uint256","nodeType":"ElementaryTypeName","src":"1057:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1045:22:11"},"returnParameters":{"id":918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":915,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":935,"src":"1115:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":914,"name":"bool","nodeType":"ElementaryTypeName","src":"1115:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":917,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":935,"src":"1121:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":916,"name":"uint256","nodeType":"ElementaryTypeName","src":"1121:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1114:15:11"},"scope":1184,"src":"1030:217:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":976,"nodeType":"Block","src":"1499:417:11","statements":[{"id":975,"nodeType":"UncheckedBlock","src":"1509:401:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":947,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"1767:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1772:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1767:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":954,"nodeType":"IfStatement","src":"1763:28:11","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1783:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1789:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":952,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1782:9:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":946,"id":953,"nodeType":"Return","src":"1775:16:11"}},{"assignments":[956],"declarations":[{"constant":false,"id":956,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":975,"src":"1805:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":955,"name":"uint256","nodeType":"ElementaryTypeName","src":"1805:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":960,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":957,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"1817:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":958,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"1821:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1817:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1805:17:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":961,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"1840:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":962,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"1844:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1840:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":964,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"1849:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1840:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":970,"nodeType":"IfStatement","src":"1836:33:11","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1860:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1867:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":968,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1859:10:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":946,"id":969,"nodeType":"Return","src":"1852:17:11"}},{"expression":{"components":[{"hexValue":"74727565","id":971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1891:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":972,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"1897:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":973,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1890:9:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":946,"id":974,"nodeType":"Return","src":"1883:16:11"}]}]},"documentation":{"id":936,"nodeType":"StructuredDocumentation","src":"1253:137:11","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":977,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nodeType":"FunctionDefinition","parameters":{"id":941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":938,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":977,"src":"1411:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":937,"name":"uint256","nodeType":"ElementaryTypeName","src":"1411:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":940,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":977,"src":"1422:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":939,"name":"uint256","nodeType":"ElementaryTypeName","src":"1422:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1410:22:11"},"returnParameters":{"id":946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":943,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":977,"src":"1480:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":942,"name":"bool","nodeType":"ElementaryTypeName","src":"1480:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":945,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":977,"src":"1486:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":944,"name":"uint256","nodeType":"ElementaryTypeName","src":"1486:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1479:15:11"},"scope":1184,"src":"1395:521:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1004,"nodeType":"Block","src":"2169:114:11","statements":[{"id":1003,"nodeType":"UncheckedBlock","src":"2179:98:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":989,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"2207:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2212:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2207:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":996,"nodeType":"IfStatement","src":"2203:29:11","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2223:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2230:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":994,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2222:10:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":988,"id":995,"nodeType":"Return","src":"2215:17:11"}},{"expression":{"components":[{"hexValue":"74727565","id":997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2254:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":998,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"2260:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":999,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"2264:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2260:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1001,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2253:13:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":988,"id":1002,"nodeType":"Return","src":"2246:20:11"}]}]},"documentation":{"id":978,"nodeType":"StructuredDocumentation","src":"1922:138:11","text":" @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":1005,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nodeType":"FunctionDefinition","parameters":{"id":983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":980,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":1005,"src":"2081:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":979,"name":"uint256","nodeType":"ElementaryTypeName","src":"2081:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":982,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":1005,"src":"2092:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":981,"name":"uint256","nodeType":"ElementaryTypeName","src":"2092:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2080:22:11"},"returnParameters":{"id":988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":985,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1005,"src":"2150:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":984,"name":"bool","nodeType":"ElementaryTypeName","src":"2150:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":987,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1005,"src":"2156:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":986,"name":"uint256","nodeType":"ElementaryTypeName","src":"2156:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2149:15:11"},"scope":1184,"src":"2065:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1032,"nodeType":"Block","src":"2546:114:11","statements":[{"id":1031,"nodeType":"UncheckedBlock","src":"2556:98:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1017,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"2584:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2589:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2584:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1024,"nodeType":"IfStatement","src":"2580:29:11","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2600:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2607:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1022,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2599:10:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1016,"id":1023,"nodeType":"Return","src":"2592:17:11"}},{"expression":{"components":[{"hexValue":"74727565","id":1025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2631:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1026,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"2637:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1027,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"2641:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2637:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1029,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2630:13:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1016,"id":1030,"nodeType":"Return","src":"2623:20:11"}]}]},"documentation":{"id":1006,"nodeType":"StructuredDocumentation","src":"2289:148:11","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":1033,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nodeType":"FunctionDefinition","parameters":{"id":1011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1008,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":1033,"src":"2458:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1007,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1010,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":1033,"src":"2469:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1009,"name":"uint256","nodeType":"ElementaryTypeName","src":"2469:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2457:22:11"},"returnParameters":{"id":1016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1013,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1033,"src":"2527:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1012,"name":"bool","nodeType":"ElementaryTypeName","src":"2527:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1015,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1033,"src":"2533:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1014,"name":"uint256","nodeType":"ElementaryTypeName","src":"2533:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2526:15:11"},"scope":1184,"src":"2442:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1047,"nodeType":"Block","src":"2962:29:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1043,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"2979:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1044,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"2983:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2979:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1042,"id":1046,"nodeType":"Return","src":"2972:12:11"}]},"documentation":{"id":1034,"nodeType":"StructuredDocumentation","src":"2666:224:11","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":1048,"implemented":true,"kind":"function","modifiers":[],"name":"add","nodeType":"FunctionDefinition","parameters":{"id":1039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1036,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":1048,"src":"2908:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1035,"name":"uint256","nodeType":"ElementaryTypeName","src":"2908:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1038,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":1048,"src":"2919:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1037,"name":"uint256","nodeType":"ElementaryTypeName","src":"2919:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2907:22:11"},"returnParameters":{"id":1042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1041,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1048,"src":"2953:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1040,"name":"uint256","nodeType":"ElementaryTypeName","src":"2953:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2952:9:11"},"scope":1184,"src":"2895:96:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1062,"nodeType":"Block","src":"3329:29:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1058,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"3346:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1059,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"3350:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3346:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1057,"id":1061,"nodeType":"Return","src":"3339:12:11"}]},"documentation":{"id":1049,"nodeType":"StructuredDocumentation","src":"2997:260:11","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":1063,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nodeType":"FunctionDefinition","parameters":{"id":1054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1051,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":1063,"src":"3275:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1050,"name":"uint256","nodeType":"ElementaryTypeName","src":"3275:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1053,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":1063,"src":"3286:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1052,"name":"uint256","nodeType":"ElementaryTypeName","src":"3286:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3274:22:11"},"returnParameters":{"id":1057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1056,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1063,"src":"3320:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1055,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3319:9:11"},"scope":1184,"src":"3262:96:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1077,"nodeType":"Block","src":"3672:29:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1073,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"3689:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1074,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"3693:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3689:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1072,"id":1076,"nodeType":"Return","src":"3682:12:11"}]},"documentation":{"id":1064,"nodeType":"StructuredDocumentation","src":"3364:236:11","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":1078,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nodeType":"FunctionDefinition","parameters":{"id":1069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1066,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":1078,"src":"3618:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1065,"name":"uint256","nodeType":"ElementaryTypeName","src":"3618:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1068,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":1078,"src":"3629:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1067,"name":"uint256","nodeType":"ElementaryTypeName","src":"3629:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3617:22:11"},"returnParameters":{"id":1072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1071,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1078,"src":"3663:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1070,"name":"uint256","nodeType":"ElementaryTypeName","src":"3663:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3662:9:11"},"scope":1184,"src":"3605:96:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1092,"nodeType":"Block","src":"4057:29:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1088,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"4074:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1089,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"4078:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4074:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1087,"id":1091,"nodeType":"Return","src":"4067:12:11"}]},"documentation":{"id":1079,"nodeType":"StructuredDocumentation","src":"3707:278:11","text":" @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."},"id":1093,"implemented":true,"kind":"function","modifiers":[],"name":"div","nodeType":"FunctionDefinition","parameters":{"id":1084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1081,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":1093,"src":"4003:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1080,"name":"uint256","nodeType":"ElementaryTypeName","src":"4003:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1083,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":1093,"src":"4014:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1082,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4002:22:11"},"returnParameters":{"id":1087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1086,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1093,"src":"4048:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1085,"name":"uint256","nodeType":"ElementaryTypeName","src":"4048:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4047:9:11"},"scope":1184,"src":"3990:96:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1107,"nodeType":"Block","src":"4606:29:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1103,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"4623:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1104,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"4627:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4623:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1102,"id":1106,"nodeType":"Return","src":"4616:12:11"}]},"documentation":{"id":1094,"nodeType":"StructuredDocumentation","src":"4092:442:11","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":1108,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nodeType":"FunctionDefinition","parameters":{"id":1099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1096,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":1108,"src":"4552:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1095,"name":"uint256","nodeType":"ElementaryTypeName","src":"4552:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1098,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":1108,"src":"4563:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1097,"name":"uint256","nodeType":"ElementaryTypeName","src":"4563:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4551:22:11"},"returnParameters":{"id":1102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1101,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1108,"src":"4597:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1100,"name":"uint256","nodeType":"ElementaryTypeName","src":"4597:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4596:9:11"},"scope":1184,"src":"4539:96:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1132,"nodeType":"Block","src":"5224:106:11","statements":[{"id":1131,"nodeType":"UncheckedBlock","src":"5234:90:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1121,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"5266:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1122,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"5271:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5266:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1124,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"5274:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1120,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5258:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5258:29:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1126,"nodeType":"ExpressionStatement","src":"5258:29:11"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1127,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"5308:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1128,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"5312:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5308:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1119,"id":1130,"nodeType":"Return","src":"5301:12:11"}]}]},"documentation":{"id":1109,"nodeType":"StructuredDocumentation","src":"4641:453:11","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":1133,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nodeType":"FunctionDefinition","parameters":{"id":1116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1111,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":1133,"src":"5121:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1110,"name":"uint256","nodeType":"ElementaryTypeName","src":"5121:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1113,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":1133,"src":"5140:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1112,"name":"uint256","nodeType":"ElementaryTypeName","src":"5140:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1115,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":1133,"src":"5159:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1114,"name":"string","nodeType":"ElementaryTypeName","src":"5159:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5111:80:11"},"returnParameters":{"id":1119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1118,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1133,"src":"5215:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1117,"name":"uint256","nodeType":"ElementaryTypeName","src":"5215:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5214:9:11"},"scope":1184,"src":"5099:231:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1157,"nodeType":"Block","src":"5939:105:11","statements":[{"id":1156,"nodeType":"UncheckedBlock","src":"5949:89:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1146,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"5981:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5985:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5981:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1149,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"5988:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1145,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5973:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5973:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1151,"nodeType":"ExpressionStatement","src":"5973:28:11"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1152,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"6022:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1153,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"6026:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6022:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1144,"id":1155,"nodeType":"Return","src":"6015:12:11"}]}]},"documentation":{"id":1134,"nodeType":"StructuredDocumentation","src":"5336:473:11","text":" @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":1158,"implemented":true,"kind":"function","modifiers":[],"name":"div","nodeType":"FunctionDefinition","parameters":{"id":1141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1136,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":1158,"src":"5836:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1135,"name":"uint256","nodeType":"ElementaryTypeName","src":"5836:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1138,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":1158,"src":"5855:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1137,"name":"uint256","nodeType":"ElementaryTypeName","src":"5855:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1140,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":1158,"src":"5874:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1139,"name":"string","nodeType":"ElementaryTypeName","src":"5874:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5826:80:11"},"returnParameters":{"id":1144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1143,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1158,"src":"5930:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1142,"name":"uint256","nodeType":"ElementaryTypeName","src":"5930:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5929:9:11"},"scope":1184,"src":"5814:230:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1182,"nodeType":"Block","src":"6815:105:11","statements":[{"id":1181,"nodeType":"UncheckedBlock","src":"6825:89:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1171,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"6857:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6861:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6857:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1174,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"6864:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1170,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6849:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6849:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1176,"nodeType":"ExpressionStatement","src":"6849:28:11"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1177,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"6898:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1178,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"6902:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6898:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1169,"id":1180,"nodeType":"Return","src":"6891:12:11"}]}]},"documentation":{"id":1159,"nodeType":"StructuredDocumentation","src":"6050:635:11","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":1183,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nodeType":"FunctionDefinition","parameters":{"id":1166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1161,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":1183,"src":"6712:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1160,"name":"uint256","nodeType":"ElementaryTypeName","src":"6712:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1163,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":1183,"src":"6731:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1162,"name":"uint256","nodeType":"ElementaryTypeName","src":"6731:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1165,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":1183,"src":"6750:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1164,"name":"string","nodeType":"ElementaryTypeName","src":"6750:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6702:80:11"},"returnParameters":{"id":1169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1168,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1183,"src":"6806:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1167,"name":"uint256","nodeType":"ElementaryTypeName","src":"6806:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6805:9:11"},"scope":1184,"src":"6690:230:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1185,"src":"482:6440:11"}],"src":"107:6816:11"},"id":11},"contracts/interfaces/IChainlinkAggregator.sol":{"ast":{"absolutePath":"contracts/interfaces/IChainlinkAggregator.sol","exportedSymbols":{"IChainlinkAggregator":[1235]},"id":1236,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":1186,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"37:24:12"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1235,"linearizedBaseContracts":[1235],"name":"IChainlinkAggregator","nodeType":"ContractDefinition","nodes":[{"functionSelector":"313ce567","id":1191,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nodeType":"FunctionDefinition","parameters":{"id":1187,"nodeType":"ParameterList","parameters":[],"src":"117:2:12"},"returnParameters":{"id":1190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1189,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1191,"src":"143:5:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1188,"name":"uint8","nodeType":"ElementaryTypeName","src":"143:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"142:7:12"},"scope":1235,"src":"100:50:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"50d25bcd","id":1196,"implemented":false,"kind":"function","modifiers":[],"name":"latestAnswer","nodeType":"FunctionDefinition","parameters":{"id":1192,"nodeType":"ParameterList","parameters":[],"src":"177:2:12"},"returnParameters":{"id":1195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1194,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1196,"src":"203:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1193,"name":"int256","nodeType":"ElementaryTypeName","src":"203:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"202:8:12"},"scope":1235,"src":"156:55:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8205bf6a","id":1201,"implemented":false,"kind":"function","modifiers":[],"name":"latestTimestamp","nodeType":"FunctionDefinition","parameters":{"id":1197,"nodeType":"ParameterList","parameters":[],"src":"241:2:12"},"returnParameters":{"id":1200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1199,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1201,"src":"267:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1198,"name":"uint256","nodeType":"ElementaryTypeName","src":"267:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"266:9:12"},"scope":1235,"src":"217:59:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"668a0f02","id":1206,"implemented":false,"kind":"function","modifiers":[],"name":"latestRound","nodeType":"FunctionDefinition","parameters":{"id":1202,"nodeType":"ParameterList","parameters":[],"src":"302:2:12"},"returnParameters":{"id":1205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1204,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1206,"src":"328:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1203,"name":"uint256","nodeType":"ElementaryTypeName","src":"328:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"327:9:12"},"scope":1235,"src":"282:55:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b5ab58dc","id":1213,"implemented":false,"kind":"function","modifiers":[],"name":"getAnswer","nodeType":"FunctionDefinition","parameters":{"id":1209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1208,"mutability":"mutable","name":"roundId","nodeType":"VariableDeclaration","scope":1213,"src":"362:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1207,"name":"uint256","nodeType":"ElementaryTypeName","src":"362:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"361:17:12"},"returnParameters":{"id":1212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1211,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1213,"src":"402:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1210,"name":"int256","nodeType":"ElementaryTypeName","src":"402:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"401:8:12"},"scope":1235,"src":"343:67:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b633620c","id":1220,"implemented":false,"kind":"function","modifiers":[],"name":"getTimestamp","nodeType":"FunctionDefinition","parameters":{"id":1216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1215,"mutability":"mutable","name":"roundId","nodeType":"VariableDeclaration","scope":1220,"src":"438:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1214,"name":"uint256","nodeType":"ElementaryTypeName","src":"438:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"437:17:12"},"returnParameters":{"id":1219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1218,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1220,"src":"478:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1217,"name":"uint256","nodeType":"ElementaryTypeName","src":"478:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"477:9:12"},"scope":1235,"src":"416:71:12","stateMutability":"view","virtual":false,"visibility":"external"},{"anonymous":false,"id":1228,"name":"AnswerUpdated","nodeType":"EventDefinition","parameters":{"id":1227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1222,"indexed":true,"mutability":"mutable","name":"current","nodeType":"VariableDeclaration","scope":1228,"src":"522:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1221,"name":"int256","nodeType":"ElementaryTypeName","src":"522:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1224,"indexed":true,"mutability":"mutable","name":"roundId","nodeType":"VariableDeclaration","scope":1228,"src":"554:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1223,"name":"uint256","nodeType":"ElementaryTypeName","src":"554:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1226,"indexed":false,"mutability":"mutable","name":"timestamp","nodeType":"VariableDeclaration","scope":1228,"src":"587:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1225,"name":"uint256","nodeType":"ElementaryTypeName","src":"587:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"512:98:12"},"src":"493:118:12"},{"anonymous":false,"id":1234,"name":"NewRound","nodeType":"EventDefinition","parameters":{"id":1233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1230,"indexed":true,"mutability":"mutable","name":"roundId","nodeType":"VariableDeclaration","scope":1234,"src":"631:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1229,"name":"uint256","nodeType":"ElementaryTypeName","src":"631:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1232,"indexed":true,"mutability":"mutable","name":"startedBy","nodeType":"VariableDeclaration","scope":1234,"src":"656:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1231,"name":"address","nodeType":"ElementaryTypeName","src":"656:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"630:52:12"},"src":"616:67:12"}],"scope":1236,"src":"63:622:12"}],"src":"37:649:12"},"id":12},"contracts/interfaces/ILendingPool.sol":{"ast":{"absolutePath":"contracts/interfaces/ILendingPool.sol","exportedSymbols":{"DataTypes":[4238],"ILendingPool":[1676],"ILendingPoolAddressesProvider":[1879]},"id":1677,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":1237,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"37:24:13"},{"absolutePath":"contracts/interfaces/ILendingPoolAddressesProvider.sol","file":"./ILendingPoolAddressesProvider.sol","id":1239,"nodeType":"ImportDirective","scope":1677,"sourceUnit":1880,"src":"63:82:13","symbolAliases":[{"foreign":{"id":1238,"name":"ILendingPoolAddressesProvider","nodeType":"Identifier","overloadedDeclarations":[],"src":"71:29:13","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/protocol/libraries/types/DataTypes.sol","file":"../protocol/libraries/types/DataTypes.sol","id":1241,"nodeType":"ImportDirective","scope":1677,"sourceUnit":4239,"src":"146:68:13","symbolAliases":[{"foreign":{"id":1240,"name":"DataTypes","nodeType":"Identifier","overloadedDeclarations":[],"src":"154:9:13","typeDescriptions":{}}}],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1676,"linearizedBaseContracts":[1676],"name":"ILendingPool","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1242,"nodeType":"StructuredDocumentation","src":"245:339:13","text":" @dev Emitted on deposit()\n @param reserve The address of the underlying asset of the reserve\n @param user The address initiating the deposit\n @param onBehalfOf The beneficiary of the deposit, receiving the aTokens\n @param amount The amount deposited\n @param referral The referral code used*"},"id":1256,"name":"Deposit","nodeType":"EventDefinition","parameters":{"id":1255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1244,"indexed":true,"mutability":"mutable","name":"reserve","nodeType":"VariableDeclaration","scope":1256,"src":"612:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1243,"name":"address","nodeType":"ElementaryTypeName","src":"612:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1246,"indexed":false,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":1256,"src":"645:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1245,"name":"uint8","nodeType":"ElementaryTypeName","src":"645:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1248,"indexed":false,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":1256,"src":"668:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1247,"name":"address","nodeType":"ElementaryTypeName","src":"668:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1250,"indexed":true,"mutability":"mutable","name":"onBehalfOf","nodeType":"VariableDeclaration","scope":1256,"src":"690:26:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1249,"name":"address","nodeType":"ElementaryTypeName","src":"690:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1252,"indexed":false,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1256,"src":"726:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1251,"name":"uint256","nodeType":"ElementaryTypeName","src":"726:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1254,"indexed":true,"mutability":"mutable","name":"referral","nodeType":"VariableDeclaration","scope":1256,"src":"750:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1253,"name":"uint16","nodeType":"ElementaryTypeName","src":"750:6:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"602:177:13"},"src":"589:191:13"},{"anonymous":false,"documentation":{"id":1257,"nodeType":"StructuredDocumentation","src":"786:300:13","text":" @dev Emitted on withdraw()\n @param reserve The address of the underlyng asset being withdrawn\n @param user The address initiating the withdrawal, owner of aTokens\n @param to Address that will receive the underlying\n @param amount The amount to be withdrawn*"},"id":1267,"name":"Withdraw","nodeType":"EventDefinition","parameters":{"id":1266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1259,"indexed":true,"mutability":"mutable","name":"reserve","nodeType":"VariableDeclaration","scope":1267,"src":"1115:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1258,"name":"address","nodeType":"ElementaryTypeName","src":"1115:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1261,"indexed":true,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":1267,"src":"1148:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1260,"name":"address","nodeType":"ElementaryTypeName","src":"1148:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1263,"indexed":true,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":1267,"src":"1178:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1262,"name":"address","nodeType":"ElementaryTypeName","src":"1178:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1265,"indexed":false,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1267,"src":"1206:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1264,"name":"uint256","nodeType":"ElementaryTypeName","src":"1206:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1105:121:13"},"src":"1091:136:13"},{"anonymous":false,"documentation":{"id":1268,"nodeType":"StructuredDocumentation","src":"1233:323:13","text":" @dev Emitted on repay()\n @param reserve The address of the underlying asset of the reserve\n @param user The beneficiary of the repayment, getting his debt reduced\n @param repayer The address of the user initiating the repay(), providing the funds\n @param amount The amount repaid*"},"id":1278,"name":"Repay","nodeType":"EventDefinition","parameters":{"id":1277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1270,"indexed":true,"mutability":"mutable","name":"reserve","nodeType":"VariableDeclaration","scope":1278,"src":"1582:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1269,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1272,"indexed":true,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":1278,"src":"1615:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1271,"name":"address","nodeType":"ElementaryTypeName","src":"1615:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1274,"indexed":true,"mutability":"mutable","name":"repayer","nodeType":"VariableDeclaration","scope":1278,"src":"1645:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1273,"name":"address","nodeType":"ElementaryTypeName","src":"1645:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1276,"indexed":false,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1278,"src":"1678:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1275,"name":"uint256","nodeType":"ElementaryTypeName","src":"1678:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1572:126:13"},"src":"1561:138:13"},{"anonymous":false,"documentation":{"id":1279,"nodeType":"StructuredDocumentation","src":"1705:263:13","text":" @dev Emitted on swapBorrowRateMode()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user swapping his rate mode\n @param rateMode The rate mode that the user wants to swap to*"},"id":1287,"name":"Swap","nodeType":"EventDefinition","parameters":{"id":1286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1281,"indexed":true,"mutability":"mutable","name":"reserve","nodeType":"VariableDeclaration","scope":1287,"src":"1984:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1280,"name":"address","nodeType":"ElementaryTypeName","src":"1984:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1283,"indexed":true,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":1287,"src":"2009:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1282,"name":"address","nodeType":"ElementaryTypeName","src":"2009:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1285,"indexed":false,"mutability":"mutable","name":"rateMode","nodeType":"VariableDeclaration","scope":1287,"src":"2031:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1284,"name":"uint256","nodeType":"ElementaryTypeName","src":"2031:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1983:65:13"},"src":"1973:76:13"},{"anonymous":false,"documentation":{"id":1288,"nodeType":"StructuredDocumentation","src":"2055:216:13","text":" @dev Emitted on setUserUseReserveAsCollateral()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user enabling the usage as collateral*"},"id":1294,"name":"ReserveUsedAsCollateralEnabled","nodeType":"EventDefinition","parameters":{"id":1293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1290,"indexed":true,"mutability":"mutable","name":"reserve","nodeType":"VariableDeclaration","scope":1294,"src":"2322:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1289,"name":"address","nodeType":"ElementaryTypeName","src":"2322:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1292,"indexed":true,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":1294,"src":"2355:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1291,"name":"address","nodeType":"ElementaryTypeName","src":"2355:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2312:69:13"},"src":"2276:106:13"},{"anonymous":false,"documentation":{"id":1295,"nodeType":"StructuredDocumentation","src":"2388:216:13","text":" @dev Emitted on setUserUseReserveAsCollateral()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user enabling the usage as collateral*"},"id":1301,"name":"ReserveUsedAsCollateralDisabled","nodeType":"EventDefinition","parameters":{"id":1300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1297,"indexed":true,"mutability":"mutable","name":"reserve","nodeType":"VariableDeclaration","scope":1301,"src":"2656:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1296,"name":"address","nodeType":"ElementaryTypeName","src":"2656:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1299,"indexed":true,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":1301,"src":"2689:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1298,"name":"address","nodeType":"ElementaryTypeName","src":"2689:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2646:69:13"},"src":"2609:107:13"},{"anonymous":false,"documentation":{"id":1302,"nodeType":"StructuredDocumentation","src":"2722:221:13","text":" @dev Emitted on rebalanceStableBorrowRate()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user for which the rebalance has been executed*"},"id":1308,"name":"RebalanceStableBorrowRate","nodeType":"EventDefinition","parameters":{"id":1307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1304,"indexed":true,"mutability":"mutable","name":"reserve","nodeType":"VariableDeclaration","scope":1308,"src":"2989:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1303,"name":"address","nodeType":"ElementaryTypeName","src":"2989:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1306,"indexed":true,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":1308,"src":"3022:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1305,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2979:69:13"},"src":"2948:101:13"},{"anonymous":false,"documentation":{"id":1309,"nodeType":"StructuredDocumentation","src":"3055:386:13","text":" @dev Emitted on flashLoan()\n @param target The address of the flash loan receiver contract\n @param initiator The address initiating the flash loan\n @param asset The address of the asset being flash borrowed\n @param amount The amount flash borrowed\n @param premium The fee flash borrowed\n @param referralCode The referral code used*"},"id":1323,"name":"FlashLoan","nodeType":"EventDefinition","parameters":{"id":1322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1311,"indexed":true,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":1323,"src":"3471:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1310,"name":"address","nodeType":"ElementaryTypeName","src":"3471:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1313,"indexed":true,"mutability":"mutable","name":"initiator","nodeType":"VariableDeclaration","scope":1323,"src":"3503:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1312,"name":"address","nodeType":"ElementaryTypeName","src":"3503:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1315,"indexed":true,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":1323,"src":"3538:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1314,"name":"address","nodeType":"ElementaryTypeName","src":"3538:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1317,"indexed":false,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1323,"src":"3569:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1316,"name":"uint256","nodeType":"ElementaryTypeName","src":"3569:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1319,"indexed":false,"mutability":"mutable","name":"premium","nodeType":"VariableDeclaration","scope":1323,"src":"3593:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1318,"name":"uint256","nodeType":"ElementaryTypeName","src":"3593:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1321,"indexed":false,"mutability":"mutable","name":"referralCode","nodeType":"VariableDeclaration","scope":1323,"src":"3618:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1320,"name":"uint16","nodeType":"ElementaryTypeName","src":"3618:6:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"3461:182:13"},"src":"3446:198:13"},{"anonymous":false,"documentation":{"id":1324,"nodeType":"StructuredDocumentation","src":"3650:60:13","text":" @dev Emitted when the pause is triggered."},"id":1326,"name":"Paused","nodeType":"EventDefinition","parameters":{"id":1325,"nodeType":"ParameterList","parameters":[],"src":"3727:2:13"},"src":"3715:15:13"},{"anonymous":false,"documentation":{"id":1327,"nodeType":"StructuredDocumentation","src":"3736:57:13","text":" @dev Emitted when the pause is lifted."},"id":1329,"name":"Unpaused","nodeType":"EventDefinition","parameters":{"id":1328,"nodeType":"ParameterList","parameters":[],"src":"3812:2:13"},"src":"3798:17:13"},{"anonymous":false,"documentation":{"id":1330,"nodeType":"StructuredDocumentation","src":"3821:952:13","text":" @dev Emitted when a borrower is liquidated. This event is emitted by the LendingPool via\n LendingPoolCollateral manager using a DELEGATECALL\n This allows to have the events in the generated ABI for LendingPool.\n @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n @param user The address of the borrower getting liquidated\n @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n @param liquidatedCollateralAmount The amount of collateral received by the liiquidator\n @param liquidator The address of the liquidator\n @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\n to receive the underlying collateral asset directly*"},"id":1346,"name":"LiquidationCall","nodeType":"EventDefinition","parameters":{"id":1345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1332,"indexed":true,"mutability":"mutable","name":"collateralAsset","nodeType":"VariableDeclaration","scope":1346,"src":"4809:31:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1331,"name":"address","nodeType":"ElementaryTypeName","src":"4809:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1334,"indexed":true,"mutability":"mutable","name":"debtAsset","nodeType":"VariableDeclaration","scope":1346,"src":"4850:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1333,"name":"address","nodeType":"ElementaryTypeName","src":"4850:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1336,"indexed":true,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":1346,"src":"4885:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1335,"name":"address","nodeType":"ElementaryTypeName","src":"4885:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1338,"indexed":false,"mutability":"mutable","name":"debtToCover","nodeType":"VariableDeclaration","scope":1346,"src":"4915:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1337,"name":"uint256","nodeType":"ElementaryTypeName","src":"4915:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1340,"indexed":false,"mutability":"mutable","name":"liquidatedCollateralAmount","nodeType":"VariableDeclaration","scope":1346,"src":"4944:34:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1339,"name":"uint256","nodeType":"ElementaryTypeName","src":"4944:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1342,"indexed":false,"mutability":"mutable","name":"liquidator","nodeType":"VariableDeclaration","scope":1346,"src":"4988:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1341,"name":"address","nodeType":"ElementaryTypeName","src":"4988:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1344,"indexed":false,"mutability":"mutable","name":"receiveAToken","nodeType":"VariableDeclaration","scope":1346,"src":"5016:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1343,"name":"bool","nodeType":"ElementaryTypeName","src":"5016:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4799:241:13"},"src":"4778:263:13"},{"anonymous":false,"documentation":{"id":1347,"nodeType":"StructuredDocumentation","src":"5047:744:13","text":" @dev Emitted when the state of a reserve is updated. NOTE: This event is actually declared\n in the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal,\n the event will actually be fired by the LendingPool contract. The event is therefore replicated here so it\n gets added to the LendingPool ABI\n @param reserve The address of the underlying asset of the reserve\n @param liquidityRate The new liquidity rate\n @param stableBorrowRate The new stable borrow rate\n @param variableBorrowRate The new variable borrow rate\n @param liquidityIndex The new liquidity index\n @param variableBorrowIndex The new variable borrow index*"},"id":1361,"name":"ReserveDataUpdated","nodeType":"EventDefinition","parameters":{"id":1360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1349,"indexed":true,"mutability":"mutable","name":"reserve","nodeType":"VariableDeclaration","scope":1361,"src":"5830:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1348,"name":"address","nodeType":"ElementaryTypeName","src":"5830:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1351,"indexed":false,"mutability":"mutable","name":"liquidityRate","nodeType":"VariableDeclaration","scope":1361,"src":"5863:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1350,"name":"uint256","nodeType":"ElementaryTypeName","src":"5863:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1353,"indexed":false,"mutability":"mutable","name":"stableBorrowRate","nodeType":"VariableDeclaration","scope":1361,"src":"5894:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1352,"name":"uint256","nodeType":"ElementaryTypeName","src":"5894:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1355,"indexed":false,"mutability":"mutable","name":"variableBorrowRate","nodeType":"VariableDeclaration","scope":1361,"src":"5928:26:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1354,"name":"uint256","nodeType":"ElementaryTypeName","src":"5928:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1357,"indexed":false,"mutability":"mutable","name":"liquidityIndex","nodeType":"VariableDeclaration","scope":1361,"src":"5964:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1356,"name":"uint256","nodeType":"ElementaryTypeName","src":"5964:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1359,"indexed":false,"mutability":"mutable","name":"variableBorrowIndex","nodeType":"VariableDeclaration","scope":1361,"src":"5996:27:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1358,"name":"uint256","nodeType":"ElementaryTypeName","src":"5996:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5820:209:13"},"src":"5796:234:13"},{"documentation":{"id":1362,"nodeType":"StructuredDocumentation","src":"6036:732:13","text":" @dev Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\n - E.g. User deposits 100 USDC and gets in return 100 aUSDC\n @param asset The address of the underlying asset to deposit\n @param amount The amount to be deposited\n @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   is a different wallet\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man*"},"functionSelector":"f6118476","id":1377,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nodeType":"FunctionDefinition","parameters":{"id":1375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1364,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":1377,"src":"6799:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1363,"name":"address","nodeType":"ElementaryTypeName","src":"6799:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1366,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":1377,"src":"6822:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1365,"name":"uint8","nodeType":"ElementaryTypeName","src":"6822:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1368,"mutability":"mutable","name":"isCollateral","nodeType":"VariableDeclaration","scope":1377,"src":"6845:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1367,"name":"bool","nodeType":"ElementaryTypeName","src":"6845:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1370,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1377,"src":"6872:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1369,"name":"uint256","nodeType":"ElementaryTypeName","src":"6872:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1372,"mutability":"mutable","name":"onBehalfOf","nodeType":"VariableDeclaration","scope":1377,"src":"6896:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1371,"name":"address","nodeType":"ElementaryTypeName","src":"6896:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1374,"mutability":"mutable","name":"referralCode","nodeType":"VariableDeclaration","scope":1377,"src":"6924:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1373,"name":"uint16","nodeType":"ElementaryTypeName","src":"6924:6:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"6789:160:13"},"returnParameters":{"id":1376,"nodeType":"ParameterList","parameters":[],"src":"6958:0:13"},"scope":1676,"src":"6773:186:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1378,"nodeType":"StructuredDocumentation","src":"6965:685:13","text":" @dev Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned\n E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\n @param asset The address of the underlying asset to withdraw\n @param amount The underlying amount to be withdrawn\n   - Send the value type(uint256).max in order to withdraw the whole aToken balance\n @param to Address that will receive the underlying, same as msg.sender if the user\n   wants to receive it on his own wallet, or a different address if the beneficiary is a\n   different wallet\n @return The final amount withdrawn*"},"functionSelector":"452572f3","id":1391,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nodeType":"FunctionDefinition","parameters":{"id":1387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1380,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":1391,"src":"7682:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1379,"name":"address","nodeType":"ElementaryTypeName","src":"7682:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1382,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":1391,"src":"7705:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1381,"name":"uint8","nodeType":"ElementaryTypeName","src":"7705:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1384,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1391,"src":"7728:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1383,"name":"uint256","nodeType":"ElementaryTypeName","src":"7728:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1386,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":1391,"src":"7752:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1385,"name":"address","nodeType":"ElementaryTypeName","src":"7752:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7672:96:13"},"returnParameters":{"id":1390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1389,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1391,"src":"7787:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1388,"name":"uint256","nodeType":"ElementaryTypeName","src":"7787:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7786:9:13"},"scope":1676,"src":"7655:141:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1392,"nodeType":"StructuredDocumentation","src":"7802:1217:13","text":" @dev Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower\n already deposited enough collateral, or he was given enough allowance by a credit delegator on the\n corresponding debt token (StableDebtToken or VariableDebtToken)\n - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet\n   and 100 stable/variable debt tokens, depending on the `interestRateMode`\n @param asset The address of the underlying asset to borrow\n @param amount The amount to be borrowed\n @param interestRateMode The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man\n @param onBehalfOf Address of the user who will receive the debt. Should be the address of the borrower itself\n calling the function if he wants to borrow against his own collateral, or the address of the credit delegator\n if he has been given credit delegation allowance*"},"functionSelector":"f182c036","id":1407,"implemented":false,"kind":"function","modifiers":[],"name":"borrow","nodeType":"FunctionDefinition","parameters":{"id":1405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1394,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":1407,"src":"9049:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1393,"name":"address","nodeType":"ElementaryTypeName","src":"9049:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1396,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":1407,"src":"9072:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1395,"name":"uint8","nodeType":"ElementaryTypeName","src":"9072:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1398,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1407,"src":"9095:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1397,"name":"uint256","nodeType":"ElementaryTypeName","src":"9095:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1400,"mutability":"mutable","name":"interestRateMode","nodeType":"VariableDeclaration","scope":1407,"src":"9119:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1399,"name":"uint256","nodeType":"ElementaryTypeName","src":"9119:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1402,"mutability":"mutable","name":"referralCode","nodeType":"VariableDeclaration","scope":1407,"src":"9153:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1401,"name":"uint16","nodeType":"ElementaryTypeName","src":"9153:6:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1404,"mutability":"mutable","name":"onBehalfOf","nodeType":"VariableDeclaration","scope":1407,"src":"9182:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1403,"name":"address","nodeType":"ElementaryTypeName","src":"9182:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9039:167:13"},"returnParameters":{"id":1406,"nodeType":"ParameterList","parameters":[],"src":"9215:0:13"},"scope":1676,"src":"9024:192:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1408,"nodeType":"StructuredDocumentation","src":"9222:884:13","text":" @notice Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned\n - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\n @param asset The address of the borrowed underlying asset previously borrowed\n @param amount The amount to repay\n - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n @param rateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n @param onBehalfOf Address of the user who will get his debt reduced/removed. Should be the address of the\n user calling the function if he wants to reduce/remove his own debt, or the address of any other\n other borrower whose debt should be removed\n @return The final amount repaid*"},"functionSelector":"624490d4","id":1423,"implemented":false,"kind":"function","modifiers":[],"name":"repay","nodeType":"FunctionDefinition","parameters":{"id":1419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1410,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":1423,"src":"10135:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1409,"name":"address","nodeType":"ElementaryTypeName","src":"10135:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1412,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":1423,"src":"10158:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1411,"name":"uint8","nodeType":"ElementaryTypeName","src":"10158:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1414,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1423,"src":"10181:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1413,"name":"uint256","nodeType":"ElementaryTypeName","src":"10181:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1416,"mutability":"mutable","name":"rateMode","nodeType":"VariableDeclaration","scope":1423,"src":"10205:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1415,"name":"uint256","nodeType":"ElementaryTypeName","src":"10205:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1418,"mutability":"mutable","name":"onBehalfOf","nodeType":"VariableDeclaration","scope":1423,"src":"10231:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1417,"name":"address","nodeType":"ElementaryTypeName","src":"10231:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10125:130:13"},"returnParameters":{"id":1422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1421,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1423,"src":"10274:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1420,"name":"uint256","nodeType":"ElementaryTypeName","src":"10274:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10273:9:13"},"scope":1676,"src":"10111:172:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1424,"nodeType":"StructuredDocumentation","src":"10289:239:13","text":" @dev Allows a borrower to swap his debt between stable and variable mode, or viceversa\n @param asset The address of the underlying asset borrowed\n @param rateMode The rate mode that the user wants to swap to*"},"functionSelector":"f2e1cf16","id":1433,"implemented":false,"kind":"function","modifiers":[],"name":"swapBorrowRateMode","nodeType":"FunctionDefinition","parameters":{"id":1431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1426,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":1433,"src":"10570:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1425,"name":"address","nodeType":"ElementaryTypeName","src":"10570:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1428,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":1433,"src":"10593:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1427,"name":"uint8","nodeType":"ElementaryTypeName","src":"10593:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1430,"mutability":"mutable","name":"rateMode","nodeType":"VariableDeclaration","scope":1433,"src":"10616:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1429,"name":"uint256","nodeType":"ElementaryTypeName","src":"10616:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10560:78:13"},"returnParameters":{"id":1432,"nodeType":"ParameterList","parameters":[],"src":"10647:0:13"},"scope":1676,"src":"10533:115:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1434,"nodeType":"StructuredDocumentation","src":"10654:569:13","text":" @dev Rebalances the stable interest rate of a user to the current stable rate defined on the reserve.\n - Users can be rebalanced if the following conditions are satisfied:\n     1. Usage ratio is above 95%\n     2. the current deposit APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been\n        borrowed at a stable rate and depositors are not earning enough\n @param asset The address of the underlying asset borrowed\n @param user The address of the user to be rebalanced*"},"functionSelector":"a7c245f0","id":1443,"implemented":false,"kind":"function","modifiers":[],"name":"rebalanceStableBorrowRate","nodeType":"FunctionDefinition","parameters":{"id":1441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1436,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":1443,"src":"11272:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1435,"name":"address","nodeType":"ElementaryTypeName","src":"11272:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1438,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":1443,"src":"11295:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1437,"name":"uint8","nodeType":"ElementaryTypeName","src":"11295:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1440,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":1443,"src":"11318:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1439,"name":"address","nodeType":"ElementaryTypeName","src":"11318:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11262:74:13"},"returnParameters":{"id":1442,"nodeType":"ParameterList","parameters":[],"src":"11345:0:13"},"scope":1676,"src":"11228:118:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1444,"nodeType":"StructuredDocumentation","src":"11352:274:13","text":" @dev Allows depositors to enable/disable a specific deposited asset as collateral\n @param asset The address of the underlying asset deposited\n @param useAsCollateral `true` if the user wants to use the deposit as collateral, `false` otherwise*"},"functionSelector":"9372e1e7","id":1453,"implemented":false,"kind":"function","modifiers":[],"name":"setUserUseReserveAsCollateral","nodeType":"FunctionDefinition","parameters":{"id":1451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1446,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":1453,"src":"11679:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1445,"name":"address","nodeType":"ElementaryTypeName","src":"11679:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1448,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":1453,"src":"11702:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1447,"name":"uint8","nodeType":"ElementaryTypeName","src":"11702:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1450,"mutability":"mutable","name":"useAsCollateral","nodeType":"VariableDeclaration","scope":1453,"src":"11725:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1449,"name":"bool","nodeType":"ElementaryTypeName","src":"11725:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11669:82:13"},"returnParameters":{"id":1452,"nodeType":"ParameterList","parameters":[],"src":"11760:0:13"},"scope":1676,"src":"11631:130:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1454,"nodeType":"StructuredDocumentation","src":"11767:880:13","text":" @dev Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1\n - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives\n   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\n @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n @param user The address of the borrower getting liquidated\n @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\n to receive the underlying collateral asset directly*"},"functionSelector":"3f2591f7","id":1469,"implemented":false,"kind":"function","modifiers":[],"name":"liquidationCall","nodeType":"FunctionDefinition","parameters":{"id":1467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1456,"mutability":"mutable","name":"collateralAsset","nodeType":"VariableDeclaration","scope":1469,"src":"12686:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1455,"name":"address","nodeType":"ElementaryTypeName","src":"12686:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1458,"mutability":"mutable","name":"debtAsset","nodeType":"VariableDeclaration","scope":1469,"src":"12719:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1457,"name":"address","nodeType":"ElementaryTypeName","src":"12719:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1460,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":1469,"src":"12746:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1459,"name":"uint8","nodeType":"ElementaryTypeName","src":"12746:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1462,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":1469,"src":"12769:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1461,"name":"address","nodeType":"ElementaryTypeName","src":"12769:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1464,"mutability":"mutable","name":"debtToCover","nodeType":"VariableDeclaration","scope":1469,"src":"12791:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1463,"name":"uint256","nodeType":"ElementaryTypeName","src":"12791:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1466,"mutability":"mutable","name":"receiveAToken","nodeType":"VariableDeclaration","scope":1469,"src":"12820:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1465,"name":"bool","nodeType":"ElementaryTypeName","src":"12820:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12676:168:13"},"returnParameters":{"id":1468,"nodeType":"ParameterList","parameters":[],"src":"12853:0:13"},"scope":1676,"src":"12652:202:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1470,"nodeType":"StructuredDocumentation","src":"12860:1408:13","text":" @dev Allows smartcontracts to access the liquidity of the pool within one transaction,\n as long as the amount taken plus a fee is returned.\n IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration.\n For further details please visit https://developers.aave.com\n @param receiverAddress The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface\n @param assets The addresses of the assets being flash-borrowed\n @param amounts The amounts amounts being flash-borrowed\n @param modes Types of the debt to open if the flash loan is not returned:\n   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver\n   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n @param onBehalfOf The address  that will receive the debt in the case of using on `modes` 1 or 2\n @param params Variadic packed params to pass to the receiver as extra information\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man*"},"functionSelector":"0782623e","id":1491,"implemented":false,"kind":"function","modifiers":[],"name":"flashLoan","nodeType":"FunctionDefinition","parameters":{"id":1489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1472,"mutability":"mutable","name":"receiverAddress","nodeType":"VariableDeclaration","scope":1491,"src":"14301:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1471,"name":"address","nodeType":"ElementaryTypeName","src":"14301:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1476,"mutability":"mutable","name":"assets","nodeType":"VariableDeclaration","scope":1491,"src":"14334:42:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TrancheAddress_$4087_calldata_ptr_$dyn_calldata_ptr","typeString":"struct DataTypes.TrancheAddress[]"},"typeName":{"baseType":{"id":1474,"nodeType":"UserDefinedTypeName","pathNode":{"id":1473,"name":"DataTypes.TrancheAddress","nodeType":"IdentifierPath","referencedDeclaration":4087,"src":"14334:24:13"},"referencedDeclaration":4087,"src":"14334:24:13","typeDescriptions":{"typeIdentifier":"t_struct$_TrancheAddress_$4087_storage_ptr","typeString":"struct DataTypes.TrancheAddress"}},"id":1475,"nodeType":"ArrayTypeName","src":"14334:26:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TrancheAddress_$4087_storage_$dyn_storage_ptr","typeString":"struct DataTypes.TrancheAddress[]"}},"visibility":"internal"},{"constant":false,"id":1479,"mutability":"mutable","name":"amounts","nodeType":"VariableDeclaration","scope":1491,"src":"14386:26:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1477,"name":"uint256","nodeType":"ElementaryTypeName","src":"14386:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1478,"nodeType":"ArrayTypeName","src":"14386:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1482,"mutability":"mutable","name":"modes","nodeType":"VariableDeclaration","scope":1491,"src":"14422:24:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1480,"name":"uint256","nodeType":"ElementaryTypeName","src":"14422:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1481,"nodeType":"ArrayTypeName","src":"14422:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1484,"mutability":"mutable","name":"onBehalfOf","nodeType":"VariableDeclaration","scope":1491,"src":"14456:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1483,"name":"address","nodeType":"ElementaryTypeName","src":"14456:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1486,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":1491,"src":"14484:21:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1485,"name":"bytes","nodeType":"ElementaryTypeName","src":"14484:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1488,"mutability":"mutable","name":"referralCode","nodeType":"VariableDeclaration","scope":1491,"src":"14515:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1487,"name":"uint16","nodeType":"ElementaryTypeName","src":"14515:6:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"14291:249:13"},"returnParameters":{"id":1490,"nodeType":"ParameterList","parameters":[],"src":"14549:0:13"},"scope":1676,"src":"14273:277:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1492,"nodeType":"StructuredDocumentation","src":"14556:525:13","text":" @dev Returns the user account data across all the reserves\n @param user The address of the user\n @return totalCollateralETH the total collateral in ETH of the user\n @return totalDebtETH the total debt in ETH of the user\n @return availableBorrowsETH the borrowing power left of the user\n @return currentLiquidationThreshold the liquidation threshold of the user\n @return ltv the loan to value of the user\n @return healthFactor the current health factor of the user*"},"functionSelector":"60e96389","id":1511,"implemented":false,"kind":"function","modifiers":[],"name":"getUserAccountData","nodeType":"FunctionDefinition","parameters":{"id":1497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1494,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":1511,"src":"15114:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1493,"name":"address","nodeType":"ElementaryTypeName","src":"15114:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1496,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":1511,"src":"15128:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1495,"name":"uint8","nodeType":"ElementaryTypeName","src":"15128:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"15113:29:13"},"returnParameters":{"id":1510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1499,"mutability":"mutable","name":"totalCollateralETH","nodeType":"VariableDeclaration","scope":1511,"src":"15203:26:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1498,"name":"uint256","nodeType":"ElementaryTypeName","src":"15203:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1501,"mutability":"mutable","name":"totalDebtETH","nodeType":"VariableDeclaration","scope":1511,"src":"15243:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1500,"name":"uint256","nodeType":"ElementaryTypeName","src":"15243:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1503,"mutability":"mutable","name":"availableBorrowsETH","nodeType":"VariableDeclaration","scope":1511,"src":"15277:27:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1502,"name":"uint256","nodeType":"ElementaryTypeName","src":"15277:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1505,"mutability":"mutable","name":"currentLiquidationThreshold","nodeType":"VariableDeclaration","scope":1511,"src":"15318:35:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1504,"name":"uint256","nodeType":"ElementaryTypeName","src":"15318:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1507,"mutability":"mutable","name":"ltv","nodeType":"VariableDeclaration","scope":1511,"src":"15367:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1506,"name":"uint256","nodeType":"ElementaryTypeName","src":"15367:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1509,"mutability":"mutable","name":"healthFactor","nodeType":"VariableDeclaration","scope":1511,"src":"15392:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1508,"name":"uint256","nodeType":"ElementaryTypeName","src":"15392:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15189:233:13"},"scope":1676,"src":"15086:337:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7b6d52d4","id":1526,"implemented":false,"kind":"function","modifiers":[],"name":"initReserve","nodeType":"FunctionDefinition","parameters":{"id":1524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1513,"mutability":"mutable","name":"reserve","nodeType":"VariableDeclaration","scope":1526,"src":"15459:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1512,"name":"address","nodeType":"ElementaryTypeName","src":"15459:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1515,"mutability":"mutable","name":"aTokenAddress","nodeType":"VariableDeclaration","scope":1526,"src":"15484:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1514,"name":"address","nodeType":"ElementaryTypeName","src":"15484:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1517,"mutability":"mutable","name":"stableDebtAddress","nodeType":"VariableDeclaration","scope":1526,"src":"15515:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1516,"name":"address","nodeType":"ElementaryTypeName","src":"15515:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1519,"mutability":"mutable","name":"variableDebtAddress","nodeType":"VariableDeclaration","scope":1526,"src":"15550:27:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1518,"name":"address","nodeType":"ElementaryTypeName","src":"15550:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1521,"mutability":"mutable","name":"interestRateStrategyAddress","nodeType":"VariableDeclaration","scope":1526,"src":"15587:35:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1520,"name":"address","nodeType":"ElementaryTypeName","src":"15587:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1523,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":1526,"src":"15632:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1522,"name":"uint8","nodeType":"ElementaryTypeName","src":"15632:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"15449:202:13"},"returnParameters":{"id":1525,"nodeType":"ParameterList","parameters":[],"src":"15660:0:13"},"scope":1676,"src":"15429:232:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1527,"nodeType":"StructuredDocumentation","src":"15667:259:13","text":" @dev Updates the address of the interest rate strategy contract\n - Only callable by the LendingPoolConfigurator contract\n @param asset The address of the underlying asset of the reserve\n @param _risk The risk of the asset*"},"functionSelector":"9f71ff22","id":1540,"implemented":false,"kind":"function","modifiers":[],"name":"setAssetData","nodeType":"FunctionDefinition","parameters":{"id":1538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1529,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":1540,"src":"15962:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1528,"name":"address","nodeType":"ElementaryTypeName","src":"15962:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1531,"mutability":"mutable","name":"_risk","nodeType":"VariableDeclaration","scope":1540,"src":"15985:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1530,"name":"uint8","nodeType":"ElementaryTypeName","src":"15985:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1533,"mutability":"mutable","name":"_isLendable","nodeType":"VariableDeclaration","scope":1540,"src":"16006:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1532,"name":"bool","nodeType":"ElementaryTypeName","src":"16006:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1535,"mutability":"mutable","name":"_allowedHigherTranche","nodeType":"VariableDeclaration","scope":1540,"src":"16032:26:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1534,"name":"bool","nodeType":"ElementaryTypeName","src":"16032:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1537,"mutability":"mutable","name":"_assetType","nodeType":"VariableDeclaration","scope":1540,"src":"16068:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1536,"name":"uint8","nodeType":"ElementaryTypeName","src":"16068:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"15952:138:13"},"returnParameters":{"id":1539,"nodeType":"ParameterList","parameters":[],"src":"16099:0:13"},"scope":1676,"src":"15931:169:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"de14ae28","id":1549,"implemented":false,"kind":"function","modifiers":[],"name":"setReserveInterestRateStrategyAddress","nodeType":"FunctionDefinition","parameters":{"id":1547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1542,"mutability":"mutable","name":"reserve","nodeType":"VariableDeclaration","scope":1549,"src":"16162:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1541,"name":"address","nodeType":"ElementaryTypeName","src":"16162:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1544,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":1549,"src":"16187:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1543,"name":"uint8","nodeType":"ElementaryTypeName","src":"16187:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1546,"mutability":"mutable","name":"rateStrategyAddress","nodeType":"VariableDeclaration","scope":1549,"src":"16210:27:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1545,"name":"address","nodeType":"ElementaryTypeName","src":"16210:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16152:91:13"},"returnParameters":{"id":1548,"nodeType":"ParameterList","parameters":[],"src":"16252:0:13"},"scope":1676,"src":"16106:147:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f13771da","id":1558,"implemented":false,"kind":"function","modifiers":[],"name":"setConfiguration","nodeType":"FunctionDefinition","parameters":{"id":1556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1551,"mutability":"mutable","name":"reserve","nodeType":"VariableDeclaration","scope":1558,"src":"16294:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1550,"name":"address","nodeType":"ElementaryTypeName","src":"16294:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1553,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":1558,"src":"16319:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1552,"name":"uint8","nodeType":"ElementaryTypeName","src":"16319:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1555,"mutability":"mutable","name":"configuration","nodeType":"VariableDeclaration","scope":1558,"src":"16342:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1554,"name":"uint256","nodeType":"ElementaryTypeName","src":"16342:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16284:85:13"},"returnParameters":{"id":1557,"nodeType":"ParameterList","parameters":[],"src":"16378:0:13"},"scope":1676,"src":"16259:120:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1559,"nodeType":"StructuredDocumentation","src":"16385:184:13","text":" @dev Returns the configuration of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The configuration of the reserve*"},"functionSelector":"39142300","id":1569,"implemented":false,"kind":"function","modifiers":[],"name":"getConfiguration","nodeType":"FunctionDefinition","parameters":{"id":1564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1561,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":1569,"src":"16600:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1560,"name":"address","nodeType":"ElementaryTypeName","src":"16600:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1563,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":1569,"src":"16615:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1562,"name":"uint8","nodeType":"ElementaryTypeName","src":"16615:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16599:30:13"},"returnParameters":{"id":1568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1567,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1569,"src":"16677:40:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$4128_memory_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"},"typeName":{"id":1566,"nodeType":"UserDefinedTypeName","pathNode":{"id":1565,"name":"DataTypes.ReserveConfigurationMap","nodeType":"IdentifierPath","referencedDeclaration":4128,"src":"16677:33:13"},"referencedDeclaration":4128,"src":"16677:33:13","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$4128_storage_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"}},"visibility":"internal"}],"src":"16676:42:13"},"scope":1676,"src":"16574:145:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1570,"nodeType":"StructuredDocumentation","src":"16725:167:13","text":" @dev Returns the configuration of the user across all the reserves\n @param user The user address\n @return The configuration of the user*"},"functionSelector":"4417a583","id":1578,"implemented":false,"kind":"function","modifiers":[],"name":"getUserConfiguration","nodeType":"FunctionDefinition","parameters":{"id":1573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1572,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":1578,"src":"16927:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1571,"name":"address","nodeType":"ElementaryTypeName","src":"16927:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16926:14:13"},"returnParameters":{"id":1577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1576,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1578,"src":"16988:37:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UserConfigurationMap_$4131_memory_ptr","typeString":"struct DataTypes.UserConfigurationMap"},"typeName":{"id":1575,"nodeType":"UserDefinedTypeName","pathNode":{"id":1574,"name":"DataTypes.UserConfigurationMap","nodeType":"IdentifierPath","referencedDeclaration":4131,"src":"16988:30:13"},"referencedDeclaration":4131,"src":"16988:30:13","typeDescriptions":{"typeIdentifier":"t_struct$_UserConfigurationMap_$4131_storage_ptr","typeString":"struct DataTypes.UserConfigurationMap"}},"visibility":"internal"}],"src":"16987:39:13"},"scope":1676,"src":"16897:130:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1579,"nodeType":"StructuredDocumentation","src":"17033:204:13","text":" @dev Returns the normalized income normalized income of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The reserve's normalized income"},"functionSelector":"776f6891","id":1588,"implemented":false,"kind":"function","modifiers":[],"name":"getReserveNormalizedIncome","nodeType":"FunctionDefinition","parameters":{"id":1584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1581,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":1588,"src":"17278:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1580,"name":"address","nodeType":"ElementaryTypeName","src":"17278:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1583,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":1588,"src":"17293:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1582,"name":"uint8","nodeType":"ElementaryTypeName","src":"17293:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"17277:30:13"},"returnParameters":{"id":1587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1586,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1588,"src":"17355:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1585,"name":"uint256","nodeType":"ElementaryTypeName","src":"17355:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17354:9:13"},"scope":1676,"src":"17242:122:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1589,"nodeType":"StructuredDocumentation","src":"17370:201:13","text":" @dev Returns the normalized variable debt per unit of asset\n @param asset The address of the underlying asset of the reserve\n @return The reserve normalized variable debt"},"functionSelector":"013351ef","id":1598,"implemented":false,"kind":"function","modifiers":[],"name":"getReserveNormalizedVariableDebt","nodeType":"FunctionDefinition","parameters":{"id":1594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1591,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":1598,"src":"17618:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1590,"name":"address","nodeType":"ElementaryTypeName","src":"17618:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1593,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":1598,"src":"17633:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1592,"name":"uint8","nodeType":"ElementaryTypeName","src":"17633:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"17617:30:13"},"returnParameters":{"id":1597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1596,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1598,"src":"17695:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1595,"name":"uint256","nodeType":"ElementaryTypeName","src":"17695:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17694:9:13"},"scope":1676,"src":"17576:128:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1599,"nodeType":"StructuredDocumentation","src":"17710:186:13","text":" @dev Returns the state and configuration of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The state of the reserve*"},"functionSelector":"3629e3cd","id":1609,"implemented":false,"kind":"function","modifiers":[],"name":"getReserveData","nodeType":"FunctionDefinition","parameters":{"id":1604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1601,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":1609,"src":"17925:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1600,"name":"address","nodeType":"ElementaryTypeName","src":"17925:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1603,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":1609,"src":"17940:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1602,"name":"uint8","nodeType":"ElementaryTypeName","src":"17940:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"17924:30:13"},"returnParameters":{"id":1608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1607,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1609,"src":"18002:28:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveData_$4115_memory_ptr","typeString":"struct DataTypes.ReserveData"},"typeName":{"id":1606,"nodeType":"UserDefinedTypeName","pathNode":{"id":1605,"name":"DataTypes.ReserveData","nodeType":"IdentifierPath","referencedDeclaration":4115,"src":"18002:21:13"},"referencedDeclaration":4115,"src":"18002:21:13","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveData_$4115_storage_ptr","typeString":"struct DataTypes.ReserveData"}},"visibility":"internal"}],"src":"18001:30:13"},"scope":1676,"src":"17901:131:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"c1fc1e90","id":1626,"implemented":false,"kind":"function","modifiers":[],"name":"finalizeTransfer","nodeType":"FunctionDefinition","parameters":{"id":1624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1611,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":1626,"src":"18073:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1610,"name":"address","nodeType":"ElementaryTypeName","src":"18073:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1613,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":1626,"src":"18096:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1612,"name":"uint8","nodeType":"ElementaryTypeName","src":"18096:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1615,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":1626,"src":"18119:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1614,"name":"address","nodeType":"ElementaryTypeName","src":"18119:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1617,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":1626,"src":"18141:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1616,"name":"address","nodeType":"ElementaryTypeName","src":"18141:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1619,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1626,"src":"18161:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1618,"name":"uint256","nodeType":"ElementaryTypeName","src":"18161:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1621,"mutability":"mutable","name":"balanceFromAfter","nodeType":"VariableDeclaration","scope":1626,"src":"18185:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1620,"name":"uint256","nodeType":"ElementaryTypeName","src":"18185:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1623,"mutability":"mutable","name":"balanceToBefore","nodeType":"VariableDeclaration","scope":1626,"src":"18219:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1622,"name":"uint256","nodeType":"ElementaryTypeName","src":"18219:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18063:185:13"},"returnParameters":{"id":1625,"nodeType":"ParameterList","parameters":[],"src":"18257:0:13"},"scope":1676,"src":"18038:220:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d1946dbc","id":1632,"implemented":false,"kind":"function","modifiers":[],"name":"getReservesList","nodeType":"FunctionDefinition","parameters":{"id":1627,"nodeType":"ParameterList","parameters":[],"src":"18288:2:13"},"returnParameters":{"id":1631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1630,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1632,"src":"18314:16:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1628,"name":"address","nodeType":"ElementaryTypeName","src":"18314:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1629,"nodeType":"ArrayTypeName","src":"18314:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"18313:18:13"},"scope":1676,"src":"18264:68:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"1652e7b7","id":1640,"implemented":false,"kind":"function","modifiers":[],"name":"getAssetData","nodeType":"FunctionDefinition","parameters":{"id":1635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1634,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":1640,"src":"18360:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1633,"name":"address","nodeType":"ElementaryTypeName","src":"18360:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"18359:15:13"},"returnParameters":{"id":1639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1638,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1640,"src":"18422:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$4082_memory_ptr","typeString":"struct DataTypes.AssetData"},"typeName":{"id":1637,"nodeType":"UserDefinedTypeName","pathNode":{"id":1636,"name":"DataTypes.AssetData","nodeType":"IdentifierPath","referencedDeclaration":4082,"src":"18422:19:13"},"referencedDeclaration":4082,"src":"18422:19:13","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$4082_storage_ptr","typeString":"struct DataTypes.AssetData"}},"visibility":"internal"}],"src":"18421:28:13"},"scope":1676,"src":"18338:112:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"fe65acfe","id":1646,"implemented":false,"kind":"function","modifiers":[],"name":"getAddressesProvider","nodeType":"FunctionDefinition","parameters":{"id":1641,"nodeType":"ParameterList","parameters":[],"src":"18485:2:13"},"returnParameters":{"id":1645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1644,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1646,"src":"18535:29:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPoolAddressesProvider_$1879","typeString":"contract ILendingPoolAddressesProvider"},"typeName":{"id":1643,"nodeType":"UserDefinedTypeName","pathNode":{"id":1642,"name":"ILendingPoolAddressesProvider","nodeType":"IdentifierPath","referencedDeclaration":1879,"src":"18535:29:13"},"referencedDeclaration":1879,"src":"18535:29:13","typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPoolAddressesProvider_$1879","typeString":"contract ILendingPoolAddressesProvider"}},"visibility":"internal"}],"src":"18534:31:13"},"scope":1676,"src":"18456:110:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"bedb86fb","id":1651,"implemented":false,"kind":"function","modifiers":[],"name":"setPause","nodeType":"FunctionDefinition","parameters":{"id":1649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1648,"mutability":"mutable","name":"val","nodeType":"VariableDeclaration","scope":1651,"src":"18590:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1647,"name":"bool","nodeType":"ElementaryTypeName","src":"18590:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"18589:10:13"},"returnParameters":{"id":1650,"nodeType":"ParameterList","parameters":[],"src":"18608:0:13"},"scope":1676,"src":"18572:37:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5c975abb","id":1656,"implemented":false,"kind":"function","modifiers":[],"name":"paused","nodeType":"FunctionDefinition","parameters":{"id":1652,"nodeType":"ParameterList","parameters":[],"src":"18630:2:13"},"returnParameters":{"id":1655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1654,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1656,"src":"18656:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1653,"name":"bool","nodeType":"ElementaryTypeName","src":"18656:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"18655:6:13"},"scope":1676,"src":"18615:47:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"14058967","id":1667,"implemented":false,"kind":"function","modifiers":[],"name":"editTrancheMultiplier","nodeType":"FunctionDefinition","parameters":{"id":1665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1658,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":1667,"src":"18708:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1657,"name":"uint8","nodeType":"ElementaryTypeName","src":"18708:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1660,"mutability":"mutable","name":"_liquidityRateMultiplier","nodeType":"VariableDeclaration","scope":1667,"src":"18731:32:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1659,"name":"uint256","nodeType":"ElementaryTypeName","src":"18731:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1662,"mutability":"mutable","name":"_variableBorrowRateMultiplier","nodeType":"VariableDeclaration","scope":1667,"src":"18773:37:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1661,"name":"uint256","nodeType":"ElementaryTypeName","src":"18773:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1664,"mutability":"mutable","name":"_stableBorrowRateMultiplier","nodeType":"VariableDeclaration","scope":1667,"src":"18820:35:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1663,"name":"uint256","nodeType":"ElementaryTypeName","src":"18820:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18698:163:13"},"returnParameters":{"id":1666,"nodeType":"ParameterList","parameters":[],"src":"18870:0:13"},"scope":1676,"src":"18668:203:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"bfb88060","id":1675,"implemented":false,"kind":"function","modifiers":[],"name":"getTrancheMultiplier","nodeType":"FunctionDefinition","parameters":{"id":1670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1669,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":1675,"src":"18907:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1668,"name":"uint8","nodeType":"ElementaryTypeName","src":"18907:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"18906:15:13"},"returnParameters":{"id":1674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1673,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1675,"src":"18969:34:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TrancheMultiplier_$4122_memory_ptr","typeString":"struct DataTypes.TrancheMultiplier"},"typeName":{"id":1672,"nodeType":"UserDefinedTypeName","pathNode":{"id":1671,"name":"DataTypes.TrancheMultiplier","nodeType":"IdentifierPath","referencedDeclaration":4122,"src":"18969:27:13"},"referencedDeclaration":4122,"src":"18969:27:13","typeDescriptions":{"typeIdentifier":"t_struct$_TrancheMultiplier_$4122_storage_ptr","typeString":"struct DataTypes.TrancheMultiplier"}},"visibility":"internal"}],"src":"18968:36:13"},"scope":1676,"src":"18877:128:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1677,"src":"216:18791:13"}],"src":"37:18971:13"},"id":13},"contracts/interfaces/ILendingPoolAddressesProvider.sol":{"ast":{"absolutePath":"contracts/interfaces/ILendingPoolAddressesProvider.sol","exportedSymbols":{"DataTypes":[4238],"ILendingPoolAddressesProvider":[1879]},"id":1880,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":1678,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"37:24:14"},{"absolutePath":"contracts/protocol/libraries/types/DataTypes.sol","file":"../protocol/libraries/types/DataTypes.sol","id":1680,"nodeType":"ImportDirective","scope":1880,"sourceUnit":4239,"src":"63:68:14","symbolAliases":[{"foreign":{"id":1679,"name":"DataTypes","nodeType":"Identifier","overloadedDeclarations":[],"src":"71:9:14","typeDescriptions":{}}}],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1681,"nodeType":"StructuredDocumentation","src":"133:311:14","text":" @title LendingPoolAddressesProvider contract\n @dev Main registry of addresses part of or connected to the protocol, including permissioned roles\n - Acting also as factory of proxies and admin of those, so with right to change its implementations\n - Owned by the Aave Governance\n @author Aave*"},"fullyImplemented":false,"id":1879,"linearizedBaseContracts":[1879],"name":"ILendingPoolAddressesProvider","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"id":1685,"name":"MarketIdSet","nodeType":"EventDefinition","parameters":{"id":1684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1683,"indexed":false,"mutability":"mutable","name":"newMarketId","nodeType":"VariableDeclaration","scope":1685,"src":"509:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1682,"name":"string","nodeType":"ElementaryTypeName","src":"509:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"508:20:14"},"src":"491:38:14"},{"anonymous":false,"id":1689,"name":"LendingPoolUpdated","nodeType":"EventDefinition","parameters":{"id":1688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1687,"indexed":true,"mutability":"mutable","name":"newAddress","nodeType":"VariableDeclaration","scope":1689,"src":"559:26:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1686,"name":"address","nodeType":"ElementaryTypeName","src":"559:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"558:28:14"},"src":"534:53:14"},{"anonymous":false,"id":1693,"name":"ConfigurationAdminUpdated","nodeType":"EventDefinition","parameters":{"id":1692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1691,"indexed":true,"mutability":"mutable","name":"newAddress","nodeType":"VariableDeclaration","scope":1693,"src":"624:26:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1690,"name":"address","nodeType":"ElementaryTypeName","src":"624:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"623:28:14"},"src":"592:60:14"},{"anonymous":false,"id":1697,"name":"EmergencyAdminUpdated","nodeType":"EventDefinition","parameters":{"id":1696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1695,"indexed":true,"mutability":"mutable","name":"newAddress","nodeType":"VariableDeclaration","scope":1697,"src":"685:26:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1694,"name":"address","nodeType":"ElementaryTypeName","src":"685:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"684:28:14"},"src":"657:56:14"},{"anonymous":false,"id":1701,"name":"LendingPoolConfiguratorUpdated","nodeType":"EventDefinition","parameters":{"id":1700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1699,"indexed":true,"mutability":"mutable","name":"newAddress","nodeType":"VariableDeclaration","scope":1701,"src":"755:26:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1698,"name":"address","nodeType":"ElementaryTypeName","src":"755:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"754:28:14"},"src":"718:65:14"},{"anonymous":false,"id":1705,"name":"LendingPoolCollateralManagerUpdated","nodeType":"EventDefinition","parameters":{"id":1704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1703,"indexed":true,"mutability":"mutable","name":"newAddress","nodeType":"VariableDeclaration","scope":1705,"src":"830:26:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1702,"name":"address","nodeType":"ElementaryTypeName","src":"830:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"829:28:14"},"src":"788:70:14"},{"anonymous":false,"id":1709,"name":"PriceOracleUpdated","nodeType":"EventDefinition","parameters":{"id":1708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1707,"indexed":true,"mutability":"mutable","name":"newAddress","nodeType":"VariableDeclaration","scope":1709,"src":"888:26:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1706,"name":"address","nodeType":"ElementaryTypeName","src":"888:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"887:28:14"},"src":"863:53:14"},{"anonymous":false,"id":1713,"name":"CurvePriceOracleUpdated","nodeType":"EventDefinition","parameters":{"id":1712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1711,"indexed":true,"mutability":"mutable","name":"newAddress","nodeType":"VariableDeclaration","scope":1713,"src":"951:26:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1710,"name":"address","nodeType":"ElementaryTypeName","src":"951:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"950:28:14"},"src":"921:58:14"},{"anonymous":false,"id":1717,"name":"CurvePriceOracleWrapperUpdated","nodeType":"EventDefinition","parameters":{"id":1716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1715,"indexed":true,"mutability":"mutable","name":"newAddress","nodeType":"VariableDeclaration","scope":1717,"src":"1021:26:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1714,"name":"address","nodeType":"ElementaryTypeName","src":"1021:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1020:28:14"},"src":"984:65:14"},{"anonymous":false,"id":1721,"name":"CurveAddressProviderUpdated","nodeType":"EventDefinition","parameters":{"id":1720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"indexed":true,"mutability":"mutable","name":"newAddress","nodeType":"VariableDeclaration","scope":1721,"src":"1088:26:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1718,"name":"address","nodeType":"ElementaryTypeName","src":"1088:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1087:28:14"},"src":"1054:62:14"},{"anonymous":false,"id":1725,"name":"LendingRateOracleUpdated","nodeType":"EventDefinition","parameters":{"id":1724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1723,"indexed":true,"mutability":"mutable","name":"newAddress","nodeType":"VariableDeclaration","scope":1725,"src":"1152:26:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1722,"name":"address","nodeType":"ElementaryTypeName","src":"1152:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1151:28:14"},"src":"1121:59:14"},{"anonymous":false,"id":1731,"name":"ProxyCreated","nodeType":"EventDefinition","parameters":{"id":1730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1727,"indexed":false,"mutability":"mutable","name":"id","nodeType":"VariableDeclaration","scope":1731,"src":"1204:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1726,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1204:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1729,"indexed":true,"mutability":"mutable","name":"newAddress","nodeType":"VariableDeclaration","scope":1731,"src":"1216:26:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1728,"name":"address","nodeType":"ElementaryTypeName","src":"1216:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1203:40:14"},"src":"1185:59:14"},{"anonymous":false,"id":1739,"name":"AddressSet","nodeType":"EventDefinition","parameters":{"id":1738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1733,"indexed":false,"mutability":"mutable","name":"id","nodeType":"VariableDeclaration","scope":1739,"src":"1266:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1732,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1266:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1735,"indexed":true,"mutability":"mutable","name":"newAddress","nodeType":"VariableDeclaration","scope":1739,"src":"1278:26:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1734,"name":"address","nodeType":"ElementaryTypeName","src":"1278:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1737,"indexed":false,"mutability":"mutable","name":"hasProxy","nodeType":"VariableDeclaration","scope":1739,"src":"1306:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1736,"name":"bool","nodeType":"ElementaryTypeName","src":"1306:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:55:14"},"src":"1249:72:14"},{"functionSelector":"568ef470","id":1744,"implemented":false,"kind":"function","modifiers":[],"name":"getMarketId","nodeType":"FunctionDefinition","parameters":{"id":1740,"nodeType":"ParameterList","parameters":[],"src":"1347:2:14"},"returnParameters":{"id":1743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1742,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1744,"src":"1373:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1741,"name":"string","nodeType":"ElementaryTypeName","src":"1373:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1372:15:14"},"scope":1879,"src":"1327:61:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f67b1847","id":1749,"implemented":false,"kind":"function","modifiers":[],"name":"setMarketId","nodeType":"FunctionDefinition","parameters":{"id":1747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1746,"mutability":"mutable","name":"marketId","nodeType":"VariableDeclaration","scope":1749,"src":"1415:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":1745,"name":"string","nodeType":"ElementaryTypeName","src":"1415:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1414:26:14"},"returnParameters":{"id":1748,"nodeType":"ParameterList","parameters":[],"src":"1449:0:14"},"scope":1879,"src":"1394:56:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"ca446dd9","id":1756,"implemented":false,"kind":"function","modifiers":[],"name":"setAddress","nodeType":"FunctionDefinition","parameters":{"id":1754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1751,"mutability":"mutable","name":"id","nodeType":"VariableDeclaration","scope":1756,"src":"1476:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1750,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1476:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1753,"mutability":"mutable","name":"newAddress","nodeType":"VariableDeclaration","scope":1756,"src":"1488:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1752,"name":"address","nodeType":"ElementaryTypeName","src":"1488:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1475:32:14"},"returnParameters":{"id":1755,"nodeType":"ParameterList","parameters":[],"src":"1516:0:14"},"scope":1879,"src":"1456:61:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5dcc528c","id":1763,"implemented":false,"kind":"function","modifiers":[],"name":"setAddressAsProxy","nodeType":"FunctionDefinition","parameters":{"id":1761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1758,"mutability":"mutable","name":"id","nodeType":"VariableDeclaration","scope":1763,"src":"1550:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1757,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1550:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1760,"mutability":"mutable","name":"impl","nodeType":"VariableDeclaration","scope":1763,"src":"1562:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1759,"name":"address","nodeType":"ElementaryTypeName","src":"1562:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1549:26:14"},"returnParameters":{"id":1762,"nodeType":"ParameterList","parameters":[],"src":"1584:0:14"},"scope":1879,"src":"1523:62:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"21f8a721","id":1770,"implemented":false,"kind":"function","modifiers":[],"name":"getAddress","nodeType":"FunctionDefinition","parameters":{"id":1766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1765,"mutability":"mutable","name":"id","nodeType":"VariableDeclaration","scope":1770,"src":"1611:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1764,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1611:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1610:12:14"},"returnParameters":{"id":1769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1768,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1770,"src":"1646:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1767,"name":"address","nodeType":"ElementaryTypeName","src":"1646:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1645:9:14"},"scope":1879,"src":"1591:64:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0261bf8b","id":1775,"implemented":false,"kind":"function","modifiers":[],"name":"getLendingPool","nodeType":"FunctionDefinition","parameters":{"id":1771,"nodeType":"ParameterList","parameters":[],"src":"1684:2:14"},"returnParameters":{"id":1774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1773,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1775,"src":"1710:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1772,"name":"address","nodeType":"ElementaryTypeName","src":"1710:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1709:9:14"},"scope":1879,"src":"1661:58:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"5aef021f","id":1780,"implemented":false,"kind":"function","modifiers":[],"name":"setLendingPoolImpl","nodeType":"FunctionDefinition","parameters":{"id":1778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1777,"mutability":"mutable","name":"pool","nodeType":"VariableDeclaration","scope":1780,"src":"1753:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1776,"name":"address","nodeType":"ElementaryTypeName","src":"1753:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1752:14:14"},"returnParameters":{"id":1779,"nodeType":"ParameterList","parameters":[],"src":"1775:0:14"},"scope":1879,"src":"1725:51:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"85c858b1","id":1785,"implemented":false,"kind":"function","modifiers":[],"name":"getLendingPoolConfigurator","nodeType":"FunctionDefinition","parameters":{"id":1781,"nodeType":"ParameterList","parameters":[],"src":"1817:2:14"},"returnParameters":{"id":1784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1783,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1785,"src":"1843:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1782,"name":"address","nodeType":"ElementaryTypeName","src":"1843:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1842:9:14"},"scope":1879,"src":"1782:70:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"c12542df","id":1790,"implemented":false,"kind":"function","modifiers":[],"name":"setLendingPoolConfiguratorImpl","nodeType":"FunctionDefinition","parameters":{"id":1788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1787,"mutability":"mutable","name":"configurator","nodeType":"VariableDeclaration","scope":1790,"src":"1898:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1786,"name":"address","nodeType":"ElementaryTypeName","src":"1898:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1897:22:14"},"returnParameters":{"id":1789,"nodeType":"ParameterList","parameters":[],"src":"1928:0:14"},"scope":1879,"src":"1858:71:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"712d9171","id":1795,"implemented":false,"kind":"function","modifiers":[],"name":"getLendingPoolCollateralManager","nodeType":"FunctionDefinition","parameters":{"id":1791,"nodeType":"ParameterList","parameters":[],"src":"1975:2:14"},"returnParameters":{"id":1794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1793,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1795,"src":"2001:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1792,"name":"address","nodeType":"ElementaryTypeName","src":"2001:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2000:9:14"},"scope":1879,"src":"1935:75:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"398e5553","id":1800,"implemented":false,"kind":"function","modifiers":[],"name":"setLendingPoolCollateralManager","nodeType":"FunctionDefinition","parameters":{"id":1798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1797,"mutability":"mutable","name":"manager","nodeType":"VariableDeclaration","scope":1800,"src":"2057:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1796,"name":"address","nodeType":"ElementaryTypeName","src":"2057:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2056:17:14"},"returnParameters":{"id":1799,"nodeType":"ParameterList","parameters":[],"src":"2082:0:14"},"scope":1879,"src":"2016:67:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"aecda378","id":1805,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolAdmin","nodeType":"FunctionDefinition","parameters":{"id":1801,"nodeType":"ParameterList","parameters":[],"src":"2110:2:14"},"returnParameters":{"id":1804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1803,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1805,"src":"2136:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1802,"name":"address","nodeType":"ElementaryTypeName","src":"2136:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2135:9:14"},"scope":1879,"src":"2089:56:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"283d62ad","id":1810,"implemented":false,"kind":"function","modifiers":[],"name":"setPoolAdmin","nodeType":"FunctionDefinition","parameters":{"id":1808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1807,"mutability":"mutable","name":"admin","nodeType":"VariableDeclaration","scope":1810,"src":"2173:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1806,"name":"address","nodeType":"ElementaryTypeName","src":"2173:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2172:15:14"},"returnParameters":{"id":1809,"nodeType":"ParameterList","parameters":[],"src":"2196:0:14"},"scope":1879,"src":"2151:46:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"ddcaa9ea","id":1815,"implemented":false,"kind":"function","modifiers":[],"name":"getEmergencyAdmin","nodeType":"FunctionDefinition","parameters":{"id":1811,"nodeType":"ParameterList","parameters":[],"src":"2229:2:14"},"returnParameters":{"id":1814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1813,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1815,"src":"2255:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1812,"name":"address","nodeType":"ElementaryTypeName","src":"2255:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2254:9:14"},"scope":1879,"src":"2203:61:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"35da3394","id":1820,"implemented":false,"kind":"function","modifiers":[],"name":"setEmergencyAdmin","nodeType":"FunctionDefinition","parameters":{"id":1818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1817,"mutability":"mutable","name":"admin","nodeType":"VariableDeclaration","scope":1820,"src":"2297:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1816,"name":"address","nodeType":"ElementaryTypeName","src":"2297:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2296:15:14"},"returnParameters":{"id":1819,"nodeType":"ParameterList","parameters":[],"src":"2320:0:14"},"scope":1879,"src":"2270:51:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"1a9dffb3","id":1828,"implemented":false,"kind":"function","modifiers":[],"name":"getPriceOracle","nodeType":"FunctionDefinition","parameters":{"id":1824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1823,"mutability":"mutable","name":"assetType","nodeType":"VariableDeclaration","scope":1828,"src":"2351:36:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ReserveAssetType_$4072","typeString":"enum DataTypes.ReserveAssetType"},"typeName":{"id":1822,"nodeType":"UserDefinedTypeName","pathNode":{"id":1821,"name":"DataTypes.ReserveAssetType","nodeType":"IdentifierPath","referencedDeclaration":4072,"src":"2351:26:14"},"referencedDeclaration":4072,"src":"2351:26:14","typeDescriptions":{"typeIdentifier":"t_enum$_ReserveAssetType_$4072","typeString":"enum DataTypes.ReserveAssetType"}},"visibility":"internal"}],"src":"2350:38:14"},"returnParameters":{"id":1827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1826,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1828,"src":"2436:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1825,"name":"address","nodeType":"ElementaryTypeName","src":"2436:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2435:9:14"},"scope":1879,"src":"2327:118:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f139dc81","id":1833,"implemented":false,"kind":"function","modifiers":[],"name":"getAavePriceOracle","nodeType":"FunctionDefinition","parameters":{"id":1829,"nodeType":"ParameterList","parameters":[],"src":"2478:2:14"},"returnParameters":{"id":1832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1831,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1833,"src":"2504:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1830,"name":"address","nodeType":"ElementaryTypeName","src":"2504:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2503:9:14"},"scope":1879,"src":"2451:62:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"ba61fe31","id":1838,"implemented":false,"kind":"function","modifiers":[],"name":"getCurvePriceOracle","nodeType":"FunctionDefinition","parameters":{"id":1834,"nodeType":"ParameterList","parameters":[],"src":"2547:2:14"},"returnParameters":{"id":1837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1836,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1838,"src":"2573:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1835,"name":"address","nodeType":"ElementaryTypeName","src":"2573:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2572:9:14"},"scope":1879,"src":"2519:63:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"992ecae7","id":1843,"implemented":false,"kind":"function","modifiers":[],"name":"getCurvePriceOracleWrapper","nodeType":"FunctionDefinition","parameters":{"id":1839,"nodeType":"ParameterList","parameters":[],"src":"2623:2:14"},"returnParameters":{"id":1842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1841,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1843,"src":"2649:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1840,"name":"address","nodeType":"ElementaryTypeName","src":"2649:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2648:9:14"},"scope":1879,"src":"2588:70:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"59696e16","id":1848,"implemented":false,"kind":"function","modifiers":[],"name":"getCurveAddressProvider","nodeType":"FunctionDefinition","parameters":{"id":1844,"nodeType":"ParameterList","parameters":[],"src":"2696:2:14"},"returnParameters":{"id":1847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1846,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1848,"src":"2722:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1845,"name":"address","nodeType":"ElementaryTypeName","src":"2722:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2721:9:14"},"scope":1879,"src":"2664:67:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"985420f4","id":1853,"implemented":false,"kind":"function","modifiers":[],"name":"setAavePriceOracle","nodeType":"FunctionDefinition","parameters":{"id":1851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1850,"mutability":"mutable","name":"priceOracle","nodeType":"VariableDeclaration","scope":1853,"src":"2765:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1849,"name":"address","nodeType":"ElementaryTypeName","src":"2765:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2764:21:14"},"returnParameters":{"id":1852,"nodeType":"ParameterList","parameters":[],"src":"2794:0:14"},"scope":1879,"src":"2737:58:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"9bc3d098","id":1858,"implemented":false,"kind":"function","modifiers":[],"name":"setCurveAddressProvider","nodeType":"FunctionDefinition","parameters":{"id":1856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1855,"mutability":"mutable","name":"addressProvider","nodeType":"VariableDeclaration","scope":1858,"src":"2834:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1854,"name":"address","nodeType":"ElementaryTypeName","src":"2834:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2833:25:14"},"returnParameters":{"id":1857,"nodeType":"ParameterList","parameters":[],"src":"2867:0:14"},"scope":1879,"src":"2801:67:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"0aafb34e","id":1863,"implemented":false,"kind":"function","modifiers":[],"name":"setCurvePriceOracle","nodeType":"FunctionDefinition","parameters":{"id":1861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1860,"mutability":"mutable","name":"priceOracle","nodeType":"VariableDeclaration","scope":1863,"src":"2903:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1859,"name":"address","nodeType":"ElementaryTypeName","src":"2903:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2902:21:14"},"returnParameters":{"id":1862,"nodeType":"ParameterList","parameters":[],"src":"2932:0:14"},"scope":1879,"src":"2874:59:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"e4bc9d64","id":1868,"implemented":false,"kind":"function","modifiers":[],"name":"setCurvePriceOracleWrapper","nodeType":"FunctionDefinition","parameters":{"id":1866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1865,"mutability":"mutable","name":"priceOracle","nodeType":"VariableDeclaration","scope":1868,"src":"2975:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1864,"name":"address","nodeType":"ElementaryTypeName","src":"2975:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2974:21:14"},"returnParameters":{"id":1867,"nodeType":"ParameterList","parameters":[],"src":"3004:0:14"},"scope":1879,"src":"2939:66:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"3618abba","id":1873,"implemented":false,"kind":"function","modifiers":[],"name":"getLendingRateOracle","nodeType":"FunctionDefinition","parameters":{"id":1869,"nodeType":"ParameterList","parameters":[],"src":"3040:2:14"},"returnParameters":{"id":1872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1871,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1873,"src":"3066:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1870,"name":"address","nodeType":"ElementaryTypeName","src":"3066:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3065:9:14"},"scope":1879,"src":"3011:64:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"820d1274","id":1878,"implemented":false,"kind":"function","modifiers":[],"name":"setLendingRateOracle","nodeType":"FunctionDefinition","parameters":{"id":1876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1875,"mutability":"mutable","name":"lendingRateOracle","nodeType":"VariableDeclaration","scope":1878,"src":"3111:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1874,"name":"address","nodeType":"ElementaryTypeName","src":"3111:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3110:27:14"},"returnParameters":{"id":1877,"nodeType":"ParameterList","parameters":[],"src":"3146:0:14"},"scope":1879,"src":"3081:66:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1880,"src":"445:2704:14"}],"src":"37:3113:14"},"id":14},"contracts/interfaces/IPriceOracleGetter.sol":{"ast":{"absolutePath":"contracts/interfaces/IPriceOracleGetter.sol","exportedSymbols":{"IPriceOracleGetter":[1891]},"id":1892,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":1881,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"37:24:15"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1882,"nodeType":"StructuredDocumentation","src":"63:95:15","text":" @title IPriceOracleGetter interface\n @notice Interface for the Aave price oracle.*"},"fullyImplemented":false,"id":1891,"linearizedBaseContracts":[1891],"name":"IPriceOracleGetter","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1883,"nodeType":"StructuredDocumentation","src":"195:142:15","text":" @dev returns the asset price in ETH\n @param asset the address of the asset\n @return the ETH price of the asset*"},"functionSelector":"b3596f07","id":1890,"implemented":false,"kind":"function","modifiers":[],"name":"getAssetPrice","nodeType":"FunctionDefinition","parameters":{"id":1886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1885,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":1890,"src":"365:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1884,"name":"address","nodeType":"ElementaryTypeName","src":"365:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"364:15:15"},"returnParameters":{"id":1889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1888,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1890,"src":"403:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1887,"name":"uint256","nodeType":"ElementaryTypeName","src":"403:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:9:15"},"scope":1891,"src":"342:70:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1892,"src":"160:254:15"}],"src":"37:378:15"},"id":15},"contracts/misc/AaveOracle.sol":{"ast":{"absolutePath":"contracts/misc/AaveOracle.sol","exportedSymbols":{"AaveOracle":[2223],"IChainlinkAggregator":[1235],"IERC20":[580],"IPriceOracleGetter":[1891],"Ownable":[711],"SafeERC20":[872]},"id":2224,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":1893,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"37:24:16"},{"absolutePath":"contracts/dependencies/openzeppelin/contracts/Ownable.sol","file":"../dependencies/openzeppelin/contracts/Ownable.sol","id":1895,"nodeType":"ImportDirective","scope":2224,"sourceUnit":712,"src":"63:75:16","symbolAliases":[{"foreign":{"id":1894,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"src":"71:7:16","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/dependencies/openzeppelin/contracts/IERC20.sol","file":"../dependencies/openzeppelin/contracts/IERC20.sol","id":1897,"nodeType":"ImportDirective","scope":2224,"sourceUnit":581,"src":"139:73:16","symbolAliases":[{"foreign":{"id":1896,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"src":"147:6:16","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IPriceOracleGetter.sol","file":"../interfaces/IPriceOracleGetter.sol","id":1899,"nodeType":"ImportDirective","scope":2224,"sourceUnit":1892,"src":"214:72:16","symbolAliases":[{"foreign":{"id":1898,"name":"IPriceOracleGetter","nodeType":"Identifier","overloadedDeclarations":[],"src":"222:18:16","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IChainlinkAggregator.sol","file":"../interfaces/IChainlinkAggregator.sol","id":1901,"nodeType":"ImportDirective","scope":2224,"sourceUnit":1236,"src":"287:76:16","symbolAliases":[{"foreign":{"id":1900,"name":"IChainlinkAggregator","nodeType":"Identifier","overloadedDeclarations":[],"src":"295:20:16","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/dependencies/openzeppelin/contracts/SafeERC20.sol","file":"../dependencies/openzeppelin/contracts/SafeERC20.sol","id":1903,"nodeType":"ImportDirective","scope":2224,"sourceUnit":873,"src":"364:79:16","symbolAliases":[{"foreign":{"id":1902,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"src":"372:9:16","typeDescriptions":{}}}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1905,"name":"IPriceOracleGetter","nodeType":"IdentifierPath","referencedDeclaration":1891,"src":"894:18:16"},"id":1906,"nodeType":"InheritanceSpecifier","src":"894:18:16"},{"baseName":{"id":1907,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":711,"src":"914:7:16"},"id":1908,"nodeType":"InheritanceSpecifier","src":"914:7:16"}],"contractDependencies":[502,711,1891],"contractKind":"contract","documentation":{"id":1904,"nodeType":"StructuredDocumentation","src":"445:426:16","text":"@title AaveOracle\n @author Aave\n @notice Proxy smart contract to get the price of an asset from a price source, with Chainlink Aggregator\n         smart contracts as primary option\n - If the returned price by a Chainlink aggregator is <= 0, the call is forwarded to a fallbackOracle\n - Owned by the Aave governance system, allowed to add sources for assets, replace them\n   and change the fallbackOracle"},"fullyImplemented":true,"id":2223,"linearizedBaseContracts":[2223,711,502,1891],"name":"AaveOracle","nodeType":"ContractDefinition","nodes":[{"id":1912,"libraryName":{"id":1909,"name":"SafeERC20","nodeType":"IdentifierPath","referencedDeclaration":872,"src":"934:9:16"},"nodeType":"UsingForDirective","src":"928:27:16","typeName":{"id":1911,"nodeType":"UserDefinedTypeName","pathNode":{"id":1910,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":580,"src":"948:6:16"},"referencedDeclaration":580,"src":"948:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$580","typeString":"contract IERC20"}}},{"anonymous":false,"id":1918,"name":"BaseCurrencySet","nodeType":"EventDefinition","parameters":{"id":1917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1914,"indexed":true,"mutability":"mutable","name":"baseCurrency","nodeType":"VariableDeclaration","scope":1918,"src":"992:28:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1913,"name":"address","nodeType":"ElementaryTypeName","src":"992:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1916,"indexed":false,"mutability":"mutable","name":"baseCurrencyUnit","nodeType":"VariableDeclaration","scope":1918,"src":"1030:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1915,"name":"uint256","nodeType":"ElementaryTypeName","src":"1030:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"982:78:16"},"src":"961:100:16"},{"anonymous":false,"id":1924,"name":"AssetSourceUpdated","nodeType":"EventDefinition","parameters":{"id":1923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1920,"indexed":true,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":1924,"src":"1091:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1919,"name":"address","nodeType":"ElementaryTypeName","src":"1091:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1922,"indexed":true,"mutability":"mutable","name":"source","nodeType":"VariableDeclaration","scope":1924,"src":"1114:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1921,"name":"address","nodeType":"ElementaryTypeName","src":"1114:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1090:47:16"},"src":"1066:72:16"},{"anonymous":false,"id":1928,"name":"FallbackOracleUpdated","nodeType":"EventDefinition","parameters":{"id":1927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1926,"indexed":true,"mutability":"mutable","name":"fallbackOracle","nodeType":"VariableDeclaration","scope":1928,"src":"1171:30:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1925,"name":"address","nodeType":"ElementaryTypeName","src":"1171:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1170:32:16"},"src":"1143:60:16"},{"constant":false,"id":1933,"mutability":"mutable","name":"assetsSources","nodeType":"VariableDeclaration","scope":2223,"src":"1209:62:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_contract$_IChainlinkAggregator_$1235_$","typeString":"mapping(address => contract IChainlinkAggregator)"},"typeName":{"id":1932,"keyType":{"id":1929,"name":"address","nodeType":"ElementaryTypeName","src":"1217:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1209:40:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_contract$_IChainlinkAggregator_$1235_$","typeString":"mapping(address => contract IChainlinkAggregator)"},"valueType":{"id":1931,"nodeType":"UserDefinedTypeName","pathNode":{"id":1930,"name":"IChainlinkAggregator","nodeType":"IdentifierPath","referencedDeclaration":1235,"src":"1228:20:16"},"referencedDeclaration":1235,"src":"1228:20:16","typeDescriptions":{"typeIdentifier":"t_contract$_IChainlinkAggregator_$1235","typeString":"contract IChainlinkAggregator"}}},"visibility":"private"},{"constant":false,"id":1936,"mutability":"mutable","name":"_fallbackOracle","nodeType":"VariableDeclaration","scope":2223,"src":"1277:42:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1891","typeString":"contract IPriceOracleGetter"},"typeName":{"id":1935,"nodeType":"UserDefinedTypeName","pathNode":{"id":1934,"name":"IPriceOracleGetter","nodeType":"IdentifierPath","referencedDeclaration":1891,"src":"1277:18:16"},"referencedDeclaration":1891,"src":"1277:18:16","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1891","typeString":"contract IPriceOracleGetter"}},"visibility":"private"},{"constant":false,"functionSelector":"e19f4700","id":1938,"mutability":"immutable","name":"BASE_CURRENCY","nodeType":"VariableDeclaration","scope":2223,"src":"1325:38:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1937,"name":"address","nodeType":"ElementaryTypeName","src":"1325:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"8c89b64f","id":1940,"mutability":"immutable","name":"BASE_CURRENCY_UNIT","nodeType":"VariableDeclaration","scope":2223,"src":"1369:43:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1939,"name":"uint256","nodeType":"ElementaryTypeName","src":"1369:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"body":{"id":1978,"nodeType":"Block","src":"2054:242:16","statements":[{"expression":{"arguments":[{"id":1957,"name":"fallbackOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"2083:14:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1956,"name":"_setFallbackOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"2064:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2064:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1959,"nodeType":"ExpressionStatement","src":"2064:34:16"},{"expression":{"arguments":[{"id":1961,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"2126:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":1962,"name":"sources","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"2134:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":1960,"name":"_setAssetsSources","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"2108:17:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$","typeString":"function (address[] memory,address[] memory)"}},"id":1963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2108:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1964,"nodeType":"ExpressionStatement","src":"2108:34:16"},{"expression":{"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1965,"name":"BASE_CURRENCY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"2152:13:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1966,"name":"baseCurrency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"2168:12:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2152:28:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1968,"nodeType":"ExpressionStatement","src":"2152:28:16"},{"expression":{"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1969,"name":"BASE_CURRENCY_UNIT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"2190:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1970,"name":"baseCurrencyUnit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"2211:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2190:37:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1972,"nodeType":"ExpressionStatement","src":"2190:37:16"},{"eventCall":{"arguments":[{"id":1974,"name":"baseCurrency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"2258:12:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1975,"name":"baseCurrencyUnit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"2272:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1973,"name":"BaseCurrencySet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"2242:15:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2242:47:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1977,"nodeType":"EmitStatement","src":"2237:52:16"}]},"documentation":{"id":1941,"nodeType":"StructuredDocumentation","src":"1419:442:16","text":"@notice Constructor\n @param assets The addresses of the assets\n @param sources The address of the source of each asset\n @param fallbackOracle The address of the fallback oracle to use if the data of an\n        aggregator is not consistent\n @param baseCurrency the base currency used for the price quotes. If USD is used, base currency is 0x0\n @param baseCurrencyUnit the unit of the base currency"},"id":1979,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":1954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1944,"mutability":"mutable","name":"assets","nodeType":"VariableDeclaration","scope":1979,"src":"1887:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1942,"name":"address","nodeType":"ElementaryTypeName","src":"1887:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1943,"nodeType":"ArrayTypeName","src":"1887:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1947,"mutability":"mutable","name":"sources","nodeType":"VariableDeclaration","scope":1979,"src":"1920:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1945,"name":"address","nodeType":"ElementaryTypeName","src":"1920:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1946,"nodeType":"ArrayTypeName","src":"1920:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1949,"mutability":"mutable","name":"fallbackOracle","nodeType":"VariableDeclaration","scope":1979,"src":"1954:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1948,"name":"address","nodeType":"ElementaryTypeName","src":"1954:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1951,"mutability":"mutable","name":"baseCurrency","nodeType":"VariableDeclaration","scope":1979,"src":"1986:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1950,"name":"address","nodeType":"ElementaryTypeName","src":"1986:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1953,"mutability":"mutable","name":"baseCurrencyUnit","nodeType":"VariableDeclaration","scope":1979,"src":"2016:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1952,"name":"uint256","nodeType":"ElementaryTypeName","src":"2016:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1877:169:16"},"returnParameters":{"id":1955,"nodeType":"ParameterList","parameters":[],"src":"2054:0:16"},"scope":2223,"src":"1866:430:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1996,"nodeType":"Block","src":"2636:51:16","statements":[{"expression":{"arguments":[{"id":1992,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"2664:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},{"id":1993,"name":"sources","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"2672:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"},{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}],"id":1991,"name":"_setAssetsSources","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"2646:17:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$","typeString":"function (address[] memory,address[] memory)"}},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2646:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1995,"nodeType":"ExpressionStatement","src":"2646:34:16"}]},"documentation":{"id":1980,"nodeType":"StructuredDocumentation","src":"2302:208:16","text":"@notice External function called by the Aave governance to set or replace sources of assets\n @param assets The addresses of the assets\n @param sources The address of the source of each asset"},"functionSelector":"abfd5310","id":1997,"implemented":true,"kind":"function","modifiers":[{"id":1989,"modifierName":{"id":1988,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":660,"src":"2626:9:16"},"nodeType":"ModifierInvocation","src":"2626:9:16"}],"name":"setAssetSources","nodeType":"FunctionDefinition","parameters":{"id":1987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1983,"mutability":"mutable","name":"assets","nodeType":"VariableDeclaration","scope":1997,"src":"2549:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1981,"name":"address","nodeType":"ElementaryTypeName","src":"2549:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1982,"nodeType":"ArrayTypeName","src":"2549:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1986,"mutability":"mutable","name":"sources","nodeType":"VariableDeclaration","scope":1997,"src":"2584:26:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1984,"name":"address","nodeType":"ElementaryTypeName","src":"2584:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1985,"nodeType":"ArrayTypeName","src":"2584:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2539:77:16"},"returnParameters":{"id":1990,"nodeType":"ParameterList","parameters":[],"src":"2636:0:16"},"scope":2223,"src":"2515:172:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2009,"nodeType":"Block","src":"2914:51:16","statements":[{"expression":{"arguments":[{"id":2006,"name":"fallbackOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"2943:14:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2005,"name":"_setFallbackOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"2924:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2924:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2008,"nodeType":"ExpressionStatement","src":"2924:34:16"}]},"documentation":{"id":1998,"nodeType":"StructuredDocumentation","src":"2693:146:16","text":"@notice Sets the fallbackOracle\n - Callable only by the Aave governance\n @param fallbackOracle The address of the fallbackOracle"},"functionSelector":"170aee73","id":2010,"implemented":true,"kind":"function","modifiers":[{"id":2003,"modifierName":{"id":2002,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":660,"src":"2904:9:16"},"nodeType":"ModifierInvocation","src":"2904:9:16"}],"name":"setFallbackOracle","nodeType":"FunctionDefinition","parameters":{"id":2001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2000,"mutability":"mutable","name":"fallbackOracle","nodeType":"VariableDeclaration","scope":2010,"src":"2871:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1999,"name":"address","nodeType":"ElementaryTypeName","src":"2871:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2870:24:16"},"returnParameters":{"id":2004,"nodeType":"ParameterList","parameters":[],"src":"2914:0:16"},"scope":2223,"src":"2844:121:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2063,"nodeType":"Block","src":"3261:284:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2021,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"3279:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3279:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2023,"name":"sources","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"3296:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3296:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3279:31:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"494e434f4e53495354454e545f504152414d535f4c454e475448","id":2026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3312:28:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_a807dff59d3474096247bf1cf10d6df8b988b576943ecf8c7dd58f40a940e704","typeString":"literal_string \"INCONSISTENT_PARAMS_LENGTH\""},"value":"INCONSISTENT_PARAMS_LENGTH"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a807dff59d3474096247bf1cf10d6df8b988b576943ecf8c7dd58f40a940e704","typeString":"literal_string \"INCONSISTENT_PARAMS_LENGTH\""}],"id":2020,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3271:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3271:70:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2028,"nodeType":"ExpressionStatement","src":"3271:70:16"},{"body":{"id":2061,"nodeType":"Block","src":"3395:144:16","statements":[{"expression":{"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2040,"name":"assetsSources","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"3409:13:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_contract$_IChainlinkAggregator_$1235_$","typeString":"mapping(address => contract IChainlinkAggregator)"}},"id":2044,"indexExpression":{"baseExpression":{"id":2041,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"3423:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2043,"indexExpression":{"id":2042,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"3430:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3423:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3409:24:16","typeDescriptions":{"typeIdentifier":"t_contract$_IChainlinkAggregator_$1235","typeString":"contract IChainlinkAggregator"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":2046,"name":"sources","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"3457:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2048,"indexExpression":{"id":2047,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"3465:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3457:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2045,"name":"IChainlinkAggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"3436:20:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IChainlinkAggregator_$1235_$","typeString":"type(contract IChainlinkAggregator)"}},"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3436:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IChainlinkAggregator_$1235","typeString":"contract IChainlinkAggregator"}},"src":"3409:59:16","typeDescriptions":{"typeIdentifier":"t_contract$_IChainlinkAggregator_$1235","typeString":"contract IChainlinkAggregator"}},"id":2051,"nodeType":"ExpressionStatement","src":"3409:59:16"},{"eventCall":{"arguments":[{"baseExpression":{"id":2053,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"3506:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2055,"indexExpression":{"id":2054,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"3513:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3506:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":2056,"name":"sources","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"3517:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2058,"indexExpression":{"id":2057,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"3525:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3517:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2052,"name":"AssetSourceUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"3487:18:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":2059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3487:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2060,"nodeType":"EmitStatement","src":"3482:46:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2033,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"3371:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2034,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"3375:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3375:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3371:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2062,"initializationExpression":{"assignments":[2030],"declarations":[{"constant":false,"id":2030,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":2062,"src":"3356:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2029,"name":"uint256","nodeType":"ElementaryTypeName","src":"3356:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2032,"initialValue":{"hexValue":"30","id":2031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3368:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3356:13:16"},"loopExpression":{"expression":{"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3390:3:16","subExpression":{"id":2037,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"3390:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2039,"nodeType":"ExpressionStatement","src":"3390:3:16"},"nodeType":"ForStatement","src":"3351:188:16"}]},"documentation":{"id":2011,"nodeType":"StructuredDocumentation","src":"2971:176:16","text":"@notice Internal function to set the sources for each asset\n @param assets The addresses of the assets\n @param sources The address of the source of each asset"},"id":2064,"implemented":true,"kind":"function","modifiers":[],"name":"_setAssetsSources","nodeType":"FunctionDefinition","parameters":{"id":2018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2014,"mutability":"mutable","name":"assets","nodeType":"VariableDeclaration","scope":2064,"src":"3188:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2012,"name":"address","nodeType":"ElementaryTypeName","src":"3188:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2013,"nodeType":"ArrayTypeName","src":"3188:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2017,"mutability":"mutable","name":"sources","nodeType":"VariableDeclaration","scope":2064,"src":"3221:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2015,"name":"address","nodeType":"ElementaryTypeName","src":"3221:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2016,"nodeType":"ArrayTypeName","src":"3221:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3178:73:16"},"returnParameters":{"id":2019,"nodeType":"ParameterList","parameters":[],"src":"3261:0:16"},"scope":2223,"src":"3152:393:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2080,"nodeType":"Block","src":"3736:121:16","statements":[{"expression":{"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2070,"name":"_fallbackOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"3746:15:16","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1891","typeString":"contract IPriceOracleGetter"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2072,"name":"fallbackOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"3783:14:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2071,"name":"IPriceOracleGetter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"3764:18:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPriceOracleGetter_$1891_$","typeString":"type(contract IPriceOracleGetter)"}},"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3764:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1891","typeString":"contract IPriceOracleGetter"}},"src":"3746:52:16","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1891","typeString":"contract IPriceOracleGetter"}},"id":2075,"nodeType":"ExpressionStatement","src":"3746:52:16"},{"eventCall":{"arguments":[{"id":2077,"name":"fallbackOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"3835:14:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2076,"name":"FallbackOracleUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"3813:21:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3813:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2079,"nodeType":"EmitStatement","src":"3808:42:16"}]},"documentation":{"id":2065,"nodeType":"StructuredDocumentation","src":"3551:119:16","text":"@notice Internal function to set the fallbackOracle\n @param fallbackOracle The address of the fallbackOracle"},"id":2081,"implemented":true,"kind":"function","modifiers":[],"name":"_setFallbackOracle","nodeType":"FunctionDefinition","parameters":{"id":2068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2067,"mutability":"mutable","name":"fallbackOracle","nodeType":"VariableDeclaration","scope":2081,"src":"3703:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2066,"name":"address","nodeType":"ElementaryTypeName","src":"3703:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3702:24:16"},"returnParameters":{"id":2069,"nodeType":"ParameterList","parameters":[],"src":"3736:0:16"},"scope":2223,"src":"3675:182:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1890],"body":{"id":2145,"nodeType":"Block","src":"4062:517:16","statements":[{"assignments":[2092],"declarations":[{"constant":false,"id":2092,"mutability":"mutable","name":"source","nodeType":"VariableDeclaration","scope":2145,"src":"4072:27:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IChainlinkAggregator_$1235","typeString":"contract IChainlinkAggregator"},"typeName":{"id":2091,"nodeType":"UserDefinedTypeName","pathNode":{"id":2090,"name":"IChainlinkAggregator","nodeType":"IdentifierPath","referencedDeclaration":1235,"src":"4072:20:16"},"referencedDeclaration":1235,"src":"4072:20:16","typeDescriptions":{"typeIdentifier":"t_contract$_IChainlinkAggregator_$1235","typeString":"contract IChainlinkAggregator"}},"visibility":"internal"}],"id":2096,"initialValue":{"baseExpression":{"id":2093,"name":"assetsSources","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"4102:13:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_contract$_IChainlinkAggregator_$1235_$","typeString":"mapping(address => contract IChainlinkAggregator)"}},"id":2095,"indexExpression":{"id":2094,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"4116:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:20:16","typeDescriptions":{"typeIdentifier":"t_contract$_IChainlinkAggregator_$1235","typeString":"contract IChainlinkAggregator"}},"nodeType":"VariableDeclarationStatement","src":"4072:50:16"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2097,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"4137:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2098,"name":"BASE_CURRENCY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"4146:13:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4137:22:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2105,"name":"source","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"4229:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IChainlinkAggregator_$1235","typeString":"contract IChainlinkAggregator"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IChainlinkAggregator_$1235","typeString":"contract IChainlinkAggregator"}],"id":2104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4221:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2103,"name":"address","nodeType":"ElementaryTypeName","src":"4221:7:16","typeDescriptions":{}}},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4221:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4248:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4240:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2107,"name":"address","nodeType":"ElementaryTypeName","src":"4240:7:16","typeDescriptions":{}}},"id":2110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4240:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4221:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2142,"nodeType":"Block","src":"4326:247:16","statements":[{"assignments":[2119],"declarations":[{"constant":false,"id":2119,"mutability":"mutable","name":"price","nodeType":"VariableDeclaration","scope":2142,"src":"4340:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2118,"name":"int256","nodeType":"ElementaryTypeName","src":"4340:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2125,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2121,"name":"source","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"4376:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IChainlinkAggregator_$1235","typeString":"contract IChainlinkAggregator"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IChainlinkAggregator_$1235","typeString":"contract IChainlinkAggregator"}],"id":2120,"name":"IChainlinkAggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"4355:20:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IChainlinkAggregator_$1235_$","typeString":"type(contract IChainlinkAggregator)"}},"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4355:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IChainlinkAggregator_$1235","typeString":"contract IChainlinkAggregator"}},"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"latestAnswer","nodeType":"MemberAccess","referencedDeclaration":1196,"src":"4355:41:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_int256_$","typeString":"function () view external returns (int256)"}},"id":2124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4355:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"4340:58:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2126,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"4416:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4424:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4416:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2140,"nodeType":"Block","src":"4487:76:16","statements":[{"expression":{"arguments":[{"id":2137,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"4542:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2135,"name":"_fallbackOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"4512:15:16","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1891","typeString":"contract IPriceOracleGetter"}},"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAssetPrice","nodeType":"MemberAccess","referencedDeclaration":1890,"src":"4512:29:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4512:36:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2089,"id":2139,"nodeType":"Return","src":"4505:43:16"}]},"id":2141,"nodeType":"IfStatement","src":"4412:151:16","trueBody":{"id":2134,"nodeType":"Block","src":"4427:54:16","statements":[{"expression":{"arguments":[{"id":2131,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"4460:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4452:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2129,"name":"uint256","nodeType":"ElementaryTypeName","src":"4452:7:16","typeDescriptions":{}}},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4452:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2089,"id":2133,"nodeType":"Return","src":"4445:21:16"}]}}]},"id":2143,"nodeType":"IfStatement","src":"4217:356:16","trueBody":{"id":2117,"nodeType":"Block","src":"4252:68:16","statements":[{"expression":{"arguments":[{"id":2114,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"4303:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2112,"name":"_fallbackOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"4273:15:16","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1891","typeString":"contract IPriceOracleGetter"}},"id":2113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAssetPrice","nodeType":"MemberAccess","referencedDeclaration":1890,"src":"4273:29:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4273:36:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2089,"id":2116,"nodeType":"Return","src":"4266:43:16"}]}},"id":2144,"nodeType":"IfStatement","src":"4133:440:16","trueBody":{"id":2102,"nodeType":"Block","src":"4161:50:16","statements":[{"expression":{"id":2100,"name":"BASE_CURRENCY_UNIT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"4182:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2089,"id":2101,"nodeType":"Return","src":"4175:25:16"}]}}]},"documentation":{"id":2082,"nodeType":"StructuredDocumentation","src":"3863:81:16","text":"@notice Gets an asset price by address\n @param asset The asset address"},"functionSelector":"b3596f07","id":2146,"implemented":true,"kind":"function","modifiers":[],"name":"getAssetPrice","nodeType":"FunctionDefinition","overrides":{"id":2086,"nodeType":"OverrideSpecifier","overrides":[],"src":"4023:8:16"},"parameters":{"id":2085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2084,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":2146,"src":"3972:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2083,"name":"address","nodeType":"ElementaryTypeName","src":"3972:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3971:15:16"},"returnParameters":{"id":2089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2088,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2146,"src":"4049:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2087,"name":"uint256","nodeType":"ElementaryTypeName","src":"4049:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4048:9:16"},"scope":2223,"src":"3949:630:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2193,"nodeType":"Block","src":"4827:208:16","statements":[{"assignments":[2160],"declarations":[{"constant":false,"id":2160,"mutability":"mutable","name":"prices","nodeType":"VariableDeclaration","scope":2193,"src":"4837:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2158,"name":"uint256","nodeType":"ElementaryTypeName","src":"4837:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2159,"nodeType":"ArrayTypeName","src":"4837:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2167,"initialValue":{"arguments":[{"expression":{"id":2164,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2150,"src":"4877:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4877:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4863:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2161,"name":"uint256","nodeType":"ElementaryTypeName","src":"4867:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2162,"nodeType":"ArrayTypeName","src":"4867:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4863:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4837:54:16"},{"body":{"id":2189,"nodeType":"Block","src":"4945:61:16","statements":[{"expression":{"id":2187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2179,"name":"prices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"4959:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2181,"indexExpression":{"id":2180,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"4966:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4959:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":2183,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2150,"src":"4985:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2185,"indexExpression":{"id":2184,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"4992:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4985:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2182,"name":"getAssetPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"4971:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4971:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4959:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2188,"nodeType":"ExpressionStatement","src":"4959:36:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2172,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"4921:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2173,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2150,"src":"4925:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4925:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4921:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2190,"initializationExpression":{"assignments":[2169],"declarations":[{"constant":false,"id":2169,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":2190,"src":"4906:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2168,"name":"uint256","nodeType":"ElementaryTypeName","src":"4906:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2171,"initialValue":{"hexValue":"30","id":2170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4918:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4906:13:16"},"loopExpression":{"expression":{"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4940:3:16","subExpression":{"id":2176,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"4940:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2178,"nodeType":"ExpressionStatement","src":"4940:3:16"},"nodeType":"ForStatement","src":"4901:105:16"},{"expression":{"id":2191,"name":"prices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"5022:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2155,"id":2192,"nodeType":"Return","src":"5015:13:16"}]},"documentation":{"id":2147,"nodeType":"StructuredDocumentation","src":"4585:116:16","text":"@notice Gets a list of prices from a list of assets addresses\n @param assets The list of assets addresses"},"functionSelector":"9d23d9f2","id":2194,"implemented":true,"kind":"function","modifiers":[],"name":"getAssetsPrices","nodeType":"FunctionDefinition","parameters":{"id":2151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2150,"mutability":"mutable","name":"assets","nodeType":"VariableDeclaration","scope":2194,"src":"4731:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2148,"name":"address","nodeType":"ElementaryTypeName","src":"4731:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2149,"nodeType":"ArrayTypeName","src":"4731:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"4730:27:16"},"returnParameters":{"id":2155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2154,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2194,"src":"4805:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2152,"name":"uint256","nodeType":"ElementaryTypeName","src":"4805:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2153,"nodeType":"ArrayTypeName","src":"4805:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"4804:18:16"},"scope":2223,"src":"4706:329:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2209,"nodeType":"Block","src":"5278:53:16","statements":[{"expression":{"arguments":[{"baseExpression":{"id":2204,"name":"assetsSources","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"5303:13:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_contract$_IChainlinkAggregator_$1235_$","typeString":"mapping(address => contract IChainlinkAggregator)"}},"id":2206,"indexExpression":{"id":2205,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"5317:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5303:20:16","typeDescriptions":{"typeIdentifier":"t_contract$_IChainlinkAggregator_$1235","typeString":"contract IChainlinkAggregator"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IChainlinkAggregator_$1235","typeString":"contract IChainlinkAggregator"}],"id":2203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5295:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2202,"name":"address","nodeType":"ElementaryTypeName","src":"5295:7:16","typeDescriptions":{}}},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5295:29:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2201,"id":2208,"nodeType":"Return","src":"5288:36:16"}]},"documentation":{"id":2195,"nodeType":"StructuredDocumentation","src":"5041:159:16","text":"@notice Gets the address of the source for an asset address\n @param asset The address of the asset\n @return address The address of the source"},"functionSelector":"92bf2be0","id":2210,"implemented":true,"kind":"function","modifiers":[],"name":"getSourceOfAsset","nodeType":"FunctionDefinition","parameters":{"id":2198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2197,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":2210,"src":"5231:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2196,"name":"address","nodeType":"ElementaryTypeName","src":"5231:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5230:15:16"},"returnParameters":{"id":2201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2200,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2210,"src":"5269:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2199,"name":"address","nodeType":"ElementaryTypeName","src":"5269:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5268:9:16"},"scope":2223,"src":"5205:126:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2221,"nodeType":"Block","src":"5512:48:16","statements":[{"expression":{"arguments":[{"id":2218,"name":"_fallbackOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"5537:15:16","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1891","typeString":"contract IPriceOracleGetter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1891","typeString":"contract IPriceOracleGetter"}],"id":2217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5529:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2216,"name":"address","nodeType":"ElementaryTypeName","src":"5529:7:16","typeDescriptions":{}}},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5529:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2215,"id":2220,"nodeType":"Return","src":"5522:31:16"}]},"documentation":{"id":2211,"nodeType":"StructuredDocumentation","src":"5337:109:16","text":"@notice Gets the address of the fallback oracle\n @return address The addres of the fallback oracle"},"functionSelector":"6210308c","id":2222,"implemented":true,"kind":"function","modifiers":[],"name":"getFallbackOracle","nodeType":"FunctionDefinition","parameters":{"id":2212,"nodeType":"ParameterList","parameters":[],"src":"5477:2:16"},"returnParameters":{"id":2215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2214,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2222,"src":"5503:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2213,"name":"address","nodeType":"ElementaryTypeName","src":"5503:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5502:9:16"},"scope":2223,"src":"5451:109:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2224,"src":"871:4691:16"}],"src":"37:5526:16"},"id":16},"contracts/misc/interfaces/IAaveOracle.sol":{"ast":{"absolutePath":"contracts/misc/interfaces/IAaveOracle.sol","exportedSymbols":{"IAaveOracle":[2244]},"id":2245,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":2225,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"37:24:17"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":2226,"nodeType":"StructuredDocumentation","src":"63:82:17","text":" @title IAaveOracle interface\n @notice Interface for the Aave oracle.*"},"fullyImplemented":false,"id":2244,"linearizedBaseContracts":[2244],"name":"IAaveOracle","nodeType":"ContractDefinition","nodes":[{"functionSelector":"e19f4700","id":2231,"implemented":false,"kind":"function","modifiers":[],"name":"BASE_CURRENCY","nodeType":"FunctionDefinition","parameters":{"id":2227,"nodeType":"ParameterList","parameters":[],"src":"197:2:17"},"returnParameters":{"id":2230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2229,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2231,"src":"223:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2228,"name":"address","nodeType":"ElementaryTypeName","src":"223:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"222:9:17"},"scope":2244,"src":"175:57:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8c89b64f","id":2236,"implemented":false,"kind":"function","modifiers":[],"name":"BASE_CURRENCY_UNIT","nodeType":"FunctionDefinition","parameters":{"id":2232,"nodeType":"ParameterList","parameters":[],"src":"316:2:17"},"returnParameters":{"id":2235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2234,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2236,"src":"342:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2233,"name":"uint256","nodeType":"ElementaryTypeName","src":"342:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"341:9:17"},"scope":2244,"src":"289:62:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b3596f07","id":2243,"implemented":false,"kind":"function","modifiers":[],"name":"getAssetPrice","nodeType":"FunctionDefinition","parameters":{"id":2239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2238,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":2243,"src":"445:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2237,"name":"address","nodeType":"ElementaryTypeName","src":"445:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"444:15:17"},"returnParameters":{"id":2242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2241,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2243,"src":"483:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2240,"name":"uint256","nodeType":"ElementaryTypeName","src":"483:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"482:9:17"},"scope":2244,"src":"422:70:17","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2245,"src":"147:347:17"}],"src":"37:458:17"},"id":17},"contracts/misc/interfaces/IUiPoolDataProviderV2.sol":{"ast":{"absolutePath":"contracts/misc/interfaces/IUiPoolDataProviderV2.sol","exportedSymbols":{"ILendingPoolAddressesProvider":[1879],"IUiPoolDataProviderV2":[2374]},"id":2375,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":2246,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"37:24:18"},{"absolutePath":"contracts/interfaces/ILendingPoolAddressesProvider.sol","file":"../../interfaces/ILendingPoolAddressesProvider.sol","id":2248,"nodeType":"ImportDirective","scope":2375,"sourceUnit":1880,"src":"63:103:18","symbolAliases":[{"foreign":{"id":2247,"name":"ILendingPoolAddressesProvider","nodeType":"Identifier","overloadedDeclarations":[],"src":"76:29:18","typeDescriptions":{}}}],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2374,"linearizedBaseContracts":[2374],"name":"IUiPoolDataProviderV2","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IUiPoolDataProviderV2.AggregatedReserveData","id":2315,"members":[{"constant":false,"id":2250,"mutability":"mutable","name":"underlyingAsset","nodeType":"VariableDeclaration","scope":2315,"src":"245:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2249,"name":"address","nodeType":"ElementaryTypeName","src":"245:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2252,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":2315,"src":"278:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2251,"name":"string","nodeType":"ElementaryTypeName","src":"278:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2254,"mutability":"mutable","name":"symbol","nodeType":"VariableDeclaration","scope":2315,"src":"299:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2253,"name":"string","nodeType":"ElementaryTypeName","src":"299:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2256,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","scope":2315,"src":"322:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2255,"name":"uint256","nodeType":"ElementaryTypeName","src":"322:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2258,"mutability":"mutable","name":"baseLTVasCollateral","nodeType":"VariableDeclaration","scope":2315,"src":"348:27:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2257,"name":"uint256","nodeType":"ElementaryTypeName","src":"348:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2260,"mutability":"mutable","name":"reserveLiquidationThreshold","nodeType":"VariableDeclaration","scope":2315,"src":"385:35:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2259,"name":"uint256","nodeType":"ElementaryTypeName","src":"385:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2262,"mutability":"mutable","name":"reserveLiquidationBonus","nodeType":"VariableDeclaration","scope":2315,"src":"430:31:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2261,"name":"uint256","nodeType":"ElementaryTypeName","src":"430:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2264,"mutability":"mutable","name":"reserveFactor","nodeType":"VariableDeclaration","scope":2315,"src":"471:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2263,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2266,"mutability":"mutable","name":"usageAsCollateralEnabled","nodeType":"VariableDeclaration","scope":2315,"src":"502:29:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2265,"name":"bool","nodeType":"ElementaryTypeName","src":"502:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2268,"mutability":"mutable","name":"borrowingEnabled","nodeType":"VariableDeclaration","scope":2315,"src":"541:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2267,"name":"bool","nodeType":"ElementaryTypeName","src":"541:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2270,"mutability":"mutable","name":"stableBorrowRateEnabled","nodeType":"VariableDeclaration","scope":2315,"src":"572:28:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2269,"name":"bool","nodeType":"ElementaryTypeName","src":"572:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2272,"mutability":"mutable","name":"isActive","nodeType":"VariableDeclaration","scope":2315,"src":"610:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2271,"name":"bool","nodeType":"ElementaryTypeName","src":"610:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2274,"mutability":"mutable","name":"isFrozen","nodeType":"VariableDeclaration","scope":2315,"src":"633:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2273,"name":"bool","nodeType":"ElementaryTypeName","src":"633:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2276,"mutability":"mutable","name":"liquidityIndex","nodeType":"VariableDeclaration","scope":2315,"src":"677:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2275,"name":"uint128","nodeType":"ElementaryTypeName","src":"677:7:18","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":2278,"mutability":"mutable","name":"variableBorrowIndex","nodeType":"VariableDeclaration","scope":2315,"src":"709:27:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2277,"name":"uint128","nodeType":"ElementaryTypeName","src":"709:7:18","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":2280,"mutability":"mutable","name":"liquidityRate","nodeType":"VariableDeclaration","scope":2315,"src":"746:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2279,"name":"uint128","nodeType":"ElementaryTypeName","src":"746:7:18","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":2282,"mutability":"mutable","name":"variableBorrowRate","nodeType":"VariableDeclaration","scope":2315,"src":"777:26:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2281,"name":"uint128","nodeType":"ElementaryTypeName","src":"777:7:18","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":2284,"mutability":"mutable","name":"stableBorrowRate","nodeType":"VariableDeclaration","scope":2315,"src":"813:24:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2283,"name":"uint128","nodeType":"ElementaryTypeName","src":"813:7:18","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":2286,"mutability":"mutable","name":"lastUpdateTimestamp","nodeType":"VariableDeclaration","scope":2315,"src":"847:26:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":2285,"name":"uint40","nodeType":"ElementaryTypeName","src":"847:6:18","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"},{"constant":false,"id":2288,"mutability":"mutable","name":"aTokenAddress","nodeType":"VariableDeclaration","scope":2315,"src":"883:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2287,"name":"address","nodeType":"ElementaryTypeName","src":"883:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2290,"mutability":"mutable","name":"stableDebtTokenAddress","nodeType":"VariableDeclaration","scope":2315,"src":"914:30:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2289,"name":"address","nodeType":"ElementaryTypeName","src":"914:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2292,"mutability":"mutable","name":"variableDebtTokenAddress","nodeType":"VariableDeclaration","scope":2315,"src":"954:32:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2291,"name":"address","nodeType":"ElementaryTypeName","src":"954:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2294,"mutability":"mutable","name":"interestRateStrategyAddress","nodeType":"VariableDeclaration","scope":2315,"src":"996:35:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2293,"name":"address","nodeType":"ElementaryTypeName","src":"996:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2296,"mutability":"mutable","name":"availableLiquidity","nodeType":"VariableDeclaration","scope":2315,"src":"1052:26:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2295,"name":"uint256","nodeType":"ElementaryTypeName","src":"1052:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2298,"mutability":"mutable","name":"totalPrincipalStableDebt","nodeType":"VariableDeclaration","scope":2315,"src":"1088:32:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2297,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2300,"mutability":"mutable","name":"averageStableRate","nodeType":"VariableDeclaration","scope":2315,"src":"1130:25:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2299,"name":"uint256","nodeType":"ElementaryTypeName","src":"1130:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2302,"mutability":"mutable","name":"stableDebtLastUpdateTimestamp","nodeType":"VariableDeclaration","scope":2315,"src":"1165:37:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2301,"name":"uint256","nodeType":"ElementaryTypeName","src":"1165:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2304,"mutability":"mutable","name":"totalScaledVariableDebt","nodeType":"VariableDeclaration","scope":2315,"src":"1212:31:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2303,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2306,"mutability":"mutable","name":"priceInMarketReferenceCurrency","nodeType":"VariableDeclaration","scope":2315,"src":"1253:38:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2305,"name":"uint256","nodeType":"ElementaryTypeName","src":"1253:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2308,"mutability":"mutable","name":"variableRateSlope1","nodeType":"VariableDeclaration","scope":2315,"src":"1301:26:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2307,"name":"uint256","nodeType":"ElementaryTypeName","src":"1301:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2310,"mutability":"mutable","name":"variableRateSlope2","nodeType":"VariableDeclaration","scope":2315,"src":"1337:26:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2309,"name":"uint256","nodeType":"ElementaryTypeName","src":"1337:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2312,"mutability":"mutable","name":"stableRateSlope1","nodeType":"VariableDeclaration","scope":2315,"src":"1373:24:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2311,"name":"uint256","nodeType":"ElementaryTypeName","src":"1373:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2314,"mutability":"mutable","name":"stableRateSlope2","nodeType":"VariableDeclaration","scope":2315,"src":"1407:24:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2313,"name":"uint256","nodeType":"ElementaryTypeName","src":"1407:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"AggregatedReserveData","nodeType":"StructDefinition","scope":2374,"src":"206:1232:18","visibility":"public"},{"canonicalName":"IUiPoolDataProviderV2.UserReserveData","id":2330,"members":[{"constant":false,"id":2317,"mutability":"mutable","name":"underlyingAsset","nodeType":"VariableDeclaration","scope":2330,"src":"1477:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2316,"name":"address","nodeType":"ElementaryTypeName","src":"1477:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2319,"mutability":"mutable","name":"scaledATokenBalance","nodeType":"VariableDeclaration","scope":2330,"src":"1510:27:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2318,"name":"uint256","nodeType":"ElementaryTypeName","src":"1510:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2321,"mutability":"mutable","name":"usageAsCollateralEnabledOnUser","nodeType":"VariableDeclaration","scope":2330,"src":"1547:35:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2320,"name":"bool","nodeType":"ElementaryTypeName","src":"1547:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2323,"mutability":"mutable","name":"stableBorrowRate","nodeType":"VariableDeclaration","scope":2330,"src":"1592:24:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2322,"name":"uint256","nodeType":"ElementaryTypeName","src":"1592:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2325,"mutability":"mutable","name":"scaledVariableDebt","nodeType":"VariableDeclaration","scope":2330,"src":"1626:26:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2324,"name":"uint256","nodeType":"ElementaryTypeName","src":"1626:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2327,"mutability":"mutable","name":"principalStableDebt","nodeType":"VariableDeclaration","scope":2330,"src":"1662:27:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2326,"name":"uint256","nodeType":"ElementaryTypeName","src":"1662:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2329,"mutability":"mutable","name":"stableBorrowLastUpdateTimestamp","nodeType":"VariableDeclaration","scope":2330,"src":"1699:39:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2328,"name":"uint256","nodeType":"ElementaryTypeName","src":"1699:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"UserReserveData","nodeType":"StructDefinition","scope":2374,"src":"1444:301:18","visibility":"public"},{"canonicalName":"IUiPoolDataProviderV2.BaseCurrencyInfo","id":2339,"members":[{"constant":false,"id":2332,"mutability":"mutable","name":"marketReferenceCurrencyUnit","nodeType":"VariableDeclaration","scope":2339,"src":"1785:35:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2331,"name":"uint256","nodeType":"ElementaryTypeName","src":"1785:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2334,"mutability":"mutable","name":"marketReferenceCurrencyPriceInUsd","nodeType":"VariableDeclaration","scope":2339,"src":"1830:40:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2333,"name":"int256","nodeType":"ElementaryTypeName","src":"1830:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2336,"mutability":"mutable","name":"networkBaseTokenPriceInUsd","nodeType":"VariableDeclaration","scope":2339,"src":"1880:33:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2335,"name":"int256","nodeType":"ElementaryTypeName","src":"1880:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2338,"mutability":"mutable","name":"networkBaseTokenPriceDecimals","nodeType":"VariableDeclaration","scope":2339,"src":"1923:35:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2337,"name":"uint8","nodeType":"ElementaryTypeName","src":"1923:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"name":"BaseCurrencyInfo","nodeType":"StructDefinition","scope":2374,"src":"1751:214:18","visibility":"public"},{"functionSelector":"586c1442","id":2348,"implemented":false,"kind":"function","modifiers":[],"name":"getReservesList","nodeType":"FunctionDefinition","parameters":{"id":2343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2342,"mutability":"mutable","name":"provider","nodeType":"VariableDeclaration","scope":2348,"src":"1996:38:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPoolAddressesProvider_$1879","typeString":"contract ILendingPoolAddressesProvider"},"typeName":{"id":2341,"nodeType":"UserDefinedTypeName","pathNode":{"id":2340,"name":"ILendingPoolAddressesProvider","nodeType":"IdentifierPath","referencedDeclaration":1879,"src":"1996:29:18"},"referencedDeclaration":1879,"src":"1996:29:18","typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPoolAddressesProvider_$1879","typeString":"contract ILendingPoolAddressesProvider"}},"visibility":"internal"}],"src":"1995:40:18"},"returnParameters":{"id":2347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2346,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2348,"src":"2083:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2344,"name":"address","nodeType":"ElementaryTypeName","src":"2083:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2345,"nodeType":"ArrayTypeName","src":"2083:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2082:18:18"},"scope":2374,"src":"1971:130:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"ec489c21","id":2361,"implemented":false,"kind":"function","modifiers":[],"name":"getReservesData","nodeType":"FunctionDefinition","parameters":{"id":2352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2351,"mutability":"mutable","name":"provider","nodeType":"VariableDeclaration","scope":2361,"src":"2132:38:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPoolAddressesProvider_$1879","typeString":"contract ILendingPoolAddressesProvider"},"typeName":{"id":2350,"nodeType":"UserDefinedTypeName","pathNode":{"id":2349,"name":"ILendingPoolAddressesProvider","nodeType":"IdentifierPath","referencedDeclaration":1879,"src":"2132:29:18"},"referencedDeclaration":1879,"src":"2132:29:18","typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPoolAddressesProvider_$1879","typeString":"contract ILendingPoolAddressesProvider"}},"visibility":"internal"}],"src":"2131:40:18"},"returnParameters":{"id":2360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2356,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2361,"src":"2219:30:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AggregatedReserveData_$2315_memory_ptr_$dyn_memory_ptr","typeString":"struct IUiPoolDataProviderV2.AggregatedReserveData[]"},"typeName":{"baseType":{"id":2354,"nodeType":"UserDefinedTypeName","pathNode":{"id":2353,"name":"AggregatedReserveData","nodeType":"IdentifierPath","referencedDeclaration":2315,"src":"2219:21:18"},"referencedDeclaration":2315,"src":"2219:21:18","typeDescriptions":{"typeIdentifier":"t_struct$_AggregatedReserveData_$2315_storage_ptr","typeString":"struct IUiPoolDataProviderV2.AggregatedReserveData"}},"id":2355,"nodeType":"ArrayTypeName","src":"2219:23:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AggregatedReserveData_$2315_storage_$dyn_storage_ptr","typeString":"struct IUiPoolDataProviderV2.AggregatedReserveData[]"}},"visibility":"internal"},{"constant":false,"id":2359,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2361,"src":"2251:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_BaseCurrencyInfo_$2339_memory_ptr","typeString":"struct IUiPoolDataProviderV2.BaseCurrencyInfo"},"typeName":{"id":2358,"nodeType":"UserDefinedTypeName","pathNode":{"id":2357,"name":"BaseCurrencyInfo","nodeType":"IdentifierPath","referencedDeclaration":2339,"src":"2251:16:18"},"referencedDeclaration":2339,"src":"2251:16:18","typeDescriptions":{"typeIdentifier":"t_struct$_BaseCurrencyInfo_$2339_storage_ptr","typeString":"struct IUiPoolDataProviderV2.BaseCurrencyInfo"}},"visibility":"internal"}],"src":"2218:57:18"},"scope":2374,"src":"2107:169:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"51974cc0","id":2373,"implemented":false,"kind":"function","modifiers":[],"name":"getUserReservesData","nodeType":"FunctionDefinition","parameters":{"id":2367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2364,"mutability":"mutable","name":"provider","nodeType":"VariableDeclaration","scope":2373,"src":"2320:38:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPoolAddressesProvider_$1879","typeString":"contract ILendingPoolAddressesProvider"},"typeName":{"id":2363,"nodeType":"UserDefinedTypeName","pathNode":{"id":2362,"name":"ILendingPoolAddressesProvider","nodeType":"IdentifierPath","referencedDeclaration":1879,"src":"2320:29:18"},"referencedDeclaration":1879,"src":"2320:29:18","typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPoolAddressesProvider_$1879","typeString":"contract ILendingPoolAddressesProvider"}},"visibility":"internal"},{"constant":false,"id":2366,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":2373,"src":"2368:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2365,"name":"address","nodeType":"ElementaryTypeName","src":"2368:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2310:76:18"},"returnParameters":{"id":2372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2371,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2373,"src":"2410:24:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserReserveData_$2330_memory_ptr_$dyn_memory_ptr","typeString":"struct IUiPoolDataProviderV2.UserReserveData[]"},"typeName":{"baseType":{"id":2369,"nodeType":"UserDefinedTypeName","pathNode":{"id":2368,"name":"UserReserveData","nodeType":"IdentifierPath","referencedDeclaration":2330,"src":"2410:15:18"},"referencedDeclaration":2330,"src":"2410:15:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserReserveData_$2330_storage_ptr","typeString":"struct IUiPoolDataProviderV2.UserReserveData"}},"id":2370,"nodeType":"ArrayTypeName","src":"2410:17:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserReserveData_$2330_storage_$dyn_storage_ptr","typeString":"struct IUiPoolDataProviderV2.UserReserveData[]"}},"visibility":"internal"}],"src":"2409:26:18"},"scope":2374,"src":"2282:154:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2375,"src":"168:2270:18"}],"src":"37:2402:18"},"id":18},"contracts/oracles/ConvexOracleV2.sol":{"ast":{"absolutePath":"contracts/oracles/ConvexOracleV2.sol","exportedSymbols":{"ConvexOracleV2":[2443],"CurveOracleV2":[2527],"FixedPointMathLib":[3284],"IERC20":[3165]},"id":2444,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":2376,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"39:24:19"},{"absolutePath":"contracts/oracles/CurveOracleV2.sol","file":"./CurveOracleV2.sol","id":2378,"nodeType":"ImportDirective","scope":2444,"sourceUnit":2528,"src":"126:50:19","symbolAliases":[{"foreign":{"id":2377,"name":"CurveOracleV2","nodeType":"Identifier","overloadedDeclarations":[],"src":"134:13:19","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/oracles/libs/FixedPointMathLib.sol","file":"./libs/FixedPointMathLib.sol","id":2380,"nodeType":"ImportDirective","scope":2444,"sourceUnit":3285,"src":"177:63:19","symbolAliases":[{"foreign":{"id":2379,"name":"FixedPointMathLib","nodeType":"Identifier","overloadedDeclarations":[],"src":"185:17:19","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/oracles/interfaces/IERC20.sol","file":"./interfaces/IERC20.sol","id":2382,"nodeType":"ImportDirective","scope":2444,"sourceUnit":3166,"src":"241:47:19","symbolAliases":[{"foreign":{"id":2381,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"src":"249:6:19","typeDescriptions":{}}}],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2443,"linearizedBaseContracts":[2443],"name":"ConvexOracleV2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2385,"mutability":"mutable","name":"curve_oracle","nodeType":"VariableDeclaration","scope":2443,"src":"512:34:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_CurveOracleV2_$2527","typeString":"contract CurveOracleV2"},"typeName":{"id":2384,"nodeType":"UserDefinedTypeName","pathNode":{"id":2383,"name":"CurveOracleV2","nodeType":"IdentifierPath","referencedDeclaration":2527,"src":"512:13:19"},"referencedDeclaration":2527,"src":"512:13:19","typeDescriptions":{"typeIdentifier":"t_contract$_CurveOracleV2_$2527","typeString":"contract CurveOracleV2"}},"visibility":"private"},{"body":{"id":2395,"nodeType":"Block","src":"711:45:19","statements":[{"expression":{"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2391,"name":"curve_oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"721:12:19","typeDescriptions":{"typeIdentifier":"t_contract$_CurveOracleV2_$2527","typeString":"contract CurveOracleV2"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2392,"name":"_curve_oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"736:13:19","typeDescriptions":{"typeIdentifier":"t_contract$_CurveOracleV2_$2527","typeString":"contract CurveOracleV2"}},"src":"721:28:19","typeDescriptions":{"typeIdentifier":"t_contract$_CurveOracleV2_$2527","typeString":"contract CurveOracleV2"}},"id":2394,"nodeType":"ExpressionStatement","src":"721:28:19"}]},"id":2396,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":2389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2388,"mutability":"mutable","name":"_curve_oracle","nodeType":"VariableDeclaration","scope":2396,"src":"682:27:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_CurveOracleV2_$2527","typeString":"contract CurveOracleV2"},"typeName":{"id":2387,"nodeType":"UserDefinedTypeName","pathNode":{"id":2386,"name":"CurveOracleV2","nodeType":"IdentifierPath","referencedDeclaration":2527,"src":"682:13:19"},"referencedDeclaration":2527,"src":"682:13:19","typeDescriptions":{"typeIdentifier":"t_contract$_CurveOracleV2_$2527","typeString":"contract CurveOracleV2"}},"visibility":"internal"}],"src":"681:29:19"},"returnParameters":{"id":2390,"nodeType":"ParameterList","parameters":[],"src":"711:0:19"},"scope":2443,"src":"670:86:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2422,"nodeType":"Block","src":"1036:430:19","statements":[{"assignments":[2413],"declarations":[{"constant":false,"id":2413,"mutability":"mutable","name":"curve_lp_price","nodeType":"VariableDeclaration","scope":2422,"src":"1046:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2412,"name":"uint256","nodeType":"ElementaryTypeName","src":"1046:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2419,"initialValue":{"arguments":[{"id":2416,"name":"curve_pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"1094:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2417,"name":"prices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"1106:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"expression":{"id":2414,"name":"curve_oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"1071:12:19","typeDescriptions":{"typeIdentifier":"t_contract$_CurveOracleV2_$2527","typeString":"contract CurveOracleV2"}},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"get_price","nodeType":"MemberAccess","referencedDeclaration":2487,"src":"1071:22:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,uint256[] memory) view external returns (uint256)"}},"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1071:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1046:67:19"},{"expression":{"id":2420,"name":"curve_lp_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"1445:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2411,"id":2421,"nodeType":"Return","src":"1438:21:19"}]},"functionSelector":"2a417cc7","id":2423,"implemented":true,"kind":"function","modifiers":[],"name":"get_convex_price","nodeType":"FunctionDefinition","parameters":{"id":2408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2398,"mutability":"mutable","name":"curve_pool","nodeType":"VariableDeclaration","scope":2423,"src":"873:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2397,"name":"address","nodeType":"ElementaryTypeName","src":"873:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2401,"mutability":"mutable","name":"prices","nodeType":"VariableDeclaration","scope":2423,"src":"901:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2399,"name":"uint256","nodeType":"ElementaryTypeName","src":"901:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2400,"nodeType":"ArrayTypeName","src":"901:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2403,"mutability":"mutable","name":"pid","nodeType":"VariableDeclaration","scope":2423,"src":"934:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2402,"name":"uint16","nodeType":"ElementaryTypeName","src":"934:6:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2405,"mutability":"mutable","name":"convex_lp","nodeType":"VariableDeclaration","scope":2423,"src":"954:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2404,"name":"address","nodeType":"ElementaryTypeName","src":"954:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2407,"mutability":"mutable","name":"curve_lp","nodeType":"VariableDeclaration","scope":2423,"src":"981:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2406,"name":"address","nodeType":"ElementaryTypeName","src":"981:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"863:140:19"},"returnParameters":{"id":2411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2410,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2423,"src":"1027:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2409,"name":"uint256","nodeType":"ElementaryTypeName","src":"1027:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1026:9:19"},"scope":2443,"src":"838:628:19","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2441,"nodeType":"Block","src":"1691:71:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2434,"name":"curve_lp_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2425,"src":"1709:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2435,"name":"curve_supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2427,"src":"1726:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1709:29:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2437,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1708:31:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2438,"name":"convex_supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2429,"src":"1742:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1708:47:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2433,"id":2440,"nodeType":"Return","src":"1701:54:19"}]},"id":2442,"implemented":true,"kind":"function","modifiers":[],"name":"calculate_convex_price","nodeType":"FunctionDefinition","parameters":{"id":2430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2425,"mutability":"mutable","name":"curve_lp_price","nodeType":"VariableDeclaration","scope":2442,"src":"1569:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2424,"name":"uint256","nodeType":"ElementaryTypeName","src":"1569:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2427,"mutability":"mutable","name":"curve_supply","nodeType":"VariableDeclaration","scope":2442,"src":"1601:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2426,"name":"uint256","nodeType":"ElementaryTypeName","src":"1601:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2429,"mutability":"mutable","name":"convex_supply","nodeType":"VariableDeclaration","scope":2442,"src":"1631:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2428,"name":"uint256","nodeType":"ElementaryTypeName","src":"1631:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1559:99:19"},"returnParameters":{"id":2433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2432,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2442,"src":"1682:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2431,"name":"uint256","nodeType":"ElementaryTypeName","src":"1682:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1681:9:19"},"scope":2443,"src":"1528:234:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2444,"src":"371:1393:19"}],"src":"39:1726:19"},"id":19},"contracts/oracles/CurveOracleV2.sol":{"ast":{"absolutePath":"contracts/oracles/CurveOracleV2.sol","exportedSymbols":{"CurveOracleV2":[2527],"ICurveOracle":[3049],"ICurvePool":[3064],"vMath":[4067]},"id":2528,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":2445,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"39:24:20"},{"absolutePath":"contracts/oracles/interfaces/ICurvePoolV1.sol","file":"./interfaces/ICurvePoolV1.sol","id":2447,"nodeType":"ImportDirective","scope":2528,"sourceUnit":3065,"src":"65:57:20","symbolAliases":[{"foreign":{"id":2446,"name":"ICurvePool","nodeType":"Identifier","overloadedDeclarations":[],"src":"73:10:20","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/oracles/interfaces/ICurveOracle.sol","file":"./interfaces/ICurveOracle.sol","id":2449,"nodeType":"ImportDirective","scope":2528,"sourceUnit":3050,"src":"123:59:20","symbolAliases":[{"foreign":{"id":2448,"name":"ICurveOracle","nodeType":"Identifier","overloadedDeclarations":[],"src":"131:12:20","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/oracles/libs/vMath.sol","file":"./libs/vMath.sol","id":2451,"nodeType":"ImportDirective","scope":2528,"sourceUnit":4068,"src":"183:39:20","symbolAliases":[{"foreign":{"id":2450,"name":"vMath","nodeType":"Identifier","overloadedDeclarations":[],"src":"191:5:20","typeDescriptions":{}}}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2452,"name":"ICurveOracle","nodeType":"IdentifierPath","referencedDeclaration":3049,"src":"250:12:20"},"id":2453,"nodeType":"InheritanceSpecifier","src":"250:12:20"}],"contractDependencies":[3049],"contractKind":"contract","fullyImplemented":true,"id":2527,"linearizedBaseContracts":[2527,3049],"name":"CurveOracleV2","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[3048],"body":{"id":2486,"nodeType":"Block","src":"410:254:20","statements":[{"assignments":[2465],"declarations":[{"constant":false,"id":2465,"mutability":"mutable","name":"virtual_price","nodeType":"VariableDeclaration","scope":2486,"src":"420:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2464,"name":"uint256","nodeType":"ElementaryTypeName","src":"420:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2471,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2467,"name":"curve_pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"455:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2466,"name":"ICurvePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"444:10:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ICurvePool_$3064_$","typeString":"type(contract ICurvePool)"}},"id":2468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"444:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ICurvePool_$3064","typeString":"contract ICurvePool"}},"id":2469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"get_virtual_price","nodeType":"MemberAccess","referencedDeclaration":3056,"src":"444:40:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":2470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"444:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"420:66:20"},{"assignments":[2473],"declarations":[{"constant":false,"id":2473,"mutability":"mutable","name":"lp_price","nodeType":"VariableDeclaration","scope":2486,"src":"497:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2472,"name":"uint256","nodeType":"ElementaryTypeName","src":"497:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2483,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":2477,"name":"prices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"560:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"560:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"554:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2475,"name":"uint8","nodeType":"ElementaryTypeName","src":"554:5:20","typeDescriptions":{}}},"id":2479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"554:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2480,"name":"virtual_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"588:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2481,"name":"prices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"615:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2474,"name":"calculate_v2_token_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"516:24:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint8_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint8,uint256,uint256[] memory) pure returns (uint256)"}},"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"516:115:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"497:134:20"},{"expression":{"id":2484,"name":"lp_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"649:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2463,"id":2485,"nodeType":"Return","src":"642:15:20"}]},"functionSelector":"6dcb6a32","id":2487,"implemented":true,"kind":"function","modifiers":[],"name":"get_price","nodeType":"FunctionDefinition","overrides":{"id":2460,"nodeType":"OverrideSpecifier","overrides":[],"src":"371:8:20"},"parameters":{"id":2459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2455,"mutability":"mutable","name":"curve_pool","nodeType":"VariableDeclaration","scope":2487,"src":"288:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2454,"name":"address","nodeType":"ElementaryTypeName","src":"288:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2458,"mutability":"mutable","name":"prices","nodeType":"VariableDeclaration","scope":2487,"src":"308:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2456,"name":"uint256","nodeType":"ElementaryTypeName","src":"308:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2457,"nodeType":"ArrayTypeName","src":"308:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"287:45:20"},"returnParameters":{"id":2463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2462,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2487,"src":"397:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2461,"name":"uint256","nodeType":"ElementaryTypeName","src":"397:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"396:9:20"},"scope":2527,"src":"269:395:20","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2525,"nodeType":"Block","src":"976:211:20","statements":[{"assignments":[2500],"declarations":[{"constant":false,"id":2500,"mutability":"mutable","name":"product","nodeType":"VariableDeclaration","scope":2525,"src":"986:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2499,"name":"uint256","nodeType":"ElementaryTypeName","src":"986:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2505,"initialValue":{"arguments":[{"id":2503,"name":"prices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"1018:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"expression":{"id":2501,"name":"vMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"1004:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_vMath_$4067_$","typeString":"type(library vMath)"}},"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"product","nodeType":"MemberAccess","referencedDeclaration":4040,"src":"1004:13:20","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1004:21:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"986:39:20"},{"assignments":[2507],"declarations":[{"constant":false,"id":2507,"mutability":"mutable","name":"geo_mean","nodeType":"VariableDeclaration","scope":2525,"src":"1035:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2506,"name":"uint256","nodeType":"ElementaryTypeName","src":"1035:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2513,"initialValue":{"arguments":[{"id":2510,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"1075:1:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2511,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"1078:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2508,"name":"vMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"1054:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_vMath_$4067_$","typeString":"type(library vMath)"}},"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"geometric_mean","nodeType":"MemberAccess","referencedDeclaration":4066,"src":"1054:20:20","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_pure$_t_uint8_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint8,uint256) pure returns (uint256)"}},"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1054:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1035:51:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2514,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"1104:1:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2515,"name":"virtual_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"1108:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1104:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2517,"name":"geo_mean","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"1124:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1104:28:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2519,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1103:30:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":2522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1136:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":2521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1140:2:20","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"1136:6:20","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"1103:39:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2498,"id":2524,"nodeType":"Return","src":"1096:46:20"}]},"id":2526,"implemented":true,"kind":"function","modifiers":[],"name":"calculate_v2_token_price","nodeType":"FunctionDefinition","parameters":{"id":2495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2489,"mutability":"mutable","name":"n","nodeType":"VariableDeclaration","scope":2526,"src":"866:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2488,"name":"uint8","nodeType":"ElementaryTypeName","src":"866:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2491,"mutability":"mutable","name":"virtual_price","nodeType":"VariableDeclaration","scope":2526,"src":"883:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2490,"name":"uint256","nodeType":"ElementaryTypeName","src":"883:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2494,"mutability":"mutable","name":"prices","nodeType":"VariableDeclaration","scope":2526,"src":"914:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2492,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2493,"nodeType":"ArrayTypeName","src":"914:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"856:87:20"},"returnParameters":{"id":2498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2497,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2526,"src":"967:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2496,"name":"uint256","nodeType":"ElementaryTypeName","src":"967:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"966:9:20"},"scope":2527,"src":"823:364:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2528,"src":"224:965:20"}],"src":"39:1151:20"},"id":20},"contracts/oracles/CurveWrapper.sol":{"ast":{"absolutePath":"contracts/oracles/CurveWrapper.sol","exportedSymbols":{"AaveOracle":[2223],"CurveWrapper":[3036],"ICurveOracle":[3049],"IERC20":[580],"ILendingPoolAddressesProvider":[1879],"IPriceOracleGetter":[1891],"Ownable":[711],"SafeERC20":[872]},"id":3037,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":2529,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"37:24:21"},{"absolutePath":"contracts/dependencies/openzeppelin/contracts/Ownable.sol","file":"../dependencies/openzeppelin/contracts/Ownable.sol","id":2531,"nodeType":"ImportDirective","scope":3037,"sourceUnit":712,"src":"63:75:21","symbolAliases":[{"foreign":{"id":2530,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"src":"71:7:21","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/dependencies/openzeppelin/contracts/IERC20.sol","file":"../dependencies/openzeppelin/contracts/IERC20.sol","id":2533,"nodeType":"ImportDirective","scope":3037,"sourceUnit":581,"src":"139:73:21","symbolAliases":[{"foreign":{"id":2532,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"src":"147:6:21","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IPriceOracleGetter.sol","file":"../interfaces/IPriceOracleGetter.sol","id":2535,"nodeType":"ImportDirective","scope":3037,"sourceUnit":1892,"src":"214:72:21","symbolAliases":[{"foreign":{"id":2534,"name":"IPriceOracleGetter","nodeType":"Identifier","overloadedDeclarations":[],"src":"222:18:21","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/dependencies/openzeppelin/contracts/SafeERC20.sol","file":"../dependencies/openzeppelin/contracts/SafeERC20.sol","id":2537,"nodeType":"ImportDirective","scope":3037,"sourceUnit":873,"src":"287:79:21","symbolAliases":[{"foreign":{"id":2536,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"src":"295:9:21","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/misc/AaveOracle.sol","file":"../misc/AaveOracle.sol","id":2539,"nodeType":"ImportDirective","scope":3037,"sourceUnit":2224,"src":"367:50:21","symbolAliases":[{"foreign":{"id":2538,"name":"AaveOracle","nodeType":"Identifier","overloadedDeclarations":[],"src":"375:10:21","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/interfaces/ILendingPoolAddressesProvider.sol","file":"../interfaces/ILendingPoolAddressesProvider.sol","id":2541,"nodeType":"ImportDirective","scope":3037,"sourceUnit":1880,"src":"418:94:21","symbolAliases":[{"foreign":{"id":2540,"name":"ILendingPoolAddressesProvider","nodeType":"Identifier","overloadedDeclarations":[],"src":"426:29:21","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/oracles/interfaces/ICurveOracle.sol","file":"./interfaces/ICurveOracle.sol","id":2543,"nodeType":"ImportDirective","scope":3037,"sourceUnit":3050,"src":"513:59:21","symbolAliases":[{"foreign":{"id":2542,"name":"ICurveOracle","nodeType":"Identifier","overloadedDeclarations":[],"src":"521:12:21","typeDescriptions":{}}}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2545,"name":"IPriceOracleGetter","nodeType":"IdentifierPath","referencedDeclaration":1891,"src":"1387:18:21"},"id":2546,"nodeType":"InheritanceSpecifier","src":"1387:18:21"},{"baseName":{"id":2547,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":711,"src":"1407:7:21"},"id":2548,"nodeType":"InheritanceSpecifier","src":"1407:7:21"}],"contractDependencies":[502,711,1891],"contractKind":"contract","documentation":{"id":2544,"nodeType":"StructuredDocumentation","src":"799:426:21","text":"@title AaveOracle\n @author Aave\n @notice Proxy smart contract to get the price of an asset from a price source, with Chainlink Aggregator\n         smart contracts as primary option\n - If the returned price by a Chainlink aggregator is <= 0, the call is forwarded to a fallbackOracle\n - Owned by the Aave governance system, allowed to add sources for assets, replace them\n   and change the fallbackOracle"},"fullyImplemented":true,"id":3036,"linearizedBaseContracts":[3036,711,502,1891],"name":"CurveWrapper","nodeType":"ContractDefinition","nodes":[{"id":2552,"libraryName":{"id":2549,"name":"SafeERC20","nodeType":"IdentifierPath","referencedDeclaration":872,"src":"1427:9:21"},"nodeType":"UsingForDirective","src":"1421:27:21","typeName":{"id":2551,"nodeType":"UserDefinedTypeName","pathNode":{"id":2550,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":580,"src":"1441:6:21"},"referencedDeclaration":580,"src":"1441:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$580","typeString":"contract IERC20"}}},{"anonymous":false,"id":2558,"name":"BaseCurrencySet","nodeType":"EventDefinition","parameters":{"id":2557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2554,"indexed":true,"mutability":"mutable","name":"baseCurrency","nodeType":"VariableDeclaration","scope":2558,"src":"1485:28:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2553,"name":"address","nodeType":"ElementaryTypeName","src":"1485:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2556,"indexed":false,"mutability":"mutable","name":"baseCurrencyUnit","nodeType":"VariableDeclaration","scope":2558,"src":"1523:24:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2555,"name":"uint256","nodeType":"ElementaryTypeName","src":"1523:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1475:78:21"},"src":"1454:100:21"},{"anonymous":false,"id":2564,"name":"AssetSourceUpdated","nodeType":"EventDefinition","parameters":{"id":2563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2560,"indexed":true,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":2564,"src":"1584:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2559,"name":"address","nodeType":"ElementaryTypeName","src":"1584:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2562,"indexed":true,"mutability":"mutable","name":"source","nodeType":"VariableDeclaration","scope":2564,"src":"1607:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2561,"name":"address","nodeType":"ElementaryTypeName","src":"1607:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1583:47:21"},"src":"1559:72:21"},{"anonymous":false,"id":2568,"name":"FallbackOracleUpdated","nodeType":"EventDefinition","parameters":{"id":2567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2566,"indexed":true,"mutability":"mutable","name":"fallbackOracle","nodeType":"VariableDeclaration","scope":2568,"src":"1664:30:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2565,"name":"address","nodeType":"ElementaryTypeName","src":"1664:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:32:21"},"src":"1636:60:21"},{"constant":false,"id":2571,"mutability":"mutable","name":"_addressesProvider","nodeType":"VariableDeclaration","scope":3036,"src":"1702:57:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPoolAddressesProvider_$1879","typeString":"contract ILendingPoolAddressesProvider"},"typeName":{"id":2570,"nodeType":"UserDefinedTypeName","pathNode":{"id":2569,"name":"ILendingPoolAddressesProvider","nodeType":"IdentifierPath","referencedDeclaration":1879,"src":"1702:29:21"},"referencedDeclaration":1879,"src":"1702:29:21","typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPoolAddressesProvider_$1879","typeString":"contract ILendingPoolAddressesProvider"}},"visibility":"internal"},{"constant":false,"id":2574,"mutability":"mutable","name":"_fallbackOracle","nodeType":"VariableDeclaration","scope":3036,"src":"1765:42:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1891","typeString":"contract IPriceOracleGetter"},"typeName":{"id":2573,"nodeType":"UserDefinedTypeName","pathNode":{"id":2572,"name":"IPriceOracleGetter","nodeType":"IdentifierPath","referencedDeclaration":1891,"src":"1765:18:21"},"referencedDeclaration":1891,"src":"1765:18:21","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1891","typeString":"contract IPriceOracleGetter"}},"visibility":"private"},{"constant":false,"functionSelector":"e19f4700","id":2576,"mutability":"immutable","name":"BASE_CURRENCY","nodeType":"VariableDeclaration","scope":3036,"src":"1813:38:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2575,"name":"address","nodeType":"ElementaryTypeName","src":"1813:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"8c89b64f","id":2578,"mutability":"immutable","name":"BASE_CURRENCY_UNIT","nodeType":"VariableDeclaration","scope":3036,"src":"1857:43:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2577,"name":"uint256","nodeType":"ElementaryTypeName","src":"1857:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"id":2582,"mutability":"mutable","name":"lpTokenToPool","nodeType":"VariableDeclaration","scope":3036,"src":"1906:50:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":2581,"keyType":{"id":2579,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1906:27:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueType":{"id":2580,"name":"address","nodeType":"ElementaryTypeName","src":"1925:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"internal"},{"constant":false,"id":2586,"mutability":"mutable","name":"numCoins","nodeType":"VariableDeclaration","scope":3036,"src":"1962:45:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2585,"keyType":{"id":2583,"name":"address","nodeType":"ElementaryTypeName","src":"1970:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1962:27:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":2584,"name":"uint256","nodeType":"ElementaryTypeName","src":"1981:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":2592,"mutability":"mutable","name":"underlyingCoins","nodeType":"VariableDeclaration","scope":3036,"src":"2139:72:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$","typeString":"mapping(address => mapping(uint256 => address))"},"typeName":{"id":2591,"keyType":{"id":2587,"name":"address","nodeType":"ElementaryTypeName","src":"2147:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2139:47:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$","typeString":"mapping(address => mapping(uint256 => address))"},"valueType":{"id":2590,"keyType":{"id":2588,"name":"uint256","nodeType":"ElementaryTypeName","src":"2166:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2158:27:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":2589,"name":"address","nodeType":"ElementaryTypeName","src":"2177:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}}},"visibility":"internal"},{"body":{"id":2630,"nodeType":"Block","src":"3027:306:21","statements":[{"expression":{"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2604,"name":"_addressesProvider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"3037:18:21","typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPoolAddressesProvider_$1879","typeString":"contract ILendingPoolAddressesProvider"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2606,"name":"addressProvider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"3088:15:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2605,"name":"ILendingPoolAddressesProvider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"3058:29:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILendingPoolAddressesProvider_$1879_$","typeString":"type(contract ILendingPoolAddressesProvider)"}},"id":2607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3058:46:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPoolAddressesProvider_$1879","typeString":"contract ILendingPoolAddressesProvider"}},"src":"3037:67:21","typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPoolAddressesProvider_$1879","typeString":"contract ILendingPoolAddressesProvider"}},"id":2609,"nodeType":"ExpressionStatement","src":"3037:67:21"},{"expression":{"arguments":[{"id":2611,"name":"fallbackOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"3133:14:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2610,"name":"_setFallbackOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"3114:18:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3114:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2613,"nodeType":"ExpressionStatement","src":"3114:34:21"},{"expression":{"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2614,"name":"BASE_CURRENCY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"3158:13:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2615,"name":"baseCurrency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"3174:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3158:28:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2617,"nodeType":"ExpressionStatement","src":"3158:28:21"},{"expression":{"id":2620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2618,"name":"BASE_CURRENCY_UNIT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"3196:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2619,"name":"baseCurrencyUnit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"3217:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3196:37:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2621,"nodeType":"ExpressionStatement","src":"3196:37:21"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2622,"name":"initializeMappings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2805,"src":"3243:18:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3243:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2624,"nodeType":"ExpressionStatement","src":"3243:20:21"},{"eventCall":{"arguments":[{"id":2626,"name":"baseCurrency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"3295:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2627,"name":"baseCurrencyUnit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"3309:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2625,"name":"BaseCurrencySet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"3279:15:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3279:47:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2629,"nodeType":"EmitStatement","src":"3274:52:21"}]},"documentation":{"id":2593,"nodeType":"StructuredDocumentation","src":"2218:434:21","text":"@notice Constructor\n @param addressProvider The address of the vmex address provider (not the curve address provider)\n @param fallbackOracle The address of the fallback oracle to use if the data of an\n        aggregator is not consistent\n @param baseCurrency the base currency used for the price quotes. If USD is used, base currency is 0x0\n @param baseCurrencyUnit the unit of the base currency"},"id":2631,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":2602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2595,"mutability":"mutable","name":"addressProvider","nodeType":"VariableDeclaration","scope":2631,"src":"2678:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2594,"name":"address","nodeType":"ElementaryTypeName","src":"2678:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2597,"mutability":"mutable","name":"fallbackOracle","nodeType":"VariableDeclaration","scope":2631,"src":"2711:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2596,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2599,"mutability":"mutable","name":"baseCurrency","nodeType":"VariableDeclaration","scope":2631,"src":"2959:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2598,"name":"address","nodeType":"ElementaryTypeName","src":"2959:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2601,"mutability":"mutable","name":"baseCurrencyUnit","nodeType":"VariableDeclaration","scope":2631,"src":"2989:24:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2600,"name":"uint256","nodeType":"ElementaryTypeName","src":"2989:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2668:351:21"},"returnParameters":{"id":2603,"nodeType":"ParameterList","parameters":[],"src":"3027:0:21"},"scope":3036,"src":"2657:676:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2644,"nodeType":"Block","src":"3411:84:21","statements":[{"expression":{"id":2642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2638,"name":"_addressesProvider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"3421:18:21","typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPoolAddressesProvider_$1879","typeString":"contract ILendingPoolAddressesProvider"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2640,"name":"addressProvider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"3472:15:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2639,"name":"ILendingPoolAddressesProvider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"3442:29:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILendingPoolAddressesProvider_$1879_$","typeString":"type(contract ILendingPoolAddressesProvider)"}},"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3442:46:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPoolAddressesProvider_$1879","typeString":"contract ILendingPoolAddressesProvider"}},"src":"3421:67:21","typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPoolAddressesProvider_$1879","typeString":"contract ILendingPoolAddressesProvider"}},"id":2643,"nodeType":"ExpressionStatement","src":"3421:67:21"}]},"functionSelector":"1a5fa2e3","id":2645,"implemented":true,"kind":"function","modifiers":[{"id":2636,"modifierName":{"id":2635,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":660,"src":"3401:9:21"},"nodeType":"ModifierInvocation","src":"3401:9:21"}],"name":"setAddressProvider","nodeType":"FunctionDefinition","parameters":{"id":2634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2633,"mutability":"mutable","name":"addressProvider","nodeType":"VariableDeclaration","scope":2645,"src":"3367:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2632,"name":"address","nodeType":"ElementaryTypeName","src":"3367:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3366:25:21"},"returnParameters":{"id":2637,"nodeType":"ParameterList","parameters":[],"src":"3411:0:21"},"scope":3036,"src":"3339:156:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2804,"nodeType":"Block","src":"3540:3319:21","statements":[{"expression":{"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2648,"name":"lpTokenToPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"3571:13:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":2650,"indexExpression":{"hexValue":"307863344144323962613442336335383065364435393130354646663438343939393939373637354666","id":2649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3598:42:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xc4AD29ba4B3c580e6D59105FFf484999997675Ff"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3571:79:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"307844353161343464334661453031303239344336313633383862353036416364413162664141453436","id":2651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3653:42:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xD51a44d3FaE010294C616388b506AcdA1bfAAE46"},"src":"3571:124:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2653,"nodeType":"ExpressionStatement","src":"3571:124:21"},{"expression":{"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2654,"name":"numCoins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"3718:8:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2656,"indexExpression":{"hexValue":"307844353161343464334661453031303239344336313633383862353036416364413162664141453436","id":2655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3727:42:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xD51a44d3FaE010294C616388b506AcdA1bfAAE46"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3718:52:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"33","id":2657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3773:1:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"3718:56:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2659,"nodeType":"ExpressionStatement","src":"3718:56:21"},{"expression":{"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2660,"name":"underlyingCoins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"3808:15:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$","typeString":"mapping(address => mapping(uint256 => address))"}},"id":2663,"indexExpression":{"hexValue":"307844353161343464334661453031303239344336313633383862353036416364413162664141453436","id":2661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:42:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xD51a44d3FaE010294C616388b506AcdA1bfAAE46"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3808:59:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2664,"indexExpression":{"hexValue":"30","id":2662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3881:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3808:84:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"307864414331374639353844326565353233613232303632303639393435393743313344383331656337","id":2665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3895:42:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xdAC17F958D2ee523a2206206994597C13D831ec7"},"src":"3808:129:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2667,"nodeType":"ExpressionStatement","src":"3808:129:21"},{"expression":{"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2668,"name":"underlyingCoins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"3979:15:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$","typeString":"mapping(address => mapping(uint256 => address))"}},"id":2671,"indexExpression":{"hexValue":"307844353161343464334661453031303239344336313633383862353036416364413162664141453436","id":2669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3995:42:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xD51a44d3FaE010294C616388b506AcdA1bfAAE46"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3979:59:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2672,"indexExpression":{"hexValue":"31","id":2670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4052:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3979:84:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"307832323630464143354535353432613737334161343466424366654466374331393362633243353939","id":2673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4066:42:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599"},"src":"3979:129:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2675,"nodeType":"ExpressionStatement","src":"3979:129:21"},{"expression":{"id":2682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2676,"name":"underlyingCoins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"4150:15:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$","typeString":"mapping(address => mapping(uint256 => address))"}},"id":2679,"indexExpression":{"hexValue":"307844353161343464334661453031303239344336313633383862353036416364413162664141453436","id":2677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4166:42:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xD51a44d3FaE010294C616388b506AcdA1bfAAE46"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4150:59:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2680,"indexExpression":{"hexValue":"32","id":2678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4223:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4150:84:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"307843303261614133396232323346453844304130653543344632376541443930383343373536436332","id":2681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4237:42:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"},"src":"4150:129:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2683,"nodeType":"ExpressionStatement","src":"4150:129:21"},{"expression":{"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2684,"name":"lpTokenToPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"4338:13:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":2686,"indexExpression":{"hexValue":"307836633346393066303433613732464136313263626163383131354545376535324244653645343930","id":2685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4365:42:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4338:79:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"307862456263343437383243376442306131413630436236666539376430623438333033324646314337","id":2687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4420:42:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xbEbc44782C7dB0a1A60Cb6fe97d0b483032FF1C7"},"src":"4338:124:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2689,"nodeType":"ExpressionStatement","src":"4338:124:21"},{"expression":{"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2690,"name":"numCoins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"4472:8:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2692,"indexExpression":{"hexValue":"307862456263343437383243376442306131413630436236666539376430623438333033324646314337","id":2691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4481:42:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xbEbc44782C7dB0a1A60Cb6fe97d0b483032FF1C7"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4472:52:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"33","id":2693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4527:1:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"4472:56:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2695,"nodeType":"ExpressionStatement","src":"4472:56:21"},{"expression":{"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2696,"name":"underlyingCoins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"4562:15:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$","typeString":"mapping(address => mapping(uint256 => address))"}},"id":2699,"indexExpression":{"hexValue":"307862456263343437383243376442306131413630436236666539376430623438333033324646314337","id":2697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4578:42:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xbEbc44782C7dB0a1A60Cb6fe97d0b483032FF1C7"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4562:59:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2700,"indexExpression":{"hexValue":"30","id":2698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4635:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4562:84:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"307836423137353437344538393039344334344461393862393534456564654143343935323731643046","id":2701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4649:42:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x6B175474E89094C44Da98b954EedeAC495271d0F"},"src":"4562:129:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2703,"nodeType":"ExpressionStatement","src":"4562:129:21"},{"expression":{"id":2710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2704,"name":"underlyingCoins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"4732:15:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$","typeString":"mapping(address => mapping(uint256 => address))"}},"id":2707,"indexExpression":{"hexValue":"307862456263343437383243376442306131413630436236666539376430623438333033324646314337","id":2705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4748:42:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xbEbc44782C7dB0a1A60Cb6fe97d0b483032FF1C7"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4732:59:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2708,"indexExpression":{"hexValue":"31","id":2706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4805:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4732:84:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"307841306238363939316336323138623336633164313944346132653945623063453336303665423438","id":2709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4819:42:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"},"src":"4732:129:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2711,"nodeType":"ExpressionStatement","src":"4732:129:21"},{"expression":{"id":2718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2712,"name":"underlyingCoins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"4903:15:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$","typeString":"mapping(address => mapping(uint256 => address))"}},"id":2715,"indexExpression":{"hexValue":"307862456263343437383243376442306131413630436236666539376430623438333033324646314337","id":2713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4919:42:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xbEbc44782C7dB0a1A60Cb6fe97d0b483032FF1C7"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4903:59:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2716,"indexExpression":{"hexValue":"32","id":2714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4976:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4903:84:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"307864414331374639353844326565353233613232303632303639393435393743313344383331656337","id":2717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4990:42:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xdAC17F958D2ee523a2206206994597C13D831ec7"},"src":"4903:129:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2719,"nodeType":"ExpressionStatement","src":"4903:129:21"},{"expression":{"id":2724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2720,"name":"lpTokenToPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"5094:13:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":2722,"indexExpression":{"hexValue":"307830363332353434304430313465333937333635383363313635433239363342413939664166313445","id":2721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5121:42:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x06325440D014e39736583c165C2963BA99fAf14E"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5094:79:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"307844433234333136623941453032384631343937633237354542393139326133456130663637303232","id":2723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5176:42:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xDC24316b9AE028F1497c275EB9192a3Ea0f67022"},"src":"5094:124:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2725,"nodeType":"ExpressionStatement","src":"5094:124:21"},{"expression":{"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2726,"name":"numCoins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"5228:8:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2728,"indexExpression":{"hexValue":"307844433234333136623941453032384631343937633237354542393139326133456130663637303232","id":2727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5237:42:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xDC24316b9AE028F1497c275EB9192a3Ea0f67022"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5228:52:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"32","id":2729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5283:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5228:56:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2731,"nodeType":"ExpressionStatement","src":"5228:56:21"},{"expression":{"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2732,"name":"underlyingCoins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"5316:15:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$","typeString":"mapping(address => mapping(uint256 => address))"}},"id":2735,"indexExpression":{"hexValue":"307844433234333136623941453032384631343937633237354542393139326133456130663637303232","id":2733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5332:42:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xDC24316b9AE028F1497c275EB9192a3Ea0f67022"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5316:59:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2736,"indexExpression":{"hexValue":"30","id":2734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5389:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5316:84:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"307843303261614133396232323346453844304130653543344632376541443930383343373536436332","id":2737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5403:42:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"},"src":"5316:129:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2739,"nodeType":"ExpressionStatement","src":"5316:129:21"},{"expression":{"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2740,"name":"underlyingCoins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"5487:15:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$","typeString":"mapping(address => mapping(uint256 => address))"}},"id":2743,"indexExpression":{"hexValue":"307844433234333136623941453032384631343937633237354542393139326133456130663637303232","id":2741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5503:42:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xDC24316b9AE028F1497c275EB9192a3Ea0f67022"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5487:59:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2744,"indexExpression":{"hexValue":"31","id":2742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5560:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5487:84:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"307861653761623936353230444533413138453565313131423545614162303935333132443766453834","id":2745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5574:42:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84"},"src":"5487:129:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2747,"nodeType":"ExpressionStatement","src":"5487:129:21"},{"expression":{"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2748,"name":"lpTokenToPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"5679:13:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":2750,"indexExpression":{"hexValue":"307833313735446630393736644641383736343331433245396545364263343562363564333437334343","id":2749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5706:42:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x3175Df0976dFA876431C2E9eE6Bc45b65d3473CC"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5679:79:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"307844634546393638643431366134314364616330454438373032664143383132384136343234314132","id":2751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5761:42:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xDcEF968d416a41Cdac0ED8702fAC8128A64241A2"},"src":"5679:124:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2753,"nodeType":"ExpressionStatement","src":"5679:124:21"},{"expression":{"id":2758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2754,"name":"numCoins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"5813:8:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2756,"indexExpression":{"hexValue":"307844634546393638643431366134314364616330454438373032664143383132384136343234314132","id":2755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5822:42:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xDcEF968d416a41Cdac0ED8702fAC8128A64241A2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5813:52:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"32","id":2757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5868:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5813:56:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2759,"nodeType":"ExpressionStatement","src":"5813:56:21"},{"expression":{"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2760,"name":"underlyingCoins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"5901:15:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$","typeString":"mapping(address => mapping(uint256 => address))"}},"id":2763,"indexExpression":{"hexValue":"307844634546393638643431366134314364616330454438373032664143383132384136343234314132","id":2761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5917:42:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xDcEF968d416a41Cdac0ED8702fAC8128A64241A2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5901:59:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2764,"indexExpression":{"hexValue":"30","id":2762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5974:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5901:84:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"307838353364393535614345663832324462303538656238353035393131454437374631373562393965","id":2765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5988:42:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x853d955aCEf822Db058eb8505911ED77F175b99e"},"src":"5901:129:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2767,"nodeType":"ExpressionStatement","src":"5901:129:21"},{"expression":{"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2768,"name":"underlyingCoins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"6072:15:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$","typeString":"mapping(address => mapping(uint256 => address))"}},"id":2771,"indexExpression":{"hexValue":"307844634546393638643431366134314364616330454438373032664143383132384136343234314132","id":2769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6088:42:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xDcEF968d416a41Cdac0ED8702fAC8128A64241A2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6072:59:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2772,"indexExpression":{"hexValue":"31","id":2770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6145:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6072:84:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"307841306238363939316336323138623336633164313944346132653945623063453336303665423438","id":2773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6159:42:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"},"src":"6072:129:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2775,"nodeType":"ExpressionStatement","src":"6072:129:21"},{"expression":{"id":2780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2776,"name":"lpTokenToPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"6263:13:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":2778,"indexExpression":{"hexValue":"307864363332663232363932466143373631316432414131433044353532393330443433434145643342","id":2777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6290:42:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6263:79:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"307864363332663232363932466143373631316432414131433044353532393330443433434145643342","id":2779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6345:42:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B"},"src":"6263:124:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2781,"nodeType":"ExpressionStatement","src":"6263:124:21"},{"expression":{"id":2786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2782,"name":"numCoins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"6429:8:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2784,"indexExpression":{"hexValue":"307864363332663232363932466143373631316432414131433044353532393330443433434145643342","id":2783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6438:42:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6429:52:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"32","id":2785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6484:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6429:56:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2787,"nodeType":"ExpressionStatement","src":"6429:56:21"},{"expression":{"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2788,"name":"underlyingCoins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"6520:15:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$","typeString":"mapping(address => mapping(uint256 => address))"}},"id":2791,"indexExpression":{"hexValue":"307864363332663232363932466143373631316432414131433044353532393330443433434145643342","id":2789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6536:42:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6520:59:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2792,"indexExpression":{"hexValue":"30","id":2790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6593:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6520:84:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"307838353364393535614345663832324462303538656238353035393131454437374631373562393965","id":2793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6607:42:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x853d955aCEf822Db058eb8505911ED77F175b99e"},"src":"6520:129:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2795,"nodeType":"ExpressionStatement","src":"6520:129:21"},{"expression":{"id":2802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2796,"name":"underlyingCoins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"6691:15:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$","typeString":"mapping(address => mapping(uint256 => address))"}},"id":2799,"indexExpression":{"hexValue":"307864363332663232363932466143373631316432414131433044353532393330443433434145643342","id":2797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6707:42:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6691:59:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2800,"indexExpression":{"hexValue":"31","id":2798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6764:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6691:84:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"307836633346393066303433613732464136313263626163383131354545376535324244653645343930","id":2801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6778:42:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490"},"src":"6691:129:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2803,"nodeType":"ExpressionStatement","src":"6691:129:21"}]},"id":2805,"implemented":true,"kind":"function","modifiers":[],"name":"initializeMappings","nodeType":"FunctionDefinition","parameters":{"id":2646,"nodeType":"ParameterList","parameters":[],"src":"3528:2:21"},"returnParameters":{"id":2647,"nodeType":"ParameterList","parameters":[],"src":"3540:0:21"},"scope":3036,"src":"3501:3358:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2817,"nodeType":"Block","src":"7086:51:21","statements":[{"expression":{"arguments":[{"id":2814,"name":"fallbackOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"7115:14:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2813,"name":"_setFallbackOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"7096:18:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7096:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2816,"nodeType":"ExpressionStatement","src":"7096:34:21"}]},"documentation":{"id":2806,"nodeType":"StructuredDocumentation","src":"6865:146:21","text":"@notice Sets the fallbackOracle\n - Callable only by the Aave governance\n @param fallbackOracle The address of the fallbackOracle"},"functionSelector":"170aee73","id":2818,"implemented":true,"kind":"function","modifiers":[{"id":2811,"modifierName":{"id":2810,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":660,"src":"7076:9:21"},"nodeType":"ModifierInvocation","src":"7076:9:21"}],"name":"setFallbackOracle","nodeType":"FunctionDefinition","parameters":{"id":2809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2808,"mutability":"mutable","name":"fallbackOracle","nodeType":"VariableDeclaration","scope":2818,"src":"7043:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2807,"name":"address","nodeType":"ElementaryTypeName","src":"7043:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7042:24:21"},"returnParameters":{"id":2812,"nodeType":"ParameterList","parameters":[],"src":"7086:0:21"},"scope":3036,"src":"7016:121:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2834,"nodeType":"Block","src":"7328:121:21","statements":[{"expression":{"id":2828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2824,"name":"_fallbackOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"7338:15:21","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1891","typeString":"contract IPriceOracleGetter"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2826,"name":"fallbackOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"7375:14:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2825,"name":"IPriceOracleGetter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"7356:18:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPriceOracleGetter_$1891_$","typeString":"type(contract IPriceOracleGetter)"}},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7356:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1891","typeString":"contract IPriceOracleGetter"}},"src":"7338:52:21","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1891","typeString":"contract IPriceOracleGetter"}},"id":2829,"nodeType":"ExpressionStatement","src":"7338:52:21"},{"eventCall":{"arguments":[{"id":2831,"name":"fallbackOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"7427:14:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2830,"name":"FallbackOracleUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"7405:21:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7405:37:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2833,"nodeType":"EmitStatement","src":"7400:42:21"}]},"documentation":{"id":2819,"nodeType":"StructuredDocumentation","src":"7143:119:21","text":"@notice Internal function to set the fallbackOracle\n @param fallbackOracle The address of the fallbackOracle"},"id":2835,"implemented":true,"kind":"function","modifiers":[],"name":"_setFallbackOracle","nodeType":"FunctionDefinition","parameters":{"id":2822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2821,"mutability":"mutable","name":"fallbackOracle","nodeType":"VariableDeclaration","scope":2835,"src":"7295:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2820,"name":"address","nodeType":"ElementaryTypeName","src":"7295:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7294:24:21"},"returnParameters":{"id":2823,"nodeType":"ParameterList","parameters":[],"src":"7328:0:21"},"scope":3036,"src":"7267:182:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1890],"body":{"id":2974,"nodeType":"Block","src":"7687:1911:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2844,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"7701:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2845,"name":"BASE_CURRENCY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"7710:13:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7701:22:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2850,"nodeType":"IfStatement","src":"7697:78:21","trueBody":{"id":2849,"nodeType":"Block","src":"7725:50:21","statements":[{"expression":{"id":2847,"name":"BASE_CURRENCY_UNIT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"7746:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2843,"id":2848,"nodeType":"Return","src":"7739:25:21"}]}},{"assignments":[2852],"declarations":[{"constant":false,"id":2852,"mutability":"mutable","name":"pool","nodeType":"VariableDeclaration","scope":2974,"src":"8153:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2851,"name":"address","nodeType":"ElementaryTypeName","src":"8153:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2856,"initialValue":{"baseExpression":{"id":2853,"name":"lpTokenToPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"8168:13:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":2855,"indexExpression":{"id":2854,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"8182:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8168:20:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8153:35:21"},{"assignments":[2858],"declarations":[{"constant":false,"id":2858,"mutability":"mutable","name":"num_coins","nodeType":"VariableDeclaration","scope":2974,"src":"8328:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2857,"name":"uint256","nodeType":"ElementaryTypeName","src":"8328:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2862,"initialValue":{"baseExpression":{"id":2859,"name":"numCoins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"8348:8:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2861,"indexExpression":{"id":2860,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"8357:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8348:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8328:34:21"},{"assignments":[2867],"declarations":[{"constant":false,"id":2867,"mutability":"mutable","name":"prices","nodeType":"VariableDeclaration","scope":2974,"src":"8373:23:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2865,"name":"uint256","nodeType":"ElementaryTypeName","src":"8373:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2866,"nodeType":"ArrayTypeName","src":"8373:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2873,"initialValue":{"arguments":[{"id":2871,"name":"num_coins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"8413:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8399:13:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2868,"name":"uint256","nodeType":"ElementaryTypeName","src":"8403:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2869,"nodeType":"ArrayTypeName","src":"8403:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8399:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8373:50:21"},{"body":{"id":2946,"nodeType":"Block","src":"8474:816:21","statements":[{"assignments":[2885],"declarations":[{"constant":false,"id":2885,"mutability":"mutable","name":"underlying","nodeType":"VariableDeclaration","scope":2946,"src":"8488:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2884,"name":"address","nodeType":"ElementaryTypeName","src":"8488:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2891,"initialValue":{"baseExpression":{"baseExpression":{"id":2886,"name":"underlyingCoins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"8509:15:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$","typeString":"mapping(address => mapping(uint256 => address))"}},"id":2888,"indexExpression":{"id":2887,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"8525:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8509:21:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2890,"indexExpression":{"id":2889,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"8531:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8509:24:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8488:45:21"},{"assignments":[2894],"declarations":[{"constant":false,"id":2894,"mutability":"mutable","name":"aave_oracle","nodeType":"VariableDeclaration","scope":2946,"src":"8547:30:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1891","typeString":"contract IPriceOracleGetter"},"typeName":{"id":2893,"nodeType":"UserDefinedTypeName","pathNode":{"id":2892,"name":"IPriceOracleGetter","nodeType":"IdentifierPath","referencedDeclaration":1891,"src":"8547:18:21"},"referencedDeclaration":1891,"src":"8547:18:21","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1891","typeString":"contract IPriceOracleGetter"}},"visibility":"internal"}],"id":2895,"nodeType":"VariableDeclarationStatement","src":"8547:30:21"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2896,"name":"underlying","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"8595:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"307836633346393066303433613732464136313263626163383131354545376535324244653645343930","id":2897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8609:42:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490"},"src":"8595:56:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2916,"nodeType":"Block","src":"8925:144:21","statements":[{"expression":{"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2908,"name":"aave_oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"8943:11:21","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1891","typeString":"contract IPriceOracleGetter"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2910,"name":"_addressesProvider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"8997:18:21","typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPoolAddressesProvider_$1879","typeString":"contract ILendingPoolAddressesProvider"}},"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAavePriceOracle","nodeType":"MemberAccess","referencedDeclaration":1833,"src":"8997:37:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8997:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2909,"name":"IPriceOracleGetter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"8957:18:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPriceOracleGetter_$1891_$","typeString":"type(contract IPriceOracleGetter)"}},"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8957:97:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1891","typeString":"contract IPriceOracleGetter"}},"src":"8943:111:21","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1891","typeString":"contract IPriceOracleGetter"}},"id":2915,"nodeType":"ExpressionStatement","src":"8943:111:21"}]},"id":2917,"nodeType":"IfStatement","src":"8591:478:21","trueBody":{"id":2907,"nodeType":"Block","src":"8653:266:21","statements":[{"expression":{"id":2905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2899,"name":"aave_oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"8785:11:21","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1891","typeString":"contract IPriceOracleGetter"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2901,"name":"_addressesProvider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"8839:18:21","typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPoolAddressesProvider_$1879","typeString":"contract ILendingPoolAddressesProvider"}},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getCurvePriceOracleWrapper","nodeType":"MemberAccess","referencedDeclaration":1843,"src":"8839:45:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8839:47:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2900,"name":"IPriceOracleGetter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"8799:18:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPriceOracleGetter_$1891_$","typeString":"type(contract IPriceOracleGetter)"}},"id":2904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8799:105:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1891","typeString":"contract IPriceOracleGetter"}},"src":"8785:119:21","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1891","typeString":"contract IPriceOracleGetter"}},"id":2906,"nodeType":"ExpressionStatement","src":"8785:119:21"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2919,"name":"underlying","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"9091:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9113:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9105:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2920,"name":"address","nodeType":"ElementaryTypeName","src":"9105:7:21","typeDescriptions":{}}},"id":2923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9105:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9091:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"756e6465726c79696e6720746f6b656e206973206e756c6c","id":2925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9117:26:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_b4e8d318e521cf88468394cc0c9b8c9007ea07e1e8e63b993c5168c9f567f309","typeString":"literal_string \"underlying token is null\""},"value":"underlying token is null"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b4e8d318e521cf88468394cc0c9b8c9007ea07e1e8e63b993c5168c9f567f309","typeString":"literal_string \"underlying token is null\""}],"id":2918,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9083:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9083:61:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2927,"nodeType":"ExpressionStatement","src":"9083:61:21"},{"expression":{"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2928,"name":"prices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2867,"src":"9158:6:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2930,"indexExpression":{"id":2929,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"9165:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9158:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2933,"name":"underlying","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"9196:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2931,"name":"aave_oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"9170:11:21","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1891","typeString":"contract IPriceOracleGetter"}},"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAssetPrice","nodeType":"MemberAccess","referencedDeclaration":1890,"src":"9170:25:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9170:37:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9158:49:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2936,"nodeType":"ExpressionStatement","src":"9158:49:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2938,"name":"prices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2867,"src":"9229:6:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2940,"indexExpression":{"id":2939,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"9236:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9229:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9241:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9229:13:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"61617665206f7261636c6520656e636f756e746572656420616e206572726f72","id":2943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9244:34:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_49a2bac861dd4380d6fd0d823ee0721ff11ba3d1e715eb7ddae8f9170b277ab1","typeString":"literal_string \"aave oracle encountered an error\""},"value":"aave oracle encountered an error"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_49a2bac861dd4380d6fd0d823ee0721ff11ba3d1e715eb7ddae8f9170b277ab1","typeString":"literal_string \"aave oracle encountered an error\""}],"id":2937,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9221:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9221:58:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2945,"nodeType":"ExpressionStatement","src":"9221:58:21"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2878,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"8454:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2879,"name":"num_coins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"8458:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8454:13:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2947,"initializationExpression":{"assignments":[2875],"declarations":[{"constant":false,"id":2875,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":2947,"src":"8439:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2874,"name":"uint256","nodeType":"ElementaryTypeName","src":"8439:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2877,"initialValue":{"hexValue":"30","id":2876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8451:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8439:13:21"},"loopExpression":{"expression":{"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8469:3:21","subExpression":{"id":2881,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"8469:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2883,"nodeType":"ExpressionStatement","src":"8469:3:21"},"nodeType":"ForStatement","src":"8434:856:21"},{"assignments":[2950],"declarations":[{"constant":false,"id":2950,"mutability":"mutable","name":"oracle","nodeType":"VariableDeclaration","scope":2974,"src":"9300:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ICurveOracle_$3049","typeString":"contract ICurveOracle"},"typeName":{"id":2949,"nodeType":"UserDefinedTypeName","pathNode":{"id":2948,"name":"ICurveOracle","nodeType":"IdentifierPath","referencedDeclaration":3049,"src":"9300:12:21"},"referencedDeclaration":3049,"src":"9300:12:21","typeDescriptions":{"typeIdentifier":"t_contract$_ICurveOracle_$3049","typeString":"contract ICurveOracle"}},"visibility":"internal"}],"id":2956,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2952,"name":"_addressesProvider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"9348:18:21","typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPoolAddressesProvider_$1879","typeString":"contract ILendingPoolAddressesProvider"}},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getCurvePriceOracle","nodeType":"MemberAccess","referencedDeclaration":1838,"src":"9348:38:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9348:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2951,"name":"ICurveOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"9322:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ICurveOracle_$3049_$","typeString":"type(contract ICurveOracle)"}},"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9322:76:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ICurveOracle_$3049","typeString":"contract ICurveOracle"}},"nodeType":"VariableDeclarationStatement","src":"9300:98:21"},{"assignments":[2958],"declarations":[{"constant":false,"id":2958,"mutability":"mutable","name":"price","nodeType":"VariableDeclaration","scope":2974,"src":"9409:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2957,"name":"uint256","nodeType":"ElementaryTypeName","src":"9409:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2964,"initialValue":{"arguments":[{"id":2961,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"9442:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2962,"name":"prices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2867,"src":"9448:6:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"expression":{"id":2959,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"9425:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_ICurveOracle_$3049","typeString":"contract ICurveOracle"}},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"get_price","nodeType":"MemberAccess","referencedDeclaration":3048,"src":"9425:16:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,uint256[] memory) view external returns (uint256)"}},"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9425:30:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9409:46:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2966,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"9522:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9522:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4375727665206f7261636c6520656e636f756e746572656420616e206572726f72","id":2969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9533:35:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_8f9e5358d341b51c97b2a3f93978ab3e848c05bfd7a5c6e7622242ad80967edf","typeString":"literal_string \"Curve oracle encountered an error\""},"value":"Curve oracle encountered an error"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8f9e5358d341b51c97b2a3f93978ab3e848c05bfd7a5c6e7622242ad80967edf","typeString":"literal_string \"Curve oracle encountered an error\""}],"id":2965,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9514:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9514:55:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2971,"nodeType":"ExpressionStatement","src":"9514:55:21"},{"expression":{"id":2972,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"9586:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2843,"id":2973,"nodeType":"Return","src":"9579:12:21"}]},"documentation":{"id":2836,"nodeType":"StructuredDocumentation","src":"7455:81:21","text":"@notice Gets an asset price by address\n @param asset The asset address"},"functionSelector":"b3596f07","id":2975,"implemented":true,"kind":"function","modifiers":[],"name":"getAssetPrice","nodeType":"FunctionDefinition","overrides":{"id":2840,"nodeType":"OverrideSpecifier","overrides":[],"src":"7660:8:21"},"parameters":{"id":2839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2838,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":2975,"src":"7573:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2837,"name":"address","nodeType":"ElementaryTypeName","src":"7573:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7563:84:21"},"returnParameters":{"id":2843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2842,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2975,"src":"7678:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2841,"name":"uint256","nodeType":"ElementaryTypeName","src":"7678:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7677:9:21"},"scope":3036,"src":"7541:2057:21","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3022,"nodeType":"Block","src":"9846:208:21","statements":[{"assignments":[2989],"declarations":[{"constant":false,"id":2989,"mutability":"mutable","name":"prices","nodeType":"VariableDeclaration","scope":3022,"src":"9856:23:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2987,"name":"uint256","nodeType":"ElementaryTypeName","src":"9856:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2988,"nodeType":"ArrayTypeName","src":"9856:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2996,"initialValue":{"arguments":[{"expression":{"id":2993,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"9896:6:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"9896:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"9882:13:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2990,"name":"uint256","nodeType":"ElementaryTypeName","src":"9886:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2991,"nodeType":"ArrayTypeName","src":"9886:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9882:28:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"9856:54:21"},{"body":{"id":3018,"nodeType":"Block","src":"9964:61:21","statements":[{"expression":{"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3008,"name":"prices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"9978:6:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3010,"indexExpression":{"id":3009,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"9985:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9978:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":3012,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"10004:6:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":3014,"indexExpression":{"id":3013,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"10011:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10004:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3011,"name":"getAssetPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2975,"src":"9990:13:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9990:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9978:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3017,"nodeType":"ExpressionStatement","src":"9978:36:21"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3001,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"9940:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3002,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"9944:6:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"9944:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9940:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3019,"initializationExpression":{"assignments":[2998],"declarations":[{"constant":false,"id":2998,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":3019,"src":"9925:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2997,"name":"uint256","nodeType":"ElementaryTypeName","src":"9925:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3000,"initialValue":{"hexValue":"30","id":2999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9937:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9925:13:21"},"loopExpression":{"expression":{"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9959:3:21","subExpression":{"id":3005,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"9959:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3007,"nodeType":"ExpressionStatement","src":"9959:3:21"},"nodeType":"ForStatement","src":"9920:105:21"},{"expression":{"id":3020,"name":"prices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"10041:6:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2984,"id":3021,"nodeType":"Return","src":"10034:13:21"}]},"documentation":{"id":2976,"nodeType":"StructuredDocumentation","src":"9604:116:21","text":"@notice Gets a list of prices from a list of assets addresses\n @param assets The list of assets addresses"},"functionSelector":"9d23d9f2","id":3023,"implemented":true,"kind":"function","modifiers":[],"name":"getAssetsPrices","nodeType":"FunctionDefinition","parameters":{"id":2980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2979,"mutability":"mutable","name":"assets","nodeType":"VariableDeclaration","scope":3023,"src":"9750:25:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2977,"name":"address","nodeType":"ElementaryTypeName","src":"9750:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2978,"nodeType":"ArrayTypeName","src":"9750:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"9749:27:21"},"returnParameters":{"id":2984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2983,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3023,"src":"9824:16:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2981,"name":"uint256","nodeType":"ElementaryTypeName","src":"9824:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2982,"nodeType":"ArrayTypeName","src":"9824:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"9823:18:21"},"scope":3036,"src":"9725:329:21","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3034,"nodeType":"Block","src":"10235:48:21","statements":[{"expression":{"arguments":[{"id":3031,"name":"_fallbackOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"10260:15:21","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1891","typeString":"contract IPriceOracleGetter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IPriceOracleGetter_$1891","typeString":"contract IPriceOracleGetter"}],"id":3030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10252:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3029,"name":"address","nodeType":"ElementaryTypeName","src":"10252:7:21","typeDescriptions":{}}},"id":3032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10252:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3028,"id":3033,"nodeType":"Return","src":"10245:31:21"}]},"documentation":{"id":3024,"nodeType":"StructuredDocumentation","src":"10060:109:21","text":"@notice Gets the address of the fallback oracle\n @return address The addres of the fallback oracle"},"functionSelector":"6210308c","id":3035,"implemented":true,"kind":"function","modifiers":[],"name":"getFallbackOracle","nodeType":"FunctionDefinition","parameters":{"id":3025,"nodeType":"ParameterList","parameters":[],"src":"10200:2:21"},"returnParameters":{"id":3028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3027,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3035,"src":"10226:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3026,"name":"address","nodeType":"ElementaryTypeName","src":"10226:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10225:9:21"},"scope":3036,"src":"10174:109:21","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3037,"src":"1362:8923:21"}],"src":"37:10249:21"},"id":21},"contracts/oracles/interfaces/ICurveOracle.sol":{"ast":{"absolutePath":"contracts/oracles/interfaces/ICurveOracle.sol","exportedSymbols":{"ICurveOracle":[3049]},"id":3050,"nodeType":"SourceUnit","nodes":[{"id":3038,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"0:24:22"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3049,"linearizedBaseContracts":[3049],"name":"ICurveOracle","nodeType":"ContractDefinition","nodes":[{"functionSelector":"6dcb6a32","id":3048,"implemented":false,"kind":"function","modifiers":[],"name":"get_price","nodeType":"FunctionDefinition","parameters":{"id":3044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3040,"mutability":"mutable","name":"curve_pool","nodeType":"VariableDeclaration","scope":3048,"src":"74:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3039,"name":"address","nodeType":"ElementaryTypeName","src":"74:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3043,"mutability":"mutable","name":"prices","nodeType":"VariableDeclaration","scope":3048,"src":"94:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3041,"name":"uint256","nodeType":"ElementaryTypeName","src":"94:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3042,"nodeType":"ArrayTypeName","src":"94:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"73:45:22"},"returnParameters":{"id":3047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3046,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3048,"src":"166:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3045,"name":"uint256","nodeType":"ElementaryTypeName","src":"166:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"165:9:22"},"scope":3049,"src":"55:120:22","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3050,"src":"26:151:22"}],"src":"0:178:22"},"id":22},"contracts/oracles/interfaces/ICurvePoolV1.sol":{"ast":{"absolutePath":"contracts/oracles/interfaces/ICurvePoolV1.sol","exportedSymbols":{"ICurvePool":[3064]},"id":3065,"nodeType":"SourceUnit","nodes":[{"id":3051,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"0:24:23"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3064,"linearizedBaseContracts":[3064],"name":"ICurvePool","nodeType":"ContractDefinition","nodes":[{"functionSelector":"bb7b8b80","id":3056,"implemented":false,"kind":"function","modifiers":[],"name":"get_virtual_price","nodeType":"FunctionDefinition","parameters":{"id":3052,"nodeType":"ParameterList","parameters":[],"src":"79:2:23"},"returnParameters":{"id":3055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3054,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3056,"src":"105:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3053,"name":"uint256","nodeType":"ElementaryTypeName","src":"105:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"104:9:23"},"scope":3064,"src":"53:61:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"c6610657","id":3063,"implemented":false,"kind":"function","modifiers":[],"name":"coins","nodeType":"FunctionDefinition","parameters":{"id":3059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3058,"mutability":"mutable","name":"n","nodeType":"VariableDeclaration","scope":3063,"src":"135:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3057,"name":"uint256","nodeType":"ElementaryTypeName","src":"135:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"134:11:23"},"returnParameters":{"id":3062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3061,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3063,"src":"169:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3060,"name":"address","nodeType":"ElementaryTypeName","src":"169:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"168:9:23"},"scope":3064,"src":"120:58:23","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3065,"src":"26:154:23"}],"src":"0:181:23"},"id":23},"contracts/oracles/interfaces/IERC20.sol":{"ast":{"absolutePath":"contracts/oracles/interfaces/IERC20.sol","exportedSymbols":{"IERC20":[3165]},"id":3166,"nodeType":"SourceUnit","nodes":[{"id":3066,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"0:24:24"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3165,"linearizedBaseContracts":[3165],"name":"IERC20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3067,"nodeType":"StructuredDocumentation","src":"49:66:24","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":3072,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nodeType":"FunctionDefinition","parameters":{"id":3068,"nodeType":"ParameterList","parameters":[],"src":"140:2:24"},"returnParameters":{"id":3071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3070,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3072,"src":"166:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3069,"name":"uint256","nodeType":"ElementaryTypeName","src":"166:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"165:9:24"},"scope":3165,"src":"120:55:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3073,"nodeType":"StructuredDocumentation","src":"181:51:24","text":" @dev Returns the token decimals."},"functionSelector":"313ce567","id":3078,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nodeType":"FunctionDefinition","parameters":{"id":3074,"nodeType":"ParameterList","parameters":[],"src":"254:2:24"},"returnParameters":{"id":3077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3076,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3078,"src":"280:5:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3075,"name":"uint8","nodeType":"ElementaryTypeName","src":"280:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"279:7:24"},"scope":3165,"src":"237:50:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3079,"nodeType":"StructuredDocumentation","src":"293:49:24","text":" @dev Returns the token symbol."},"functionSelector":"95d89b41","id":3084,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nodeType":"FunctionDefinition","parameters":{"id":3080,"nodeType":"ParameterList","parameters":[],"src":"362:2:24"},"returnParameters":{"id":3083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3082,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3084,"src":"388:13:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3081,"name":"string","nodeType":"ElementaryTypeName","src":"388:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"387:15:24"},"scope":3165,"src":"347:56:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3085,"nodeType":"StructuredDocumentation","src":"409:47:24","text":" @dev Returns the token name."},"functionSelector":"06fdde03","id":3090,"implemented":false,"kind":"function","modifiers":[],"name":"name","nodeType":"FunctionDefinition","parameters":{"id":3086,"nodeType":"ParameterList","parameters":[],"src":"474:2:24"},"returnParameters":{"id":3089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3088,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3090,"src":"500:13:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3087,"name":"string","nodeType":"ElementaryTypeName","src":"500:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"499:15:24"},"scope":3165,"src":"461:54:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3091,"nodeType":"StructuredDocumentation","src":"521:52:24","text":" @dev Returns the bep token owner."},"functionSelector":"893d20e8","id":3096,"implemented":false,"kind":"function","modifiers":[],"name":"getOwner","nodeType":"FunctionDefinition","parameters":{"id":3092,"nodeType":"ParameterList","parameters":[],"src":"595:2:24"},"returnParameters":{"id":3095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3094,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3096,"src":"621:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3093,"name":"address","nodeType":"ElementaryTypeName","src":"621:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"620:9:24"},"scope":3165,"src":"578:52:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3097,"nodeType":"StructuredDocumentation","src":"636:72:24","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":3104,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nodeType":"FunctionDefinition","parameters":{"id":3100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3099,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":3104,"src":"732:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3098,"name":"address","nodeType":"ElementaryTypeName","src":"732:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"731:17:24"},"returnParameters":{"id":3103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3102,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3104,"src":"772:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3101,"name":"uint256","nodeType":"ElementaryTypeName","src":"772:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"771:9:24"},"scope":3165,"src":"713:68:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3105,"nodeType":"StructuredDocumentation","src":"787:209:24","text":" @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":3114,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","parameters":{"id":3110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3107,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":3114,"src":"1019:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3106,"name":"address","nodeType":"ElementaryTypeName","src":"1019:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3109,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":3114,"src":"1038:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3108,"name":"uint256","nodeType":"ElementaryTypeName","src":"1038:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1018:35:24"},"returnParameters":{"id":3113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3112,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3114,"src":"1088:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3111,"name":"bool","nodeType":"ElementaryTypeName","src":"1088:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1087:6:24"},"scope":3165,"src":"1001:93:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3115,"nodeType":"StructuredDocumentation","src":"1100:264:24","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":3124,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","parameters":{"id":3120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3117,"mutability":"mutable","name":"_owner","nodeType":"VariableDeclaration","scope":3124,"src":"1388:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3116,"name":"address","nodeType":"ElementaryTypeName","src":"1388:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3119,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":3124,"src":"1404:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3118,"name":"address","nodeType":"ElementaryTypeName","src":"1404:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1387:33:24"},"returnParameters":{"id":3123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3122,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3124,"src":"1468:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3121,"name":"uint256","nodeType":"ElementaryTypeName","src":"1468:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1467:9:24"},"scope":3165,"src":"1369:108:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3125,"nodeType":"StructuredDocumentation","src":"1483:642:24","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":3134,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":3130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3127,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":3134,"src":"2147:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3126,"name":"address","nodeType":"ElementaryTypeName","src":"2147:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3129,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":3134,"src":"2164:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3128,"name":"uint256","nodeType":"ElementaryTypeName","src":"2164:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2146:33:24"},"returnParameters":{"id":3133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3132,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3134,"src":"2198:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3131,"name":"bool","nodeType":"ElementaryTypeName","src":"2198:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2197:6:24"},"scope":3165,"src":"2130:74:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3135,"nodeType":"StructuredDocumentation","src":"2210:296:24","text":" @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":3146,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":3142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3137,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":3146,"src":"2542:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3136,"name":"address","nodeType":"ElementaryTypeName","src":"2542:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3139,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":3146,"src":"2566:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3138,"name":"address","nodeType":"ElementaryTypeName","src":"2566:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3141,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":3146,"src":"2593:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3140,"name":"uint256","nodeType":"ElementaryTypeName","src":"2593:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2532:81:24"},"returnParameters":{"id":3145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3144,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3146,"src":"2632:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3143,"name":"bool","nodeType":"ElementaryTypeName","src":"2632:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2631:6:24"},"scope":3165,"src":"2511:127:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":3147,"nodeType":"StructuredDocumentation","src":"2644:158:24","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":3155,"name":"Transfer","nodeType":"EventDefinition","parameters":{"id":3154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3149,"indexed":true,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":3155,"src":"2822:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3148,"name":"address","nodeType":"ElementaryTypeName","src":"2822:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3151,"indexed":true,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":3155,"src":"2844:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3150,"name":"address","nodeType":"ElementaryTypeName","src":"2844:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3153,"indexed":false,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":3155,"src":"2864:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3152,"name":"uint256","nodeType":"ElementaryTypeName","src":"2864:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2821:57:24"},"src":"2807:72:24"},{"anonymous":false,"documentation":{"id":3156,"nodeType":"StructuredDocumentation","src":"2885:148:24","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":3164,"name":"Approval","nodeType":"EventDefinition","parameters":{"id":3163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3158,"indexed":true,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":3164,"src":"3062:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3157,"name":"address","nodeType":"ElementaryTypeName","src":"3062:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3160,"indexed":true,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":3164,"src":"3093:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3159,"name":"address","nodeType":"ElementaryTypeName","src":"3093:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3162,"indexed":false,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":3164,"src":"3126:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3161,"name":"uint256","nodeType":"ElementaryTypeName","src":"3126:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3052:93:24"},"src":"3038:108:24"}],"scope":3166,"src":"26:3122:24"}],"src":"0:3149:24"},"id":24},"contracts/oracles/libs/FixedPointMathLib.sol":{"ast":{"absolutePath":"contracts/oracles/libs/FixedPointMathLib.sol","exportedSymbols":{"FixedPointMathLib":[3284]},"id":3285,"license":"AGPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":3167,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"42:24:25"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":3168,"nodeType":"StructuredDocumentation","src":"68:270:25","text":"@notice Arithmetic library with operations for fixed-point numbers.\n @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/utils/FixedPointMathLib.sol)\n @author Inspired by USM (https://github.com/usmfum/USM/blob/master/contracts/WadMath.sol)"},"fullyImplemented":true,"id":3284,"linearizedBaseContracts":[3284],"name":"FixedPointMathLib","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3171,"mutability":"constant","name":"WAD","nodeType":"VariableDeclaration","scope":3284,"src":"563:36:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3169,"name":"uint256","nodeType":"ElementaryTypeName","src":"563:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653138","id":3170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"595:4:25","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"visibility":"internal"},{"body":{"id":3186,"nodeType":"Block","src":"718:90:25","statements":[{"expression":{"arguments":[{"id":3181,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3173,"src":"746:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3182,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3175,"src":"749:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3183,"name":"WAD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3171,"src":"752:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3180,"name":"mulDivDown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"735:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"735:21:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3179,"id":3185,"nodeType":"Return","src":"728:28:25"}]},"id":3187,"implemented":true,"kind":"function","modifiers":[],"name":"mulWadDown","nodeType":"FunctionDefinition","parameters":{"id":3176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3173,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":3187,"src":"664:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3172,"name":"uint256","nodeType":"ElementaryTypeName","src":"664:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3175,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":3187,"src":"675:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3174,"name":"uint256","nodeType":"ElementaryTypeName","src":"675:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"663:22:25"},"returnParameters":{"id":3179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3178,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3187,"src":"709:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3177,"name":"uint256","nodeType":"ElementaryTypeName","src":"709:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"708:9:25"},"scope":3284,"src":"644:164:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3202,"nodeType":"Block","src":"886:86:25","statements":[{"expression":{"arguments":[{"id":3197,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"912:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3198,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"915:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3199,"name":"WAD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3171,"src":"918:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3196,"name":"mulDivUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"903:8:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"903:19:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3195,"id":3201,"nodeType":"Return","src":"896:26:25"}]},"id":3203,"implemented":true,"kind":"function","modifiers":[],"name":"mulWadUp","nodeType":"FunctionDefinition","parameters":{"id":3192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3189,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":3203,"src":"832:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3188,"name":"uint256","nodeType":"ElementaryTypeName","src":"832:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3191,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":3203,"src":"843:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3190,"name":"uint256","nodeType":"ElementaryTypeName","src":"843:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"831:22:25"},"returnParameters":{"id":3195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3194,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3203,"src":"877:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3193,"name":"uint256","nodeType":"ElementaryTypeName","src":"877:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"876:9:25"},"scope":3284,"src":"814:158:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3218,"nodeType":"Block","src":"1052:90:25","statements":[{"expression":{"arguments":[{"id":3213,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"1080:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3214,"name":"WAD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3171,"src":"1083:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3215,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3207,"src":"1088:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3212,"name":"mulDivDown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"1069:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1069:21:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3211,"id":3217,"nodeType":"Return","src":"1062:28:25"}]},"id":3219,"implemented":true,"kind":"function","modifiers":[],"name":"divWadDown","nodeType":"FunctionDefinition","parameters":{"id":3208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3205,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":3219,"src":"998:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3204,"name":"uint256","nodeType":"ElementaryTypeName","src":"998:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3207,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":3219,"src":"1009:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3206,"name":"uint256","nodeType":"ElementaryTypeName","src":"1009:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:22:25"},"returnParameters":{"id":3211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3210,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3219,"src":"1043:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3209,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:9:25"},"scope":3284,"src":"978:164:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3234,"nodeType":"Block","src":"1220:86:25","statements":[{"expression":{"arguments":[{"id":3229,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"1246:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3230,"name":"WAD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3171,"src":"1249:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3231,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3223,"src":"1254:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3228,"name":"mulDivUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"1237:8:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1237:19:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3227,"id":3233,"nodeType":"Return","src":"1230:26:25"}]},"id":3235,"implemented":true,"kind":"function","modifiers":[],"name":"divWadUp","nodeType":"FunctionDefinition","parameters":{"id":3224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3221,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":3235,"src":"1166:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3220,"name":"uint256","nodeType":"ElementaryTypeName","src":"1166:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3223,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":3235,"src":"1177:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3222,"name":"uint256","nodeType":"ElementaryTypeName","src":"1177:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1165:22:25"},"returnParameters":{"id":3227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3226,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3235,"src":"1211:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3225,"name":"uint256","nodeType":"ElementaryTypeName","src":"1211:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:9:25"},"scope":3284,"src":"1148:158:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3247,"nodeType":"Block","src":"1631:496:25","statements":[{"AST":{"nodeType":"YulBlock","src":"1650:471:25","statements":[{"nodeType":"YulAssignment","src":"1705:14:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"1714:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"1717:1:25"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1710:3:25"},"nodeType":"YulFunctionCall","src":"1710:9:25"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"1705:1:25"}]},{"body":{"nodeType":"YulBlock","src":"1985:44:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2010:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2013:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2003:6:25"},"nodeType":"YulFunctionCall","src":"2003:12:25"},"nodeType":"YulExpressionStatement","src":"2003:12:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"1886:11:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1879:6:25"},"nodeType":"YulFunctionCall","src":"1879:19:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1872:6:25"},"nodeType":"YulFunctionCall","src":"1872:27:25"},{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"1931:1:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1924:6:25"},"nodeType":"YulFunctionCall","src":"1924:9:25"},{"arguments":[{"arguments":[{"name":"z","nodeType":"YulIdentifier","src":"1942:1:25"},{"name":"x","nodeType":"YulIdentifier","src":"1945:1:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1938:3:25"},"nodeType":"YulFunctionCall","src":"1938:9:25"},{"name":"y","nodeType":"YulIdentifier","src":"1949:1:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1935:2:25"},"nodeType":"YulFunctionCall","src":"1935:16:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1921:2:25"},"nodeType":"YulFunctionCall","src":"1921:31:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1847:3:25"},"nodeType":"YulFunctionCall","src":"1847:123:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1823:6:25"},"nodeType":"YulFunctionCall","src":"1823:161:25"},"nodeType":"YulIf","src":"1820:2:25"},{"nodeType":"YulAssignment","src":"2087:24:25","value":{"arguments":[{"name":"z","nodeType":"YulIdentifier","src":"2096:1:25"},{"name":"denominator","nodeType":"YulIdentifier","src":"2099:11:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2092:3:25"},"nodeType":"YulFunctionCall","src":"2092:19:25"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"2087:1:25"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":3241,"isOffset":false,"isSlot":false,"src":"1886:11:25","valueSize":1},{"declaration":3241,"isOffset":false,"isSlot":false,"src":"2099:11:25","valueSize":1},{"declaration":3237,"isOffset":false,"isSlot":false,"src":"1714:1:25","valueSize":1},{"declaration":3237,"isOffset":false,"isSlot":false,"src":"1931:1:25","valueSize":1},{"declaration":3237,"isOffset":false,"isSlot":false,"src":"1945:1:25","valueSize":1},{"declaration":3239,"isOffset":false,"isSlot":false,"src":"1717:1:25","valueSize":1},{"declaration":3239,"isOffset":false,"isSlot":false,"src":"1949:1:25","valueSize":1},{"declaration":3244,"isOffset":false,"isSlot":false,"src":"1705:1:25","valueSize":1},{"declaration":3244,"isOffset":false,"isSlot":false,"src":"1942:1:25","valueSize":1},{"declaration":3244,"isOffset":false,"isSlot":false,"src":"2087:1:25","valueSize":1},{"declaration":3244,"isOffset":false,"isSlot":false,"src":"2096:1:25","valueSize":1}],"id":3246,"nodeType":"InlineAssembly","src":"1641:480:25"}]},"id":3248,"implemented":true,"kind":"function","modifiers":[],"name":"mulDivDown","nodeType":"FunctionDefinition","parameters":{"id":3242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3237,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":3248,"src":"1533:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3236,"name":"uint256","nodeType":"ElementaryTypeName","src":"1533:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3239,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":3248,"src":"1552:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3238,"name":"uint256","nodeType":"ElementaryTypeName","src":"1552:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3241,"mutability":"mutable","name":"denominator","nodeType":"VariableDeclaration","scope":3248,"src":"1571:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3240,"name":"uint256","nodeType":"ElementaryTypeName","src":"1571:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1523:73:25"},"returnParameters":{"id":3245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3244,"mutability":"mutable","name":"z","nodeType":"VariableDeclaration","scope":3248,"src":"1620:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3243,"name":"uint256","nodeType":"ElementaryTypeName","src":"1620:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1619:11:25"},"scope":3284,"src":"1504:623:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3260,"nodeType":"Block","src":"2258:715:25","statements":[{"AST":{"nodeType":"YulBlock","src":"2277:690:25","statements":[{"nodeType":"YulAssignment","src":"2332:14:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2341:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"2344:1:25"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2337:3:25"},"nodeType":"YulFunctionCall","src":"2337:9:25"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"2332:1:25"}]},{"body":{"nodeType":"YulBlock","src":"2612:44:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2637:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2640:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2630:6:25"},"nodeType":"YulFunctionCall","src":"2630:12:25"},"nodeType":"YulExpressionStatement","src":"2630:12:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"2513:11:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2506:6:25"},"nodeType":"YulFunctionCall","src":"2506:19:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2499:6:25"},"nodeType":"YulFunctionCall","src":"2499:27:25"},{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2558:1:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2551:6:25"},"nodeType":"YulFunctionCall","src":"2551:9:25"},{"arguments":[{"arguments":[{"name":"z","nodeType":"YulIdentifier","src":"2569:1:25"},{"name":"x","nodeType":"YulIdentifier","src":"2572:1:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2565:3:25"},"nodeType":"YulFunctionCall","src":"2565:9:25"},{"name":"y","nodeType":"YulIdentifier","src":"2576:1:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2562:2:25"},"nodeType":"YulFunctionCall","src":"2562:16:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2548:2:25"},"nodeType":"YulFunctionCall","src":"2548:31:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2474:3:25"},"nodeType":"YulFunctionCall","src":"2474:123:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2450:6:25"},"nodeType":"YulFunctionCall","src":"2450:161:25"},"nodeType":"YulIf","src":"2447:2:25"},{"nodeType":"YulAssignment","src":"2893:64:25","value":{"arguments":[{"arguments":[{"arguments":[{"name":"z","nodeType":"YulIdentifier","src":"2916:1:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2909:6:25"},"nodeType":"YulFunctionCall","src":"2909:9:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2902:6:25"},"nodeType":"YulFunctionCall","src":"2902:17:25"},{"arguments":[{"arguments":[{"arguments":[{"name":"z","nodeType":"YulIdentifier","src":"2933:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"2936:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2929:3:25"},"nodeType":"YulFunctionCall","src":"2929:9:25"},{"name":"denominator","nodeType":"YulIdentifier","src":"2940:11:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2925:3:25"},"nodeType":"YulFunctionCall","src":"2925:27:25"},{"kind":"number","nodeType":"YulLiteral","src":"2954:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2921:3:25"},"nodeType":"YulFunctionCall","src":"2921:35:25"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2898:3:25"},"nodeType":"YulFunctionCall","src":"2898:59:25"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"2893:1:25"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":3254,"isOffset":false,"isSlot":false,"src":"2513:11:25","valueSize":1},{"declaration":3254,"isOffset":false,"isSlot":false,"src":"2940:11:25","valueSize":1},{"declaration":3250,"isOffset":false,"isSlot":false,"src":"2341:1:25","valueSize":1},{"declaration":3250,"isOffset":false,"isSlot":false,"src":"2558:1:25","valueSize":1},{"declaration":3250,"isOffset":false,"isSlot":false,"src":"2572:1:25","valueSize":1},{"declaration":3252,"isOffset":false,"isSlot":false,"src":"2344:1:25","valueSize":1},{"declaration":3252,"isOffset":false,"isSlot":false,"src":"2576:1:25","valueSize":1},{"declaration":3257,"isOffset":false,"isSlot":false,"src":"2332:1:25","valueSize":1},{"declaration":3257,"isOffset":false,"isSlot":false,"src":"2569:1:25","valueSize":1},{"declaration":3257,"isOffset":false,"isSlot":false,"src":"2893:1:25","valueSize":1},{"declaration":3257,"isOffset":false,"isSlot":false,"src":"2916:1:25","valueSize":1},{"declaration":3257,"isOffset":false,"isSlot":false,"src":"2933:1:25","valueSize":1}],"id":3259,"nodeType":"InlineAssembly","src":"2268:699:25"}]},"id":3261,"implemented":true,"kind":"function","modifiers":[],"name":"mulDivUp","nodeType":"FunctionDefinition","parameters":{"id":3255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3250,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":3261,"src":"2160:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3249,"name":"uint256","nodeType":"ElementaryTypeName","src":"2160:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3252,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":3261,"src":"2179:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3251,"name":"uint256","nodeType":"ElementaryTypeName","src":"2179:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3254,"mutability":"mutable","name":"denominator","nodeType":"VariableDeclaration","scope":3261,"src":"2198:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3253,"name":"uint256","nodeType":"ElementaryTypeName","src":"2198:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2150:73:25"},"returnParameters":{"id":3258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3257,"mutability":"mutable","name":"z","nodeType":"VariableDeclaration","scope":3261,"src":"2247:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3256,"name":"uint256","nodeType":"ElementaryTypeName","src":"2247:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2246:11:25"},"scope":3284,"src":"2133:840:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3273,"nodeType":"Block","src":"3095:2619:25","statements":[{"AST":{"nodeType":"YulBlock","src":"3114:2594:25","statements":[{"cases":[{"body":{"nodeType":"YulBlock","src":"3156:254:25","statements":[{"cases":[{"body":{"nodeType":"YulBlock","src":"3206:85:25","statements":[{"nodeType":"YulAssignment","src":"3262:11:25","value":{"name":"scalar","nodeType":"YulIdentifier","src":"3267:6:25"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"3262:1:25"}]}]},"nodeType":"YulCase","src":"3199:92:25","value":{"kind":"number","nodeType":"YulLiteral","src":"3204:1:25","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"3316:80:25","statements":[{"nodeType":"YulAssignment","src":"3372:6:25","value":{"kind":"number","nodeType":"YulLiteral","src":"3377:1:25","type":"","value":"0"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"3372:1:25"}]}]},"nodeType":"YulCase","src":"3308:88:25","value":"default"}],"expression":{"name":"n","nodeType":"YulIdentifier","src":"3181:1:25"},"nodeType":"YulSwitch","src":"3174:222:25"}]},"nodeType":"YulCase","src":"3149:261:25","value":{"kind":"number","nodeType":"YulLiteral","src":"3154:1:25","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"3431:2267:25","statements":[{"cases":[{"body":{"nodeType":"YulBlock","src":"3489:115:25","statements":[{"nodeType":"YulAssignment","src":"3575:11:25","value":{"name":"scalar","nodeType":"YulIdentifier","src":"3580:6:25"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"3575:1:25"}]}]},"nodeType":"YulCase","src":"3482:122:25","value":{"kind":"number","nodeType":"YulLiteral","src":"3487:1:25","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"3629:104:25","statements":[{"nodeType":"YulAssignment","src":"3709:6:25","value":{"name":"x","nodeType":"YulIdentifier","src":"3714:1:25"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"3709:1:25"}]}]},"nodeType":"YulCase","src":"3621:112:25","value":"default"}],"expression":{"arguments":[{"name":"n","nodeType":"YulIdentifier","src":"3460:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"3463:1:25","type":"","value":"2"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"3456:3:25"},"nodeType":"YulFunctionCall","src":"3456:9:25"},"nodeType":"YulSwitch","src":"3449:284:25"},{"nodeType":"YulVariableDeclaration","src":"3813:26:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3829:1:25","type":"","value":"1"},{"name":"scalar","nodeType":"YulIdentifier","src":"3832:6:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3825:3:25"},"nodeType":"YulFunctionCall","src":"3825:14:25"},"variables":[{"name":"half","nodeType":"YulTypedName","src":"3817:4:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"4113:1571:25","statements":[{"body":{"nodeType":"YulBlock","src":"4287:60:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4320:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4323:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4313:6:25"},"nodeType":"YulFunctionCall","src":"4313:12:25"},"nodeType":"YulExpressionStatement","src":"4313:12:25"}]},"condition":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4279:3:25","type":"","value":"128"},{"name":"x","nodeType":"YulIdentifier","src":"4284:1:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4275:3:25"},"nodeType":"YulFunctionCall","src":"4275:11:25"},"nodeType":"YulIf","src":"4272:2:25"},{"nodeType":"YulVariableDeclaration","src":"4409:19:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4423:1:25"},{"name":"x","nodeType":"YulIdentifier","src":"4426:1:25"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4419:3:25"},"nodeType":"YulFunctionCall","src":"4419:9:25"},"variables":[{"name":"xx","nodeType":"YulTypedName","src":"4413:2:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4502:28:25","value":{"arguments":[{"name":"xx","nodeType":"YulIdentifier","src":"4521:2:25"},{"name":"half","nodeType":"YulIdentifier","src":"4525:4:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4517:3:25"},"nodeType":"YulFunctionCall","src":"4517:13:25"},"variables":[{"name":"xxRound","nodeType":"YulTypedName","src":"4506:7:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"4626:60:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4659:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4662:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4652:6:25"},"nodeType":"YulFunctionCall","src":"4652:12:25"},"nodeType":"YulExpressionStatement","src":"4652:12:25"}]},"condition":{"arguments":[{"name":"xxRound","nodeType":"YulIdentifier","src":"4613:7:25"},{"name":"xx","nodeType":"YulIdentifier","src":"4622:2:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4610:2:25"},"nodeType":"YulFunctionCall","src":"4610:15:25"},"nodeType":"YulIf","src":"4607:2:25"},{"nodeType":"YulAssignment","src":"4756:25:25","value":{"arguments":[{"name":"xxRound","nodeType":"YulIdentifier","src":"4765:7:25"},{"name":"scalar","nodeType":"YulIdentifier","src":"4774:6:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4761:3:25"},"nodeType":"YulFunctionCall","src":"4761:20:25"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"4756:1:25"}]},{"body":{"nodeType":"YulBlock","src":"4853:813:25","statements":[{"nodeType":"YulVariableDeclaration","src":"4921:19:25","value":{"arguments":[{"name":"z","nodeType":"YulIdentifier","src":"4935:1:25"},{"name":"x","nodeType":"YulIdentifier","src":"4938:1:25"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4931:3:25"},"nodeType":"YulFunctionCall","src":"4931:9:25"},"variables":[{"name":"zx","nodeType":"YulTypedName","src":"4925:2:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"5043:209:25","statements":[{"body":{"nodeType":"YulBlock","src":"5150:76:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5191:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5194:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5184:6:25"},"nodeType":"YulFunctionCall","src":"5184:12:25"},"nodeType":"YulExpressionStatement","src":"5184:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5146:1:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5139:6:25"},"nodeType":"YulFunctionCall","src":"5139:9:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5132:6:25"},"nodeType":"YulFunctionCall","src":"5132:17:25"},"nodeType":"YulIf","src":"5129:2:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"zx","nodeType":"YulIdentifier","src":"5031:2:25"},{"name":"x","nodeType":"YulIdentifier","src":"5035:1:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5027:3:25"},"nodeType":"YulFunctionCall","src":"5027:10:25"},{"name":"z","nodeType":"YulIdentifier","src":"5039:1:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5024:2:25"},"nodeType":"YulFunctionCall","src":"5024:17:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5017:6:25"},"nodeType":"YulFunctionCall","src":"5017:25:25"},"nodeType":"YulIf","src":"5014:2:25"},{"nodeType":"YulVariableDeclaration","src":"5334:28:25","value":{"arguments":[{"name":"zx","nodeType":"YulIdentifier","src":"5353:2:25"},{"name":"half","nodeType":"YulIdentifier","src":"5357:4:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5349:3:25"},"nodeType":"YulFunctionCall","src":"5349:13:25"},"variables":[{"name":"zxRound","nodeType":"YulTypedName","src":"5338:7:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"5466:68:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5503:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5506:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5496:6:25"},"nodeType":"YulFunctionCall","src":"5496:12:25"},"nodeType":"YulExpressionStatement","src":"5496:12:25"}]},"condition":{"arguments":[{"name":"zxRound","nodeType":"YulIdentifier","src":"5453:7:25"},{"name":"zx","nodeType":"YulIdentifier","src":"5462:2:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5450:2:25"},"nodeType":"YulFunctionCall","src":"5450:15:25"},"nodeType":"YulIf","src":"5447:2:25"},{"nodeType":"YulAssignment","src":"5619:25:25","value":{"arguments":[{"name":"zxRound","nodeType":"YulIdentifier","src":"5628:7:25"},{"name":"scalar","nodeType":"YulIdentifier","src":"5637:6:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5624:3:25"},"nodeType":"YulFunctionCall","src":"5624:20:25"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"5619:1:25"}]}]},"condition":{"arguments":[{"name":"n","nodeType":"YulIdentifier","src":"4847:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"4850:1:25","type":"","value":"2"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"4843:3:25"},"nodeType":"YulFunctionCall","src":"4843:9:25"},"nodeType":"YulIf","src":"4840:2:25"}]},"condition":{"name":"n","nodeType":"YulIdentifier","src":"3986:1:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3988:124:25","statements":[{"nodeType":"YulAssignment","src":"4080:14:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4089:1:25","type":"","value":"1"},{"name":"n","nodeType":"YulIdentifier","src":"4092:1:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4085:3:25"},"nodeType":"YulFunctionCall","src":"4085:9:25"},"variableNames":[{"name":"n","nodeType":"YulIdentifier","src":"4080:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"3861:124:25","statements":[{"nodeType":"YulAssignment","src":"3953:14:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3962:1:25","type":"","value":"1"},{"name":"n","nodeType":"YulIdentifier","src":"3965:1:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3958:3:25"},"nodeType":"YulFunctionCall","src":"3958:9:25"},"variableNames":[{"name":"n","nodeType":"YulIdentifier","src":"3953:1:25"}]}]},"src":"3857:1827:25"}]},"nodeType":"YulCase","src":"3423:2275:25","value":"default"}],"expression":{"name":"x","nodeType":"YulIdentifier","src":"3135:1:25"},"nodeType":"YulSwitch","src":"3128:2570:25"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":3265,"isOffset":false,"isSlot":false,"src":"3181:1:25","valueSize":1},{"declaration":3265,"isOffset":false,"isSlot":false,"src":"3460:1:25","valueSize":1},{"declaration":3265,"isOffset":false,"isSlot":false,"src":"3953:1:25","valueSize":1},{"declaration":3265,"isOffset":false,"isSlot":false,"src":"3965:1:25","valueSize":1},{"declaration":3265,"isOffset":false,"isSlot":false,"src":"3986:1:25","valueSize":1},{"declaration":3265,"isOffset":false,"isSlot":false,"src":"4080:1:25","valueSize":1},{"declaration":3265,"isOffset":false,"isSlot":false,"src":"4092:1:25","valueSize":1},{"declaration":3265,"isOffset":false,"isSlot":false,"src":"4847:1:25","valueSize":1},{"declaration":3267,"isOffset":false,"isSlot":false,"src":"3267:6:25","valueSize":1},{"declaration":3267,"isOffset":false,"isSlot":false,"src":"3580:6:25","valueSize":1},{"declaration":3267,"isOffset":false,"isSlot":false,"src":"3832:6:25","valueSize":1},{"declaration":3267,"isOffset":false,"isSlot":false,"src":"4774:6:25","valueSize":1},{"declaration":3267,"isOffset":false,"isSlot":false,"src":"5637:6:25","valueSize":1},{"declaration":3263,"isOffset":false,"isSlot":false,"src":"3135:1:25","valueSize":1},{"declaration":3263,"isOffset":false,"isSlot":false,"src":"3714:1:25","valueSize":1},{"declaration":3263,"isOffset":false,"isSlot":false,"src":"4284:1:25","valueSize":1},{"declaration":3263,"isOffset":false,"isSlot":false,"src":"4423:1:25","valueSize":1},{"declaration":3263,"isOffset":false,"isSlot":false,"src":"4426:1:25","valueSize":1},{"declaration":3263,"isOffset":false,"isSlot":false,"src":"4756:1:25","valueSize":1},{"declaration":3263,"isOffset":false,"isSlot":false,"src":"4938:1:25","valueSize":1},{"declaration":3263,"isOffset":false,"isSlot":false,"src":"5035:1:25","valueSize":1},{"declaration":3263,"isOffset":false,"isSlot":false,"src":"5146:1:25","valueSize":1},{"declaration":3270,"isOffset":false,"isSlot":false,"src":"3262:1:25","valueSize":1},{"declaration":3270,"isOffset":false,"isSlot":false,"src":"3372:1:25","valueSize":1},{"declaration":3270,"isOffset":false,"isSlot":false,"src":"3575:1:25","valueSize":1},{"declaration":3270,"isOffset":false,"isSlot":false,"src":"3709:1:25","valueSize":1},{"declaration":3270,"isOffset":false,"isSlot":false,"src":"4935:1:25","valueSize":1},{"declaration":3270,"isOffset":false,"isSlot":false,"src":"5039:1:25","valueSize":1},{"declaration":3270,"isOffset":false,"isSlot":false,"src":"5619:1:25","valueSize":1}],"id":3272,"nodeType":"InlineAssembly","src":"3105:2603:25"}]},"id":3274,"implemented":true,"kind":"function","modifiers":[],"name":"rpow","nodeType":"FunctionDefinition","parameters":{"id":3268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3263,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":3274,"src":"3002:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3262,"name":"uint256","nodeType":"ElementaryTypeName","src":"3002:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3265,"mutability":"mutable","name":"n","nodeType":"VariableDeclaration","scope":3274,"src":"3021:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3264,"name":"uint256","nodeType":"ElementaryTypeName","src":"3021:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3267,"mutability":"mutable","name":"scalar","nodeType":"VariableDeclaration","scope":3274,"src":"3040:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3266,"name":"uint256","nodeType":"ElementaryTypeName","src":"3040:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2992:68:25"},"returnParameters":{"id":3271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3270,"mutability":"mutable","name":"z","nodeType":"VariableDeclaration","scope":3274,"src":"3084:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3269,"name":"uint256","nodeType":"ElementaryTypeName","src":"3084:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3083:11:25"},"scope":3284,"src":"2979:2735:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3282,"nodeType":"Block","src":"5967:2057:25","statements":[{"AST":{"nodeType":"YulBlock","src":"5986:2032:25","statements":[{"nodeType":"YulAssignment","src":"6038:6:25","value":{"kind":"number","nodeType":"YulLiteral","src":"6043:1:25","type":"","value":"1"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"6038:1:25"}]},{"nodeType":"YulVariableDeclaration","src":"6118:10:25","value":{"name":"x","nodeType":"YulIdentifier","src":"6127:1:25"},"variables":[{"name":"y","nodeType":"YulTypedName","src":"6122:1:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"6264:142:25","statements":[{"nodeType":"YulAssignment","src":"6282:16:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6291:3:25","type":"","value":"128"},{"name":"y","nodeType":"YulIdentifier","src":"6296:1:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6287:3:25"},"nodeType":"YulFunctionCall","src":"6287:11:25"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6282:1:25"}]},{"nodeType":"YulAssignment","src":"6345:15:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6354:2:25","type":"","value":"64"},{"name":"z","nodeType":"YulIdentifier","src":"6358:1:25"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6350:3:25"},"nodeType":"YulFunctionCall","src":"6350:10:25"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"6345:1:25"}]}]},"condition":{"arguments":[{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6223:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"6226:35:25","type":"","value":"0x100000000000000000000000000000000"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6220:2:25"},"nodeType":"YulFunctionCall","src":"6220:42:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6213:6:25"},"nodeType":"YulFunctionCall","src":"6213:50:25"},"nodeType":"YulIf","src":"6210:2:25"},{"body":{"nodeType":"YulBlock","src":"6457:140:25","statements":[{"nodeType":"YulAssignment","src":"6475:15:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6484:2:25","type":"","value":"64"},{"name":"y","nodeType":"YulIdentifier","src":"6488:1:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6480:3:25"},"nodeType":"YulFunctionCall","src":"6480:10:25"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6475:1:25"}]},{"nodeType":"YulAssignment","src":"6536:15:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6545:2:25","type":"","value":"32"},{"name":"z","nodeType":"YulIdentifier","src":"6549:1:25"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6541:3:25"},"nodeType":"YulFunctionCall","src":"6541:10:25"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"6536:1:25"}]}]},"condition":{"arguments":[{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6432:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"6435:19:25","type":"","value":"0x10000000000000000"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6429:2:25"},"nodeType":"YulFunctionCall","src":"6429:26:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6422:6:25"},"nodeType":"YulFunctionCall","src":"6422:34:25"},"nodeType":"YulIf","src":"6419:2:25"},{"body":{"nodeType":"YulBlock","src":"6640:140:25","statements":[{"nodeType":"YulAssignment","src":"6658:15:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6667:2:25","type":"","value":"32"},{"name":"y","nodeType":"YulIdentifier","src":"6671:1:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6663:3:25"},"nodeType":"YulFunctionCall","src":"6663:10:25"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6658:1:25"}]},{"nodeType":"YulAssignment","src":"6719:15:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6728:2:25","type":"","value":"16"},{"name":"z","nodeType":"YulIdentifier","src":"6732:1:25"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6724:3:25"},"nodeType":"YulFunctionCall","src":"6724:10:25"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"6719:1:25"}]}]},"condition":{"arguments":[{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6623:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"6626:11:25","type":"","value":"0x100000000"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6620:2:25"},"nodeType":"YulFunctionCall","src":"6620:18:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6613:6:25"},"nodeType":"YulFunctionCall","src":"6613:26:25"},"nodeType":"YulIf","src":"6610:2:25"},{"body":{"nodeType":"YulBlock","src":"6819:138:25","statements":[{"nodeType":"YulAssignment","src":"6837:15:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6846:2:25","type":"","value":"16"},{"name":"y","nodeType":"YulIdentifier","src":"6850:1:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6842:3:25"},"nodeType":"YulFunctionCall","src":"6842:10:25"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6837:1:25"}]},{"nodeType":"YulAssignment","src":"6898:14:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6907:1:25","type":"","value":"8"},{"name":"z","nodeType":"YulIdentifier","src":"6910:1:25"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6903:3:25"},"nodeType":"YulFunctionCall","src":"6903:9:25"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"6898:1:25"}]}]},"condition":{"arguments":[{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6806:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"6809:7:25","type":"","value":"0x10000"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6803:2:25"},"nodeType":"YulFunctionCall","src":"6803:14:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6796:6:25"},"nodeType":"YulFunctionCall","src":"6796:22:25"},"nodeType":"YulIf","src":"6793:2:25"},{"body":{"nodeType":"YulBlock","src":"6994:136:25","statements":[{"nodeType":"YulAssignment","src":"7012:14:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7021:1:25","type":"","value":"8"},{"name":"y","nodeType":"YulIdentifier","src":"7024:1:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7017:3:25"},"nodeType":"YulFunctionCall","src":"7017:9:25"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"7012:1:25"}]},{"nodeType":"YulAssignment","src":"7071:14:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7080:1:25","type":"","value":"4"},{"name":"z","nodeType":"YulIdentifier","src":"7083:1:25"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7076:3:25"},"nodeType":"YulFunctionCall","src":"7076:9:25"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"7071:1:25"}]}]},"condition":{"arguments":[{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6983:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"6986:5:25","type":"","value":"0x100"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6980:2:25"},"nodeType":"YulFunctionCall","src":"6980:12:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6973:6:25"},"nodeType":"YulFunctionCall","src":"6973:20:25"},"nodeType":"YulIf","src":"6970:2:25"},{"body":{"nodeType":"YulBlock","src":"7166:136:25","statements":[{"nodeType":"YulAssignment","src":"7184:14:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7193:1:25","type":"","value":"4"},{"name":"y","nodeType":"YulIdentifier","src":"7196:1:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7189:3:25"},"nodeType":"YulFunctionCall","src":"7189:9:25"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"7184:1:25"}]},{"nodeType":"YulAssignment","src":"7243:14:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7252:1:25","type":"","value":"2"},{"name":"z","nodeType":"YulIdentifier","src":"7255:1:25"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7248:3:25"},"nodeType":"YulFunctionCall","src":"7248:9:25"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"7243:1:25"}]}]},"condition":{"arguments":[{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7156:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"7159:4:25","type":"","value":"0x10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7153:2:25"},"nodeType":"YulFunctionCall","src":"7153:11:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7146:6:25"},"nodeType":"YulFunctionCall","src":"7146:19:25"},"nodeType":"YulIf","src":"7143:2:25"},{"body":{"nodeType":"YulBlock","src":"7337:87:25","statements":[{"nodeType":"YulAssignment","src":"7396:14:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7405:1:25","type":"","value":"1"},{"name":"z","nodeType":"YulIdentifier","src":"7408:1:25"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7401:3:25"},"nodeType":"YulFunctionCall","src":"7401:9:25"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"7396:1:25"}]}]},"condition":{"arguments":[{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7328:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"7331:3:25","type":"","value":"0x8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7325:2:25"},"nodeType":"YulFunctionCall","src":"7325:10:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7318:6:25"},"nodeType":"YulFunctionCall","src":"7318:18:25"},"nodeType":"YulIf","src":"7315:2:25"},{"nodeType":"YulAssignment","src":"7496:30:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7505:1:25","type":"","value":"1"},{"arguments":[{"name":"z","nodeType":"YulIdentifier","src":"7512:1:25"},{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7519:1:25"},{"name":"z","nodeType":"YulIdentifier","src":"7522:1:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7515:3:25"},"nodeType":"YulFunctionCall","src":"7515:9:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7508:3:25"},"nodeType":"YulFunctionCall","src":"7508:17:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7501:3:25"},"nodeType":"YulFunctionCall","src":"7501:25:25"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"7496:1:25"}]},{"nodeType":"YulAssignment","src":"7539:30:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7548:1:25","type":"","value":"1"},{"arguments":[{"name":"z","nodeType":"YulIdentifier","src":"7555:1:25"},{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7562:1:25"},{"name":"z","nodeType":"YulIdentifier","src":"7565:1:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7558:3:25"},"nodeType":"YulFunctionCall","src":"7558:9:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7551:3:25"},"nodeType":"YulFunctionCall","src":"7551:17:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7544:3:25"},"nodeType":"YulFunctionCall","src":"7544:25:25"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"7539:1:25"}]},{"nodeType":"YulAssignment","src":"7582:30:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7591:1:25","type":"","value":"1"},{"arguments":[{"name":"z","nodeType":"YulIdentifier","src":"7598:1:25"},{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7605:1:25"},{"name":"z","nodeType":"YulIdentifier","src":"7608:1:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7601:3:25"},"nodeType":"YulFunctionCall","src":"7601:9:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7594:3:25"},"nodeType":"YulFunctionCall","src":"7594:17:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7587:3:25"},"nodeType":"YulFunctionCall","src":"7587:25:25"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"7582:1:25"}]},{"nodeType":"YulAssignment","src":"7625:30:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7634:1:25","type":"","value":"1"},{"arguments":[{"name":"z","nodeType":"YulIdentifier","src":"7641:1:25"},{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7648:1:25"},{"name":"z","nodeType":"YulIdentifier","src":"7651:1:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7644:3:25"},"nodeType":"YulFunctionCall","src":"7644:9:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7637:3:25"},"nodeType":"YulFunctionCall","src":"7637:17:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7630:3:25"},"nodeType":"YulFunctionCall","src":"7630:25:25"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"7625:1:25"}]},{"nodeType":"YulAssignment","src":"7668:30:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7677:1:25","type":"","value":"1"},{"arguments":[{"name":"z","nodeType":"YulIdentifier","src":"7684:1:25"},{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7691:1:25"},{"name":"z","nodeType":"YulIdentifier","src":"7694:1:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7687:3:25"},"nodeType":"YulFunctionCall","src":"7687:9:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7680:3:25"},"nodeType":"YulFunctionCall","src":"7680:17:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7673:3:25"},"nodeType":"YulFunctionCall","src":"7673:25:25"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"7668:1:25"}]},{"nodeType":"YulAssignment","src":"7711:30:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7720:1:25","type":"","value":"1"},{"arguments":[{"name":"z","nodeType":"YulIdentifier","src":"7727:1:25"},{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7734:1:25"},{"name":"z","nodeType":"YulIdentifier","src":"7737:1:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7730:3:25"},"nodeType":"YulFunctionCall","src":"7730:9:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7723:3:25"},"nodeType":"YulFunctionCall","src":"7723:17:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7716:3:25"},"nodeType":"YulFunctionCall","src":"7716:25:25"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"7711:1:25"}]},{"nodeType":"YulAssignment","src":"7754:30:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7763:1:25","type":"","value":"1"},{"arguments":[{"name":"z","nodeType":"YulIdentifier","src":"7770:1:25"},{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7777:1:25"},{"name":"z","nodeType":"YulIdentifier","src":"7780:1:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7773:3:25"},"nodeType":"YulFunctionCall","src":"7773:9:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7766:3:25"},"nodeType":"YulFunctionCall","src":"7766:17:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7759:3:25"},"nodeType":"YulFunctionCall","src":"7759:25:25"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"7754:1:25"}]},{"nodeType":"YulVariableDeclaration","src":"7850:27:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7872:1:25"},{"name":"z","nodeType":"YulIdentifier","src":"7875:1:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7868:3:25"},"nodeType":"YulFunctionCall","src":"7868:9:25"},"variables":[{"name":"zRoundDown","nodeType":"YulTypedName","src":"7854:10:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"7961:47:25","statements":[{"nodeType":"YulAssignment","src":"7979:15:25","value":{"name":"zRoundDown","nodeType":"YulIdentifier","src":"7984:10:25"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"7979:1:25"}]}]},"condition":{"arguments":[{"name":"zRoundDown","nodeType":"YulIdentifier","src":"7946:10:25"},{"name":"z","nodeType":"YulIdentifier","src":"7958:1:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7943:2:25"},"nodeType":"YulFunctionCall","src":"7943:17:25"},"nodeType":"YulIf","src":"7940:2:25"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":3276,"isOffset":false,"isSlot":false,"src":"6127:1:25","valueSize":1},{"declaration":3276,"isOffset":false,"isSlot":false,"src":"7519:1:25","valueSize":1},{"declaration":3276,"isOffset":false,"isSlot":false,"src":"7562:1:25","valueSize":1},{"declaration":3276,"isOffset":false,"isSlot":false,"src":"7605:1:25","valueSize":1},{"declaration":3276,"isOffset":false,"isSlot":false,"src":"7648:1:25","valueSize":1},{"declaration":3276,"isOffset":false,"isSlot":false,"src":"7691:1:25","valueSize":1},{"declaration":3276,"isOffset":false,"isSlot":false,"src":"7734:1:25","valueSize":1},{"declaration":3276,"isOffset":false,"isSlot":false,"src":"7777:1:25","valueSize":1},{"declaration":3276,"isOffset":false,"isSlot":false,"src":"7872:1:25","valueSize":1},{"declaration":3279,"isOffset":false,"isSlot":false,"src":"6038:1:25","valueSize":1},{"declaration":3279,"isOffset":false,"isSlot":false,"src":"6345:1:25","valueSize":1},{"declaration":3279,"isOffset":false,"isSlot":false,"src":"6358:1:25","valueSize":1},{"declaration":3279,"isOffset":false,"isSlot":false,"src":"6536:1:25","valueSize":1},{"declaration":3279,"isOffset":false,"isSlot":false,"src":"6549:1:25","valueSize":1},{"declaration":3279,"isOffset":false,"isSlot":false,"src":"6719:1:25","valueSize":1},{"declaration":3279,"isOffset":false,"isSlot":false,"src":"6732:1:25","valueSize":1},{"declaration":3279,"isOffset":false,"isSlot":false,"src":"6898:1:25","valueSize":1},{"declaration":3279,"isOffset":false,"isSlot":false,"src":"6910:1:25","valueSize":1},{"declaration":3279,"isOffset":false,"isSlot":false,"src":"7071:1:25","valueSize":1},{"declaration":3279,"isOffset":false,"isSlot":false,"src":"7083:1:25","valueSize":1},{"declaration":3279,"isOffset":false,"isSlot":false,"src":"7243:1:25","valueSize":1},{"declaration":3279,"isOffset":false,"isSlot":false,"src":"7255:1:25","valueSize":1},{"declaration":3279,"isOffset":false,"isSlot":false,"src":"7396:1:25","valueSize":1},{"declaration":3279,"isOffset":false,"isSlot":false,"src":"7408:1:25","valueSize":1},{"declaration":3279,"isOffset":false,"isSlot":false,"src":"7496:1:25","valueSize":1},{"declaration":3279,"isOffset":false,"isSlot":false,"src":"7512:1:25","valueSize":1},{"declaration":3279,"isOffset":false,"isSlot":false,"src":"7522:1:25","valueSize":1},{"declaration":3279,"isOffset":false,"isSlot":false,"src":"7539:1:25","valueSize":1},{"declaration":3279,"isOffset":false,"isSlot":false,"src":"7555:1:25","valueSize":1},{"declaration":3279,"isOffset":false,"isSlot":false,"src":"7565:1:25","valueSize":1},{"declaration":3279,"isOffset":false,"isSlot":false,"src":"7582:1:25","valueSize":1},{"declaration":3279,"isOffset":false,"isSlot":false,"src":"7598:1:25","valueSize":1},{"declaration":3279,"isOffset":false,"isSlot":false,"src":"7608:1:25","valueSize":1},{"declaration":3279,"isOffset":false,"isSlot":false,"src":"7625:1:25","valueSize":1},{"declaration":3279,"isOffset":false,"isSlot":false,"src":"7641:1:25","valueSize":1},{"declaration":3279,"isOffset":false,"isSlot":false,"src":"7651:1:25","valueSize":1},{"declaration":3279,"isOffset":false,"isSlot":false,"src":"7668:1:25","valueSize":1},{"declaration":3279,"isOffset":false,"isSlot":false,"src":"7684:1:25","valueSize":1},{"declaration":3279,"isOffset":false,"isSlot":false,"src":"7694:1:25","valueSize":1},{"declaration":3279,"isOffset":false,"isSlot":false,"src":"7711:1:25","valueSize":1},{"declaration":3279,"isOffset":false,"isSlot":false,"src":"7727:1:25","valueSize":1},{"declaration":3279,"isOffset":false,"isSlot":false,"src":"7737:1:25","valueSize":1},{"declaration":3279,"isOffset":false,"isSlot":false,"src":"7754:1:25","valueSize":1},{"declaration":3279,"isOffset":false,"isSlot":false,"src":"7770:1:25","valueSize":1},{"declaration":3279,"isOffset":false,"isSlot":false,"src":"7780:1:25","valueSize":1},{"declaration":3279,"isOffset":false,"isSlot":false,"src":"7875:1:25","valueSize":1},{"declaration":3279,"isOffset":false,"isSlot":false,"src":"7958:1:25","valueSize":1},{"declaration":3279,"isOffset":false,"isSlot":false,"src":"7979:1:25","valueSize":1}],"id":3281,"nodeType":"InlineAssembly","src":"5977:2041:25"}]},"id":3283,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nodeType":"FunctionDefinition","parameters":{"id":3277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3276,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":3283,"src":"5922:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3275,"name":"uint256","nodeType":"ElementaryTypeName","src":"5922:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5921:11:25"},"returnParameters":{"id":3280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3279,"mutability":"mutable","name":"z","nodeType":"VariableDeclaration","scope":3283,"src":"5956:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3278,"name":"uint256","nodeType":"ElementaryTypeName","src":"5956:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5955:11:25"},"scope":3284,"src":"5908:2116:25","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3285,"src":"338:7688:25"}],"src":"42:7985:25"},"id":25},"contracts/oracles/libs/IntegralMath.sol":{"ast":{"absolutePath":"contracts/oracles/libs/IntegralMath.sol","exportedSymbols":{"IntegralMath":[3848],"MAX_VAL":[3857],"mulMod":[3952],"mulModMax":[3933],"safeAdd":[3871],"unsafeAdd":[3886],"unsafeMul":[3916],"unsafeSub":[3901]},"id":3849,"license":"SEE LICENSE IN LICENSE","nodeType":"SourceUnit","nodes":[{"id":3286,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"51:24:26"},{"absolutePath":"contracts/oracles/libs/Uint.sol","file":"./Uint.sol","id":3287,"nodeType":"ImportDirective","scope":3849,"sourceUnit":3953,"src":"77:20:26","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":3848,"linearizedBaseContracts":[3848],"name":"IntegralMath","nodeType":"ContractDefinition","nodes":[{"body":{"id":3349,"nodeType":"Block","src":"295:541:26","statements":[{"id":3348,"nodeType":"UncheckedBlock","src":"305:525:26","statements":[{"assignments":[3296],"declarations":[{"constant":false,"id":3296,"mutability":"mutable","name":"res","nodeType":"VariableDeclaration","scope":3348,"src":"329:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3295,"name":"uint8","nodeType":"ElementaryTypeName","src":"329:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3298,"initialValue":{"hexValue":"30","id":3297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"341:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"329:13:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3299,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"361:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"323536","id":3300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"365:3:26","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"src":"361:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3344,"nodeType":"Block","src":"540:255:26","statements":[{"body":{"id":3342,"nodeType":"Block","src":"634:147:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3327,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"660:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"665:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3329,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"670:1:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"665:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"660:11:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3341,"nodeType":"IfStatement","src":"656:107:26","trueBody":{"id":3340,"nodeType":"Block","src":"673:90:26","statements":[{"expression":{"id":3334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3332,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"699:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3333,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"705:1:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"699:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3335,"nodeType":"ExpressionStatement","src":"699:7:26"},{"expression":{"id":3338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3336,"name":"res","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"732:3:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"id":3337,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"739:1:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"732:8:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3339,"nodeType":"ExpressionStatement","src":"732:8:26"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3320,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"618:1:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"618:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3343,"initializationExpression":{"assignments":[3317],"declarations":[{"constant":false,"id":3317,"mutability":"mutable","name":"s","nodeType":"VariableDeclaration","scope":3343,"src":"603:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3316,"name":"uint8","nodeType":"ElementaryTypeName","src":"603:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3319,"initialValue":{"hexValue":"313238","id":3318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"613:3:26","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"VariableDeclarationStatement","src":"603:13:26"},"loopExpression":{"expression":{"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3323,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"625:1:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"31","id":3324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"631:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"625:7:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3326,"nodeType":"ExpressionStatement","src":"625:7:26"},"nodeType":"ForStatement","src":"598:183:26"}]},"id":3345,"nodeType":"IfStatement","src":"357:438:26","trueBody":{"id":3315,"nodeType":"Block","src":"370:164:26","statements":[{"body":{"id":3313,"nodeType":"Block","src":"442:78:26","statements":[{"expression":{"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3305,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"464:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"31","id":3306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"470:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"464:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3308,"nodeType":"ExpressionStatement","src":"464:7:26"},{"expression":{"id":3311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3309,"name":"res","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"493:3:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"500:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"493:8:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3312,"nodeType":"ExpressionStatement","src":"493:8:26"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3302,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"435:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"439:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"435:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3314,"nodeType":"WhileStatement","src":"428:92:26"}]}},{"expression":{"id":3346,"name":"res","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"816:3:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3294,"id":3347,"nodeType":"Return","src":"809:10:26"}]}]},"documentation":{"id":3288,"nodeType":"StructuredDocumentation","src":"126:104:26","text":" @dev Compute the largest integer smaller than or equal to the binary logarithm of `n`"},"id":3350,"implemented":true,"kind":"function","modifiers":[],"name":"floorLog2","nodeType":"FunctionDefinition","parameters":{"id":3291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3290,"mutability":"mutable","name":"n","nodeType":"VariableDeclaration","scope":3350,"src":"254:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3289,"name":"uint256","nodeType":"ElementaryTypeName","src":"254:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"253:11:26"},"returnParameters":{"id":3294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3293,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3350,"src":"288:5:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3292,"name":"uint8","nodeType":"ElementaryTypeName","src":"288:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"287:7:26"},"scope":3848,"src":"235:601:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3407,"nodeType":"Block","src":"1008:326:26","statements":[{"id":3406,"nodeType":"UncheckedBlock","src":"1018:310:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3358,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"1046:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1050:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1046:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3403,"nodeType":"IfStatement","src":"1042:254:26","trueBody":{"id":3402,"nodeType":"Block","src":"1053:243:26","statements":[{"assignments":[3362],"declarations":[{"constant":false,"id":3362,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":3402,"src":"1071:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3361,"name":"uint256","nodeType":"ElementaryTypeName","src":"1071:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3368,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3363,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"1083:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1087:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1083:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1091:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1083:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1071:21:26"},{"assignments":[3370],"declarations":[{"constant":false,"id":3370,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":3402,"src":"1110:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3369,"name":"uint256","nodeType":"ElementaryTypeName","src":"1110:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3379,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3371,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"1123:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3372,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"1127:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3373,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"1131:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1127:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1123:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3376,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1122:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1136:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1122:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1110:27:26"},{"body":{"id":3398,"nodeType":"Block","src":"1169:87:26","statements":[{"expression":{"id":3385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3383,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"1191:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3384,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"1195:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1191:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3386,"nodeType":"ExpressionStatement","src":"1191:5:26"},{"expression":{"id":3396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3387,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"1218:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3388,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"1223:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3389,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"1227:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3390,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"1231:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1227:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1223:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3393,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1222:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1236:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1222:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1218:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3397,"nodeType":"ExpressionStatement","src":"1218:19:26"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3380,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"1162:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3381,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"1166:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1162:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3399,"nodeType":"WhileStatement","src":"1155:101:26"},{"expression":{"id":3400,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"1280:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3357,"id":3401,"nodeType":"Return","src":"1273:8:26"}]}},{"expression":{"hexValue":"30","id":3404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1316:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3357,"id":3405,"nodeType":"Return","src":"1309:8:26"}]}]},"documentation":{"id":3351,"nodeType":"StructuredDocumentation","src":"842:99:26","text":" @dev Compute the largest integer smaller than or equal to the square root of `n`"},"id":3408,"implemented":true,"kind":"function","modifiers":[],"name":"floorSqrt","nodeType":"FunctionDefinition","parameters":{"id":3354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3353,"mutability":"mutable","name":"n","nodeType":"VariableDeclaration","scope":3408,"src":"965:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3352,"name":"uint256","nodeType":"ElementaryTypeName","src":"965:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"964:11:26"},"returnParameters":{"id":3357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3356,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3408,"src":"999:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3355,"name":"uint256","nodeType":"ElementaryTypeName","src":"999:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"998:9:26"},"scope":3848,"src":"946:388:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3434,"nodeType":"Block","src":"1505:117:26","statements":[{"id":3433,"nodeType":"UncheckedBlock","src":"1515:101:26","statements":[{"assignments":[3417],"declarations":[{"constant":false,"id":3417,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":3433,"src":"1539:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3416,"name":"uint256","nodeType":"ElementaryTypeName","src":"1539:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3421,"initialValue":{"arguments":[{"id":3419,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"1561:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3418,"name":"floorSqrt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3408,"src":"1551:9:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1551:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1539:24:26"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3422,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"1584:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1587:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1584:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3425,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"1592:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1584:9:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3428,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"1600:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1604:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1600:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1584:21:26","trueExpression":{"id":3427,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"1596:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3415,"id":3432,"nodeType":"Return","src":"1577:28:26"}]}]},"documentation":{"id":3409,"nodeType":"StructuredDocumentation","src":"1340:99:26","text":" @dev Compute the smallest integer larger than or equal to the square root of `n`"},"id":3435,"implemented":true,"kind":"function","modifiers":[],"name":"ceilSqrt","nodeType":"FunctionDefinition","parameters":{"id":3412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3411,"mutability":"mutable","name":"n","nodeType":"VariableDeclaration","scope":3435,"src":"1462:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3410,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1461:11:26"},"returnParameters":{"id":3415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3414,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3435,"src":"1496:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3413,"name":"uint256","nodeType":"ElementaryTypeName","src":"1496:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:9:26"},"scope":3848,"src":"1444:178:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3499,"nodeType":"Block","src":"1793:343:26","statements":[{"id":3498,"nodeType":"UncheckedBlock","src":"1803:327:26","statements":[{"assignments":[3444],"declarations":[{"constant":false,"id":3444,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":3498,"src":"1827:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3443,"name":"uint256","nodeType":"ElementaryTypeName","src":"1827:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3446,"initialValue":{"hexValue":"30","id":3445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1839:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1827:13:26"},{"body":{"id":3494,"nodeType":"Block","src":"1897:201:26","statements":[{"expression":{"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3460,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3444,"src":"1915:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":3461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1921:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1915:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3463,"nodeType":"ExpressionStatement","src":"1915:7:26"},{"assignments":[3465],"declarations":[{"constant":false,"id":3465,"mutability":"mutable","name":"z","nodeType":"VariableDeclaration","scope":3494,"src":"1940:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3464,"name":"uint256","nodeType":"ElementaryTypeName","src":"1940:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3476,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1952:1:26","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3467,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3444,"src":"1956:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1952:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3469,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3444,"src":"1961:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1965:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1961:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3472,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1960:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1952:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1970:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1952:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1940:31:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3477,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3438,"src":"1993:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3478,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3448,"src":"1997:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1993:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3480,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3465,"src":"2002:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1993:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3493,"nodeType":"IfStatement","src":"1989:95:26","trueBody":{"id":3492,"nodeType":"Block","src":"2005:79:26","statements":[{"expression":{"id":3486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3482,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3438,"src":"2027:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3483,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3448,"src":"2032:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3484,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3465,"src":"2036:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2032:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2027:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3487,"nodeType":"ExpressionStatement","src":"2027:10:26"},{"expression":{"id":3490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3488,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3444,"src":"2059:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2064:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2059:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3491,"nodeType":"ExpressionStatement","src":"2059:6:26"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3453,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3448,"src":"1881:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1885:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1881:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3495,"initializationExpression":{"assignments":[3448],"declarations":[{"constant":false,"id":3448,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":3495,"src":"1859:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3447,"name":"uint256","nodeType":"ElementaryTypeName","src":"1859:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3452,"initialValue":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":3451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1871:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"323535","id":3450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:3:26","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1871:8:26","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"nodeType":"VariableDeclarationStatement","src":"1859:20:26"},"loopExpression":{"expression":{"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3456,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3448,"src":"1888:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"33","id":3457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1894:1:26","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"1888:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3459,"nodeType":"ExpressionStatement","src":"1888:7:26"},"nodeType":"ForStatement","src":"1854:244:26"},{"expression":{"id":3496,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3444,"src":"2118:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3442,"id":3497,"nodeType":"Return","src":"2111:8:26"}]}]},"documentation":{"id":3436,"nodeType":"StructuredDocumentation","src":"1628:98:26","text":" @dev Compute the largest integer smaller than or equal to the cubic root of `n`"},"id":3500,"implemented":true,"kind":"function","modifiers":[],"name":"floorCbrt","nodeType":"FunctionDefinition","parameters":{"id":3439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3438,"mutability":"mutable","name":"n","nodeType":"VariableDeclaration","scope":3500,"src":"1750:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3437,"name":"uint256","nodeType":"ElementaryTypeName","src":"1750:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1749:11:26"},"returnParameters":{"id":3442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3441,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3500,"src":"1784:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3440,"name":"uint256","nodeType":"ElementaryTypeName","src":"1784:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1783:9:26"},"scope":3848,"src":"1731:405:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3526,"nodeType":"Block","src":"2306:117:26","statements":[{"id":3525,"nodeType":"UncheckedBlock","src":"2316:101:26","statements":[{"assignments":[3509],"declarations":[{"constant":false,"id":3509,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":3525,"src":"2340:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3508,"name":"uint256","nodeType":"ElementaryTypeName","src":"2340:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3513,"initialValue":{"arguments":[{"id":3511,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3503,"src":"2362:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3510,"name":"floorCbrt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"2352:9:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2352:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2340:24:26"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3514,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"2385:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"33","id":3515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2388:1:26","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"2385:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3517,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3503,"src":"2393:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2385:9:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3520,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"2401:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2405:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2401:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2385:21:26","trueExpression":{"id":3519,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"2397:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3507,"id":3524,"nodeType":"Return","src":"2378:28:26"}]}]},"documentation":{"id":3501,"nodeType":"StructuredDocumentation","src":"2142:98:26","text":" @dev Compute the smallest integer larger than or equal to the cubic root of `n`"},"id":3527,"implemented":true,"kind":"function","modifiers":[],"name":"ceilCbrt","nodeType":"FunctionDefinition","parameters":{"id":3504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3503,"mutability":"mutable","name":"n","nodeType":"VariableDeclaration","scope":3527,"src":"2263:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3502,"name":"uint256","nodeType":"ElementaryTypeName","src":"2263:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2262:11:26"},"returnParameters":{"id":3507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3506,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3527,"src":"2297:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3505,"name":"uint256","nodeType":"ElementaryTypeName","src":"2297:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2296:9:26"},"scope":3848,"src":"2245:178:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3554,"nodeType":"Block","src":"2601:87:26","statements":[{"id":3553,"nodeType":"UncheckedBlock","src":"2611:71:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3537,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"2642:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3538,"name":"d","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"2646:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2642:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3540,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"2651:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3541,"name":"d","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"2655:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2651:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3543,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2650:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3544,"name":"d","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"2661:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3545,"name":"d","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"2665:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2669:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2665:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2661:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3549,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2660:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2650:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2642:29:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3536,"id":3552,"nodeType":"Return","src":"2635:36:26"}]}]},"documentation":{"id":3528,"nodeType":"StructuredDocumentation","src":"2429:95:26","text":" @dev Compute the nearest integer to the quotient of `n` and `d` (or `n / d`)"},"id":3555,"implemented":true,"kind":"function","modifiers":[],"name":"roundDiv","nodeType":"FunctionDefinition","parameters":{"id":3533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3530,"mutability":"mutable","name":"n","nodeType":"VariableDeclaration","scope":3555,"src":"2547:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3529,"name":"uint256","nodeType":"ElementaryTypeName","src":"2547:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3532,"mutability":"mutable","name":"d","nodeType":"VariableDeclaration","scope":3555,"src":"2558:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3531,"name":"uint256","nodeType":"ElementaryTypeName","src":"2558:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2546:22:26"},"returnParameters":{"id":3536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3535,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3555,"src":"2592:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3534,"name":"uint256","nodeType":"ElementaryTypeName","src":"2592:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2591:9:26"},"scope":3848,"src":"2529:159:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3651,"nodeType":"Block","src":"2899:1065:26","statements":[{"id":3650,"nodeType":"UncheckedBlock","src":"2909:1049:26","statements":[{"assignments":[3568,3570],"declarations":[{"constant":false,"id":3568,"mutability":"mutable","name":"xyh","nodeType":"VariableDeclaration","scope":3650,"src":"2934:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3567,"name":"uint256","nodeType":"ElementaryTypeName","src":"2934:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3570,"mutability":"mutable","name":"xyl","nodeType":"VariableDeclaration","scope":3650,"src":"2947:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3569,"name":"uint256","nodeType":"ElementaryTypeName","src":"2947:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3575,"initialValue":{"arguments":[{"id":3572,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"2969:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3573,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3560,"src":"2972:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3571,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3736,"src":"2962:6:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":3574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2962:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"2933:41:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3576,"name":"xyh","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"2992:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2999:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2992:8:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3584,"nodeType":"IfStatement","src":"2988:98:26","trueBody":{"id":3583,"nodeType":"Block","src":"3002:84:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3579,"name":"xyl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3570,"src":"3064:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3580,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"3070:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3064:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3566,"id":3582,"nodeType":"Return","src":"3057:14:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3585,"name":"xyh","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"3103:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3586,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"3109:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3103:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3646,"nodeType":"IfStatement","src":"3099:801:26","trueBody":{"id":3645,"nodeType":"Block","src":"3112:788:26","statements":[{"assignments":[3589],"declarations":[{"constant":false,"id":3589,"mutability":"mutable","name":"m","nodeType":"VariableDeclaration","scope":3645,"src":"3171:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3588,"name":"uint256","nodeType":"ElementaryTypeName","src":"3171:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3595,"initialValue":{"arguments":[{"id":3591,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"3190:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3592,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3560,"src":"3193:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3593,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"3196:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3590,"name":"mulMod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3952,"src":"3183:6:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3183:15:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3171:27:26"},{"assignments":[3597,3599],"declarations":[{"constant":false,"id":3597,"mutability":"mutable","name":"nh","nodeType":"VariableDeclaration","scope":3645,"src":"3236:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3596,"name":"uint256","nodeType":"ElementaryTypeName","src":"3236:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3599,"mutability":"mutable","name":"nl","nodeType":"VariableDeclaration","scope":3645,"src":"3248:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3598,"name":"uint256","nodeType":"ElementaryTypeName","src":"3248:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3605,"initialValue":{"arguments":[{"id":3601,"name":"xyh","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"3269:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3602,"name":"xyl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3570,"src":"3274:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3603,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3589,"src":"3279:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3600,"name":"sub512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"3262:6:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256,uint256)"}},"id":3604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3262:19:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3235:46:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3606,"name":"nh","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3597,"src":"3355:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3361:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3355:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3614,"nodeType":"IfStatement","src":"3351:104:26","trueBody":{"id":3613,"nodeType":"Block","src":"3364:91:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3609,"name":"nl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"3430:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3610,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"3435:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3430:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3566,"id":3612,"nodeType":"Return","src":"3423:13:26"}]}},{"assignments":[3616],"declarations":[{"constant":false,"id":3616,"mutability":"mutable","name":"p","nodeType":"VariableDeclaration","scope":3645,"src":"3472:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3615,"name":"uint256","nodeType":"ElementaryTypeName","src":"3472:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3623,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"hexValue":"30","id":3618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3494:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":3619,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"3497:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3617,"name":"unsafeSub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"3484:9:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3484:15:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3621,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"3502:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3484:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3472:31:26"},{"assignments":[3625],"declarations":[{"constant":false,"id":3625,"mutability":"mutable","name":"q","nodeType":"VariableDeclaration","scope":3645,"src":"3580:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3624,"name":"uint256","nodeType":"ElementaryTypeName","src":"3580:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3631,"initialValue":{"arguments":[{"id":3627,"name":"nh","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3597,"src":"3599:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3628,"name":"nl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"3603:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3629,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3616,"src":"3607:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3626,"name":"div512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3807,"src":"3592:6:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3592:17:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3580:29:26"},{"assignments":[3633],"declarations":[{"constant":false,"id":3633,"mutability":"mutable","name":"r","nodeType":"VariableDeclaration","scope":3645,"src":"3714:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3632,"name":"uint256","nodeType":"ElementaryTypeName","src":"3714:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3639,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3635,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"3733:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3636,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3616,"src":"3737:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3733:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3634,"name":"inv256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3847,"src":"3726:6:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3726:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3714:25:26"},{"expression":{"arguments":[{"id":3641,"name":"q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3625,"src":"3834:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3642,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"3837:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3640,"name":"unsafeMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"3824:9:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3824:15:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3566,"id":3644,"nodeType":"Return","src":"3817:22:26"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3647,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3913:6:26","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$__$returns$__$","typeString":"function () pure"}},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3913:8:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3649,"nodeType":"ExpressionStatement","src":"3913:8:26"}]}]},"documentation":{"id":3556,"nodeType":"StructuredDocumentation","src":"2694:88:26","text":" @dev Compute the largest integer smaller than or equal to `x * y / z`"},"id":3652,"implemented":true,"kind":"function","modifiers":[],"name":"mulDivF","nodeType":"FunctionDefinition","parameters":{"id":3563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3558,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":3652,"src":"2813:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3557,"name":"uint256","nodeType":"ElementaryTypeName","src":"2813:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3560,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":3652,"src":"2832:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3559,"name":"uint256","nodeType":"ElementaryTypeName","src":"2832:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3562,"mutability":"mutable","name":"z","nodeType":"VariableDeclaration","scope":3652,"src":"2851:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3561,"name":"uint256","nodeType":"ElementaryTypeName","src":"2851:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2803:63:26"},"returnParameters":{"id":3566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3565,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3652,"src":"2890:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3564,"name":"uint256","nodeType":"ElementaryTypeName","src":"2890:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2889:9:26"},"scope":3848,"src":"2787:1177:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3688,"nodeType":"Block","src":"4175:160:26","statements":[{"id":3687,"nodeType":"UncheckedBlock","src":"4185:144:26","statements":[{"assignments":[3665],"declarations":[{"constant":false,"id":3665,"mutability":"mutable","name":"w","nodeType":"VariableDeclaration","scope":3687,"src":"4209:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3664,"name":"uint256","nodeType":"ElementaryTypeName","src":"4209:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3671,"initialValue":{"arguments":[{"id":3667,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"4229:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3668,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3657,"src":"4232:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3669,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"4235:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3666,"name":"mulDivF","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"4221:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4221:16:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4209:28:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3673,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"4262:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3674,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3657,"src":"4265:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3675,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"4268:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3672,"name":"mulMod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3952,"src":"4255:6:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4255:15:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4273:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4255:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3684,"nodeType":"IfStatement","src":"4251:45:26","trueBody":{"expression":{"arguments":[{"id":3680,"name":"w","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"4291:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":3681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4294:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":3679,"name":"safeAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3871,"src":"4283:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4283:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3663,"id":3683,"nodeType":"Return","src":"4276:20:26"}},{"expression":{"id":3685,"name":"w","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"4317:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3663,"id":3686,"nodeType":"Return","src":"4310:8:26"}]}]},"documentation":{"id":3653,"nodeType":"StructuredDocumentation","src":"3970:88:26","text":" @dev Compute the smallest integer larger than or equal to `x * y / z`"},"id":3689,"implemented":true,"kind":"function","modifiers":[],"name":"mulDivC","nodeType":"FunctionDefinition","parameters":{"id":3660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3655,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":3689,"src":"4089:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3654,"name":"uint256","nodeType":"ElementaryTypeName","src":"4089:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3657,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":3689,"src":"4108:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3656,"name":"uint256","nodeType":"ElementaryTypeName","src":"4108:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3659,"mutability":"mutable","name":"z","nodeType":"VariableDeclaration","scope":3689,"src":"4127:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3658,"name":"uint256","nodeType":"ElementaryTypeName","src":"4127:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4079:63:26"},"returnParameters":{"id":3663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3662,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3689,"src":"4166:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3661,"name":"uint256","nodeType":"ElementaryTypeName","src":"4166:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4165:9:26"},"scope":3848,"src":"4063:272:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3735,"nodeType":"Block","src":"4504:207:26","statements":[{"id":3734,"nodeType":"UncheckedBlock","src":"4514:191:26","statements":[{"assignments":[3702],"declarations":[{"constant":false,"id":3702,"mutability":"mutable","name":"p","nodeType":"VariableDeclaration","scope":3734,"src":"4538:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3701,"name":"uint256","nodeType":"ElementaryTypeName","src":"4538:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3707,"initialValue":{"arguments":[{"id":3704,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"4560:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3705,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"4563:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3703,"name":"mulModMax","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3933,"src":"4550:9:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4550:15:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4538:27:26"},{"assignments":[3709],"declarations":[{"constant":false,"id":3709,"mutability":"mutable","name":"q","nodeType":"VariableDeclaration","scope":3734,"src":"4579:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3708,"name":"uint256","nodeType":"ElementaryTypeName","src":"4579:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3714,"initialValue":{"arguments":[{"id":3711,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"4601:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3712,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"4604:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3710,"name":"unsafeMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"4591:9:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4591:15:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4579:27:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3715,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"4624:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3716,"name":"q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"4629:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4624:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3724,"nodeType":"IfStatement","src":"4620:29:26","trueBody":{"expression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3718,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"4640:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3719,"name":"q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"4644:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3721,"name":"q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"4647:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3722,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4639:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":3700,"id":3723,"nodeType":"Return","src":"4632:17:26"}},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3726,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"4681:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3727,"name":"q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"4684:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3725,"name":"unsafeSub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"4671:9:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4671:15:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4689:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4671:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3731,"name":"q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"4692:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3732,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4670:24:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":3700,"id":3733,"nodeType":"Return","src":"4663:31:26"}]}]},"documentation":{"id":3690,"nodeType":"StructuredDocumentation","src":"4341:52:26","text":" @dev Compute the value of `x * y`"},"id":3736,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nodeType":"FunctionDefinition","parameters":{"id":3695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3692,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":3736,"src":"4414:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3691,"name":"uint256","nodeType":"ElementaryTypeName","src":"4414:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3694,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":3736,"src":"4425:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3693,"name":"uint256","nodeType":"ElementaryTypeName","src":"4425:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4413:22:26"},"returnParameters":{"id":3700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3697,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3736,"src":"4482:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3696,"name":"uint256","nodeType":"ElementaryTypeName","src":"4482:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3699,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3736,"src":"4491:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3698,"name":"uint256","nodeType":"ElementaryTypeName","src":"4491:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4481:18:26"},"scope":3848,"src":"4398:313:26","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3770,"nodeType":"Block","src":"4943:130:26","statements":[{"id":3769,"nodeType":"UncheckedBlock","src":"4953:114:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3750,"name":"xl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3741,"src":"4981:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3751,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"4987:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4981:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3759,"nodeType":"IfStatement","src":"4977:32:26","trueBody":{"expression":{"components":[{"id":3753,"name":"xh","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3739,"src":"4998:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3754,"name":"xl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3741,"src":"5002:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3755,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"5007:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5002:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3757,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4997:12:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":3749,"id":3758,"nodeType":"Return","src":"4990:19:26"}},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3760,"name":"xh","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3739,"src":"5031:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5036:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5031:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3764,"name":"xl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3741,"src":"5049:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3765,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"5053:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3763,"name":"unsafeSub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"5039:9:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5039:16:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3767,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5030:26:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":3749,"id":3768,"nodeType":"Return","src":"5023:33:26"}]}]},"documentation":{"id":3737,"nodeType":"StructuredDocumentation","src":"4717:100:26","text":" @dev Compute the value of `2 ^ 256 * xh + xl - y`, where `2 ^ 256 * xh + xl >= y`"},"id":3771,"implemented":true,"kind":"function","modifiers":[],"name":"sub512","nodeType":"FunctionDefinition","parameters":{"id":3744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3739,"mutability":"mutable","name":"xh","nodeType":"VariableDeclaration","scope":3771,"src":"4847:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3738,"name":"uint256","nodeType":"ElementaryTypeName","src":"4847:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3741,"mutability":"mutable","name":"xl","nodeType":"VariableDeclaration","scope":3771,"src":"4867:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3740,"name":"uint256","nodeType":"ElementaryTypeName","src":"4867:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3743,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":3771,"src":"4887:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3742,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4837:65:26"},"returnParameters":{"id":3749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3746,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3771,"src":"4925:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3745,"name":"uint256","nodeType":"ElementaryTypeName","src":"4925:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3748,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3771,"src":"4934:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3747,"name":"uint256","nodeType":"ElementaryTypeName","src":"4934:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4924:18:26"},"scope":3848,"src":"4822:251:26","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3806,"nodeType":"Block","src":"5310:225:26","statements":[{"id":3805,"nodeType":"UncheckedBlock","src":"5320:209:26","statements":[{"assignments":[3784],"declarations":[{"constant":false,"id":3784,"mutability":"mutable","name":"pow2nInv","nodeType":"VariableDeclaration","scope":3805,"src":"5344:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3783,"name":"uint256","nodeType":"ElementaryTypeName","src":"5344:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3794,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"hexValue":"30","id":3787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5383:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":3788,"name":"pow2n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3778,"src":"5386:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3786,"name":"unsafeSub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"5373:9:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5373:19:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3790,"name":"pow2n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3778,"src":"5395:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5373:27:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":3792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5402:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":3785,"name":"unsafeAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"5363:9:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5363:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5344:60:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3796,"name":"xh","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"5455:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3797,"name":"pow2nInv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"5459:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3795,"name":"unsafeMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"5445:9:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5445:23:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3799,"name":"xl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3776,"src":"5472:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3800,"name":"pow2n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3778,"src":"5477:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5472:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3802,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5471:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5445:38:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3782,"id":3804,"nodeType":"Return","src":"5438:45:26"}]}]},"documentation":{"id":3772,"nodeType":"StructuredDocumentation","src":"5079:110:26","text":" @dev Compute the value of `(2 ^ 256 * xh + xl) / pow2n`, where `xl` is divisible by `pow2n`"},"id":3807,"implemented":true,"kind":"function","modifiers":[],"name":"div512","nodeType":"FunctionDefinition","parameters":{"id":3779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3774,"mutability":"mutable","name":"xh","nodeType":"VariableDeclaration","scope":3807,"src":"5219:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3773,"name":"uint256","nodeType":"ElementaryTypeName","src":"5219:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3776,"mutability":"mutable","name":"xl","nodeType":"VariableDeclaration","scope":3807,"src":"5239:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3775,"name":"uint256","nodeType":"ElementaryTypeName","src":"5239:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3778,"mutability":"mutable","name":"pow2n","nodeType":"VariableDeclaration","scope":3807,"src":"5259:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3777,"name":"uint256","nodeType":"ElementaryTypeName","src":"5259:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5209:69:26"},"returnParameters":{"id":3782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3781,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3807,"src":"5301:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3780,"name":"uint256","nodeType":"ElementaryTypeName","src":"5301:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5300:9:26"},"scope":3848,"src":"5194:341:26","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3846,"nodeType":"Block","src":"5713:336:26","statements":[{"id":3845,"nodeType":"UncheckedBlock","src":"5723:320:26","statements":[{"assignments":[3816],"declarations":[{"constant":false,"id":3816,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":3845,"src":"5851:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3815,"name":"uint256","nodeType":"ElementaryTypeName","src":"5851:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3818,"initialValue":{"hexValue":"31","id":3817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5863:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"5851:13:26"},{"body":{"expression":{"id":3840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3829,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"5926:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3831,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"5940:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"32","id":3833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5953:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},{"arguments":[{"id":3835,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"5966:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3836,"name":"d","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3810,"src":"5969:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3834,"name":"unsafeMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"5956:9:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5956:15:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3832,"name":"unsafeSub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"5943:9:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5943:29:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3830,"name":"unsafeMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"5930:9:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5930:43:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5926:47:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3841,"nodeType":"ExpressionStatement","src":"5926:47:26"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3823,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3820,"src":"5898:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"38","id":3824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5902:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"5898:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3842,"initializationExpression":{"assignments":[3820],"declarations":[{"constant":false,"id":3820,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":3842,"src":"5883:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3819,"name":"uint256","nodeType":"ElementaryTypeName","src":"5883:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3822,"initialValue":{"hexValue":"30","id":3821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5895:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5883:13:26"},"loopExpression":{"expression":{"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"5905:3:26","subExpression":{"id":3826,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3820,"src":"5907:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3828,"nodeType":"ExpressionStatement","src":"5905:3:26"},"nodeType":"ForStatement","src":"5878:95:26"},{"expression":{"id":3843,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"6031:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3814,"id":3844,"nodeType":"Return","src":"6024:8:26"}]}]},"documentation":{"id":3808,"nodeType":"StructuredDocumentation","src":"5541:109:26","text":" @dev Compute the inverse of `d` modulo `2 ^ 256`, where `d` is congruent to `1` modulo `2`"},"id":3847,"implemented":true,"kind":"function","modifiers":[],"name":"inv256","nodeType":"FunctionDefinition","parameters":{"id":3811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3810,"mutability":"mutable","name":"d","nodeType":"VariableDeclaration","scope":3847,"src":"5671:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3809,"name":"uint256","nodeType":"ElementaryTypeName","src":"5671:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5670:11:26"},"returnParameters":{"id":3814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3813,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3847,"src":"5704:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3812,"name":"uint256","nodeType":"ElementaryTypeName","src":"5704:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5703:9:26"},"scope":3848,"src":"5655:394:26","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3849,"src":"99:5952:26"}],"src":"51:6001:26"},"id":26},"contracts/oracles/libs/Uint.sol":{"ast":{"absolutePath":"contracts/oracles/libs/Uint.sol","exportedSymbols":{"MAX_VAL":[3857],"mulMod":[3952],"mulModMax":[3933],"safeAdd":[3871],"unsafeAdd":[3886],"unsafeMul":[3916],"unsafeSub":[3901]},"id":3953,"license":"SEE LICENSE IN LICENSE","nodeType":"SourceUnit","nodes":[{"id":3850,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"51:24:27"},{"constant":true,"id":3857,"mutability":"constant","name":"MAX_VAL","nodeType":"VariableDeclaration","scope":3953,"src":"77:44:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3851,"name":"uint256","nodeType":"ElementaryTypeName","src":"77:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"expression":{"arguments":[{"id":3854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"109:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3853,"name":"uint256","nodeType":"ElementaryTypeName","src":"109:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3852,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"104:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"104:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"104:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"body":{"id":3870,"nodeType":"Block","src":"209:21:27","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3866,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3859,"src":"222:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3867,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3861,"src":"226:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"222:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3865,"id":3869,"nodeType":"Return","src":"215:12:27"}]},"id":3871,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"safeAdd","nodeType":"FunctionDefinition","parameters":{"id":3862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3859,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":3871,"src":"164:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3858,"name":"uint256","nodeType":"ElementaryTypeName","src":"164:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3861,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":3871,"src":"175:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3860,"name":"uint256","nodeType":"ElementaryTypeName","src":"175:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"163:22:27"},"returnParameters":{"id":3865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3864,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3871,"src":"200:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3863,"name":"uint256","nodeType":"ElementaryTypeName","src":"200:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"199:9:27"},"scope":3953,"src":"147:83:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3885,"nodeType":"Block","src":"327:47:27","statements":[{"id":3884,"nodeType":"UncheckedBlock","src":"333:39:27","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3880,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3873,"src":"360:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3881,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"364:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"360:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3879,"id":3883,"nodeType":"Return","src":"353:12:27"}]}]},"id":3886,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"unsafeAdd","nodeType":"FunctionDefinition","parameters":{"id":3876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3873,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":3886,"src":"282:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3872,"name":"uint256","nodeType":"ElementaryTypeName","src":"282:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3875,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":3886,"src":"293:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3874,"name":"uint256","nodeType":"ElementaryTypeName","src":"293:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"281:22:27"},"returnParameters":{"id":3879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3878,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3886,"src":"318:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3877,"name":"uint256","nodeType":"ElementaryTypeName","src":"318:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"317:9:27"},"scope":3953,"src":"263:111:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3900,"nodeType":"Block","src":"471:47:27","statements":[{"id":3899,"nodeType":"UncheckedBlock","src":"477:39:27","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3895,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"504:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3896,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"508:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"504:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3894,"id":3898,"nodeType":"Return","src":"497:12:27"}]}]},"id":3901,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"unsafeSub","nodeType":"FunctionDefinition","parameters":{"id":3891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3888,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":3901,"src":"426:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3887,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3890,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":3901,"src":"437:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3889,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:27"},"returnParameters":{"id":3894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3893,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3901,"src":"462:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3892,"name":"uint256","nodeType":"ElementaryTypeName","src":"462:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"461:9:27"},"scope":3953,"src":"407:111:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3915,"nodeType":"Block","src":"615:47:27","statements":[{"id":3914,"nodeType":"UncheckedBlock","src":"621:39:27","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3910,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"648:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3911,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"652:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"648:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3909,"id":3913,"nodeType":"Return","src":"641:12:27"}]}]},"id":3916,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"unsafeMul","nodeType":"FunctionDefinition","parameters":{"id":3906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3903,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":3916,"src":"570:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3902,"name":"uint256","nodeType":"ElementaryTypeName","src":"570:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3905,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":3916,"src":"581:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3904,"name":"uint256","nodeType":"ElementaryTypeName","src":"581:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"569:22:27"},"returnParameters":{"id":3909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3908,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3916,"src":"606:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3907,"name":"uint256","nodeType":"ElementaryTypeName","src":"606:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"605:9:27"},"scope":3953,"src":"551:111:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3932,"nodeType":"Block","src":"749:63:27","statements":[{"id":3931,"nodeType":"UncheckedBlock","src":"755:55:27","statements":[{"expression":{"arguments":[{"id":3926,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3918,"src":"789:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3927,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"792:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3928,"name":"MAX_VAL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"795:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3925,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"782:6:27","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"782:21:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3924,"id":3930,"nodeType":"Return","src":"775:28:27"}]}]},"id":3933,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"mulModMax","nodeType":"FunctionDefinition","parameters":{"id":3921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3918,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":3933,"src":"704:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3917,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3920,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":3933,"src":"715:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3919,"name":"uint256","nodeType":"ElementaryTypeName","src":"715:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:22:27"},"returnParameters":{"id":3924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3923,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3933,"src":"740:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3922,"name":"uint256","nodeType":"ElementaryTypeName","src":"740:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"739:9:27"},"scope":3953,"src":"685:127:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3951,"nodeType":"Block","src":"921:57:27","statements":[{"id":3950,"nodeType":"UncheckedBlock","src":"927:49:27","statements":[{"expression":{"arguments":[{"id":3945,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"961:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3946,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"964:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3947,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3939,"src":"967:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3944,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"954:6:27","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"954:15:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3943,"id":3949,"nodeType":"Return","src":"947:22:27"}]}]},"id":3952,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"mulMod","nodeType":"FunctionDefinition","parameters":{"id":3940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3935,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":3952,"src":"856:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3934,"name":"uint256","nodeType":"ElementaryTypeName","src":"856:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3937,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":3952,"src":"871:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3936,"name":"uint256","nodeType":"ElementaryTypeName","src":"871:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3939,"mutability":"mutable","name":"z","nodeType":"VariableDeclaration","scope":3952,"src":"886:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3938,"name":"uint256","nodeType":"ElementaryTypeName","src":"886:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"850:47:27"},"returnParameters":{"id":3943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3942,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3952,"src":"912:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3941,"name":"uint256","nodeType":"ElementaryTypeName","src":"912:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"911:9:27"},"scope":3953,"src":"835:143:27","stateMutability":"pure","virtual":false,"visibility":"internal"}],"src":"51:928:27"},"id":27},"contracts/oracles/libs/vMath.sol":{"ast":{"absolutePath":"contracts/oracles/libs/vMath.sol","exportedSymbols":{"FixedPointMathLib":[3284],"IntegralMath":[3848],"vMath":[4067]},"id":4068,"nodeType":"SourceUnit","nodes":[{"id":3954,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"0:24:28"},{"absolutePath":"contracts/oracles/libs/FixedPointMathLib.sol","file":"./FixedPointMathLib.sol","id":3956,"nodeType":"ImportDirective","scope":4068,"sourceUnit":3285,"src":"26:58:28","symbolAliases":[{"foreign":{"id":3955,"name":"FixedPointMathLib","nodeType":"Identifier","overloadedDeclarations":[],"src":"34:17:28","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/oracles/libs/IntegralMath.sol","file":"./IntegralMath.sol","id":3958,"nodeType":"ImportDirective","scope":4068,"sourceUnit":3849,"src":"85:48:28","symbolAliases":[{"foreign":{"id":3957,"name":"IntegralMath","nodeType":"Identifier","overloadedDeclarations":[],"src":"93:12:28","typeDescriptions":{}}}],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":4067,"linearizedBaseContracts":[4067],"name":"vMath","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3961,"mutability":"constant","name":"WAD","nodeType":"VariableDeclaration","scope":4067,"src":"155:36:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3959,"name":"uint256","nodeType":"ElementaryTypeName","src":"155:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653138","id":3960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"187:4:28","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"visibility":"internal"},{"body":{"id":4003,"nodeType":"Block","src":"307:200:28","statements":[{"assignments":[3970],"declarations":[{"constant":false,"id":3970,"mutability":"mutable","name":"min","nodeType":"VariableDeclaration","scope":4003,"src":"317:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3969,"name":"uint256","nodeType":"ElementaryTypeName","src":"317:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3974,"initialValue":{"baseExpression":{"id":3971,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3964,"src":"331:5:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":3973,"indexExpression":{"hexValue":"30","id":3972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"337:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"331:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"317:22:28"},{"body":{"id":3999,"nodeType":"Block","src":"390:91:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3986,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"408:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"baseExpression":{"id":3987,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3964,"src":"414:5:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":3989,"indexExpression":{"id":3988,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"420:1:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"414:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"408:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3998,"nodeType":"IfStatement","src":"404:67:28","trueBody":{"id":3997,"nodeType":"Block","src":"424:47:28","statements":[{"expression":{"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3991,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"442:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3992,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3964,"src":"448:5:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":3994,"indexExpression":{"id":3993,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"454:1:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"448:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"442:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3996,"nodeType":"ExpressionStatement","src":"442:14:28"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3979,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"367:1:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3980,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3964,"src":"371:5:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":3981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"371:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"367:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4000,"initializationExpression":{"assignments":[3976],"declarations":[{"constant":false,"id":3976,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":4000,"src":"354:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3975,"name":"uint8","nodeType":"ElementaryTypeName","src":"354:5:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3978,"initialValue":{"hexValue":"31","id":3977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"364:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"354:11:28"},"loopExpression":{"expression":{"id":3984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"385:3:28","subExpression":{"id":3983,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"385:1:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3985,"nodeType":"ExpressionStatement","src":"385:3:28"},"nodeType":"ForStatement","src":"349:132:28"},{"expression":{"id":4001,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"497:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3968,"id":4002,"nodeType":"Return","src":"490:10:28"}]},"functionSelector":"d834e619","id":4004,"implemented":true,"kind":"function","modifiers":[],"name":"min","nodeType":"FunctionDefinition","parameters":{"id":3965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3964,"mutability":"mutable","name":"array","nodeType":"VariableDeclaration","scope":4004,"src":"249:24:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3962,"name":"uint256","nodeType":"ElementaryTypeName","src":"249:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3963,"nodeType":"ArrayTypeName","src":"249:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"248:26:28"},"returnParameters":{"id":3968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3967,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4004,"src":"298:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3966,"name":"uint256","nodeType":"ElementaryTypeName","src":"298:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"297:9:28"},"scope":4067,"src":"236:271:28","stateMutability":"pure","virtual":false,"visibility":"external"},{"body":{"id":4039,"nodeType":"Block","src":"587:160:28","statements":[{"assignments":[4013],"declarations":[{"constant":false,"id":4013,"mutability":"mutable","name":"product","nodeType":"VariableDeclaration","scope":4039,"src":"597:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4012,"name":"uint256","nodeType":"ElementaryTypeName","src":"597:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4017,"initialValue":{"baseExpression":{"id":4014,"name":"nums","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"615:4:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":4016,"indexExpression":{"hexValue":"30","id":4015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"620:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"615:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"597:25:28"},{"body":{"id":4035,"nodeType":"Block","src":"674:43:28","statements":[{"expression":{"id":4033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4029,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4013,"src":"688:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"baseExpression":{"id":4030,"name":"nums","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"699:4:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":4032,"indexExpression":{"id":4031,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"704:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"699:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"688:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4034,"nodeType":"ExpressionStatement","src":"688:18:28"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4022,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"652:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4023,"name":"nums","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"656:4:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":4024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"656:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"652:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4036,"initializationExpression":{"assignments":[4019],"declarations":[{"constant":false,"id":4019,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":4036,"src":"637:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4018,"name":"uint256","nodeType":"ElementaryTypeName","src":"637:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4021,"initialValue":{"hexValue":"31","id":4020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"649:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"637:13:28"},"loopExpression":{"expression":{"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"669:3:28","subExpression":{"id":4026,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"669:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4028,"nodeType":"ExpressionStatement","src":"669:3:28"},"nodeType":"ForStatement","src":"632:85:28"},{"expression":{"id":4037,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4013,"src":"733:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4011,"id":4038,"nodeType":"Return","src":"726:14:28"}]},"functionSelector":"8e5fede8","id":4040,"implemented":true,"kind":"function","modifiers":[],"name":"product","nodeType":"FunctionDefinition","parameters":{"id":4008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4007,"mutability":"mutable","name":"nums","nodeType":"VariableDeclaration","scope":4040,"src":"530:23:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4005,"name":"uint256","nodeType":"ElementaryTypeName","src":"530:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4006,"nodeType":"ArrayTypeName","src":"530:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"529:25:28"},"returnParameters":{"id":4011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4010,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4040,"src":"578:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4009,"name":"uint256","nodeType":"ElementaryTypeName","src":"578:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"577:9:28"},"scope":4067,"src":"513:234:28","stateMutability":"pure","virtual":false,"visibility":"external"},{"body":{"id":4065,"nodeType":"Block","src":"930:181:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4049,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4042,"src":"944:1:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"32","id":4050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"949:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"944:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4063,"nodeType":"Block","src":"1021:84:28","statements":[{"expression":{"arguments":[{"id":4060,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"1086:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4058,"name":"IntegralMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"1063:12:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IntegralMath_$3848_$","typeString":"type(library IntegralMath)"}},"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"floorCbrt","nodeType":"MemberAccess","referencedDeclaration":3500,"src":"1063:22:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1063:31:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4048,"id":4062,"nodeType":"Return","src":"1056:38:28"}]},"id":4064,"nodeType":"IfStatement","src":"940:165:28","trueBody":{"id":4057,"nodeType":"Block","src":"952:63:28","statements":[{"expression":{"arguments":[{"id":4054,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"996:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4052,"name":"FixedPointMathLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3284,"src":"973:17:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FixedPointMathLib_$3284_$","typeString":"type(library FixedPointMathLib)"}},"id":4053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":3283,"src":"973:22:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"973:31:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4048,"id":4056,"nodeType":"Return","src":"966:38:28"}]}}]},"functionSelector":"f43b9abe","id":4066,"implemented":true,"kind":"function","modifiers":[],"name":"geometric_mean","nodeType":"FunctionDefinition","parameters":{"id":4045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4042,"mutability":"mutable","name":"n","nodeType":"VariableDeclaration","scope":4066,"src":"844:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4041,"name":"uint8","nodeType":"ElementaryTypeName","src":"844:5:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4044,"mutability":"mutable","name":"product","nodeType":"VariableDeclaration","scope":4066,"src":"853:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4043,"name":"uint256","nodeType":"ElementaryTypeName","src":"853:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"843:26:28"},"returnParameters":{"id":4048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4047,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4066,"src":"917:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4046,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"916:9:28"},"scope":4067,"src":"820:291:28","stateMutability":"pure","virtual":false,"visibility":"external"}],"scope":4068,"src":"135:978:28"}],"src":"0:1114:28"},"id":28},"contracts/protocol/libraries/types/DataTypes.sol":{"ast":{"absolutePath":"contracts/protocol/libraries/types/DataTypes.sol","exportedSymbols":{"DataTypes":[4238]},"id":4239,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":4069,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"37:24:29"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":4238,"linearizedBaseContracts":[4238],"name":"DataTypes","nodeType":"ContractDefinition","nodes":[{"canonicalName":"DataTypes.ReserveAssetType","id":4072,"members":[{"id":4070,"name":"AAVE","nodeType":"EnumValue","src":"225:4:29"},{"id":4071,"name":"CURVE","nodeType":"EnumValue","src":"239:5:29"}],"name":"ReserveAssetType","nodeType":"EnumDefinition","src":"193:57:29"},{"canonicalName":"DataTypes.AssetData","id":4082,"members":[{"constant":false,"id":4074,"mutability":"mutable","name":"collateralRisk","nodeType":"VariableDeclaration","scope":4082,"src":"459:20:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4073,"name":"uint8","nodeType":"ElementaryTypeName","src":"459:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4076,"mutability":"mutable","name":"isLendable","nodeType":"VariableDeclaration","scope":4082,"src":"489:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4075,"name":"bool","nodeType":"ElementaryTypeName","src":"489:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4078,"mutability":"mutable","name":"isAllowedCollateralInHigherTranches","nodeType":"VariableDeclaration","scope":4082,"src":"514:40:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4077,"name":"bool","nodeType":"ElementaryTypeName","src":"514:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4081,"mutability":"mutable","name":"assetType","nodeType":"VariableDeclaration","scope":4082,"src":"564:26:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ReserveAssetType_$4072","typeString":"enum DataTypes.ReserveAssetType"},"typeName":{"id":4080,"nodeType":"UserDefinedTypeName","pathNode":{"id":4079,"name":"ReserveAssetType","nodeType":"IdentifierPath","referencedDeclaration":4072,"src":"564:16:29"},"referencedDeclaration":4072,"src":"564:16:29","typeDescriptions":{"typeIdentifier":"t_enum$_ReserveAssetType_$4072","typeString":"enum DataTypes.ReserveAssetType"}},"visibility":"internal"}],"name":"AssetData","nodeType":"StructDefinition","scope":4238,"src":"432:165:29","visibility":"public"},{"canonicalName":"DataTypes.TrancheAddress","id":4087,"members":[{"constant":false,"id":4084,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":4087,"src":"635:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4083,"name":"uint8","nodeType":"ElementaryTypeName","src":"635:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4086,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":4087,"src":"658:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4085,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"TrancheAddress","nodeType":"StructDefinition","scope":4238,"src":"603:75:29","visibility":"public"},{"canonicalName":"DataTypes.ReserveData","id":4115,"members":[{"constant":false,"id":4090,"mutability":"mutable","name":"configuration","nodeType":"VariableDeclaration","scope":4115,"src":"755:37:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$4128_storage_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"},"typeName":{"id":4089,"nodeType":"UserDefinedTypeName","pathNode":{"id":4088,"name":"ReserveConfigurationMap","nodeType":"IdentifierPath","referencedDeclaration":4128,"src":"755:23:29"},"referencedDeclaration":4128,"src":"755:23:29","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$4128_storage_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"}},"visibility":"internal"},{"constant":false,"id":4092,"mutability":"mutable","name":"liquidityIndex","nodeType":"VariableDeclaration","scope":4115,"src":"850:22:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4091,"name":"uint128","nodeType":"ElementaryTypeName","src":"850:7:29","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":4094,"mutability":"mutable","name":"variableBorrowIndex","nodeType":"VariableDeclaration","scope":4115,"src":"966:27:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4093,"name":"uint128","nodeType":"ElementaryTypeName","src":"966:7:29","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":4096,"mutability":"mutable","name":"currentLiquidityRate","nodeType":"VariableDeclaration","scope":4115,"src":"1089:28:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4095,"name":"uint128","nodeType":"ElementaryTypeName","src":"1089:7:29","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":4098,"mutability":"mutable","name":"currentVariableBorrowRate","nodeType":"VariableDeclaration","scope":4115,"src":"1270:33:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4097,"name":"uint128","nodeType":"ElementaryTypeName","src":"1270:7:29","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":4100,"mutability":"mutable","name":"currentStableBorrowRate","nodeType":"VariableDeclaration","scope":4115,"src":"1406:31:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4099,"name":"uint128","nodeType":"ElementaryTypeName","src":"1406:7:29","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":4102,"mutability":"mutable","name":"lastUpdateTimestamp","nodeType":"VariableDeclaration","scope":4115,"src":"1481:26:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":4101,"name":"uint40","nodeType":"ElementaryTypeName","src":"1481:6:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"},{"constant":false,"id":4104,"mutability":"mutable","name":"aTokenAddress","nodeType":"VariableDeclaration","scope":4115,"src":"1544:21:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4103,"name":"address","nodeType":"ElementaryTypeName","src":"1544:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4106,"mutability":"mutable","name":"stableDebtTokenAddress","nodeType":"VariableDeclaration","scope":4115,"src":"1575:30:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4105,"name":"address","nodeType":"ElementaryTypeName","src":"1575:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4108,"mutability":"mutable","name":"variableDebtTokenAddress","nodeType":"VariableDeclaration","scope":4115,"src":"1649:32:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4107,"name":"address","nodeType":"ElementaryTypeName","src":"1649:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4110,"mutability":"mutable","name":"interestRateStrategyAddress","nodeType":"VariableDeclaration","scope":4115,"src":"1773:35:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4109,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4112,"mutability":"mutable","name":"id","nodeType":"VariableDeclaration","scope":4115,"src":"1944:8:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4111,"name":"uint8","nodeType":"ElementaryTypeName","src":"1944:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4114,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":4115,"src":"1962:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4113,"name":"uint8","nodeType":"ElementaryTypeName","src":"1962:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"name":"ReserveData","nodeType":"StructDefinition","scope":4238,"src":"683:1429:29","visibility":"public"},{"canonicalName":"DataTypes.TrancheMultiplier","id":4122,"members":[{"constant":false,"id":4117,"mutability":"mutable","name":"liquidityRateMultiplier","nodeType":"VariableDeclaration","scope":4122,"src":"2153:31:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4116,"name":"uint256","nodeType":"ElementaryTypeName","src":"2153:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4119,"mutability":"mutable","name":"variableBorrowRateMultiplier","nodeType":"VariableDeclaration","scope":4122,"src":"2194:36:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4118,"name":"uint256","nodeType":"ElementaryTypeName","src":"2194:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4121,"mutability":"mutable","name":"stableBorrowRateMultiplier","nodeType":"VariableDeclaration","scope":4122,"src":"2240:34:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4120,"name":"uint256","nodeType":"ElementaryTypeName","src":"2240:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"TrancheMultiplier","nodeType":"StructDefinition","scope":4238,"src":"2118:163:29","visibility":"public"},{"constant":true,"id":4125,"mutability":"constant","name":"NUM_TRANCHES","nodeType":"VariableDeclaration","scope":4238,"src":"2287:31:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4123,"name":"uint8","nodeType":"ElementaryTypeName","src":"2287:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"33","id":4124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2317:1:29","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"internal"},{"canonicalName":"DataTypes.ReserveConfigurationMap","id":4128,"members":[{"constant":false,"id":4127,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":4128,"src":"2713:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4126,"name":"uint256","nodeType":"ElementaryTypeName","src":"2713:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ReserveConfigurationMap","nodeType":"StructDefinition","scope":4238,"src":"2325:407:29","visibility":"public"},{"canonicalName":"DataTypes.UserConfigurationMap","id":4131,"members":[{"constant":false,"id":4130,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":4131,"src":"2776:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4129,"name":"uint256","nodeType":"ElementaryTypeName","src":"2776:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"UserConfigurationMap","nodeType":"StructDefinition","scope":4238,"src":"2738:57:29","visibility":"public"},{"canonicalName":"DataTypes.InterestRateMode","id":4135,"members":[{"id":4132,"name":"NONE","nodeType":"EnumValue","src":"2833:4:29"},{"id":4133,"name":"STABLE","nodeType":"EnumValue","src":"2847:6:29"},{"id":4134,"name":"VARIABLE","nodeType":"EnumValue","src":"2863:8:29"}],"name":"InterestRateMode","nodeType":"EnumDefinition","src":"2801:76:29"},{"canonicalName":"DataTypes.AcctTranche","id":4140,"members":[{"constant":false,"id":4137,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":4140,"src":"2912:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4136,"name":"address","nodeType":"ElementaryTypeName","src":"2912:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4139,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":4140,"src":"2934:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4138,"name":"uint8","nodeType":"ElementaryTypeName","src":"2934:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"name":"AcctTranche","nodeType":"StructDefinition","scope":4238,"src":"2883:71:29","visibility":"public"},{"canonicalName":"DataTypes.DepositVars","id":4154,"members":[{"constant":false,"id":4142,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":4154,"src":"2989:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4141,"name":"address","nodeType":"ElementaryTypeName","src":"2989:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4144,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":4154,"src":"3012:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4143,"name":"uint8","nodeType":"ElementaryTypeName","src":"3012:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4146,"mutability":"mutable","name":"risk","nodeType":"VariableDeclaration","scope":4154,"src":"3035:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4145,"name":"uint8","nodeType":"ElementaryTypeName","src":"3035:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4148,"mutability":"mutable","name":"allowHigherTranche","nodeType":"VariableDeclaration","scope":4154,"src":"3055:23:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4147,"name":"bool","nodeType":"ElementaryTypeName","src":"3055:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4150,"mutability":"mutable","name":"isLendable","nodeType":"VariableDeclaration","scope":4154,"src":"3088:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4149,"name":"bool","nodeType":"ElementaryTypeName","src":"3088:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4153,"mutability":"mutable","name":"t","nodeType":"VariableDeclaration","scope":4154,"src":"3113:19:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_TrancheMultiplier_$4122_storage_ptr","typeString":"struct DataTypes.TrancheMultiplier"},"typeName":{"id":4152,"nodeType":"UserDefinedTypeName","pathNode":{"id":4151,"name":"TrancheMultiplier","nodeType":"IdentifierPath","referencedDeclaration":4122,"src":"3113:17:29"},"referencedDeclaration":4122,"src":"3113:17:29","typeDescriptions":{"typeIdentifier":"t_struct$_TrancheMultiplier_$4122_storage_ptr","typeString":"struct DataTypes.TrancheMultiplier"}},"visibility":"internal"}],"name":"DepositVars","nodeType":"StructDefinition","scope":4238,"src":"2960:179:29","visibility":"public"},{"canonicalName":"DataTypes.ExecuteBorrowParams","id":4180,"members":[{"constant":false,"id":4156,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":4180,"src":"3182:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4155,"name":"address","nodeType":"ElementaryTypeName","src":"3182:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4158,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":4180,"src":"3205:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4157,"name":"uint8","nodeType":"ElementaryTypeName","src":"3205:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4160,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":4180,"src":"3270:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4159,"name":"address","nodeType":"ElementaryTypeName","src":"3270:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4162,"mutability":"mutable","name":"onBehalfOf","nodeType":"VariableDeclaration","scope":4180,"src":"3292:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4161,"name":"address","nodeType":"ElementaryTypeName","src":"3292:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4164,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":4180,"src":"3320:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4163,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4166,"mutability":"mutable","name":"interestRateMode","nodeType":"VariableDeclaration","scope":4180,"src":"3344:24:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4165,"name":"uint256","nodeType":"ElementaryTypeName","src":"3344:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4168,"mutability":"mutable","name":"aTokenAddress","nodeType":"VariableDeclaration","scope":4180,"src":"3378:21:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4167,"name":"address","nodeType":"ElementaryTypeName","src":"3378:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4170,"mutability":"mutable","name":"referralCode","nodeType":"VariableDeclaration","scope":4180,"src":"3409:19:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4169,"name":"uint16","nodeType":"ElementaryTypeName","src":"3409:6:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4172,"mutability":"mutable","name":"releaseUnderlying","nodeType":"VariableDeclaration","scope":4180,"src":"3438:22:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4171,"name":"bool","nodeType":"ElementaryTypeName","src":"3438:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4174,"mutability":"mutable","name":"_maxStableRateBorrowSizePercent","nodeType":"VariableDeclaration","scope":4180,"src":"3470:39:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4173,"name":"uint256","nodeType":"ElementaryTypeName","src":"3470:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4176,"mutability":"mutable","name":"_reservesCount","nodeType":"VariableDeclaration","scope":4180,"src":"3519:22:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4175,"name":"uint256","nodeType":"ElementaryTypeName","src":"3519:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4179,"mutability":"mutable","name":"t","nodeType":"VariableDeclaration","scope":4180,"src":"3551:19:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_TrancheMultiplier_$4122_storage_ptr","typeString":"struct DataTypes.TrancheMultiplier"},"typeName":{"id":4178,"nodeType":"UserDefinedTypeName","pathNode":{"id":4177,"name":"TrancheMultiplier","nodeType":"IdentifierPath","referencedDeclaration":4122,"src":"3551:17:29"},"referencedDeclaration":4122,"src":"3551:17:29","typeDescriptions":{"typeIdentifier":"t_struct$_TrancheMultiplier_$4122_storage_ptr","typeString":"struct DataTypes.TrancheMultiplier"}},"visibility":"internal"}],"name":"ExecuteBorrowParams","nodeType":"StructDefinition","scope":4238,"src":"3145:432:29","visibility":"public"},{"canonicalName":"DataTypes.WithdrawParams","id":4194,"members":[{"constant":false,"id":4182,"mutability":"mutable","name":"_reservesCount","nodeType":"VariableDeclaration","scope":4194,"src":"3615:22:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4181,"name":"uint256","nodeType":"ElementaryTypeName","src":"3615:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4184,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":4194,"src":"3647:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4183,"name":"address","nodeType":"ElementaryTypeName","src":"3647:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4186,"mutability":"mutable","name":"tranche","nodeType":"VariableDeclaration","scope":4194,"src":"3670:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4185,"name":"uint8","nodeType":"ElementaryTypeName","src":"3670:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4188,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":4194,"src":"3693:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4187,"name":"uint256","nodeType":"ElementaryTypeName","src":"3693:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4190,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":4194,"src":"3717:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4189,"name":"address","nodeType":"ElementaryTypeName","src":"3717:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4193,"mutability":"mutable","name":"t","nodeType":"VariableDeclaration","scope":4194,"src":"3737:19:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_TrancheMultiplier_$4122_storage_ptr","typeString":"struct DataTypes.TrancheMultiplier"},"typeName":{"id":4192,"nodeType":"UserDefinedTypeName","pathNode":{"id":4191,"name":"TrancheMultiplier","nodeType":"IdentifierPath","referencedDeclaration":4122,"src":"3737:17:29"},"referencedDeclaration":4122,"src":"3737:17:29","typeDescriptions":{"typeIdentifier":"t_struct$_TrancheMultiplier_$4122_storage_ptr","typeString":"struct DataTypes.TrancheMultiplier"}},"visibility":"internal"}],"name":"WithdrawParams","nodeType":"StructDefinition","scope":4238,"src":"3583:180:29","visibility":"public"},{"canonicalName":"DataTypes.ValidateSetUseReserveAsCollateralParams","id":4199,"members":[{"constant":false,"id":4196,"mutability":"mutable","name":"risk","nodeType":"VariableDeclaration","scope":4199,"src":"3826:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4195,"name":"uint8","nodeType":"ElementaryTypeName","src":"3826:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4198,"mutability":"mutable","name":"allowHigherTranche","nodeType":"VariableDeclaration","scope":4199,"src":"3846:23:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4197,"name":"bool","nodeType":"ElementaryTypeName","src":"3846:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"ValidateSetUseReserveAsCollateralParams","nodeType":"StructDefinition","scope":4238,"src":"3769:107:29","visibility":"public"},{"canonicalName":"DataTypes.calculateInterestRatesVars","id":4210,"members":[{"constant":false,"id":4201,"mutability":"mutable","name":"reserve","nodeType":"VariableDeclaration","scope":4210,"src":"3926:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4200,"name":"address","nodeType":"ElementaryTypeName","src":"3926:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4203,"mutability":"mutable","name":"aToken","nodeType":"VariableDeclaration","scope":4210,"src":"3951:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4202,"name":"address","nodeType":"ElementaryTypeName","src":"3951:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4205,"mutability":"mutable","name":"liquidityAdded","nodeType":"VariableDeclaration","scope":4210,"src":"3975:22:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4204,"name":"uint256","nodeType":"ElementaryTypeName","src":"3975:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4207,"mutability":"mutable","name":"liquidityTaken","nodeType":"VariableDeclaration","scope":4210,"src":"4007:22:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4206,"name":"uint256","nodeType":"ElementaryTypeName","src":"4007:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4209,"mutability":"mutable","name":"reserveFactor","nodeType":"VariableDeclaration","scope":4210,"src":"4039:21:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4208,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"calculateInterestRatesVars","nodeType":"StructDefinition","scope":4238,"src":"3882:185:29","visibility":"public"},{"canonicalName":"DataTypes.flashLoanVars","id":4237,"members":[{"constant":false,"id":4212,"mutability":"mutable","name":"receiverAddress","nodeType":"VariableDeclaration","scope":4237,"src":"4104:23:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4211,"name":"address","nodeType":"ElementaryTypeName","src":"4104:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4216,"mutability":"mutable","name":"assets","nodeType":"VariableDeclaration","scope":4237,"src":"4137:33:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TrancheAddress_$4087_storage_$dyn_storage_ptr","typeString":"struct DataTypes.TrancheAddress[]"},"typeName":{"baseType":{"id":4214,"nodeType":"UserDefinedTypeName","pathNode":{"id":4213,"name":"DataTypes.TrancheAddress","nodeType":"IdentifierPath","referencedDeclaration":4087,"src":"4137:24:29"},"referencedDeclaration":4087,"src":"4137:24:29","typeDescriptions":{"typeIdentifier":"t_struct$_TrancheAddress_$4087_storage_ptr","typeString":"struct DataTypes.TrancheAddress"}},"id":4215,"nodeType":"ArrayTypeName","src":"4137:26:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TrancheAddress_$4087_storage_$dyn_storage_ptr","typeString":"struct DataTypes.TrancheAddress[]"}},"visibility":"internal"},{"constant":false,"id":4219,"mutability":"mutable","name":"amounts","nodeType":"VariableDeclaration","scope":4237,"src":"4180:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4217,"name":"uint256","nodeType":"ElementaryTypeName","src":"4180:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4218,"nodeType":"ArrayTypeName","src":"4180:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4222,"mutability":"mutable","name":"modes","nodeType":"VariableDeclaration","scope":4237,"src":"4207:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4220,"name":"uint256","nodeType":"ElementaryTypeName","src":"4207:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4221,"nodeType":"ArrayTypeName","src":"4207:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4224,"mutability":"mutable","name":"onBehalfOf","nodeType":"VariableDeclaration","scope":4237,"src":"4232:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4223,"name":"address","nodeType":"ElementaryTypeName","src":"4232:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4226,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":4237,"src":"4260:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4225,"name":"bytes","nodeType":"ElementaryTypeName","src":"4260:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4228,"mutability":"mutable","name":"referralCode","nodeType":"VariableDeclaration","scope":4237,"src":"4282:19:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4227,"name":"uint16","nodeType":"ElementaryTypeName","src":"4282:6:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4230,"mutability":"mutable","name":"_flashLoanPremiumTotal","nodeType":"VariableDeclaration","scope":4237,"src":"4311:30:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4229,"name":"uint256","nodeType":"ElementaryTypeName","src":"4311:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4232,"mutability":"mutable","name":"oracle","nodeType":"VariableDeclaration","scope":4237,"src":"4351:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4231,"name":"address","nodeType":"ElementaryTypeName","src":"4351:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4234,"mutability":"mutable","name":"_maxStableRateBorrowSizePercent","nodeType":"VariableDeclaration","scope":4237,"src":"4375:39:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4233,"name":"uint256","nodeType":"ElementaryTypeName","src":"4375:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4236,"mutability":"mutable","name":"_reservesCount","nodeType":"VariableDeclaration","scope":4237,"src":"4424:22:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4235,"name":"uint256","nodeType":"ElementaryTypeName","src":"4424:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"flashLoanVars","nodeType":"StructDefinition","scope":4238,"src":"4073:380:29","visibility":"public"}],"scope":4239,"src":"63:4392:29"}],"src":"37:4419:29"},"id":29}},"contracts":{"contracts/analytics/libraries/AnalyticsUtilities.sol":{"AnalyticsUtilities":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122041c7fb29a7256070aa4afc15333d2bfbf2cbda42f9e6814dff379b28c677cb2e64736f6c63430008000033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE 0xC7 0xFB 0x29 0xA7 0x25 PUSH1 0x70 0xAA 0x4A 0xFC ISZERO CALLER RETURNDATASIZE 0x2B 0xFB CALLCODE 0xCB 0xDA TIMESTAMP 0xF9 0xE6 DUP2 0x4D SELFDESTRUCT CALLDATACOPY SWAP12 0x28 0xC6 PUSH24 0xCB2E64736F6C634300080000330000000000000000000000 ","sourceMap":"755:936:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;755:936:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122041c7fb29a7256070aa4afc15333d2bfbf2cbda42f9e6814dff379b28c677cb2e64736f6c63430008000033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE 0xC7 0xFB 0x29 0xA7 0x25 PUSH1 0x70 0xAA 0x4A 0xFC ISZERO CALLER RETURNDATASIZE 0x2B 0xFB CALLCODE 0xCB 0xDA TIMESTAMP 0xF9 0xE6 DUP2 0x4D SELFDESTRUCT CALLDATACOPY SWAP12 0x28 0xC6 PUSH24 0xCB2E64736F6C634300080000330000000000000000000000 ","sourceMap":"755:936:0:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"getTokenReserveData(contract ILendingPoolAddressesProvider,uint8)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/analytics/libraries/AnalyticsUtilities.sol\":\"AnalyticsUtilities\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/analytics/libraries/AnalyticsUtilities.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\nimport {ILendingPool} from \\\"../../interfaces/ILendingPool.sol\\\";\\nimport {DataTypes} from \\\"../../protocol/libraries/types/DataTypes.sol\\\";\\nimport {Constants} from \\\"./Constants.sol\\\";\\nimport {UserBalances, UserAccountData, AggregatedData, TokenReserveData} from \\\"../types/AnalyticsDataTypes.sol\\\";\\nimport {IChainlinkAggregator} from \\\"../../interfaces/IChainlinkAggregator.sol\\\";\\nimport {IERC20Detailed} from \\\"../../dependencies/openzeppelin/contracts/IERC20Detailed.sol\\\";\\nimport {ILendingPoolAddressesProvider} from \\\"../../interfaces/ILendingPoolAddressesProvider.sol\\\";\\nimport {IAaveOracle} from \\\"../../misc/interfaces/IAaveOracle.sol\\\";\\nimport {AggregateData, TokenData} from \\\"../types/Tokens.sol\\\";\\n\\nlibrary AnalyticsUtilities {\\n    function getTokenReserveData(\\n        ILendingPoolAddressesProvider provider,\\n        uint8 tranche\\n    ) internal view returns (TokenData[22] memory) {\\n        address[22] memory tokens = Constants.token();\\n        string[22] memory names = Constants.tokenNames();\\n        ILendingPool lendingPool = ILendingPool(provider.getLendingPool());\\n        TokenData[22] memory returnData;\\n        for (uint8 i = 0; i < tokens.length; i++) {\\n            TokenData memory data = TokenData(\\n                names[i],\\n                lendingPool.getReserveData(tokens[i], tranche),\\n                lendingPool.getAssetData(tokens[i])\\n            );\\n\\n            returnData[i] = data;\\n        }\\n\\n        return returnData;\\n    }\\n\\n    // function getUserTokenInfo(ILendingPoolAddressProvider provider, uint8 tranche, address user)\\n    //     internal\\n    //     view\\n    //     returns (memory)\\n    // {\\n\\n    // }\\n}\\n\",\"keccak256\":\"0xd15236a372e7d7e99f3ef430617a86071742cba6afaf988405113f74994bceb6\",\"license\":\"agpl-3.0\"},\"contracts/analytics/libraries/Constants.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\nlibrary Constants {\\n    function token() internal pure returns (address[22] memory) {\\n        address[22] memory tokens = [\\n            0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9,\\n            0x0D8775F648430679A709E98d2b0Cb6250d2887EF,\\n            0x4Fabb145d64652a948d72533023f6E7A623C7C53,\\n            0x6B175474E89094C44Da98b954EedeAC495271d0F,\\n            0xF629cBd94d3791C9250152BD8dfBDF380E2a3B9c,\\n            0xdd974D5C2e2928deA5F71b9825b8b646686BD200,\\n            0x514910771AF9Ca656af840dff83E8264EcF986CA,\\n            0x0F5D2fB29fb7d3CFeE444a200298f468908cC942,\\n            0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2,\\n            0x408e41876cCCDC0F92210600ef50372656052a38,\\n            0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F,\\n            0x57Ab1ec28D129707052df4dF418D58a2D46d5f51,\\n            0x0000000000085d4780B73119b644AE5ecd22b376,\\n            0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984,\\n            0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48,\\n            0xdAC17F958D2ee523a2206206994597C13D831ec7,\\n            0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599,\\n            0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2,\\n            0x0bc529c00C6401aEF6D220BE8C6Ea1667F6Ad93e,\\n            0xE41d2489571d322189246DaFA5ebDe1F4699F498,\\n            0x8798249c2E607446EfB7Ad49eC89dD1865Ff4272,\\n            0xc4AD29ba4B3c580e6D59105FFf484999997675Ff\\n        ];\\n        return tokens;\\n    }\\n\\n    function tokenNames() internal pure returns (string[22] memory) {\\n        string[22] memory data = [\\n            \\\"AAVE\\\",\\n            \\\"BAT\\\",\\n            \\\"BUSD\\\",\\n            \\\"DAI\\\",\\n            \\\"ENJ\\\",\\n            \\\"KNC\\\",\\n            \\\"LINK\\\",\\n            \\\"MANA\\\",\\n            \\\"MKR\\\",\\n            \\\"REN\\\",\\n            \\\"SNX\\\",\\n            \\\"SUSD\\\",\\n            \\\"TUSD\\\",\\n            \\\"UNI\\\",\\n            \\\"USDC\\\",\\n            \\\"USDT\\\",\\n            \\\"WBTC\\\",\\n            \\\"WETH\\\",\\n            \\\"YFI\\\",\\n            \\\"ZRX\\\",\\n            \\\"xSUSHI\\\",\\n            \\\"crv3crypto\\\"\\n        ];\\n        return data;\\n    }\\n\\n    function ETHPriceOracles() internal pure returns (address[20] memory) {\\n        address[20] memory data = [\\n            0x6Df09E975c830ECae5bd4eD9d90f3A95a4f88012,\\n            0x0d16d4528239e9ee52fa531af613AcdB23D88c94,\\n            0x614715d2Af89E6EC99A233818275142cE88d1Cfd,\\n            0x773616E4d11A78F511299002da57A0a94577F1f4,\\n            0x24D9aB51950F3d62E9144fdC2f3135DAA6Ce8D1B,\\n            0x656c0544eF4C98A6a98491833A89204Abb045d6b,\\n            0xDC530D9457755926550b59e8ECcdaE7624181557,\\n            0x82A44D92D6c329826dc557c5E1Be6ebeC5D5FeB9,\\n            0x24551a8Fb2A7211A25a17B1481f043A8a8adC7f2,\\n            0x3147D7203354Dc06D9fd350c7a2437bcA92387a4,\\n            0x79291A9d692Df95334B1a0B3B4AE6bC606782f8c,\\n            0x8e0b7e6062272B5eF4524250bFFF8e5Bd3497757,\\n            0x3886BA987236181D98F2401c507Fb8BeA7871dF2,\\n            0xD6aA3D25116d8dA79Ea0246c4826EB951872e02e,\\n            0x986b5E1e1755e3C2440e960477f25201B0a8bbD4,\\n            0xEe9F2375b4bdF6387aa8265dD4FB8F16512A1d46,\\n            0xdeb288F737066589598e9214E782fa5A8eD689e8,\\n            0x7c5d4F8345e66f68099581Db340cd65B078C41f4,\\n            0x2Da4983a622a8498bb1a21FaE9D8F6C664939962,\\n            0x9b26214bEC078E68a394AaEbfbffF406Ce14893F\\n        ];\\n        return data;\\n    }\\n\\n    function USDPriceOracles() internal pure returns (address[20] memory) {\\n        address[20] memory data = [\\n            0x547a514d5e3769680Ce22B2361c10Ea13619e8a9,\\n            0x9441D7556e7820B5ca42082cfa99487D56AcA958,\\n            0x833D8Eb16D306ed1FbB5D7A2E019e106B960965A,\\n            0xAed0c38402a5d19df6E4c03F4E2DceD6e29c1ee9,\\n            0x23905C55dC11D609D5d11Dc604905779545De9a7,\\n            0xf8fF43E991A81e6eC886a3D281A2C6cC19aE70Fc,\\n            0x2c1d072e956AFFC0D435Cb7AC38EF18d24d9127c,\\n            0x56a4857acbcfe3a66965c251628B1c9f1c408C19,\\n            0xec1D1B3b0443256cc3860e24a46F108e699484Aa,\\n            0x0f59666EDE214281e956cb3b2D0d69415AfF4A01,\\n            0xDC3EA94CD0AC27d9A86C180091e7f78C683d3699,\\n            0xad35Bd71b9aFE6e4bDc266B345c198eaDEf9Ad94,\\n            0xec746eCF986E2927Abd291a2A1716c940100f8Ba,\\n            0x553303d460EE0afB37EdFf9bE42922D8FF63220e,\\n            0x8fFfFfd4AfB6115b954Bd326cbe7B4BA576818f6,\\n            0x3E7d1eAB13ad0104d2750B8863b489D65364e32D,\\n            0xF4030086522a5bEEa4988F8cA5B36dbC97BeE88c,\\n            0xA027702dbb89fbd58938e4324ac03B58d812b0E1,\\n            0x2885d15b8Af22648b98B122b22FDF4D2a56c6023,\\n            0xCC1f5d9e6956447630d703C8e93b2345c2DE3D13\\n        ];\\n        return data;\\n    }\\n}\\n\",\"keccak256\":\"0x123c0091e94a75d68fb035a3d99df846e07a16ed1c1e7836d3192e0981a9c7e9\",\"license\":\"agpl-3.0\"},\"contracts/analytics/types/AnalyticsDataTypes.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\nstruct UserBalances {\\n    int256[20] ethBalances;\\n    int256[20] usdBalances;\\n    uint256[20] userBalance;\\n    string[20] tokenNames;\\n}\\n\\nstruct UserAccountData {\\n    uint256 totalCollateralETH;\\n    uint256 totalDebtETH;\\n    uint256 availableBorrowsETH;\\n    uint256 currentLiquidationThreshold;\\n    uint256 ltv;\\n    uint256 healthFactor;\\n}\\n\\nstruct TokenReserveData {\\n    uint128 liquidityIndex;\\n    uint128 variableBorrowIndex;\\n    uint128 currentLiquidityRate;\\n    uint128 currentVariableBorrowRate;\\n    uint128 currentStableBorrowRate;\\n    uint40 lastUpdateTimestamp;\\n    address aTokenAddress;\\n    address stableDebtTokenAddress;\\n    address variableDebtTokenAddress;\\n    address interestRateStrategyAddress;\\n    uint8 id;\\n    uint8 tranche;\\n}\\n\\nstruct ApiDataType {\\n    UserBalances userBalances;\\n    UserAccountData[3] userTrancheData;\\n    address[] reserveList;\\n    // TokenReserveData[20] tokenReserveData;\\n}\\n\\nstruct AggregatedData {\\n    TokenReserveData[] reserveData;\\n}\\n\",\"keccak256\":\"0x16b9f59fc56a31c120610d16250b0232ecff62c8e4f045703ef700594fceb124\",\"license\":\"agpl-3.0\"},\"contracts/analytics/types/Tokens.sol\":{\"content\":\"// SPDX-License-Identifier: agpl 3.0\\npragma solidity >=0.8.0;\\nimport {DataTypes} from \\\"../../protocol/libraries/types/DataTypes.sol\\\";\\n\\nstruct TokenInfo {\\n    string[] names;\\n}\\n\\nstruct TokenData {\\n    string symbol;\\n    DataTypes.ReserveData reserveData;\\n    DataTypes.AssetData assetData;\\n}\\n\\nstruct AggregateData {\\n    TokenData[] data;\\n}\\n\",\"keccak256\":\"0x8bf842c82006e032efdb1c5dcb94cb295e76dc94ea5fce1fbf2398de5940f782\",\"license\":\"agpl 3.0\"},\"contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount)\\n        external\\n        returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n}\\n\",\"keccak256\":\"0x6a0e7bdec11b28b6b88f25301cd51477bd0025846062465a158eee1144f10bd3\",\"license\":\"agpl-3.0\"},\"contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\n\\ninterface IERC20Detailed is IERC20 {\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x2d62cd546d91ce26b0ddbb8900bfb02f41d7fb225423374ef51a54841f3ddd1c\",\"license\":\"agpl-3.0\"},\"contracts/interfaces/IChainlinkAggregator.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\ninterface IChainlinkAggregator {\\n    function decimals() external view returns (uint8);\\n\\n    function latestAnswer() external view returns (int256);\\n\\n    function latestTimestamp() external view returns (uint256);\\n\\n    function latestRound() external view returns (uint256);\\n\\n    function getAnswer(uint256 roundId) external view returns (int256);\\n\\n    function getTimestamp(uint256 roundId) external view returns (uint256);\\n\\n    event AnswerUpdated(\\n        int256 indexed current,\\n        uint256 indexed roundId,\\n        uint256 timestamp\\n    );\\n    event NewRound(uint256 indexed roundId, address indexed startedBy);\\n}\\n\",\"keccak256\":\"0xe9b6c1724de16518dadf10284718004691a351a25b5348b81867f5ec58f67642\",\"license\":\"agpl-3.0\"},\"contracts/interfaces/ILendingPool.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\nimport {ILendingPoolAddressesProvider} from \\\"./ILendingPoolAddressesProvider.sol\\\";\\nimport {DataTypes} from \\\"../protocol/libraries/types/DataTypes.sol\\\";\\n\\ninterface ILendingPool {\\n    /**\\n     * @dev Emitted on deposit()\\n     * @param reserve The address of the underlying asset of the reserve\\n     * @param user The address initiating the deposit\\n     * @param onBehalfOf The beneficiary of the deposit, receiving the aTokens\\n     * @param amount The amount deposited\\n     * @param referral The referral code used\\n     **/\\n    event Deposit(\\n        address indexed reserve,\\n        uint8 tranche,\\n        address user,\\n        address indexed onBehalfOf,\\n        uint256 amount,\\n        uint16 indexed referral\\n    );\\n\\n    /**\\n     * @dev Emitted on withdraw()\\n     * @param reserve The address of the underlyng asset being withdrawn\\n     * @param user The address initiating the withdrawal, owner of aTokens\\n     * @param to Address that will receive the underlying\\n     * @param amount The amount to be withdrawn\\n     **/\\n    event Withdraw(\\n        address indexed reserve,\\n        address indexed user,\\n        address indexed to,\\n        uint256 amount\\n    );\\n\\n    /**\\n     * @dev Emitted on repay()\\n     * @param reserve The address of the underlying asset of the reserve\\n     * @param user The beneficiary of the repayment, getting his debt reduced\\n     * @param repayer The address of the user initiating the repay(), providing the funds\\n     * @param amount The amount repaid\\n     **/\\n    event Repay(\\n        address indexed reserve,\\n        address indexed user,\\n        address indexed repayer,\\n        uint256 amount\\n    );\\n\\n    /**\\n     * @dev Emitted on swapBorrowRateMode()\\n     * @param reserve The address of the underlying asset of the reserve\\n     * @param user The address of the user swapping his rate mode\\n     * @param rateMode The rate mode that the user wants to swap to\\n     **/\\n    event Swap(address indexed reserve, address indexed user, uint256 rateMode);\\n\\n    /**\\n     * @dev Emitted on setUserUseReserveAsCollateral()\\n     * @param reserve The address of the underlying asset of the reserve\\n     * @param user The address of the user enabling the usage as collateral\\n     **/\\n    event ReserveUsedAsCollateralEnabled(\\n        address indexed reserve,\\n        address indexed user\\n    );\\n\\n    /**\\n     * @dev Emitted on setUserUseReserveAsCollateral()\\n     * @param reserve The address of the underlying asset of the reserve\\n     * @param user The address of the user enabling the usage as collateral\\n     **/\\n    event ReserveUsedAsCollateralDisabled(\\n        address indexed reserve,\\n        address indexed user\\n    );\\n\\n    /**\\n     * @dev Emitted on rebalanceStableBorrowRate()\\n     * @param reserve The address of the underlying asset of the reserve\\n     * @param user The address of the user for which the rebalance has been executed\\n     **/\\n    event RebalanceStableBorrowRate(\\n        address indexed reserve,\\n        address indexed user\\n    );\\n\\n    /**\\n     * @dev Emitted on flashLoan()\\n     * @param target The address of the flash loan receiver contract\\n     * @param initiator The address initiating the flash loan\\n     * @param asset The address of the asset being flash borrowed\\n     * @param amount The amount flash borrowed\\n     * @param premium The fee flash borrowed\\n     * @param referralCode The referral code used\\n     **/\\n    event FlashLoan(\\n        address indexed target,\\n        address indexed initiator,\\n        address indexed asset,\\n        uint256 amount,\\n        uint256 premium,\\n        uint16 referralCode\\n    );\\n\\n    /**\\n     * @dev Emitted when the pause is triggered.\\n     */\\n    event Paused();\\n\\n    /**\\n     * @dev Emitted when the pause is lifted.\\n     */\\n    event Unpaused();\\n\\n    /**\\n     * @dev Emitted when a borrower is liquidated. This event is emitted by the LendingPool via\\n     * LendingPoolCollateral manager using a DELEGATECALL\\n     * This allows to have the events in the generated ABI for LendingPool.\\n     * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\\n     * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\\n     * @param user The address of the borrower getting liquidated\\n     * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\\n     * @param liquidatedCollateralAmount The amount of collateral received by the liiquidator\\n     * @param liquidator The address of the liquidator\\n     * @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\\n     * to receive the underlying collateral asset directly\\n     **/\\n    event LiquidationCall(\\n        address indexed collateralAsset,\\n        address indexed debtAsset,\\n        address indexed user,\\n        uint256 debtToCover,\\n        uint256 liquidatedCollateralAmount,\\n        address liquidator,\\n        bool receiveAToken\\n    );\\n\\n    /**\\n     * @dev Emitted when the state of a reserve is updated. NOTE: This event is actually declared\\n     * in the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal,\\n     * the event will actually be fired by the LendingPool contract. The event is therefore replicated here so it\\n     * gets added to the LendingPool ABI\\n     * @param reserve The address of the underlying asset of the reserve\\n     * @param liquidityRate The new liquidity rate\\n     * @param stableBorrowRate The new stable borrow rate\\n     * @param variableBorrowRate The new variable borrow rate\\n     * @param liquidityIndex The new liquidity index\\n     * @param variableBorrowIndex The new variable borrow index\\n     **/\\n    event ReserveDataUpdated(\\n        address indexed reserve,\\n        uint256 liquidityRate,\\n        uint256 stableBorrowRate,\\n        uint256 variableBorrowRate,\\n        uint256 liquidityIndex,\\n        uint256 variableBorrowIndex\\n    );\\n\\n    /**\\n     * @dev Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\\n     * - E.g. User deposits 100 USDC and gets in return 100 aUSDC\\n     * @param asset The address of the underlying asset to deposit\\n     * @param amount The amount to be deposited\\n     * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\\n     *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\\n     *   is a different wallet\\n     * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\\n     *   0 if the action is executed directly by the user, without any middle-man\\n     **/\\n    function deposit(\\n        address asset,\\n        uint8 tranche,\\n        bool isCollateral,\\n        uint256 amount,\\n        address onBehalfOf,\\n        uint16 referralCode\\n    ) external;\\n\\n    /**\\n     * @dev Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned\\n     * E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\\n     * @param asset The address of the underlying asset to withdraw\\n     * @param amount The underlying amount to be withdrawn\\n     *   - Send the value type(uint256).max in order to withdraw the whole aToken balance\\n     * @param to Address that will receive the underlying, same as msg.sender if the user\\n     *   wants to receive it on his own wallet, or a different address if the beneficiary is a\\n     *   different wallet\\n     * @return The final amount withdrawn\\n     **/\\n    function withdraw(\\n        address asset,\\n        uint8 tranche,\\n        uint256 amount,\\n        address to\\n    ) external returns (uint256);\\n\\n    /**\\n     * @dev Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower\\n     * already deposited enough collateral, or he was given enough allowance by a credit delegator on the\\n     * corresponding debt token (StableDebtToken or VariableDebtToken)\\n     * - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet\\n     *   and 100 stable/variable debt tokens, depending on the `interestRateMode`\\n     * @param asset The address of the underlying asset to borrow\\n     * @param amount The amount to be borrowed\\n     * @param interestRateMode The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\\n     * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\\n     *   0 if the action is executed directly by the user, without any middle-man\\n     * @param onBehalfOf Address of the user who will receive the debt. Should be the address of the borrower itself\\n     * calling the function if he wants to borrow against his own collateral, or the address of the credit delegator\\n     * if he has been given credit delegation allowance\\n     **/\\n    function borrow(\\n        address asset,\\n        uint8 tranche,\\n        uint256 amount,\\n        uint256 interestRateMode,\\n        uint16 referralCode,\\n        address onBehalfOf\\n    ) external;\\n\\n    /**\\n     * @notice Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned\\n     * - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\\n     * @param asset The address of the borrowed underlying asset previously borrowed\\n     * @param amount The amount to repay\\n     * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\\n     * @param rateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\\n     * @param onBehalfOf Address of the user who will get his debt reduced/removed. Should be the address of the\\n     * user calling the function if he wants to reduce/remove his own debt, or the address of any other\\n     * other borrower whose debt should be removed\\n     * @return The final amount repaid\\n     **/\\n    function repay(\\n        address asset,\\n        uint8 tranche,\\n        uint256 amount,\\n        uint256 rateMode,\\n        address onBehalfOf\\n    ) external returns (uint256);\\n\\n    /**\\n     * @dev Allows a borrower to swap his debt between stable and variable mode, or viceversa\\n     * @param asset The address of the underlying asset borrowed\\n     * @param rateMode The rate mode that the user wants to swap to\\n     **/\\n    function swapBorrowRateMode(\\n        address asset,\\n        uint8 tranche,\\n        uint256 rateMode\\n    ) external;\\n\\n    /**\\n     * @dev Rebalances the stable interest rate of a user to the current stable rate defined on the reserve.\\n     * - Users can be rebalanced if the following conditions are satisfied:\\n     *     1. Usage ratio is above 95%\\n     *     2. the current deposit APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been\\n     *        borrowed at a stable rate and depositors are not earning enough\\n     * @param asset The address of the underlying asset borrowed\\n     * @param user The address of the user to be rebalanced\\n     **/\\n    function rebalanceStableBorrowRate(\\n        address asset,\\n        uint8 tranche,\\n        address user\\n    ) external;\\n\\n    /**\\n     * @dev Allows depositors to enable/disable a specific deposited asset as collateral\\n     * @param asset The address of the underlying asset deposited\\n     * @param useAsCollateral `true` if the user wants to use the deposit as collateral, `false` otherwise\\n     **/\\n    function setUserUseReserveAsCollateral(\\n        address asset,\\n        uint8 tranche,\\n        bool useAsCollateral\\n    ) external;\\n\\n    /**\\n     * @dev Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1\\n     * - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives\\n     *   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\\n     * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\\n     * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\\n     * @param user The address of the borrower getting liquidated\\n     * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\\n     * @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\\n     * to receive the underlying collateral asset directly\\n     **/\\n    function liquidationCall(\\n        address collateralAsset,\\n        address debtAsset,\\n        uint8 tranche,\\n        address user,\\n        uint256 debtToCover,\\n        bool receiveAToken\\n    ) external;\\n\\n    /**\\n     * @dev Allows smartcontracts to access the liquidity of the pool within one transaction,\\n     * as long as the amount taken plus a fee is returned.\\n     * IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration.\\n     * For further details please visit https://developers.aave.com\\n     * @param receiverAddress The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface\\n     * @param assets The addresses of the assets being flash-borrowed\\n     * @param amounts The amounts amounts being flash-borrowed\\n     * @param modes Types of the debt to open if the flash loan is not returned:\\n     *   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver\\n     *   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\\n     *   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\\n     * @param onBehalfOf The address  that will receive the debt in the case of using on `modes` 1 or 2\\n     * @param params Variadic packed params to pass to the receiver as extra information\\n     * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\\n     *   0 if the action is executed directly by the user, without any middle-man\\n     **/\\n    function flashLoan(\\n        address receiverAddress,\\n        DataTypes.TrancheAddress[] calldata assets,\\n        uint256[] calldata amounts,\\n        uint256[] calldata modes,\\n        address onBehalfOf,\\n        bytes calldata params,\\n        uint16 referralCode\\n    ) external;\\n\\n    /**\\n     * @dev Returns the user account data across all the reserves\\n     * @param user The address of the user\\n     * @return totalCollateralETH the total collateral in ETH of the user\\n     * @return totalDebtETH the total debt in ETH of the user\\n     * @return availableBorrowsETH the borrowing power left of the user\\n     * @return currentLiquidationThreshold the liquidation threshold of the user\\n     * @return ltv the loan to value of the user\\n     * @return healthFactor the current health factor of the user\\n     **/\\n    function getUserAccountData(address user, uint8 tranche)\\n        external\\n        view\\n        returns (\\n            uint256 totalCollateralETH,\\n            uint256 totalDebtETH,\\n            uint256 availableBorrowsETH,\\n            uint256 currentLiquidationThreshold,\\n            uint256 ltv,\\n            uint256 healthFactor\\n        );\\n\\n    function initReserve(\\n        address reserve,\\n        address aTokenAddress,\\n        address stableDebtAddress,\\n        address variableDebtAddress,\\n        address interestRateStrategyAddress,\\n        uint8 tranche\\n    ) external;\\n\\n    /**\\n     * @dev Updates the address of the interest rate strategy contract\\n     * - Only callable by the LendingPoolConfigurator contract\\n     * @param asset The address of the underlying asset of the reserve\\n     * @param _risk The risk of the asset\\n     **/\\n    function setAssetData(\\n        address asset,\\n        uint8 _risk,\\n        bool _isLendable,\\n        bool _allowedHigherTranche,\\n        uint8 _assetType\\n    ) external;\\n\\n    function setReserveInterestRateStrategyAddress(\\n        address reserve,\\n        uint8 tranche,\\n        address rateStrategyAddress\\n    ) external;\\n\\n    function setConfiguration(\\n        address reserve,\\n        uint8 tranche,\\n        uint256 configuration\\n    ) external;\\n\\n    /**\\n     * @dev Returns the configuration of the reserve\\n     * @param asset The address of the underlying asset of the reserve\\n     * @return The configuration of the reserve\\n     **/\\n    function getConfiguration(address asset, uint8 tranche)\\n        external\\n        view\\n        returns (DataTypes.ReserveConfigurationMap memory);\\n\\n    /**\\n     * @dev Returns the configuration of the user across all the reserves\\n     * @param user The user address\\n     * @return The configuration of the user\\n     **/\\n    function getUserConfiguration(address user)\\n        external\\n        view\\n        returns (DataTypes.UserConfigurationMap memory);\\n\\n    /**\\n     * @dev Returns the normalized income normalized income of the reserve\\n     * @param asset The address of the underlying asset of the reserve\\n     * @return The reserve's normalized income\\n     */\\n    function getReserveNormalizedIncome(address asset, uint8 tranche)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /**\\n     * @dev Returns the normalized variable debt per unit of asset\\n     * @param asset The address of the underlying asset of the reserve\\n     * @return The reserve normalized variable debt\\n     */\\n    function getReserveNormalizedVariableDebt(address asset, uint8 tranche)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /**\\n     * @dev Returns the state and configuration of the reserve\\n     * @param asset The address of the underlying asset of the reserve\\n     * @return The state of the reserve\\n     **/\\n    function getReserveData(address asset, uint8 tranche)\\n        external\\n        view\\n        returns (DataTypes.ReserveData memory);\\n\\n    function finalizeTransfer(\\n        address asset,\\n        uint8 tranche,\\n        address from,\\n        address to,\\n        uint256 amount,\\n        uint256 balanceFromAfter,\\n        uint256 balanceToBefore\\n    ) external;\\n\\n    function getReservesList() external view returns (address[] memory);\\n\\n    function getAssetData(address asset)\\n        external\\n        view\\n        returns (DataTypes.AssetData memory);\\n\\n    function getAddressesProvider()\\n        external\\n        view\\n        returns (ILendingPoolAddressesProvider);\\n\\n    function setPause(bool val) external;\\n\\n    function paused() external view returns (bool);\\n\\n    function editTrancheMultiplier(\\n        uint8 tranche,\\n        uint256 _liquidityRateMultiplier,\\n        uint256 _variableBorrowRateMultiplier,\\n        uint256 _stableBorrowRateMultiplier\\n    ) external;\\n\\n    function getTrancheMultiplier(uint8 tranche)\\n        external\\n        view\\n        returns (DataTypes.TrancheMultiplier memory);\\n}\\n\",\"keccak256\":\"0xa749eacaf399a92bfe2441ca9f3c81a17c1823d122b98361771159b0ab660c8e\",\"license\":\"agpl-3.0\"},\"contracts/interfaces/ILendingPoolAddressesProvider.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\nimport {DataTypes} from \\\"../protocol/libraries/types/DataTypes.sol\\\";\\n\\n/**\\n * @title LendingPoolAddressesProvider contract\\n * @dev Main registry of addresses part of or connected to the protocol, including permissioned roles\\n * - Acting also as factory of proxies and admin of those, so with right to change its implementations\\n * - Owned by the Aave Governance\\n * @author Aave\\n **/\\ninterface ILendingPoolAddressesProvider {\\n    event MarketIdSet(string newMarketId);\\n    event LendingPoolUpdated(address indexed newAddress);\\n    event ConfigurationAdminUpdated(address indexed newAddress);\\n    event EmergencyAdminUpdated(address indexed newAddress);\\n    event LendingPoolConfiguratorUpdated(address indexed newAddress);\\n    event LendingPoolCollateralManagerUpdated(address indexed newAddress);\\n    event PriceOracleUpdated(address indexed newAddress);\\n    event CurvePriceOracleUpdated(address indexed newAddress);\\n    event CurvePriceOracleWrapperUpdated(address indexed newAddress);\\n    event CurveAddressProviderUpdated(address indexed newAddress);\\n    event LendingRateOracleUpdated(address indexed newAddress);\\n    event ProxyCreated(bytes32 id, address indexed newAddress);\\n    event AddressSet(bytes32 id, address indexed newAddress, bool hasProxy);\\n\\n    function getMarketId() external view returns (string memory);\\n\\n    function setMarketId(string calldata marketId) external;\\n\\n    function setAddress(bytes32 id, address newAddress) external;\\n\\n    function setAddressAsProxy(bytes32 id, address impl) external;\\n\\n    function getAddress(bytes32 id) external view returns (address);\\n\\n    function getLendingPool() external view returns (address);\\n\\n    function setLendingPoolImpl(address pool) external;\\n\\n    function getLendingPoolConfigurator() external view returns (address);\\n\\n    function setLendingPoolConfiguratorImpl(address configurator) external;\\n\\n    function getLendingPoolCollateralManager() external view returns (address);\\n\\n    function setLendingPoolCollateralManager(address manager) external;\\n\\n    function getPoolAdmin() external view returns (address);\\n\\n    function setPoolAdmin(address admin) external;\\n\\n    function getEmergencyAdmin() external view returns (address);\\n\\n    function setEmergencyAdmin(address admin) external;\\n\\n    function getPriceOracle(DataTypes.ReserveAssetType assetType)\\n        external\\n        view\\n        returns (address);\\n\\n    function getAavePriceOracle() external view returns (address);\\n\\n    function getCurvePriceOracle() external view returns (address);\\n\\n    function getCurvePriceOracleWrapper() external view returns (address);\\n\\n    function getCurveAddressProvider() external view returns (address);\\n\\n    function setAavePriceOracle(address priceOracle) external;\\n\\n    function setCurveAddressProvider(address addressProvider) external;\\n\\n    function setCurvePriceOracle(address priceOracle) external;\\n\\n    function setCurvePriceOracleWrapper(address priceOracle) external;\\n\\n    function getLendingRateOracle() external view returns (address);\\n\\n    function setLendingRateOracle(address lendingRateOracle) external;\\n}\\n\",\"keccak256\":\"0xd05a545a54108bcf8be808763206cadbceefbfdc9d3e0ceff97fbe7e767cfe5e\",\"license\":\"agpl-3.0\"},\"contracts/misc/interfaces/IAaveOracle.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\n/**\\n * @title IAaveOracle interface\\n * @notice Interface for the Aave oracle.\\n **/\\n\\ninterface IAaveOracle {\\n    function BASE_CURRENCY() external view returns (address); // if usd returns 0x0, if eth returns weth address\\n\\n    function BASE_CURRENCY_UNIT() external view returns (uint256);\\n\\n    /***********\\n    @dev returns the asset price in ETH\\n     */\\n    function getAssetPrice(address asset) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xf55a1037dcbb14f3aa5e7e9c6d126833caa0e176ea0b6d8a85add31df8f5f2c9\",\"license\":\"agpl-3.0\"},\"contracts/protocol/libraries/types/DataTypes.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\nlibrary DataTypes {\\n    // refer to the whitepaper, section 1.1 basic concepts for a formal description of these properties.\\n\\n    enum ReserveAssetType {\\n        AAVE,\\n        CURVE\\n    } //update with other possible types of the underlying asset\\n    //AAVE is the original assets in the aave protocol\\n    //CURVE is the new LP tokens we are providing support for\\n\\n    struct AssetData {\\n        uint8 collateralRisk;\\n        bool isLendable;\\n        bool isAllowedCollateralInHigherTranches;\\n        ReserveAssetType assetType;\\n    }\\n\\n    struct TrancheAddress {\\n        uint8 tranche;\\n        address asset;\\n    }\\n    struct ReserveData {\\n        //stores the reserve configuration\\n        ReserveConfigurationMap configuration;\\n        //the liquidity index. Expressed in ray\\n        uint128 liquidityIndex; //not used for nonlendable assets\\n        //variable borrow index. Expressed in ray\\n        uint128 variableBorrowIndex; //not used for nonlendable assets\\n        //the current supply rate. Expressed in ray\\n        uint128 currentLiquidityRate; //deposit APR is defined as liquidityRate / RAY //not used for nonlendable assets\\n        //the current variable borrow rate. Expressed in ray\\n        uint128 currentVariableBorrowRate; //not used for nonlendable assets\\n        //the current stable borrow rate. Expressed in ray\\n        uint128 currentStableBorrowRate; //not used for nonlendable assets\\n        uint40 lastUpdateTimestamp;\\n        //tokens addresses\\n        address aTokenAddress;\\n        address stableDebtTokenAddress; //not used for nonlendable assets\\n        address variableDebtTokenAddress; //not used for nonlendable assets\\n        //address of the interest rate strategy\\n        address interestRateStrategyAddress; //not used for nonlendable assets\\n        //the id of the reserve. Represents the position in the list of the active reserves\\n        uint8 id;\\n        uint8 tranche; //I think this will be used for nonlendable assets, cause your collateral only asset can be placed in higher tranche if necessary\\n    }\\n\\n    struct TrancheMultiplier {\\n        uint256 liquidityRateMultiplier;\\n        uint256 variableBorrowRateMultiplier;\\n        uint256 stableBorrowRateMultiplier;\\n    }\\n\\n    uint8 constant NUM_TRANCHES = 3;\\n\\n    struct ReserveConfigurationMap {\\n        //bit 0-15: LTV\\n        //bit 16-31: Liq. threshold\\n        //bit 32-47: Liq. bonus\\n        //bit 48-55: Decimals\\n        //bit 56: Reserve is active\\n        //bit 57: reserve is frozen\\n        //bit 58: borrowing is enabled\\n        //bit 59: stable rate borrowing enabled\\n        //bit 60-63: reserved\\n        //bit 64-79: reserve factor\\n        uint256 data;\\n    }\\n\\n    struct UserConfigurationMap {\\n        uint256 data;\\n    }\\n\\n    enum InterestRateMode {\\n        NONE,\\n        STABLE,\\n        VARIABLE\\n    }\\n\\n    struct AcctTranche {\\n        address user;\\n        uint8 tranche;\\n    }\\n\\n    struct DepositVars {\\n        address asset;\\n        uint8 tranche;\\n        uint8 risk;\\n        bool allowHigherTranche;\\n        bool isLendable;\\n        TrancheMultiplier t;\\n    }\\n\\n    struct ExecuteBorrowParams {\\n        address asset;\\n        uint8 tranche; //tranche the user wants to borrow out of\\n        address user;\\n        address onBehalfOf;\\n        uint256 amount;\\n        uint256 interestRateMode;\\n        address aTokenAddress;\\n        uint16 referralCode;\\n        bool releaseUnderlying;\\n        uint256 _maxStableRateBorrowSizePercent;\\n        uint256 _reservesCount;\\n        TrancheMultiplier t;\\n    }\\n\\n    struct WithdrawParams {\\n        uint256 _reservesCount;\\n        address asset;\\n        uint8 tranche;\\n        uint256 amount;\\n        address to;\\n        TrancheMultiplier t;\\n    }\\n\\n    struct ValidateSetUseReserveAsCollateralParams {\\n        uint8 risk;\\n        bool allowHigherTranche;\\n    }\\n\\n    struct calculateInterestRatesVars {\\n        address reserve;\\n        address aToken;\\n        uint256 liquidityAdded;\\n        uint256 liquidityTaken;\\n        uint256 reserveFactor;\\n    }\\n\\n    struct flashLoanVars {\\n        address receiverAddress;\\n        DataTypes.TrancheAddress[] assets;\\n        uint256[] amounts;\\n        uint256[] modes;\\n        address onBehalfOf;\\n        bytes params;\\n        uint16 referralCode;\\n        uint256 _flashLoanPremiumTotal;\\n        address oracle;\\n        uint256 _maxStableRateBorrowSizePercent;\\n        uint256 _reservesCount;\\n    }\\n}\\n\",\"keccak256\":\"0x7302b5b5775a9a0019bd062c95d5a94a0b7bfa4553ae872968cf8ecf7c35fc8f\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/analytics/libraries/Constants.sol":{"Constants":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122069dcfc29a6f5fe814d2779c94a8cba4a533ad6662492731fee797fb49685113064736f6c63430008000033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0xDCFC29A6F5FE814D2779 0xC9 0x4A DUP13 0xBA 0x4A MSTORE8 GASPRICE 0xD6 PUSH7 0x2492731FEE797F 0xB4 SWAP7 DUP6 GT ADDRESS PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ","sourceMap":"63:4517:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;63:4517:1;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122069dcfc29a6f5fe814d2779c94a8cba4a533ad6662492731fee797fb49685113064736f6c63430008000033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0xDCFC29A6F5FE814D2779 0xC9 0x4A DUP13 0xBA 0x4A MSTORE8 GASPRICE 0xD6 PUSH7 0x2492731FEE797F 0xB4 SWAP7 DUP6 GT ADDRESS PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ","sourceMap":"63:4517:1:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"ETHPriceOracles()":"infinite","USDPriceOracles()":"infinite","token()":"infinite","tokenNames()":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/analytics/libraries/Constants.sol\":\"Constants\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/analytics/libraries/Constants.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\nlibrary Constants {\\n    function token() internal pure returns (address[22] memory) {\\n        address[22] memory tokens = [\\n            0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9,\\n            0x0D8775F648430679A709E98d2b0Cb6250d2887EF,\\n            0x4Fabb145d64652a948d72533023f6E7A623C7C53,\\n            0x6B175474E89094C44Da98b954EedeAC495271d0F,\\n            0xF629cBd94d3791C9250152BD8dfBDF380E2a3B9c,\\n            0xdd974D5C2e2928deA5F71b9825b8b646686BD200,\\n            0x514910771AF9Ca656af840dff83E8264EcF986CA,\\n            0x0F5D2fB29fb7d3CFeE444a200298f468908cC942,\\n            0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2,\\n            0x408e41876cCCDC0F92210600ef50372656052a38,\\n            0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F,\\n            0x57Ab1ec28D129707052df4dF418D58a2D46d5f51,\\n            0x0000000000085d4780B73119b644AE5ecd22b376,\\n            0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984,\\n            0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48,\\n            0xdAC17F958D2ee523a2206206994597C13D831ec7,\\n            0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599,\\n            0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2,\\n            0x0bc529c00C6401aEF6D220BE8C6Ea1667F6Ad93e,\\n            0xE41d2489571d322189246DaFA5ebDe1F4699F498,\\n            0x8798249c2E607446EfB7Ad49eC89dD1865Ff4272,\\n            0xc4AD29ba4B3c580e6D59105FFf484999997675Ff\\n        ];\\n        return tokens;\\n    }\\n\\n    function tokenNames() internal pure returns (string[22] memory) {\\n        string[22] memory data = [\\n            \\\"AAVE\\\",\\n            \\\"BAT\\\",\\n            \\\"BUSD\\\",\\n            \\\"DAI\\\",\\n            \\\"ENJ\\\",\\n            \\\"KNC\\\",\\n            \\\"LINK\\\",\\n            \\\"MANA\\\",\\n            \\\"MKR\\\",\\n            \\\"REN\\\",\\n            \\\"SNX\\\",\\n            \\\"SUSD\\\",\\n            \\\"TUSD\\\",\\n            \\\"UNI\\\",\\n            \\\"USDC\\\",\\n            \\\"USDT\\\",\\n            \\\"WBTC\\\",\\n            \\\"WETH\\\",\\n            \\\"YFI\\\",\\n            \\\"ZRX\\\",\\n            \\\"xSUSHI\\\",\\n            \\\"crv3crypto\\\"\\n        ];\\n        return data;\\n    }\\n\\n    function ETHPriceOracles() internal pure returns (address[20] memory) {\\n        address[20] memory data = [\\n            0x6Df09E975c830ECae5bd4eD9d90f3A95a4f88012,\\n            0x0d16d4528239e9ee52fa531af613AcdB23D88c94,\\n            0x614715d2Af89E6EC99A233818275142cE88d1Cfd,\\n            0x773616E4d11A78F511299002da57A0a94577F1f4,\\n            0x24D9aB51950F3d62E9144fdC2f3135DAA6Ce8D1B,\\n            0x656c0544eF4C98A6a98491833A89204Abb045d6b,\\n            0xDC530D9457755926550b59e8ECcdaE7624181557,\\n            0x82A44D92D6c329826dc557c5E1Be6ebeC5D5FeB9,\\n            0x24551a8Fb2A7211A25a17B1481f043A8a8adC7f2,\\n            0x3147D7203354Dc06D9fd350c7a2437bcA92387a4,\\n            0x79291A9d692Df95334B1a0B3B4AE6bC606782f8c,\\n            0x8e0b7e6062272B5eF4524250bFFF8e5Bd3497757,\\n            0x3886BA987236181D98F2401c507Fb8BeA7871dF2,\\n            0xD6aA3D25116d8dA79Ea0246c4826EB951872e02e,\\n            0x986b5E1e1755e3C2440e960477f25201B0a8bbD4,\\n            0xEe9F2375b4bdF6387aa8265dD4FB8F16512A1d46,\\n            0xdeb288F737066589598e9214E782fa5A8eD689e8,\\n            0x7c5d4F8345e66f68099581Db340cd65B078C41f4,\\n            0x2Da4983a622a8498bb1a21FaE9D8F6C664939962,\\n            0x9b26214bEC078E68a394AaEbfbffF406Ce14893F\\n        ];\\n        return data;\\n    }\\n\\n    function USDPriceOracles() internal pure returns (address[20] memory) {\\n        address[20] memory data = [\\n            0x547a514d5e3769680Ce22B2361c10Ea13619e8a9,\\n            0x9441D7556e7820B5ca42082cfa99487D56AcA958,\\n            0x833D8Eb16D306ed1FbB5D7A2E019e106B960965A,\\n            0xAed0c38402a5d19df6E4c03F4E2DceD6e29c1ee9,\\n            0x23905C55dC11D609D5d11Dc604905779545De9a7,\\n            0xf8fF43E991A81e6eC886a3D281A2C6cC19aE70Fc,\\n            0x2c1d072e956AFFC0D435Cb7AC38EF18d24d9127c,\\n            0x56a4857acbcfe3a66965c251628B1c9f1c408C19,\\n            0xec1D1B3b0443256cc3860e24a46F108e699484Aa,\\n            0x0f59666EDE214281e956cb3b2D0d69415AfF4A01,\\n            0xDC3EA94CD0AC27d9A86C180091e7f78C683d3699,\\n            0xad35Bd71b9aFE6e4bDc266B345c198eaDEf9Ad94,\\n            0xec746eCF986E2927Abd291a2A1716c940100f8Ba,\\n            0x553303d460EE0afB37EdFf9bE42922D8FF63220e,\\n            0x8fFfFfd4AfB6115b954Bd326cbe7B4BA576818f6,\\n            0x3E7d1eAB13ad0104d2750B8863b489D65364e32D,\\n            0xF4030086522a5bEEa4988F8cA5B36dbC97BeE88c,\\n            0xA027702dbb89fbd58938e4324ac03B58d812b0E1,\\n            0x2885d15b8Af22648b98B122b22FDF4D2a56c6023,\\n            0xCC1f5d9e6956447630d703C8e93b2345c2DE3D13\\n        ];\\n        return data;\\n    }\\n}\\n\",\"keccak256\":\"0x123c0091e94a75d68fb035a3d99df846e07a16ed1c1e7836d3192e0981a9c7e9\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/analytics/queries/getTokenReserveData.sol":{"getTokenReserveData":{"abi":[{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint8","name":"tranche","type":"uint8"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"getType","outputs":[{"components":[{"internalType":"string","name":"symbol","type":"string"},{"components":[{"components":[{"internalType":"uint256","name":"data","type":"uint256"}],"internalType":"struct DataTypes.ReserveConfigurationMap","name":"configuration","type":"tuple"},{"internalType":"uint128","name":"liquidityIndex","type":"uint128"},{"internalType":"uint128","name":"variableBorrowIndex","type":"uint128"},{"internalType":"uint128","name":"currentLiquidityRate","type":"uint128"},{"internalType":"uint128","name":"currentVariableBorrowRate","type":"uint128"},{"internalType":"uint128","name":"currentStableBorrowRate","type":"uint128"},{"internalType":"uint40","name":"lastUpdateTimestamp","type":"uint40"},{"internalType":"address","name":"aTokenAddress","type":"address"},{"internalType":"address","name":"stableDebtTokenAddress","type":"address"},{"internalType":"address","name":"variableDebtTokenAddress","type":"address"},{"internalType":"address","name":"interestRateStrategyAddress","type":"address"},{"internalType":"uint8","name":"id","type":"uint8"},{"internalType":"uint8","name":"tranche","type":"uint8"}],"internalType":"struct DataTypes.ReserveData","name":"reserveData","type":"tuple"},{"components":[{"internalType":"uint8","name":"collateralRisk","type":"uint8"},{"internalType":"bool","name":"isLendable","type":"bool"},{"internalType":"bool","name":"isAllowedCollateralInHigherTranches","type":"bool"},{"internalType":"enum DataTypes.ReserveAssetType","name":"assetType","type":"uint8"}],"internalType":"struct DataTypes.AssetData","name":"assetData","type":"tuple"}],"internalType":"struct TokenData[22]","name":"","type":"tuple[22]"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:9166:30","statements":[{"nodeType":"YulBlock","src":"6:3:30","statements":[]},{"body":{"nodeType":"YulBlock","src":"76:117:30","statements":[{"nodeType":"YulAssignment","src":"86:22:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"101:6:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"95:5:30"},"nodeType":"YulFunctionCall","src":"95:13:30"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"86:5:30"}]},{"body":{"nodeType":"YulBlock","src":"171:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"180:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"183:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"173:6:30"},"nodeType":"YulFunctionCall","src":"173:12:30"},"nodeType":"YulExpressionStatement","src":"173:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"130:5:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"141:5:30"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"156:3:30","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"161:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"152:3:30"},"nodeType":"YulFunctionCall","src":"152:11:30"},{"kind":"number","nodeType":"YulLiteral","src":"165:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"148:3:30"},"nodeType":"YulFunctionCall","src":"148:19:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"137:3:30"},"nodeType":"YulFunctionCall","src":"137:31:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"127:2:30"},"nodeType":"YulFunctionCall","src":"127:42:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"120:6:30"},"nodeType":"YulFunctionCall","src":"120:50:30"},"nodeType":"YulIf","src":"117:2:30"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"55:6:30","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"66:5:30","type":""}],"src":"14:179:30"},{"body":{"nodeType":"YulBlock","src":"257:107:30","statements":[{"nodeType":"YulAssignment","src":"267:22:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"282:6:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"276:5:30"},"nodeType":"YulFunctionCall","src":"276:13:30"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"267:5:30"}]},{"body":{"nodeType":"YulBlock","src":"342:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"351:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"354:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"344:6:30"},"nodeType":"YulFunctionCall","src":"344:12:30"},"nodeType":"YulExpressionStatement","src":"344:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"311:5:30"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"332:5:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"325:6:30"},"nodeType":"YulFunctionCall","src":"325:13:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"318:6:30"},"nodeType":"YulFunctionCall","src":"318:21:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"308:2:30"},"nodeType":"YulFunctionCall","src":"308:32:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"301:6:30"},"nodeType":"YulFunctionCall","src":"301:40:30"},"nodeType":"YulIf","src":"298:2:30"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"236:6:30","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"247:5:30","type":""}],"src":"198:166:30"},{"body":{"nodeType":"YulBlock","src":"463:152:30","statements":[{"body":{"nodeType":"YulBlock","src":"507:24:30","statements":[{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"516:5:30"},{"name":"value","nodeType":"YulIdentifier","src":"523:5:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"509:6:30"},"nodeType":"YulFunctionCall","src":"509:20:30"},"nodeType":"YulExpressionStatement","src":"509:20:30"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"484:3:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"489:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"480:3:30"},"nodeType":"YulFunctionCall","src":"480:19:30"},{"kind":"number","nodeType":"YulLiteral","src":"501:4:30","type":"","value":"0x20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"476:3:30"},"nodeType":"YulFunctionCall","src":"476:30:30"},"nodeType":"YulIf","src":"473:2:30"},{"nodeType":"YulAssignment","src":"540:29:30","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"564:4:30","type":"","value":"0x20"}],"functionName":{"name":"allocateMemory","nodeType":"YulIdentifier","src":"549:14:30"},"nodeType":"YulFunctionCall","src":"549:20:30"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"540:5:30"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"585:5:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"598:9:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"592:5:30"},"nodeType":"YulFunctionCall","src":"592:16:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"578:6:30"},"nodeType":"YulFunctionCall","src":"578:31:30"},"nodeType":"YulExpressionStatement","src":"578:31:30"}]},"name":"abi_decode_t_struct$_ReserveConfigurationMap_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"434:9:30","type":""},{"name":"end","nodeType":"YulTypedName","src":"445:3:30","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"453:5:30","type":""}],"src":"369:246:30"},{"body":{"nodeType":"YulBlock","src":"682:117:30","statements":[{"nodeType":"YulAssignment","src":"692:22:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"707:6:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"701:5:30"},"nodeType":"YulFunctionCall","src":"701:13:30"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"692:5:30"}]},{"body":{"nodeType":"YulBlock","src":"777:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"786:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"789:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"779:6:30"},"nodeType":"YulFunctionCall","src":"779:12:30"},"nodeType":"YulExpressionStatement","src":"779:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"736:5:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"747:5:30"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"762:3:30","type":"","value":"128"},{"kind":"number","nodeType":"YulLiteral","src":"767:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"758:3:30"},"nodeType":"YulFunctionCall","src":"758:11:30"},{"kind":"number","nodeType":"YulLiteral","src":"771:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"754:3:30"},"nodeType":"YulFunctionCall","src":"754:19:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"743:3:30"},"nodeType":"YulFunctionCall","src":"743:31:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"733:2:30"},"nodeType":"YulFunctionCall","src":"733:42:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"726:6:30"},"nodeType":"YulFunctionCall","src":"726:50:30"},"nodeType":"YulIf","src":"723:2:30"}]},"name":"abi_decode_t_uint128_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"661:6:30","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"672:5:30","type":""}],"src":"620:179:30"},{"body":{"nodeType":"YulBlock","src":"865:110:30","statements":[{"nodeType":"YulAssignment","src":"875:22:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"890:6:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"884:5:30"},"nodeType":"YulFunctionCall","src":"884:13:30"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"875:5:30"}]},{"body":{"nodeType":"YulBlock","src":"953:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"962:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"965:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"955:6:30"},"nodeType":"YulFunctionCall","src":"955:12:30"},"nodeType":"YulExpressionStatement","src":"955:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"919:5:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"930:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"937:12:30","type":"","value":"0xffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"926:3:30"},"nodeType":"YulFunctionCall","src":"926:24:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"916:2:30"},"nodeType":"YulFunctionCall","src":"916:35:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"909:6:30"},"nodeType":"YulFunctionCall","src":"909:43:30"},"nodeType":"YulIf","src":"906:2:30"}]},"name":"abi_decode_t_uint40_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"844:6:30","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"855:5:30","type":""}],"src":"804:171:30"},{"body":{"nodeType":"YulBlock","src":"1040:102:30","statements":[{"nodeType":"YulAssignment","src":"1050:22:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1065:6:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1059:5:30"},"nodeType":"YulFunctionCall","src":"1059:13:30"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1050:5:30"}]},{"body":{"nodeType":"YulBlock","src":"1120:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1129:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1132:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1122:6:30"},"nodeType":"YulFunctionCall","src":"1122:12:30"},"nodeType":"YulExpressionStatement","src":"1122:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1094:5:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1105:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"1112:4:30","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1101:3:30"},"nodeType":"YulFunctionCall","src":"1101:16:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1091:2:30"},"nodeType":"YulFunctionCall","src":"1091:27:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1084:6:30"},"nodeType":"YulFunctionCall","src":"1084:35:30"},"nodeType":"YulIf","src":"1081:2:30"}]},"name":"abi_decode_t_uint8_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1019:6:30","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1030:5:30","type":""}],"src":"980:162:30"},{"body":{"nodeType":"YulBlock","src":"1228:139:30","statements":[{"body":{"nodeType":"YulBlock","src":"1274:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1283:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"1291:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1276:6:30"},"nodeType":"YulFunctionCall","src":"1276:22:30"},"nodeType":"YulExpressionStatement","src":"1276:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1249:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"1258:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1245:3:30"},"nodeType":"YulFunctionCall","src":"1245:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"1270:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1241:3:30"},"nodeType":"YulFunctionCall","src":"1241:32:30"},"nodeType":"YulIf","src":"1238:2:30"},{"nodeType":"YulAssignment","src":"1309:52:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1351:9:30"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1319:31:30"},"nodeType":"YulFunctionCall","src":"1319:42:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1309:6:30"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1194:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1205:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1217:6:30","type":""}],"src":"1147:220:30"},{"body":{"nodeType":"YulBlock","src":"1468:207:30","statements":[{"body":{"nodeType":"YulBlock","src":"1514:26:30","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1523:6:30"},{"name":"value1","nodeType":"YulIdentifier","src":"1531:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1516:6:30"},"nodeType":"YulFunctionCall","src":"1516:22:30"},"nodeType":"YulExpressionStatement","src":"1516:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1489:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"1498:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1485:3:30"},"nodeType":"YulFunctionCall","src":"1485:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"1510:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1481:3:30"},"nodeType":"YulFunctionCall","src":"1481:32:30"},"nodeType":"YulIf","src":"1478:2:30"},{"nodeType":"YulAssignment","src":"1549:52:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1591:9:30"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1559:31:30"},"nodeType":"YulFunctionCall","src":"1559:42:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1549:6:30"}]},{"nodeType":"YulAssignment","src":"1610:59:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1654:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"1665:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1650:3:30"},"nodeType":"YulFunctionCall","src":"1650:18:30"}],"functionName":{"name":"abi_decode_t_uint8_fromMemory","nodeType":"YulIdentifier","src":"1620:29:30"},"nodeType":"YulFunctionCall","src":"1620:49:30"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1610:6:30"}]}]},"name":"abi_decode_tuple_t_addresst_uint8_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1426:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1437:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1449:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1457:6:30","type":""}],"src":"1372:303:30"},{"body":{"nodeType":"YulBlock","src":"1788:520:30","statements":[{"body":{"nodeType":"YulBlock","src":"1835:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1844:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"1852:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1837:6:30"},"nodeType":"YulFunctionCall","src":"1837:22:30"},"nodeType":"YulExpressionStatement","src":"1837:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1809:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"1818:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1805:3:30"},"nodeType":"YulFunctionCall","src":"1805:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"1830:3:30","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1801:3:30"},"nodeType":"YulFunctionCall","src":"1801:33:30"},"nodeType":"YulIf","src":"1798:2:30"},{"nodeType":"YulVariableDeclaration","src":"1870:32:30","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1898:3:30","type":"","value":"128"}],"functionName":{"name":"allocateMemory","nodeType":"YulIdentifier","src":"1883:14:30"},"nodeType":"YulFunctionCall","src":"1883:19:30"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1874:5:30","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1918:5:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1955:9:30"}],"functionName":{"name":"abi_decode_t_uint8_fromMemory","nodeType":"YulIdentifier","src":"1925:29:30"},"nodeType":"YulFunctionCall","src":"1925:40:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1911:6:30"},"nodeType":"YulFunctionCall","src":"1911:55:30"},"nodeType":"YulExpressionStatement","src":"1911:55:30"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1986:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"1993:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1982:3:30"},"nodeType":"YulFunctionCall","src":"1982:14:30"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2031:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2042:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2027:3:30"},"nodeType":"YulFunctionCall","src":"2027:18:30"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"1998:28:30"},"nodeType":"YulFunctionCall","src":"1998:48:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1975:6:30"},"nodeType":"YulFunctionCall","src":"1975:72:30"},"nodeType":"YulExpressionStatement","src":"1975:72:30"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2067:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"2074:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2063:3:30"},"nodeType":"YulFunctionCall","src":"2063:14:30"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2112:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2123:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2108:3:30"},"nodeType":"YulFunctionCall","src":"2108:18:30"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"2079:28:30"},"nodeType":"YulFunctionCall","src":"2079:48:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2056:6:30"},"nodeType":"YulFunctionCall","src":"2056:72:30"},"nodeType":"YulExpressionStatement","src":"2056:72:30"},{"nodeType":"YulVariableDeclaration","src":"2137:40:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2162:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2173:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2158:3:30"},"nodeType":"YulFunctionCall","src":"2158:18:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2152:5:30"},"nodeType":"YulFunctionCall","src":"2152:25:30"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"2141:7:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"2212:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2221:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"2229:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2214:6:30"},"nodeType":"YulFunctionCall","src":"2214:22:30"},"nodeType":"YulExpressionStatement","src":"2214:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"2199:7:30"},{"kind":"number","nodeType":"YulLiteral","src":"2208:1:30","type":"","value":"2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2196:2:30"},"nodeType":"YulFunctionCall","src":"2196:14:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2189:6:30"},"nodeType":"YulFunctionCall","src":"2189:22:30"},"nodeType":"YulIf","src":"2186:2:30"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2258:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"2265:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2254:3:30"},"nodeType":"YulFunctionCall","src":"2254:14:30"},{"name":"value_1","nodeType":"YulIdentifier","src":"2270:7:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2247:6:30"},"nodeType":"YulFunctionCall","src":"2247:31:30"},"nodeType":"YulExpressionStatement","src":"2247:31:30"},{"nodeType":"YulAssignment","src":"2287:15:30","value":{"name":"value","nodeType":"YulIdentifier","src":"2297:5:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2287:6:30"}]}]},"name":"abi_decode_tuple_t_struct$_AssetData_$4082_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1754:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1765:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1777:6:30","type":""}],"src":"1680:628:30"},{"body":{"nodeType":"YulBlock","src":"2423:1384:30","statements":[{"nodeType":"YulVariableDeclaration","src":"2433:13:30","value":{"kind":"number","nodeType":"YulLiteral","src":"2443:3:30","type":"","value":"416"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2437:2:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"2491:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2500:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"2508:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2493:6:30"},"nodeType":"YulFunctionCall","src":"2493:22:30"},"nodeType":"YulExpressionStatement","src":"2493:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2466:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"2475:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2462:3:30"},"nodeType":"YulFunctionCall","src":"2462:23:30"},{"name":"_1","nodeType":"YulIdentifier","src":"2487:2:30"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2458:3:30"},"nodeType":"YulFunctionCall","src":"2458:32:30"},"nodeType":"YulIf","src":"2455:2:30"},{"nodeType":"YulVariableDeclaration","src":"2526:31:30","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2554:2:30"}],"functionName":{"name":"allocateMemory","nodeType":"YulIdentifier","src":"2539:14:30"},"nodeType":"YulFunctionCall","src":"2539:18:30"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2530:5:30","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2573:5:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2636:9:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2647:7:30"}],"functionName":{"name":"abi_decode_t_struct$_ReserveConfigurationMap_fromMemory","nodeType":"YulIdentifier","src":"2580:55:30"},"nodeType":"YulFunctionCall","src":"2580:75:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2566:6:30"},"nodeType":"YulFunctionCall","src":"2566:90:30"},"nodeType":"YulExpressionStatement","src":"2566:90:30"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2676:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"2683:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2672:3:30"},"nodeType":"YulFunctionCall","src":"2672:14:30"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2724:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2735:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2720:3:30"},"nodeType":"YulFunctionCall","src":"2720:18:30"}],"functionName":{"name":"abi_decode_t_uint128_fromMemory","nodeType":"YulIdentifier","src":"2688:31:30"},"nodeType":"YulFunctionCall","src":"2688:51:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2665:6:30"},"nodeType":"YulFunctionCall","src":"2665:75:30"},"nodeType":"YulExpressionStatement","src":"2665:75:30"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2760:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"2767:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2756:3:30"},"nodeType":"YulFunctionCall","src":"2756:14:30"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2808:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2819:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2804:3:30"},"nodeType":"YulFunctionCall","src":"2804:18:30"}],"functionName":{"name":"abi_decode_t_uint128_fromMemory","nodeType":"YulIdentifier","src":"2772:31:30"},"nodeType":"YulFunctionCall","src":"2772:51:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2749:6:30"},"nodeType":"YulFunctionCall","src":"2749:75:30"},"nodeType":"YulExpressionStatement","src":"2749:75:30"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2844:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"2851:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2840:3:30"},"nodeType":"YulFunctionCall","src":"2840:14:30"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2892:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2903:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2888:3:30"},"nodeType":"YulFunctionCall","src":"2888:18:30"}],"functionName":{"name":"abi_decode_t_uint128_fromMemory","nodeType":"YulIdentifier","src":"2856:31:30"},"nodeType":"YulFunctionCall","src":"2856:51:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2833:6:30"},"nodeType":"YulFunctionCall","src":"2833:75:30"},"nodeType":"YulExpressionStatement","src":"2833:75:30"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2928:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"2935:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2924:3:30"},"nodeType":"YulFunctionCall","src":"2924:15:30"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2977:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2988:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2973:3:30"},"nodeType":"YulFunctionCall","src":"2973:19:30"}],"functionName":{"name":"abi_decode_t_uint128_fromMemory","nodeType":"YulIdentifier","src":"2941:31:30"},"nodeType":"YulFunctionCall","src":"2941:52:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2917:6:30"},"nodeType":"YulFunctionCall","src":"2917:77:30"},"nodeType":"YulExpressionStatement","src":"2917:77:30"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3014:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"3021:3:30","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3010:3:30"},"nodeType":"YulFunctionCall","src":"3010:15:30"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3063:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3074:3:30","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3059:3:30"},"nodeType":"YulFunctionCall","src":"3059:19:30"}],"functionName":{"name":"abi_decode_t_uint128_fromMemory","nodeType":"YulIdentifier","src":"3027:31:30"},"nodeType":"YulFunctionCall","src":"3027:52:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3003:6:30"},"nodeType":"YulFunctionCall","src":"3003:77:30"},"nodeType":"YulExpressionStatement","src":"3003:77:30"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3100:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"3107:3:30","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3096:3:30"},"nodeType":"YulFunctionCall","src":"3096:15:30"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3148:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3159:3:30","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3144:3:30"},"nodeType":"YulFunctionCall","src":"3144:19:30"}],"functionName":{"name":"abi_decode_t_uint40_fromMemory","nodeType":"YulIdentifier","src":"3113:30:30"},"nodeType":"YulFunctionCall","src":"3113:51:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3089:6:30"},"nodeType":"YulFunctionCall","src":"3089:76:30"},"nodeType":"YulExpressionStatement","src":"3089:76:30"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3185:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"3192:3:30","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3181:3:30"},"nodeType":"YulFunctionCall","src":"3181:15:30"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3234:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3245:3:30","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3230:3:30"},"nodeType":"YulFunctionCall","src":"3230:19:30"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"3198:31:30"},"nodeType":"YulFunctionCall","src":"3198:52:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3174:6:30"},"nodeType":"YulFunctionCall","src":"3174:77:30"},"nodeType":"YulExpressionStatement","src":"3174:77:30"},{"nodeType":"YulVariableDeclaration","src":"3260:13:30","value":{"kind":"number","nodeType":"YulLiteral","src":"3270:3:30","type":"","value":"256"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3264:2:30","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3293:5:30"},{"name":"_2","nodeType":"YulIdentifier","src":"3300:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3289:3:30"},"nodeType":"YulFunctionCall","src":"3289:14:30"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3341:9:30"},{"name":"_2","nodeType":"YulIdentifier","src":"3352:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3337:3:30"},"nodeType":"YulFunctionCall","src":"3337:18:30"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"3305:31:30"},"nodeType":"YulFunctionCall","src":"3305:51:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3282:6:30"},"nodeType":"YulFunctionCall","src":"3282:75:30"},"nodeType":"YulExpressionStatement","src":"3282:75:30"},{"nodeType":"YulVariableDeclaration","src":"3366:13:30","value":{"kind":"number","nodeType":"YulLiteral","src":"3376:3:30","type":"","value":"288"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"3370:2:30","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3399:5:30"},{"name":"_3","nodeType":"YulIdentifier","src":"3406:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3395:3:30"},"nodeType":"YulFunctionCall","src":"3395:14:30"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3447:9:30"},{"name":"_3","nodeType":"YulIdentifier","src":"3458:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3443:3:30"},"nodeType":"YulFunctionCall","src":"3443:18:30"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"3411:31:30"},"nodeType":"YulFunctionCall","src":"3411:51:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3388:6:30"},"nodeType":"YulFunctionCall","src":"3388:75:30"},"nodeType":"YulExpressionStatement","src":"3388:75:30"},{"nodeType":"YulVariableDeclaration","src":"3472:13:30","value":{"kind":"number","nodeType":"YulLiteral","src":"3482:3:30","type":"","value":"320"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"3476:2:30","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3505:5:30"},{"name":"_4","nodeType":"YulIdentifier","src":"3512:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3501:3:30"},"nodeType":"YulFunctionCall","src":"3501:14:30"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3553:9:30"},{"name":"_4","nodeType":"YulIdentifier","src":"3564:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3549:3:30"},"nodeType":"YulFunctionCall","src":"3549:18:30"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"3517:31:30"},"nodeType":"YulFunctionCall","src":"3517:51:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3494:6:30"},"nodeType":"YulFunctionCall","src":"3494:75:30"},"nodeType":"YulExpressionStatement","src":"3494:75:30"},{"nodeType":"YulVariableDeclaration","src":"3578:13:30","value":{"kind":"number","nodeType":"YulLiteral","src":"3588:3:30","type":"","value":"352"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"3582:2:30","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3611:5:30"},{"name":"_5","nodeType":"YulIdentifier","src":"3618:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3607:3:30"},"nodeType":"YulFunctionCall","src":"3607:14:30"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3657:9:30"},{"name":"_5","nodeType":"YulIdentifier","src":"3668:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3653:3:30"},"nodeType":"YulFunctionCall","src":"3653:18:30"}],"functionName":{"name":"abi_decode_t_uint8_fromMemory","nodeType":"YulIdentifier","src":"3623:29:30"},"nodeType":"YulFunctionCall","src":"3623:49:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3600:6:30"},"nodeType":"YulFunctionCall","src":"3600:73:30"},"nodeType":"YulExpressionStatement","src":"3600:73:30"},{"nodeType":"YulVariableDeclaration","src":"3682:13:30","value":{"kind":"number","nodeType":"YulLiteral","src":"3692:3:30","type":"","value":"384"},"variables":[{"name":"_6","nodeType":"YulTypedName","src":"3686:2:30","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3715:5:30"},{"name":"_6","nodeType":"YulIdentifier","src":"3722:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3711:3:30"},"nodeType":"YulFunctionCall","src":"3711:14:30"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3761:9:30"},{"name":"_6","nodeType":"YulIdentifier","src":"3772:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3757:3:30"},"nodeType":"YulFunctionCall","src":"3757:18:30"}],"functionName":{"name":"abi_decode_t_uint8_fromMemory","nodeType":"YulIdentifier","src":"3727:29:30"},"nodeType":"YulFunctionCall","src":"3727:49:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3704:6:30"},"nodeType":"YulFunctionCall","src":"3704:73:30"},"nodeType":"YulExpressionStatement","src":"3704:73:30"},{"nodeType":"YulAssignment","src":"3786:15:30","value":{"name":"value","nodeType":"YulIdentifier","src":"3796:5:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3786:6:30"}]}]},"name":"abi_decode_tuple_t_struct$_ReserveData_$4115_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2389:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2400:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2412:6:30","type":""}],"src":"2313:1494:30"},{"body":{"nodeType":"YulBlock","src":"3858:60:30","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3875:3:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3884:5:30"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3899:3:30","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3904:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3895:3:30"},"nodeType":"YulFunctionCall","src":"3895:11:30"},{"kind":"number","nodeType":"YulLiteral","src":"3908:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3891:3:30"},"nodeType":"YulFunctionCall","src":"3891:19:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3880:3:30"},"nodeType":"YulFunctionCall","src":"3880:31:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3868:6:30"},"nodeType":"YulFunctionCall","src":"3868:44:30"},"nodeType":"YulExpressionStatement","src":"3868:44:30"}]},"name":"abi_encode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3842:5:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3849:3:30","type":""}],"src":"3812:106:30"},{"body":{"nodeType":"YulBlock","src":"3979:452:30","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3996:3:30"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4011:5:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4005:5:30"},"nodeType":"YulFunctionCall","src":"4005:12:30"},{"kind":"number","nodeType":"YulLiteral","src":"4019:4:30","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4001:3:30"},"nodeType":"YulFunctionCall","src":"4001:23:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3989:6:30"},"nodeType":"YulFunctionCall","src":"3989:36:30"},"nodeType":"YulExpressionStatement","src":"3989:36:30"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4045:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"4050:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4041:3:30"},"nodeType":"YulFunctionCall","src":"4041:14:30"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4081:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"4088:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4077:3:30"},"nodeType":"YulFunctionCall","src":"4077:16:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4071:5:30"},"nodeType":"YulFunctionCall","src":"4071:23:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4064:6:30"},"nodeType":"YulFunctionCall","src":"4064:31:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4057:6:30"},"nodeType":"YulFunctionCall","src":"4057:39:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4034:6:30"},"nodeType":"YulFunctionCall","src":"4034:63:30"},"nodeType":"YulExpressionStatement","src":"4034:63:30"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4117:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"4122:4:30","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4113:3:30"},"nodeType":"YulFunctionCall","src":"4113:14:30"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4153:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"4160:4:30","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4149:3:30"},"nodeType":"YulFunctionCall","src":"4149:16:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4143:5:30"},"nodeType":"YulFunctionCall","src":"4143:23:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4136:6:30"},"nodeType":"YulFunctionCall","src":"4136:31:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4129:6:30"},"nodeType":"YulFunctionCall","src":"4129:39:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4106:6:30"},"nodeType":"YulFunctionCall","src":"4106:63:30"},"nodeType":"YulExpressionStatement","src":"4106:63:30"},{"nodeType":"YulVariableDeclaration","src":"4178:43:30","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4208:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"4215:4:30","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4204:3:30"},"nodeType":"YulFunctionCall","src":"4204:16:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4198:5:30"},"nodeType":"YulFunctionCall","src":"4198:23:30"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"4182:12:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"4269:111:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4290:1:30","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4297:3:30","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4302:10:30","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4293:3:30"},"nodeType":"YulFunctionCall","src":"4293:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4283:6:30"},"nodeType":"YulFunctionCall","src":"4283:31:30"},"nodeType":"YulExpressionStatement","src":"4283:31:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4334:1:30","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4337:4:30","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4327:6:30"},"nodeType":"YulFunctionCall","src":"4327:15:30"},"nodeType":"YulExpressionStatement","src":"4327:15:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4362:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4365:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4355:6:30"},"nodeType":"YulFunctionCall","src":"4355:15:30"},"nodeType":"YulExpressionStatement","src":"4355:15:30"}]},"condition":{"arguments":[{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"4243:12:30"},{"kind":"number","nodeType":"YulLiteral","src":"4257:1:30","type":"","value":"2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4240:2:30"},"nodeType":"YulFunctionCall","src":"4240:19:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4233:6:30"},"nodeType":"YulFunctionCall","src":"4233:27:30"},"nodeType":"YulIf","src":"4230:2:30"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4400:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"4405:4:30","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4396:3:30"},"nodeType":"YulFunctionCall","src":"4396:14:30"},{"name":"memberValue0","nodeType":"YulIdentifier","src":"4412:12:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4389:6:30"},"nodeType":"YulFunctionCall","src":"4389:36:30"},"nodeType":"YulExpressionStatement","src":"4389:36:30"}]},"name":"abi_encode_t_struct$_AssetData","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3963:5:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3970:3:30","type":""}],"src":"3923:508:30"},{"body":{"nodeType":"YulBlock","src":"4506:29:30","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4515:3:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4526:5:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4520:5:30"},"nodeType":"YulFunctionCall","src":"4520:12:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4508:6:30"},"nodeType":"YulFunctionCall","src":"4508:25:30"},"nodeType":"YulExpressionStatement","src":"4508:25:30"}]},"name":"abi_encode_t_struct$_ReserveConfigurationMap","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4490:5:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4497:3:30","type":""}],"src":"4436:99:30"},{"body":{"nodeType":"YulBlock","src":"4598:1559:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4659:5:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4653:5:30"},"nodeType":"YulFunctionCall","src":"4653:12:30"},{"name":"pos","nodeType":"YulIdentifier","src":"4667:3:30"}],"functionName":{"name":"abi_encode_t_struct$_ReserveConfigurationMap","nodeType":"YulIdentifier","src":"4608:44:30"},"nodeType":"YulFunctionCall","src":"4608:63:30"},"nodeType":"YulExpressionStatement","src":"4608:63:30"},{"nodeType":"YulVariableDeclaration","src":"4680:43:30","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4710:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"4717:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4706:3:30"},"nodeType":"YulFunctionCall","src":"4706:16:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4700:5:30"},"nodeType":"YulFunctionCall","src":"4700:23:30"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"4684:12:30","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"4753:12:30"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4771:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"4776:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4767:3:30"},"nodeType":"YulFunctionCall","src":"4767:14:30"}],"functionName":{"name":"abi_encode_t_uint128","nodeType":"YulIdentifier","src":"4732:20:30"},"nodeType":"YulFunctionCall","src":"4732:50:30"},"nodeType":"YulExpressionStatement","src":"4732:50:30"},{"nodeType":"YulVariableDeclaration","src":"4791:45:30","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4823:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"4830:4:30","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4819:3:30"},"nodeType":"YulFunctionCall","src":"4819:16:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4813:5:30"},"nodeType":"YulFunctionCall","src":"4813:23:30"},"variables":[{"name":"memberValue0_1","nodeType":"YulTypedName","src":"4795:14:30","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_1","nodeType":"YulIdentifier","src":"4866:14:30"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4886:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"4891:4:30","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4882:3:30"},"nodeType":"YulFunctionCall","src":"4882:14:30"}],"functionName":{"name":"abi_encode_t_uint128","nodeType":"YulIdentifier","src":"4845:20:30"},"nodeType":"YulFunctionCall","src":"4845:52:30"},"nodeType":"YulExpressionStatement","src":"4845:52:30"},{"nodeType":"YulVariableDeclaration","src":"4906:45:30","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4938:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"4945:4:30","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4934:3:30"},"nodeType":"YulFunctionCall","src":"4934:16:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4928:5:30"},"nodeType":"YulFunctionCall","src":"4928:23:30"},"variables":[{"name":"memberValue0_2","nodeType":"YulTypedName","src":"4910:14:30","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_2","nodeType":"YulIdentifier","src":"4981:14:30"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5001:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"5006:4:30","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4997:3:30"},"nodeType":"YulFunctionCall","src":"4997:14:30"}],"functionName":{"name":"abi_encode_t_uint128","nodeType":"YulIdentifier","src":"4960:20:30"},"nodeType":"YulFunctionCall","src":"4960:52:30"},"nodeType":"YulExpressionStatement","src":"4960:52:30"},{"nodeType":"YulVariableDeclaration","src":"5021:45:30","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5053:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"5060:4:30","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5049:3:30"},"nodeType":"YulFunctionCall","src":"5049:16:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5043:5:30"},"nodeType":"YulFunctionCall","src":"5043:23:30"},"variables":[{"name":"memberValue0_3","nodeType":"YulTypedName","src":"5025:14:30","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_3","nodeType":"YulIdentifier","src":"5096:14:30"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5116:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"5121:4:30","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5112:3:30"},"nodeType":"YulFunctionCall","src":"5112:14:30"}],"functionName":{"name":"abi_encode_t_uint128","nodeType":"YulIdentifier","src":"5075:20:30"},"nodeType":"YulFunctionCall","src":"5075:52:30"},"nodeType":"YulExpressionStatement","src":"5075:52:30"},{"nodeType":"YulVariableDeclaration","src":"5136:45:30","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5168:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"5175:4:30","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5164:3:30"},"nodeType":"YulFunctionCall","src":"5164:16:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5158:5:30"},"nodeType":"YulFunctionCall","src":"5158:23:30"},"variables":[{"name":"memberValue0_4","nodeType":"YulTypedName","src":"5140:14:30","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_4","nodeType":"YulIdentifier","src":"5211:14:30"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5231:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"5236:4:30","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5227:3:30"},"nodeType":"YulFunctionCall","src":"5227:14:30"}],"functionName":{"name":"abi_encode_t_uint128","nodeType":"YulIdentifier","src":"5190:20:30"},"nodeType":"YulFunctionCall","src":"5190:52:30"},"nodeType":"YulExpressionStatement","src":"5190:52:30"},{"nodeType":"YulVariableDeclaration","src":"5251:45:30","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5283:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"5290:4:30","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5279:3:30"},"nodeType":"YulFunctionCall","src":"5279:16:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5273:5:30"},"nodeType":"YulFunctionCall","src":"5273:23:30"},"variables":[{"name":"memberValue0_5","nodeType":"YulTypedName","src":"5255:14:30","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_5","nodeType":"YulIdentifier","src":"5325:14:30"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5345:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"5350:4:30","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5341:3:30"},"nodeType":"YulFunctionCall","src":"5341:14:30"}],"functionName":{"name":"abi_encode_t_uint40","nodeType":"YulIdentifier","src":"5305:19:30"},"nodeType":"YulFunctionCall","src":"5305:51:30"},"nodeType":"YulExpressionStatement","src":"5305:51:30"},{"nodeType":"YulVariableDeclaration","src":"5365:45:30","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5397:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"5404:4:30","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5393:3:30"},"nodeType":"YulFunctionCall","src":"5393:16:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5387:5:30"},"nodeType":"YulFunctionCall","src":"5387:23:30"},"variables":[{"name":"memberValue0_6","nodeType":"YulTypedName","src":"5369:14:30","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_6","nodeType":"YulIdentifier","src":"5440:14:30"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5460:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"5465:4:30","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5456:3:30"},"nodeType":"YulFunctionCall","src":"5456:14:30"}],"functionName":{"name":"abi_encode_t_address","nodeType":"YulIdentifier","src":"5419:20:30"},"nodeType":"YulFunctionCall","src":"5419:52:30"},"nodeType":"YulExpressionStatement","src":"5419:52:30"},{"nodeType":"YulVariableDeclaration","src":"5480:16:30","value":{"kind":"number","nodeType":"YulLiteral","src":"5490:6:30","type":"","value":"0x0100"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5484:2:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5505:43:30","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5537:5:30"},{"name":"_1","nodeType":"YulIdentifier","src":"5544:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5533:3:30"},"nodeType":"YulFunctionCall","src":"5533:14:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5527:5:30"},"nodeType":"YulFunctionCall","src":"5527:21:30"},"variables":[{"name":"memberValue0_7","nodeType":"YulTypedName","src":"5509:14:30","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_7","nodeType":"YulIdentifier","src":"5578:14:30"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5598:3:30"},{"name":"_1","nodeType":"YulIdentifier","src":"5603:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5594:3:30"},"nodeType":"YulFunctionCall","src":"5594:12:30"}],"functionName":{"name":"abi_encode_t_address","nodeType":"YulIdentifier","src":"5557:20:30"},"nodeType":"YulFunctionCall","src":"5557:50:30"},"nodeType":"YulExpressionStatement","src":"5557:50:30"},{"nodeType":"YulVariableDeclaration","src":"5616:16:30","value":{"kind":"number","nodeType":"YulLiteral","src":"5626:6:30","type":"","value":"0x0120"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"5620:2:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5641:43:30","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5673:5:30"},{"name":"_2","nodeType":"YulIdentifier","src":"5680:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5669:3:30"},"nodeType":"YulFunctionCall","src":"5669:14:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5663:5:30"},"nodeType":"YulFunctionCall","src":"5663:21:30"},"variables":[{"name":"memberValue0_8","nodeType":"YulTypedName","src":"5645:14:30","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_8","nodeType":"YulIdentifier","src":"5714:14:30"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5734:3:30"},{"name":"_2","nodeType":"YulIdentifier","src":"5739:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5730:3:30"},"nodeType":"YulFunctionCall","src":"5730:12:30"}],"functionName":{"name":"abi_encode_t_address","nodeType":"YulIdentifier","src":"5693:20:30"},"nodeType":"YulFunctionCall","src":"5693:50:30"},"nodeType":"YulExpressionStatement","src":"5693:50:30"},{"nodeType":"YulVariableDeclaration","src":"5752:16:30","value":{"kind":"number","nodeType":"YulLiteral","src":"5762:6:30","type":"","value":"0x0140"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"5756:2:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5777:43:30","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5809:5:30"},{"name":"_3","nodeType":"YulIdentifier","src":"5816:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5805:3:30"},"nodeType":"YulFunctionCall","src":"5805:14:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5799:5:30"},"nodeType":"YulFunctionCall","src":"5799:21:30"},"variables":[{"name":"memberValue0_9","nodeType":"YulTypedName","src":"5781:14:30","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_9","nodeType":"YulIdentifier","src":"5850:14:30"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5870:3:30"},{"name":"_3","nodeType":"YulIdentifier","src":"5875:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5866:3:30"},"nodeType":"YulFunctionCall","src":"5866:12:30"}],"functionName":{"name":"abi_encode_t_address","nodeType":"YulIdentifier","src":"5829:20:30"},"nodeType":"YulFunctionCall","src":"5829:50:30"},"nodeType":"YulExpressionStatement","src":"5829:50:30"},{"nodeType":"YulVariableDeclaration","src":"5888:16:30","value":{"kind":"number","nodeType":"YulLiteral","src":"5898:6:30","type":"","value":"0x0160"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"5892:2:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5913:44:30","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5946:5:30"},{"name":"_4","nodeType":"YulIdentifier","src":"5953:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5942:3:30"},"nodeType":"YulFunctionCall","src":"5942:14:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5936:5:30"},"nodeType":"YulFunctionCall","src":"5936:21:30"},"variables":[{"name":"memberValue0_10","nodeType":"YulTypedName","src":"5917:15:30","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_10","nodeType":"YulIdentifier","src":"5985:15:30"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6006:3:30"},{"name":"_4","nodeType":"YulIdentifier","src":"6011:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6002:3:30"},"nodeType":"YulFunctionCall","src":"6002:12:30"}],"functionName":{"name":"abi_encode_t_uint8","nodeType":"YulIdentifier","src":"5966:18:30"},"nodeType":"YulFunctionCall","src":"5966:49:30"},"nodeType":"YulExpressionStatement","src":"5966:49:30"},{"nodeType":"YulVariableDeclaration","src":"6024:16:30","value":{"kind":"number","nodeType":"YulLiteral","src":"6034:6:30","type":"","value":"0x0180"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"6028:2:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6049:44:30","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6082:5:30"},{"name":"_5","nodeType":"YulIdentifier","src":"6089:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6078:3:30"},"nodeType":"YulFunctionCall","src":"6078:14:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6072:5:30"},"nodeType":"YulFunctionCall","src":"6072:21:30"},"variables":[{"name":"memberValue0_11","nodeType":"YulTypedName","src":"6053:15:30","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_11","nodeType":"YulIdentifier","src":"6121:15:30"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6142:3:30"},{"name":"_5","nodeType":"YulIdentifier","src":"6147:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6138:3:30"},"nodeType":"YulFunctionCall","src":"6138:12:30"}],"functionName":{"name":"abi_encode_t_uint8","nodeType":"YulIdentifier","src":"6102:18:30"},"nodeType":"YulFunctionCall","src":"6102:49:30"},"nodeType":"YulExpressionStatement","src":"6102:49:30"}]},"name":"abi_encode_t_struct$_ReserveData","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4582:5:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4589:3:30","type":""}],"src":"4540:1617:30"},{"body":{"nodeType":"YulBlock","src":"6208:60:30","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6225:3:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6234:5:30"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6249:3:30","type":"","value":"128"},{"kind":"number","nodeType":"YulLiteral","src":"6254:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6245:3:30"},"nodeType":"YulFunctionCall","src":"6245:11:30"},{"kind":"number","nodeType":"YulLiteral","src":"6258:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6241:3:30"},"nodeType":"YulFunctionCall","src":"6241:19:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6230:3:30"},"nodeType":"YulFunctionCall","src":"6230:31:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6218:6:30"},"nodeType":"YulFunctionCall","src":"6218:44:30"},"nodeType":"YulExpressionStatement","src":"6218:44:30"}]},"name":"abi_encode_t_uint128","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6192:5:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6199:3:30","type":""}],"src":"6162:106:30"},{"body":{"nodeType":"YulBlock","src":"6318:53:30","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6335:3:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6344:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"6351:12:30","type":"","value":"0xffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6340:3:30"},"nodeType":"YulFunctionCall","src":"6340:24:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6328:6:30"},"nodeType":"YulFunctionCall","src":"6328:37:30"},"nodeType":"YulExpressionStatement","src":"6328:37:30"}]},"name":"abi_encode_t_uint40","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6302:5:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6309:3:30","type":""}],"src":"6273:98:30"},{"body":{"nodeType":"YulBlock","src":"6420:33:30","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6429:3:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6438:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"6445:4:30","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6434:3:30"},"nodeType":"YulFunctionCall","src":"6434:16:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6422:6:30"},"nodeType":"YulFunctionCall","src":"6422:29:30"},"nodeType":"YulExpressionStatement","src":"6422:29:30"}]},"name":"abi_encode_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6404:5:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6411:3:30","type":""}],"src":"6376:77:30"},{"body":{"nodeType":"YulBlock","src":"6559:102:30","statements":[{"nodeType":"YulAssignment","src":"6569:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6581:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"6592:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6577:3:30"},"nodeType":"YulFunctionCall","src":"6577:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6569:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6611:9:30"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6626:6:30"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6642:3:30","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"6647:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6638:3:30"},"nodeType":"YulFunctionCall","src":"6638:11:30"},{"kind":"number","nodeType":"YulLiteral","src":"6651:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6634:3:30"},"nodeType":"YulFunctionCall","src":"6634:19:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6622:3:30"},"nodeType":"YulFunctionCall","src":"6622:32:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6604:6:30"},"nodeType":"YulFunctionCall","src":"6604:51:30"},"nodeType":"YulExpressionStatement","src":"6604:51:30"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6528:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6539:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6550:4:30","type":""}],"src":"6458:203:30"},{"body":{"nodeType":"YulBlock","src":"6791:156:30","statements":[{"nodeType":"YulAssignment","src":"6801:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6813:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"6824:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6809:3:30"},"nodeType":"YulFunctionCall","src":"6809:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6801:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6843:9:30"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6858:6:30"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6874:3:30","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"6879:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6870:3:30"},"nodeType":"YulFunctionCall","src":"6870:11:30"},{"kind":"number","nodeType":"YulLiteral","src":"6883:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6866:3:30"},"nodeType":"YulFunctionCall","src":"6866:19:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6854:3:30"},"nodeType":"YulFunctionCall","src":"6854:32:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6836:6:30"},"nodeType":"YulFunctionCall","src":"6836:51:30"},"nodeType":"YulExpressionStatement","src":"6836:51:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6907:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"6918:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6903:3:30"},"nodeType":"YulFunctionCall","src":"6903:18:30"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6927:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"6935:4:30","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6923:3:30"},"nodeType":"YulFunctionCall","src":"6923:17:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6896:6:30"},"nodeType":"YulFunctionCall","src":"6896:45:30"},"nodeType":"YulExpressionStatement","src":"6896:45:30"}]},"name":"abi_encode_tuple_t_address_t_uint8__to_t_address_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6752:9:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6763:6:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6771:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6782:4:30","type":""}],"src":"6666:281:30"},{"body":{"nodeType":"YulBlock","src":"7153:1377:30","statements":[{"nodeType":"YulVariableDeclaration","src":"7163:12:30","value":{"kind":"number","nodeType":"YulLiteral","src":"7173:2:30","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7167:2:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7184:32:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7202:9:30"},{"name":"_1","nodeType":"YulIdentifier","src":"7213:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7198:3:30"},"nodeType":"YulFunctionCall","src":"7198:18:30"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"7188:6:30","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7232:9:30"},{"name":"_1","nodeType":"YulIdentifier","src":"7243:2:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7225:6:30"},"nodeType":"YulFunctionCall","src":"7225:21:30"},"nodeType":"YulExpressionStatement","src":"7225:21:30"},{"nodeType":"YulVariableDeclaration","src":"7255:17:30","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"7266:6:30"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"7259:3:30","type":""}]},{"nodeType":"YulAssignment","src":"7281:13:30","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"7288:6:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7281:3:30"}]},{"nodeType":"YulVariableDeclaration","src":"7303:33:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7321:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"7332:3:30","type":"","value":"736"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7317:3:30"},"nodeType":"YulFunctionCall","src":"7317:19:30"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"7307:6:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7345:20:30","value":{"name":"value0","nodeType":"YulIdentifier","src":"7359:6:30"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"7349:6:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7374:13:30","value":{"name":"tail","nodeType":"YulIdentifier","src":"7383:4:30"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7378:1:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"7443:1058:30","statements":[{"nodeType":"YulVariableDeclaration","src":"7457:17:30","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7471:2:30","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7467:3:30"},"nodeType":"YulFunctionCall","src":"7467:7:30"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"7461:2:30","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7494:3:30"},{"arguments":[{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"7507:6:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"7515:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7503:3:30"},"nodeType":"YulFunctionCall","src":"7503:22:30"},{"name":"_2","nodeType":"YulIdentifier","src":"7527:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7499:3:30"},"nodeType":"YulFunctionCall","src":"7499:31:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7487:6:30"},"nodeType":"YulFunctionCall","src":"7487:44:30"},"nodeType":"YulExpressionStatement","src":"7487:44:30"},{"nodeType":"YulVariableDeclaration","src":"7544:23:30","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7560:6:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7554:5:30"},"nodeType":"YulFunctionCall","src":"7554:13:30"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"7548:2:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7580:16:30","value":{"kind":"number","nodeType":"YulLiteral","src":"7590:6:30","type":"","value":"0x0240"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"7584:2:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7609:29:30","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"7635:2:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7629:5:30"},"nodeType":"YulFunctionCall","src":"7629:9:30"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"7613:12:30","type":""}]},{"expression":{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"7658:6:30"},{"name":"_4","nodeType":"YulIdentifier","src":"7666:2:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7651:6:30"},"nodeType":"YulFunctionCall","src":"7651:18:30"},"nodeType":"YulExpressionStatement","src":"7651:18:30"},{"nodeType":"YulVariableDeclaration","src":"7682:33:30","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"7702:12:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7696:5:30"},"nodeType":"YulFunctionCall","src":"7696:19:30"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7686:6:30","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"7739:6:30"},{"name":"_4","nodeType":"YulIdentifier","src":"7747:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7735:3:30"},"nodeType":"YulFunctionCall","src":"7735:15:30"},{"name":"length","nodeType":"YulIdentifier","src":"7752:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7728:6:30"},"nodeType":"YulFunctionCall","src":"7728:31:30"},"nodeType":"YulExpressionStatement","src":"7728:31:30"},{"nodeType":"YulVariableDeclaration","src":"7772:15:30","value":{"name":"tail","nodeType":"YulIdentifier","src":"7783:4:30"},"variables":[{"name":"i_1","nodeType":"YulTypedName","src":"7776:3:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"7860:106:30","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"7893:6:30"},{"name":"i_1","nodeType":"YulIdentifier","src":"7901:3:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7889:3:30"},"nodeType":"YulFunctionCall","src":"7889:16:30"},{"kind":"number","nodeType":"YulLiteral","src":"7907:3:30","type":"","value":"608"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7885:3:30"},"nodeType":"YulFunctionCall","src":"7885:26:30"},{"arguments":[{"arguments":[{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"7927:12:30"},{"name":"i_1","nodeType":"YulIdentifier","src":"7941:3:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7923:3:30"},"nodeType":"YulFunctionCall","src":"7923:22:30"},{"name":"_1","nodeType":"YulIdentifier","src":"7947:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7919:3:30"},"nodeType":"YulFunctionCall","src":"7919:31:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7913:5:30"},"nodeType":"YulFunctionCall","src":"7913:38:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7878:6:30"},"nodeType":"YulFunctionCall","src":"7878:74:30"},"nodeType":"YulExpressionStatement","src":"7878:74:30"}]},"condition":{"arguments":[{"name":"i_1","nodeType":"YulIdentifier","src":"7811:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"7816:6:30"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7808:2:30"},"nodeType":"YulFunctionCall","src":"7808:15:30"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7824:23:30","statements":[{"nodeType":"YulAssignment","src":"7826:19:30","value":{"arguments":[{"name":"i_1","nodeType":"YulIdentifier","src":"7837:3:30"},{"name":"_1","nodeType":"YulIdentifier","src":"7842:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7833:3:30"},"nodeType":"YulFunctionCall","src":"7833:12:30"},"variableNames":[{"name":"i_1","nodeType":"YulIdentifier","src":"7826:3:30"}]}]},"pre":{"nodeType":"YulBlock","src":"7804:3:30","statements":[]},"src":"7800:166:30"},{"body":{"nodeType":"YulBlock","src":"8010:75:30","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"8043:6:30"},{"name":"length","nodeType":"YulIdentifier","src":"8051:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8039:3:30"},"nodeType":"YulFunctionCall","src":"8039:19:30"},{"kind":"number","nodeType":"YulLiteral","src":"8060:3:30","type":"","value":"608"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8035:3:30"},"nodeType":"YulFunctionCall","src":"8035:29:30"},{"name":"tail","nodeType":"YulIdentifier","src":"8066:4:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8028:6:30"},"nodeType":"YulFunctionCall","src":"8028:43:30"},"nodeType":"YulExpressionStatement","src":"8028:43:30"}]},"condition":{"arguments":[{"name":"i_1","nodeType":"YulIdentifier","src":"7985:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"7990:6:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7982:2:30"},"nodeType":"YulFunctionCall","src":"7982:15:30"},"nodeType":"YulIf","src":"7979:2:30"},{"nodeType":"YulVariableDeclaration","src":"8098:40:30","value":{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"8130:2:30"},{"name":"_1","nodeType":"YulIdentifier","src":"8134:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8126:3:30"},"nodeType":"YulFunctionCall","src":"8126:11:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8120:5:30"},"nodeType":"YulFunctionCall","src":"8120:18:30"},"variables":[{"name":"memberValue0_1","nodeType":"YulTypedName","src":"8102:14:30","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_1","nodeType":"YulIdentifier","src":"8184:14:30"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"8204:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"8212:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8200:3:30"},"nodeType":"YulFunctionCall","src":"8200:15:30"}],"functionName":{"name":"abi_encode_t_struct$_ReserveData","nodeType":"YulIdentifier","src":"8151:32:30"},"nodeType":"YulFunctionCall","src":"8151:65:30"},"nodeType":"YulExpressionStatement","src":"8151:65:30"},{"nodeType":"YulVariableDeclaration","src":"8229:42:30","value":{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"8261:2:30"},{"kind":"number","nodeType":"YulLiteral","src":"8265:4:30","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8257:3:30"},"nodeType":"YulFunctionCall","src":"8257:13:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8251:5:30"},"nodeType":"YulFunctionCall","src":"8251:20:30"},"variables":[{"name":"memberValue0_2","nodeType":"YulTypedName","src":"8233:14:30","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_2","nodeType":"YulIdentifier","src":"8315:14:30"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"8335:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"8343:6:30","type":"","value":"0x01c0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8331:3:30"},"nodeType":"YulFunctionCall","src":"8331:19:30"}],"functionName":{"name":"abi_encode_t_struct$_AssetData","nodeType":"YulIdentifier","src":"8284:30:30"},"nodeType":"YulFunctionCall","src":"8284:67:30"},"nodeType":"YulExpressionStatement","src":"8284:67:30"},{"nodeType":"YulAssignment","src":"8364:57:30","value":{"arguments":[{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"8382:6:30"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8398:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"8406:2:30","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8394:3:30"},"nodeType":"YulFunctionCall","src":"8394:15:30"},{"name":"_2","nodeType":"YulIdentifier","src":"8411:2:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8390:3:30"},"nodeType":"YulFunctionCall","src":"8390:24:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8378:3:30"},"nodeType":"YulFunctionCall","src":"8378:37:30"},{"kind":"number","nodeType":"YulLiteral","src":"8417:3:30","type":"","value":"608"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8374:3:30"},"nodeType":"YulFunctionCall","src":"8374:47:30"},"variableNames":[{"name":"tail_2","nodeType":"YulIdentifier","src":"8364:6:30"}]},{"nodeType":"YulAssignment","src":"8434:25:30","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8448:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"8456:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8444:3:30"},"nodeType":"YulFunctionCall","src":"8444:15:30"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8434:6:30"}]},{"nodeType":"YulAssignment","src":"8472:19:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8483:3:30"},{"name":"_1","nodeType":"YulIdentifier","src":"8488:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8479:3:30"},"nodeType":"YulFunctionCall","src":"8479:12:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8472:3:30"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7407:1:30"},{"kind":"number","nodeType":"YulLiteral","src":"7410:4:30","type":"","value":"0x16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7404:2:30"},"nodeType":"YulFunctionCall","src":"7404:11:30"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7416:18:30","statements":[{"nodeType":"YulAssignment","src":"7418:14:30","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7427:1:30"},{"kind":"number","nodeType":"YulLiteral","src":"7430:1:30","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7423:3:30"},"nodeType":"YulFunctionCall","src":"7423:9:30"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7418:1:30"}]}]},"pre":{"nodeType":"YulBlock","src":"7400:3:30","statements":[]},"src":"7396:1105:30"},{"nodeType":"YulAssignment","src":"8510:14:30","value":{"name":"tail_2","nodeType":"YulIdentifier","src":"8518:6:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8510:4:30"}]}]},"name":"abi_encode_tuple_t_array$_t_struct$_TokenData_$421_memory_ptr_$22_memory_ptr__to_t_array$_t_struct$_TokenData_$421_memory_ptr_$22_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7122:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7133:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7144:4:30","type":""}],"src":"6952:1578:30"},{"body":{"nodeType":"YulBlock","src":"8579:304:30","statements":[{"nodeType":"YulAssignment","src":"8589:19:30","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8605:2:30","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8599:5:30"},"nodeType":"YulFunctionCall","src":"8599:9:30"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8589:6:30"}]},{"nodeType":"YulVariableDeclaration","src":"8617:35:30","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8639:6:30"},{"name":"size","nodeType":"YulIdentifier","src":"8647:4:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8635:3:30"},"nodeType":"YulFunctionCall","src":"8635:17:30"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"8621:10:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"8735:111:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8756:1:30","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8763:3:30","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"8768:10:30","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8759:3:30"},"nodeType":"YulFunctionCall","src":"8759:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8749:6:30"},"nodeType":"YulFunctionCall","src":"8749:31:30"},"nodeType":"YulExpressionStatement","src":"8749:31:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8800:1:30","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8803:4:30","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8793:6:30"},"nodeType":"YulFunctionCall","src":"8793:15:30"},"nodeType":"YulExpressionStatement","src":"8793:15:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8828:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8831:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8821:6:30"},"nodeType":"YulFunctionCall","src":"8821:15:30"},"nodeType":"YulExpressionStatement","src":"8821:15:30"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"8670:10:30"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8690:2:30","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"8694:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8686:3:30"},"nodeType":"YulFunctionCall","src":"8686:10:30"},{"kind":"number","nodeType":"YulLiteral","src":"8698:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8682:3:30"},"nodeType":"YulFunctionCall","src":"8682:18:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8667:2:30"},"nodeType":"YulFunctionCall","src":"8667:34:30"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"8706:10:30"},{"name":"memPtr","nodeType":"YulIdentifier","src":"8718:6:30"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8703:2:30"},"nodeType":"YulFunctionCall","src":"8703:22:30"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"8664:2:30"},"nodeType":"YulFunctionCall","src":"8664:62:30"},"nodeType":"YulIf","src":"8661:2:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8862:2:30","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"8866:10:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8855:6:30"},"nodeType":"YulFunctionCall","src":"8855:22:30"},"nodeType":"YulExpressionStatement","src":"8855:22:30"}]},"name":"allocateMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"8559:4:30","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"8568:6:30","type":""}],"src":"8535:348:30"},{"body":{"nodeType":"YulBlock","src":"8933:231:30","statements":[{"nodeType":"YulVariableDeclaration","src":"8943:31:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8962:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"8969:4:30","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8958:3:30"},"nodeType":"YulFunctionCall","src":"8958:16:30"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"8947:7:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"9012:115:30","statements":[{"expression":{"arguments":[{"name":"ret","nodeType":"YulIdentifier","src":"9033:3:30"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9042:3:30","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"9047:10:30","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9038:3:30"},"nodeType":"YulFunctionCall","src":"9038:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9026:6:30"},"nodeType":"YulFunctionCall","src":"9026:33:30"},"nodeType":"YulExpressionStatement","src":"9026:33:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9079:1:30","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9082:4:30","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9072:6:30"},"nodeType":"YulFunctionCall","src":"9072:15:30"},"nodeType":"YulExpressionStatement","src":"9072:15:30"},{"expression":{"arguments":[{"name":"ret","nodeType":"YulIdentifier","src":"9107:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"9112:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9100:6:30"},"nodeType":"YulFunctionCall","src":"9100:17:30"},"nodeType":"YulExpressionStatement","src":"9100:17:30"}]},"condition":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"8989:7:30"},{"kind":"number","nodeType":"YulLiteral","src":"8998:4:30","type":"","value":"0xff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8986:2:30"},"nodeType":"YulFunctionCall","src":"8986:17:30"},"nodeType":"YulIf","src":"8983:2:30"},{"nodeType":"YulAssignment","src":"9136:22:30","value":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"9147:7:30"},{"kind":"number","nodeType":"YulLiteral","src":"9156:1:30","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9143:3:30"},"nodeType":"YulFunctionCall","src":"9143:15:30"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"9136:3:30"}]}]},"name":"increment_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8915:5:30","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"8925:3:30","type":""}],"src":"8888:276:30"}]},"contents":"{\n    { }\n    function abi_decode_t_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_t_bool_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_t_struct$_ReserveConfigurationMap_fromMemory(headStart, end) -> value\n    {\n        if slt(sub(end, headStart), 0x20) { revert(value, value) }\n        value := allocateMemory(0x20)\n        mstore(value, mload(headStart))\n    }\n    function abi_decode_t_uint128_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(128, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_t_uint40_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_t_uint8_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address_fromMemory(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint8_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_t_address_fromMemory(headStart)\n        value1 := abi_decode_t_uint8_fromMemory(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_struct$_AssetData_$4082_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value0, value0) }\n        let value := allocateMemory(128)\n        mstore(value, abi_decode_t_uint8_fromMemory(headStart))\n        mstore(add(value, 32), abi_decode_t_bool_fromMemory(add(headStart, 32)))\n        mstore(add(value, 64), abi_decode_t_bool_fromMemory(add(headStart, 64)))\n        let value_1 := mload(add(headStart, 96))\n        if iszero(lt(value_1, 2)) { revert(value0, value0) }\n        mstore(add(value, 96), value_1)\n        value0 := value\n    }\n    function abi_decode_tuple_t_struct$_ReserveData_$4115_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 416\n        if slt(sub(dataEnd, headStart), _1) { revert(value0, value0) }\n        let value := allocateMemory(_1)\n        mstore(value, abi_decode_t_struct$_ReserveConfigurationMap_fromMemory(headStart, dataEnd))\n        mstore(add(value, 32), abi_decode_t_uint128_fromMemory(add(headStart, 32)))\n        mstore(add(value, 64), abi_decode_t_uint128_fromMemory(add(headStart, 64)))\n        mstore(add(value, 96), abi_decode_t_uint128_fromMemory(add(headStart, 96)))\n        mstore(add(value, 128), abi_decode_t_uint128_fromMemory(add(headStart, 128)))\n        mstore(add(value, 160), abi_decode_t_uint128_fromMemory(add(headStart, 160)))\n        mstore(add(value, 192), abi_decode_t_uint40_fromMemory(add(headStart, 192)))\n        mstore(add(value, 224), abi_decode_t_address_fromMemory(add(headStart, 224)))\n        let _2 := 256\n        mstore(add(value, _2), abi_decode_t_address_fromMemory(add(headStart, _2)))\n        let _3 := 288\n        mstore(add(value, _3), abi_decode_t_address_fromMemory(add(headStart, _3)))\n        let _4 := 320\n        mstore(add(value, _4), abi_decode_t_address_fromMemory(add(headStart, _4)))\n        let _5 := 352\n        mstore(add(value, _5), abi_decode_t_uint8_fromMemory(add(headStart, _5)))\n        let _6 := 384\n        mstore(add(value, _6), abi_decode_t_uint8_fromMemory(add(headStart, _6)))\n        value0 := value\n    }\n    function abi_encode_t_address(value, pos)\n    {\n        mstore(pos, and(value, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_t_struct$_AssetData(value, pos)\n    {\n        mstore(pos, and(mload(value), 0xff))\n        mstore(add(pos, 0x20), iszero(iszero(mload(add(value, 0x20)))))\n        mstore(add(pos, 0x40), iszero(iszero(mload(add(value, 0x40)))))\n        let memberValue0 := mload(add(value, 0x60))\n        if iszero(lt(memberValue0, 2))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(add(pos, 0x60), memberValue0)\n    }\n    function abi_encode_t_struct$_ReserveConfigurationMap(value, pos)\n    { mstore(pos, mload(value)) }\n    function abi_encode_t_struct$_ReserveData(value, pos)\n    {\n        abi_encode_t_struct$_ReserveConfigurationMap(mload(value), pos)\n        let memberValue0 := mload(add(value, 0x20))\n        abi_encode_t_uint128(memberValue0, add(pos, 0x20))\n        let memberValue0_1 := mload(add(value, 0x40))\n        abi_encode_t_uint128(memberValue0_1, add(pos, 0x40))\n        let memberValue0_2 := mload(add(value, 0x60))\n        abi_encode_t_uint128(memberValue0_2, add(pos, 0x60))\n        let memberValue0_3 := mload(add(value, 0x80))\n        abi_encode_t_uint128(memberValue0_3, add(pos, 0x80))\n        let memberValue0_4 := mload(add(value, 0xa0))\n        abi_encode_t_uint128(memberValue0_4, add(pos, 0xa0))\n        let memberValue0_5 := mload(add(value, 0xc0))\n        abi_encode_t_uint40(memberValue0_5, add(pos, 0xc0))\n        let memberValue0_6 := mload(add(value, 0xe0))\n        abi_encode_t_address(memberValue0_6, add(pos, 0xe0))\n        let _1 := 0x0100\n        let memberValue0_7 := mload(add(value, _1))\n        abi_encode_t_address(memberValue0_7, add(pos, _1))\n        let _2 := 0x0120\n        let memberValue0_8 := mload(add(value, _2))\n        abi_encode_t_address(memberValue0_8, add(pos, _2))\n        let _3 := 0x0140\n        let memberValue0_9 := mload(add(value, _3))\n        abi_encode_t_address(memberValue0_9, add(pos, _3))\n        let _4 := 0x0160\n        let memberValue0_10 := mload(add(value, _4))\n        abi_encode_t_uint8(memberValue0_10, add(pos, _4))\n        let _5 := 0x0180\n        let memberValue0_11 := mload(add(value, _5))\n        abi_encode_t_uint8(memberValue0_11, add(pos, _5))\n    }\n    function abi_encode_t_uint128(value, pos)\n    {\n        mstore(pos, and(value, sub(shl(128, 1), 1)))\n    }\n    function abi_encode_t_uint40(value, pos)\n    {\n        mstore(pos, and(value, 0xffffffffff))\n    }\n    function abi_encode_t_uint8(value, pos)\n    { mstore(pos, and(value, 0xff)) }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint8__to_t_address_t_uint8__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, 0xff))\n    }\n    function abi_encode_tuple_t_array$_t_struct$_TokenData_$421_memory_ptr_$22_memory_ptr__to_t_array$_t_struct$_TokenData_$421_memory_ptr_$22_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        pos := tail_1\n        let tail_2 := add(headStart, 736)\n        let srcPtr := value0\n        let i := tail\n        for { } lt(i, 0x16) { i := add(i, 1) }\n        {\n            let _2 := not(31)\n            mstore(pos, add(sub(tail_2, headStart), _2))\n            let _3 := mload(srcPtr)\n            let _4 := 0x0240\n            let memberValue0 := mload(_3)\n            mstore(tail_2, _4)\n            let length := mload(memberValue0)\n            mstore(add(tail_2, _4), length)\n            let i_1 := tail\n            for { } lt(i_1, length) { i_1 := add(i_1, _1) }\n            {\n                mstore(add(add(tail_2, i_1), 608), mload(add(add(memberValue0, i_1), _1)))\n            }\n            if gt(i_1, length)\n            {\n                mstore(add(add(tail_2, length), 608), tail)\n            }\n            let memberValue0_1 := mload(add(_3, _1))\n            abi_encode_t_struct$_ReserveData(memberValue0_1, add(tail_2, _1))\n            let memberValue0_2 := mload(add(_3, 0x40))\n            abi_encode_t_struct$_AssetData(memberValue0_2, add(tail_2, 0x01c0))\n            tail_2 := add(add(tail_2, and(add(length, 31), _2)), 608)\n            srcPtr := add(srcPtr, _1)\n            pos := add(pos, _1)\n        }\n        tail := tail_2\n    }\n    function allocateMemory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        mstore(64, newFreePtr)\n    }\n    function increment_t_uint8(value) -> ret\n    {\n        let value_1 := and(value, 0xff)\n        if eq(value_1, 0xff)\n        {\n            mstore(ret, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(ret, 0x24)\n        }\n        ret := add(value_1, 1)\n    }\n}","id":30,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162000ee738038062000ee7833981016040819052620000349162000a2c565b60006200004d83836200007d60201b620000591760201c565b905060008160405160200162000064919062000db7565b6040516020818303038152906040529050805181602001f35b6200008762000819565b60006200009e6200033260201b620002d81760201c565b90506000620000b76200058f60201b620005331760201c565b90506000856001600160a01b0316630261bf8b6040518163ffffffff1660e01b815260040160206040518083038186803b158015620000f557600080fd5b505afa1580156200010a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000130919062000a08565b90506200013c62000819565b60005b60168160ff161015620003275760006040518060600160405280868460ff16601681106200017d57634e487b7160e01b600052603260045260246000fd5b60200201518152602001856001600160a01b0316633629e3cd898660ff1660168110620001ba57634e487b7160e01b600052603260045260246000fd5b60200201518c6040518363ffffffff1660e01b8152600401620001df92919062000d9b565b6101a06040518083038186803b158015620001f957600080fd5b505afa1580156200020e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000234919062000ad2565b8152602001856001600160a01b0316631652e7b7898660ff16601681106200026c57634e487b7160e01b600052603260045260246000fd5b60200201516040518263ffffffff1660e01b81526004016200028f919062000d87565b60806040518083038186803b158015620002a857600080fd5b505afa158015620002bd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002e3919062000a63565b90529050808360ff8416601681106200030c57634e487b7160e01b600052603260045260246000fd5b602002015250806200031e8162000eb9565b9150506200013f565b509695505050505050565b6200033c6200084a565b50604080516102c081018252737fc66500c84a76ad7e9c93437bfc5ac33e2ddae98152730d8775f648430679a709e98d2b0cb6250d2887ef6020820152734fabb145d64652a948d72533023f6e7a623c7c5391810191909152736b175474e89094c44da98b954eedeac495271d0f606082015273f629cbd94d3791c9250152bd8dfbdf380e2a3b9c608082015273dd974d5c2e2928dea5f71b9825b8b646686bd20060a082015273514910771af9ca656af840dff83e8264ecf986ca60c0820152730f5d2fb29fb7d3cfee444a200298f468908cc94260e0820152739f8f72aa9304c8b593d555f12ef6589cc3a579a261010082015273408e41876cccdc0f92210600ef50372656052a3861012082015273c011a73ee8576fb46f5e1c5751ca3b9fe0af2a6f6101408201527357ab1ec28d129707052df4df418d58a2d46d5f516101608201526e085d4780b73119b644ae5ecd22b376610180820152731f9840a85d5af5bf1d1762f925bdaddc4201f9846101a082015273a0b86991c6218b36c1d19d4a2e9eb0ce3606eb486101c082015273dac17f958d2ee523a2206206994597c13d831ec76101e0820152732260fac5e5542a773aa44fbcfedf7c193bc2c59961020082015273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2610220820152730bc529c00c6401aef6d220be8c6ea1667f6ad93e61024082015273e41d2489571d322189246dafa5ebde1f4699f498610260820152738798249c2e607446efb7ad49ec89dd1865ff427261028082015273c4ad29ba4b3c580e6d59105fff484999997675ff6102a082015290565b6200059962000869565b50604080516103008101825260046102c08201818152634141564560e01b6102e084015282528251808401845260038082526210905560ea1b602083810191909152808501929092528451808601865283815263109554d160e21b8184015284860152845180860186528181526244414960e81b818401526060850152845180860186528181526222a72560e91b81840152608085015284518086018652818152624b4e4360e81b8184015260a085015284518086018652838152634c494e4b60e01b8184015260c085015284518086018652838152634d414e4160e01b8184015260e0850152845180860186528181526226a5a960e91b8184015261010085015284518086018652818152622922a760e91b8184015261012085015284518086018652818152620a69cb60eb1b81840152610140850152845180860186528381526314d554d160e21b818401526101608501528451808601865283815263151554d160e21b818401526101808501528451808601865281815262554e4960e81b818401526101a085015284518086018652838152635553444360e01b818401526101c085015284518086018652838152631554d11560e21b818401526101e085015284518086018652838152635742544360e01b8184015261020085015284518086018652928352630ae8aa8960e31b83830152610220840192909252835180850185528281526259464960e81b8183015261024084015283518085018552918252620b4a4b60eb1b8282015261026083019190915282518084018452600681526578535553484960d01b818301526102808301528251808401909352600a8352696372763363727970746f60b01b908301526102a081019190915290565b604051806102c001604052806016905b6200083362000892565b815260200190600190039081620008295790505090565b604051806102c001604052806016906020820280368337509192915050565b604051806102c001604052806016905b6060815260200190600190039081620008795790505090565b604051806060016040528060608152602001620008ae620008c2565b8152602001620008bd62000937565b905290565b604051806101a00160405280620008d86200095f565b815260006020820181905260408201819052606082018190526080820181905260a0820181905260c0820181905260e0820181905261010082018190526101208201819052610140820181905261016082018190526101809091015290565b60408051608081018252600080825260208201819052918101829052906060820190620008bd565b6040518060200160405280600081525090565b80516001600160a01b03811681146200098a57600080fd5b919050565b805180151581146200098a57600080fd5b600060208284031215620009b2578081fd5b620009be602062000e81565b9151825250919050565b80516001600160801b03811681146200098a57600080fd5b805164ffffffffff811681146200098a57600080fd5b805160ff811681146200098a57600080fd5b60006020828403121562000a1a578081fd5b62000a258262000972565b9392505050565b6000806040838503121562000a3f578081fd5b62000a4a8362000972565b915062000a5a60208401620009f6565b90509250929050565b60006080828403121562000a75578081fd5b62000a81608062000e81565b62000a8c83620009f6565b815262000a9c602084016200098f565b602082015262000aaf604084016200098f565b604082015260608301516002811062000ac6578283fd5b60608201529392505050565b60006101a080838503121562000ae6578182fd5b62000af18162000e81565b905062000aff8484620009a0565b815262000b0f60208401620009c8565b602082015262000b2260408401620009c8565b604082015262000b3560608401620009c8565b606082015262000b4860808401620009c8565b608082015262000b5b60a08401620009c8565b60a082015262000b6e60c08401620009e0565b60c082015262000b8160e0840162000972565b60e082015261010062000b9681850162000972565b9082015261012062000baa84820162000972565b9082015261014062000bbe84820162000972565b9082015261016062000bd2848201620009f6565b9082015261018062000be6848201620009f6565b908201529392505050565b6001600160a01b03169052565b60ff815116825260208101511515602083015260408101511515604083015260608101516002811062000c4157634e487b7160e01b600052602160045260246000fd5b806060840152505050565b519052565b62000c5e82825162000c4c565b602081015162000c72602084018262000d68565b50604081015162000c87604084018262000d68565b50606081015162000c9c606084018262000d68565b50608081015162000cb1608084018262000d68565b5060a081015162000cc660a084018262000d68565b5060c081015162000cdb60c084018262000d75565b5060e081015162000cf060e084018262000bf1565b506101008082015162000d068285018262000bf1565b50506101208082015162000d1d8285018262000bf1565b50506101408082015162000d348285018262000bf1565b50506101608082015162000d4b8285018262000d80565b50506101808082015162000d628285018262000d80565b50505050565b6001600160801b03169052565b64ffffffffff169052565b60ff169052565b6001600160a01b0391909116815260200190565b6001600160a01b0392909216825260ff16602082015260400190565b60208082526000906102e0830183820185845b601681101562000e7557601f198088860301845282516102408151818852805180838a01528a92505b8083101562000e14578183018a015189840161026001529189019162000df3565b8083111562000e27578a610260828b0101525b89840151925062000e3b8a8a018462000c51565b6040840151935062000e526101c08a018562000bfe565b601f01909316969096016102600195505050918401919084019060010162000dca565b50919695505050505050565b6040518181016001600160401b038111828210171562000eb157634e487b7160e01b600052604160045260246000fd5b604052919050565b600060ff821660ff81141562000edd57634e487b7160e01b82526011600452602482fd5b6001019291505056fe","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xEE7 CODESIZE SUB DUP1 PUSH3 0xEE7 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0xA2C JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4D DUP4 DUP4 PUSH3 0x7D PUSH1 0x20 SHL PUSH3 0x59 OR PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x64 SWAP2 SWAP1 PUSH3 0xDB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 MLOAD DUP2 PUSH1 0x20 ADD RETURN JUMPDEST PUSH3 0x87 PUSH3 0x819 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x9E PUSH3 0x332 PUSH1 0x20 SHL PUSH3 0x2D8 OR PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0xB7 PUSH3 0x58F PUSH1 0x20 SHL PUSH3 0x533 OR PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x261BF8B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x10A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x130 SWAP2 SWAP1 PUSH3 0xA08 JUMP JUMPDEST SWAP1 POP PUSH3 0x13C PUSH3 0x819 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x16 DUP2 PUSH1 0xFF AND LT ISZERO PUSH3 0x327 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP5 PUSH1 0xFF AND PUSH1 0x16 DUP2 LT PUSH3 0x17D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3629E3CD DUP10 DUP7 PUSH1 0xFF AND PUSH1 0x16 DUP2 LT PUSH3 0x1BA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP13 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1DF SWAP3 SWAP2 SWAP1 PUSH3 0xD9B JUMP JUMPDEST PUSH2 0x1A0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x20E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x234 SWAP2 SWAP1 PUSH3 0xAD2 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1652E7B7 DUP10 DUP7 PUSH1 0xFF AND PUSH1 0x16 DUP2 LT PUSH3 0x26C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x28F SWAP2 SWAP1 PUSH3 0xD87 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x2A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x2BD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x2E3 SWAP2 SWAP1 PUSH3 0xA63 JUMP JUMPDEST SWAP1 MSTORE SWAP1 POP DUP1 DUP4 PUSH1 0xFF DUP5 AND PUSH1 0x16 DUP2 LT PUSH3 0x30C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MSTORE POP DUP1 PUSH3 0x31E DUP2 PUSH3 0xEB9 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x13F JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x33C PUSH3 0x84A JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH2 0x2C0 DUP2 ADD DUP3 MSTORE PUSH20 0x7FC66500C84A76AD7E9C93437BFC5AC33E2DDAE9 DUP2 MSTORE PUSH20 0xD8775F648430679A709E98D2B0CB6250D2887EF PUSH1 0x20 DUP3 ADD MSTORE PUSH20 0x4FABB145D64652A948D72533023F6E7A623C7C53 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F PUSH1 0x60 DUP3 ADD MSTORE PUSH20 0xF629CBD94D3791C9250152BD8DFBDF380E2A3B9C PUSH1 0x80 DUP3 ADD MSTORE PUSH20 0xDD974D5C2E2928DEA5F71B9825B8B646686BD200 PUSH1 0xA0 DUP3 ADD MSTORE PUSH20 0x514910771AF9CA656AF840DFF83E8264ECF986CA PUSH1 0xC0 DUP3 ADD MSTORE PUSH20 0xF5D2FB29FB7D3CFEE444A200298F468908CC942 PUSH1 0xE0 DUP3 ADD MSTORE PUSH20 0x9F8F72AA9304C8B593D555F12EF6589CC3A579A2 PUSH2 0x100 DUP3 ADD MSTORE PUSH20 0x408E41876CCCDC0F92210600EF50372656052A38 PUSH2 0x120 DUP3 ADD MSTORE PUSH20 0xC011A73EE8576FB46F5E1C5751CA3B9FE0AF2A6F PUSH2 0x140 DUP3 ADD MSTORE PUSH20 0x57AB1EC28D129707052DF4DF418D58A2D46D5F51 PUSH2 0x160 DUP3 ADD MSTORE PUSH15 0x85D4780B73119B644AE5ECD22B376 PUSH2 0x180 DUP3 ADD MSTORE PUSH20 0x1F9840A85D5AF5BF1D1762F925BDADDC4201F984 PUSH2 0x1A0 DUP3 ADD MSTORE PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 PUSH2 0x1C0 DUP3 ADD MSTORE PUSH20 0xDAC17F958D2EE523A2206206994597C13D831EC7 PUSH2 0x1E0 DUP3 ADD MSTORE PUSH20 0x2260FAC5E5542A773AA44FBCFEDF7C193BC2C599 PUSH2 0x200 DUP3 ADD MSTORE PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH2 0x220 DUP3 ADD MSTORE PUSH20 0xBC529C00C6401AEF6D220BE8C6EA1667F6AD93E PUSH2 0x240 DUP3 ADD MSTORE PUSH20 0xE41D2489571D322189246DAFA5EBDE1F4699F498 PUSH2 0x260 DUP3 ADD MSTORE PUSH20 0x8798249C2E607446EFB7AD49EC89DD1865FF4272 PUSH2 0x280 DUP3 ADD MSTORE PUSH20 0xC4AD29BA4B3C580E6D59105FFF484999997675FF PUSH2 0x2A0 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH3 0x599 PUSH3 0x869 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH2 0x300 DUP2 ADD DUP3 MSTORE PUSH1 0x4 PUSH2 0x2C0 DUP3 ADD DUP2 DUP2 MSTORE PUSH4 0x41415645 PUSH1 0xE0 SHL PUSH2 0x2E0 DUP5 ADD MSTORE DUP3 MSTORE DUP3 MLOAD DUP1 DUP5 ADD DUP5 MSTORE PUSH1 0x3 DUP1 DUP3 MSTORE PUSH3 0x109055 PUSH1 0xEA SHL PUSH1 0x20 DUP4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE DUP4 DUP2 MSTORE PUSH4 0x109554D1 PUSH1 0xE2 SHL DUP2 DUP5 ADD MSTORE DUP5 DUP7 ADD MSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE DUP2 DUP2 MSTORE PUSH3 0x444149 PUSH1 0xE8 SHL DUP2 DUP5 ADD MSTORE PUSH1 0x60 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE DUP2 DUP2 MSTORE PUSH3 0x22A725 PUSH1 0xE9 SHL DUP2 DUP5 ADD MSTORE PUSH1 0x80 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE DUP2 DUP2 MSTORE PUSH3 0x4B4E43 PUSH1 0xE8 SHL DUP2 DUP5 ADD MSTORE PUSH1 0xA0 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE DUP4 DUP2 MSTORE PUSH4 0x4C494E4B PUSH1 0xE0 SHL DUP2 DUP5 ADD MSTORE PUSH1 0xC0 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE DUP4 DUP2 MSTORE PUSH4 0x4D414E41 PUSH1 0xE0 SHL DUP2 DUP5 ADD MSTORE PUSH1 0xE0 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE DUP2 DUP2 MSTORE PUSH3 0x26A5A9 PUSH1 0xE9 SHL DUP2 DUP5 ADD MSTORE PUSH2 0x100 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE DUP2 DUP2 MSTORE PUSH3 0x2922A7 PUSH1 0xE9 SHL DUP2 DUP5 ADD MSTORE PUSH2 0x120 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE DUP2 DUP2 MSTORE PUSH3 0xA69CB PUSH1 0xEB SHL DUP2 DUP5 ADD MSTORE PUSH2 0x140 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE DUP4 DUP2 MSTORE PUSH4 0x14D554D1 PUSH1 0xE2 SHL DUP2 DUP5 ADD MSTORE PUSH2 0x160 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE DUP4 DUP2 MSTORE PUSH4 0x151554D1 PUSH1 0xE2 SHL DUP2 DUP5 ADD MSTORE PUSH2 0x180 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE DUP2 DUP2 MSTORE PUSH3 0x554E49 PUSH1 0xE8 SHL DUP2 DUP5 ADD MSTORE PUSH2 0x1A0 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE DUP4 DUP2 MSTORE PUSH4 0x55534443 PUSH1 0xE0 SHL DUP2 DUP5 ADD MSTORE PUSH2 0x1C0 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE DUP4 DUP2 MSTORE PUSH4 0x1554D115 PUSH1 0xE2 SHL DUP2 DUP5 ADD MSTORE PUSH2 0x1E0 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE DUP4 DUP2 MSTORE PUSH4 0x57425443 PUSH1 0xE0 SHL DUP2 DUP5 ADD MSTORE PUSH2 0x200 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE SWAP3 DUP4 MSTORE PUSH4 0xAE8AA89 PUSH1 0xE3 SHL DUP4 DUP4 ADD MSTORE PUSH2 0x220 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP4 MLOAD DUP1 DUP6 ADD DUP6 MSTORE DUP3 DUP2 MSTORE PUSH3 0x594649 PUSH1 0xE8 SHL DUP2 DUP4 ADD MSTORE PUSH2 0x240 DUP5 ADD MSTORE DUP4 MLOAD DUP1 DUP6 ADD DUP6 MSTORE SWAP2 DUP3 MSTORE PUSH3 0xB4A4B PUSH1 0xEB SHL DUP3 DUP3 ADD MSTORE PUSH2 0x260 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP5 ADD DUP5 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH6 0x785355534849 PUSH1 0xD0 SHL DUP2 DUP4 ADD MSTORE PUSH2 0x280 DUP4 ADD MSTORE DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE PUSH1 0xA DUP4 MSTORE PUSH10 0x6372763363727970746F PUSH1 0xB0 SHL SWAP1 DUP4 ADD MSTORE PUSH2 0x2A0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x2C0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x16 SWAP1 JUMPDEST PUSH3 0x833 PUSH3 0x892 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH3 0x829 JUMPI SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x2C0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x16 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x2C0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x16 SWAP1 JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH3 0x879 JUMPI SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x8AE PUSH3 0x8C2 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x8BD PUSH3 0x937 JUMP JUMPDEST SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1A0 ADD PUSH1 0x40 MSTORE DUP1 PUSH3 0x8D8 PUSH3 0x95F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xC0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xE0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x100 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x120 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x140 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x160 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x180 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 PUSH1 0x60 DUP3 ADD SWAP1 PUSH3 0x8BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x98A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH3 0x98A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x9B2 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH3 0x9BE PUSH1 0x20 PUSH3 0xE81 JUMP JUMPDEST SWAP2 MLOAD DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x98A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH5 0xFFFFFFFFFF DUP2 AND DUP2 EQ PUSH3 0x98A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH3 0x98A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xA1A JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH3 0xA25 DUP3 PUSH3 0x972 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0xA3F JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH3 0xA4A DUP4 PUSH3 0x972 JUMP JUMPDEST SWAP2 POP PUSH3 0xA5A PUSH1 0x20 DUP5 ADD PUSH3 0x9F6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xA75 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH3 0xA81 PUSH1 0x80 PUSH3 0xE81 JUMP JUMPDEST PUSH3 0xA8C DUP4 PUSH3 0x9F6 JUMP JUMPDEST DUP2 MSTORE PUSH3 0xA9C PUSH1 0x20 DUP5 ADD PUSH3 0x98F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0xAAF PUSH1 0x40 DUP5 ADD PUSH3 0x98F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x2 DUP2 LT PUSH3 0xAC6 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A0 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH3 0xAE6 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH3 0xAF1 DUP2 PUSH3 0xE81 JUMP JUMPDEST SWAP1 POP PUSH3 0xAFF DUP5 DUP5 PUSH3 0x9A0 JUMP JUMPDEST DUP2 MSTORE PUSH3 0xB0F PUSH1 0x20 DUP5 ADD PUSH3 0x9C8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0xB22 PUSH1 0x40 DUP5 ADD PUSH3 0x9C8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0xB35 PUSH1 0x60 DUP5 ADD PUSH3 0x9C8 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH3 0xB48 PUSH1 0x80 DUP5 ADD PUSH3 0x9C8 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH3 0xB5B PUSH1 0xA0 DUP5 ADD PUSH3 0x9C8 JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH3 0xB6E PUSH1 0xC0 DUP5 ADD PUSH3 0x9E0 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH3 0xB81 PUSH1 0xE0 DUP5 ADD PUSH3 0x972 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 PUSH3 0xB96 DUP2 DUP6 ADD PUSH3 0x972 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x120 PUSH3 0xBAA DUP5 DUP3 ADD PUSH3 0x972 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x140 PUSH3 0xBBE DUP5 DUP3 ADD PUSH3 0x972 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x160 PUSH3 0xBD2 DUP5 DUP3 ADD PUSH3 0x9F6 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x180 PUSH3 0xBE6 DUP5 DUP3 ADD PUSH3 0x9F6 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0xFF DUP2 MLOAD AND DUP3 MSTORE PUSH1 0x20 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x2 DUP2 LT PUSH3 0xC41 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 PUSH1 0x60 DUP5 ADD MSTORE POP POP POP JUMP JUMPDEST MLOAD SWAP1 MSTORE JUMP JUMPDEST PUSH3 0xC5E DUP3 DUP3 MLOAD PUSH3 0xC4C JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH3 0xC72 PUSH1 0x20 DUP5 ADD DUP3 PUSH3 0xD68 JUMP JUMPDEST POP PUSH1 0x40 DUP2 ADD MLOAD PUSH3 0xC87 PUSH1 0x40 DUP5 ADD DUP3 PUSH3 0xD68 JUMP JUMPDEST POP PUSH1 0x60 DUP2 ADD MLOAD PUSH3 0xC9C PUSH1 0x60 DUP5 ADD DUP3 PUSH3 0xD68 JUMP JUMPDEST POP PUSH1 0x80 DUP2 ADD MLOAD PUSH3 0xCB1 PUSH1 0x80 DUP5 ADD DUP3 PUSH3 0xD68 JUMP JUMPDEST POP PUSH1 0xA0 DUP2 ADD MLOAD PUSH3 0xCC6 PUSH1 0xA0 DUP5 ADD DUP3 PUSH3 0xD68 JUMP JUMPDEST POP PUSH1 0xC0 DUP2 ADD MLOAD PUSH3 0xCDB PUSH1 0xC0 DUP5 ADD DUP3 PUSH3 0xD75 JUMP JUMPDEST POP PUSH1 0xE0 DUP2 ADD MLOAD PUSH3 0xCF0 PUSH1 0xE0 DUP5 ADD DUP3 PUSH3 0xBF1 JUMP JUMPDEST POP PUSH2 0x100 DUP1 DUP3 ADD MLOAD PUSH3 0xD06 DUP3 DUP6 ADD DUP3 PUSH3 0xBF1 JUMP JUMPDEST POP POP PUSH2 0x120 DUP1 DUP3 ADD MLOAD PUSH3 0xD1D DUP3 DUP6 ADD DUP3 PUSH3 0xBF1 JUMP JUMPDEST POP POP PUSH2 0x140 DUP1 DUP3 ADD MLOAD PUSH3 0xD34 DUP3 DUP6 ADD DUP3 PUSH3 0xBF1 JUMP JUMPDEST POP POP PUSH2 0x160 DUP1 DUP3 ADD MLOAD PUSH3 0xD4B DUP3 DUP6 ADD DUP3 PUSH3 0xD80 JUMP JUMPDEST POP POP PUSH2 0x180 DUP1 DUP3 ADD MLOAD PUSH3 0xD62 DUP3 DUP6 ADD DUP3 PUSH3 0xD80 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH5 0xFFFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0xFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0xFF AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2E0 DUP4 ADD DUP4 DUP3 ADD DUP6 DUP5 JUMPDEST PUSH1 0x16 DUP2 LT ISZERO PUSH3 0xE75 JUMPI PUSH1 0x1F NOT DUP1 DUP9 DUP7 SUB ADD DUP5 MSTORE DUP3 MLOAD PUSH2 0x240 DUP2 MLOAD DUP2 DUP9 MSTORE DUP1 MLOAD DUP1 DUP4 DUP11 ADD MSTORE DUP11 SWAP3 POP JUMPDEST DUP1 DUP4 LT ISZERO PUSH3 0xE14 JUMPI DUP2 DUP4 ADD DUP11 ADD MLOAD DUP10 DUP5 ADD PUSH2 0x260 ADD MSTORE SWAP2 DUP10 ADD SWAP2 PUSH3 0xDF3 JUMP JUMPDEST DUP1 DUP4 GT ISZERO PUSH3 0xE27 JUMPI DUP11 PUSH2 0x260 DUP3 DUP12 ADD ADD MSTORE JUMPDEST DUP10 DUP5 ADD MLOAD SWAP3 POP PUSH3 0xE3B DUP11 DUP11 ADD DUP5 PUSH3 0xC51 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MLOAD SWAP4 POP PUSH3 0xE52 PUSH2 0x1C0 DUP11 ADD DUP6 PUSH3 0xBFE JUMP JUMPDEST PUSH1 0x1F ADD SWAP1 SWAP4 AND SWAP7 SWAP1 SWAP7 ADD PUSH2 0x260 ADD SWAP6 POP POP POP SWAP2 DUP5 ADD SWAP2 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH3 0xDCA JUMP JUMPDEST POP SWAP2 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH3 0xEB1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH3 0xEDD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP INVALID ","sourceMap":"487:430:2:-:0;;;522:323;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;573:31;607:97;689:4;696:7;607:51;;;;;:97;;:::i;:::-;573:131;;715:18;747:10;736:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;715:43;;822:5;816:12;808:5;802:4;798:16;791:38;788:717:0;917:20;;:::i;:::-;949:25;977:17;:15;;;;;:17;;:::i;:::-;949:45;;1004:23;1030:22;:20;;;;;:22;;:::i;:::-;1004:48;;1062:24;1102:8;-1:-1:-1;;;;;1102:23:0;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1062:66;;1138:31;;:::i;:::-;1184:7;1179:292;1201:13;1197:1;:17;;;1179:292;;;1235:21;1259:166;;;;;;;;1286:5;1292:1;1286:8;;;;;;;-1:-1:-1;;;1286:8:0;;;;;;;;;;;;;1259:166;;;;1312:11;-1:-1:-1;;;;;1312:26:0;;1339:6;1346:1;1339:9;;;;;;;-1:-1:-1;;;1339:9:0;;;;;;;;;;;;;1350:7;1312:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1259:166;;;;1376:11;-1:-1:-1;;;;;1376:24:0;;1401:6;1408:1;1401:9;;;;;;;-1:-1:-1;;;1401:9:0;;;;;;;;;;;;;1376:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1259:166;;1235:190;-1:-1:-1;1235:190:0;1440:10;:13;;;;;;;;-1:-1:-1;;;1440:13:0;;;;;;;;;;;;:20;-1:-1:-1;1216:3:0;;;;:::i;:::-;;;;1179:292;;;-1:-1:-1;1488:10:0;788:717;-1:-1:-1;;;;;;788:717:0:o;87:1370:1:-;127:18;;:::i;:::-;-1:-1:-1;157:1270:1;;;;;;;;199:42;157:1270;;255:42;157:1270;;;;311:42;157:1270;;;;;;;367:42;157:1270;;;;423:42;157:1270;;;;479:42;157:1270;;;;535:42;157:1270;;;;591:42;157:1270;;;;647:42;157:1270;;;;703:42;157:1270;;;;759:42;157:1270;;;;815:42;157:1270;;;;871:42;157:1270;;;;927:42;157:1270;;;;983:42;157:1270;;;;1039:42;157:1270;;;;1095:42;157:1270;;;;1151:42;157:1270;;;;1207:42;157:1270;;;;1263:42;157:1270;;;;1319:42;157:1270;;;;1375:42;157:1270;;;;87:1370;:::o;1463:575::-;1508:17;;:::i;:::-;-1:-1:-1;1537:473:1;;;;;;;;;;;;;;;-1:-1:-1;;;1537:473:1;;;;;;;;;;;;;;;;;-1:-1:-1;;;1537:473:1;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1537:473:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1537:473:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1537:473:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1537:473:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1537:473:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1537:473:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1537:473:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1537:473:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1537:473:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1537:473:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1537:473:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1537:473:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1537:473:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1537:473:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1537:473:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1537:473:1;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1537:473:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1537:473:1;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1537:473:1;;;;-1:-1:-1;;;1537:473:1;;;;;;;;;;;;-1:-1:-1;;;1537:473:1;;;;-1:-1:-1;;;1537:473:1;;;;1463:575;:::o;487:430:2:-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;487:430:2;;;-1:-1:-1;;487:430:2:o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;487:430:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:179:30:-;95:13;;-1:-1:-1;;;;;137:31:30;;127:42;;117:2;;183:1;180;173:12;117:2;76:117;;;:::o;198:166::-;276:13;;325;;318:21;308:32;;298:2;;354:1;351;344:12;369:246;;501:4;489:9;484:3;480:19;476:30;473:2;;;523:5;516;509:20;473:2;549:20;564:4;549:20;:::i;:::-;592:16;;578:31;;-1:-1:-1;540:29:30;463:152;-1:-1:-1;463:152:30:o;620:179::-;701:13;;-1:-1:-1;;;;;743:31:30;;733:42;;723:2;;789:1;786;779:12;804:171;884:13;;937:12;926:24;;916:35;;906:2;;965:1;962;955:12;980:162;1059:13;;1112:4;1101:16;;1091:27;;1081:2;;1132:1;1129;1122:12;1147:220;;1270:2;1258:9;1249:7;1245:23;1241:32;1238:2;;;1291:6;1283;1276:22;1238:2;1319:42;1351:9;1319:42;:::i;:::-;1309:52;1228:139;-1:-1:-1;;;1228:139:30:o;1372:303::-;;;1510:2;1498:9;1489:7;1485:23;1481:32;1478:2;;;1531:6;1523;1516:22;1478:2;1559:42;1591:9;1559:42;:::i;:::-;1549:52;;1620:49;1665:2;1654:9;1650:18;1620:49;:::i;:::-;1610:59;;1468:207;;;;;:::o;1680:628::-;;1830:3;1818:9;1809:7;1805:23;1801:33;1798:2;;;1852:6;1844;1837:22;1798:2;1883:19;1898:3;1883:19;:::i;:::-;1925:40;1955:9;1925:40;:::i;:::-;1918:5;1911:55;1998:48;2042:2;2031:9;2027:18;1998:48;:::i;:::-;1993:2;1986:5;1982:14;1975:72;2079:48;2123:2;2112:9;2108:18;2079:48;:::i;:::-;2074:2;2067:5;2063:14;2056:72;2173:2;2162:9;2158:18;2152:25;2208:1;2199:7;2196:14;2186:2;;2229:6;2221;2214:22;2186:2;2265;2254:14;;2247:31;2258:5;1788:520;-1:-1:-1;;;1788:520:30:o;2313:1494::-;;2443:3;2487:2;2475:9;2466:7;2462:23;2458:32;2455:2;;;2508:6;2500;2493:22;2455:2;2539:18;2554:2;2539:18;:::i;:::-;2526:31;;2580:75;2647:7;2636:9;2580:75;:::i;:::-;2573:5;2566:90;2688:51;2735:2;2724:9;2720:18;2688:51;:::i;:::-;2683:2;2676:5;2672:14;2665:75;2772:51;2819:2;2808:9;2804:18;2772:51;:::i;:::-;2767:2;2760:5;2756:14;2749:75;2856:51;2903:2;2892:9;2888:18;2856:51;:::i;:::-;2851:2;2844:5;2840:14;2833:75;2941:52;2988:3;2977:9;2973:19;2941:52;:::i;:::-;2935:3;2928:5;2924:15;2917:77;3027:52;3074:3;3063:9;3059:19;3027:52;:::i;:::-;3021:3;3014:5;3010:15;3003:77;3113:51;3159:3;3148:9;3144:19;3113:51;:::i;:::-;3107:3;3100:5;3096:15;3089:76;3198:52;3245:3;3234:9;3230:19;3198:52;:::i;:::-;3192:3;3185:5;3181:15;3174:77;3270:3;3305:51;3352:2;3341:9;3337:18;3305:51;:::i;:::-;3289:14;;;3282:75;3376:3;3411:51;3443:18;;;3411:51;:::i;:::-;3395:14;;;3388:75;3482:3;3517:51;3549:18;;;3517:51;:::i;:::-;3501:14;;;3494:75;3588:3;3623:49;3653:18;;;3623:49;:::i;:::-;3607:14;;;3600:73;3692:3;3727:49;3757:18;;;3727:49;:::i;:::-;3711:14;;;3704:73;3715:5;2423:1384;-1:-1:-1;;;2423:1384:30:o;3812:106::-;-1:-1:-1;;;;;3880:31:30;3868:44;;3858:60::o;3923:508::-;4019:4;4011:5;4005:12;4001:23;3996:3;3989:36;4088:4;4081:5;4077:16;4071:23;4064:31;4057:39;4050:4;4045:3;4041:14;4034:63;4160:4;4153:5;4149:16;4143:23;4136:31;4129:39;4122:4;4117:3;4113:14;4106:63;4215:4;4208:5;4204:16;4198:23;4257:1;4243:12;4240:19;4230:2;;4302:10;4297:3;4293:20;4290:1;4283:31;4337:4;4334:1;4327:15;4365:4;4362:1;4355:15;4230:2;4412:12;4405:4;4400:3;4396:14;4389:36;;3979:452;;:::o;4436:99::-;4520:12;4508:25;;4506:29::o;4540:1617::-;4608:63;4667:3;4659:5;4653:12;4608:63;:::i;:::-;4717:4;4710:5;4706:16;4700:23;4732:50;4776:4;4771:3;4767:14;4753:12;4732:50;:::i;:::-;;4830:4;4823:5;4819:16;4813:23;4845:52;4891:4;4886:3;4882:14;4866;4845:52;:::i;:::-;;4945:4;4938:5;4934:16;4928:23;4960:52;5006:4;5001:3;4997:14;4981;4960:52;:::i;:::-;;5060:4;5053:5;5049:16;5043:23;5075:52;5121:4;5116:3;5112:14;5096;5075:52;:::i;:::-;;5175:4;5168:5;5164:16;5158:23;5190:52;5236:4;5231:3;5227:14;5211;5190:52;:::i;:::-;;5290:4;5283:5;5279:16;5273:23;5305:51;5350:4;5345:3;5341:14;5325;5305:51;:::i;:::-;;5404:4;5397:5;5393:16;5387:23;5419:52;5465:4;5460:3;5456:14;5440;5419:52;:::i;:::-;;5490:6;5544:2;5537:5;5533:14;5527:21;5557:50;5603:2;5598:3;5594:12;5578:14;5557:50;:::i;:::-;;;5626:6;5680:2;5673:5;5669:14;5663:21;5693:50;5739:2;5734:3;5730:12;5714:14;5693:50;:::i;:::-;;;5762:6;5816:2;5809:5;5805:14;5799:21;5829:50;5875:2;5870:3;5866:12;5850:14;5829:50;:::i;:::-;;;5898:6;5953:2;5946:5;5942:14;5936:21;5966:49;6011:2;6006:3;6002:12;5985:15;5966:49;:::i;:::-;;;6034:6;6089:2;6082:5;6078:14;6072:21;6102:49;6147:2;6142:3;6138:12;6121:15;6102:49;:::i;:::-;;;4598:1559;;:::o;6162:106::-;-1:-1:-1;;;;;6230:31:30;6218:44;;6208:60::o;6273:98::-;6351:12;6340:24;6328:37;;6318:53::o;6376:77::-;6445:4;6434:16;6422:29;;6420:33::o;6458:203::-;-1:-1:-1;;;;;6622:32:30;;;;6604:51;;6592:2;6577:18;;6559:102::o;6666:281::-;-1:-1:-1;;;;;6854:32:30;;;;6836:51;;6935:4;6923:17;6918:2;6903:18;;6896:45;6824:2;6809:18;;6791:156::o;6952:1578::-;7173:2;7225:21;;;6952:1578;;7332:3;7317:19;;7198:18;;;7359:6;6952:1578;7396:1105;7410:4;7407:1;7404:11;7396:1105;;;7471:2;7467:7;7527:2;7515:9;7507:6;7503:22;7499:31;7494:3;7487:44;7560:6;7554:13;7590:6;7635:2;7629:9;7666:2;7658:6;7651:18;7702:12;7696:19;7752:6;7747:2;7739:6;7735:15;7728:31;7783:4;7772:15;;7800:166;7816:6;7811:3;7808:15;7800:166;;;7923:22;;;7919:31;;7913:38;7889:16;;;7907:3;7885:26;7878:74;7833:12;;;;7800:166;;;7990:6;7985:3;7982:15;7979:2;;;8066:4;8060:3;8051:6;8043;8039:19;8035:29;8028:43;7979:2;8134;8130;8126:11;8120:18;8098:40;;8151:65;8212:2;8204:6;8200:15;8184:14;8151:65;:::i;:::-;8265:4;8261:2;8257:13;8251:20;8229:42;;8284:67;8343:6;8335;8331:19;8315:14;8284:67;:::i;:::-;8406:2;8394:15;8390:24;;;8378:37;;;;8417:3;8374:47;;-1:-1:-1;;;8479:12:30;;;;8444:15;;;;7430:1;7423:9;7396:1105;;;-1:-1:-1;8518:6:30;;7153:1377;-1:-1:-1;;;;;;7153:1377:30:o;8535:348::-;8605:2;8599:9;8635:17;;;-1:-1:-1;;;;;8667:34:30;;8703:22;;;8664:62;8661:2;;;8768:10;8763:3;8759:20;8756:1;8749:31;8803:4;8800:1;8793:15;8831:4;8828:1;8821:15;8661:2;8862;8855:22;8579:304;;-1:-1:-1;8579:304:30:o;8888:276::-;;8969:4;8962:5;8958:16;8998:4;8989:7;8986:17;8983:2;;;-1:-1:-1;;;9026:33:30;;9082:4;9079:1;9072:15;9112:4;9033:3;9100:17;8983:2;9156:1;9143:15;;8933:231;-1:-1:-1;;8933:231:30:o"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8888:30","statements":[{"nodeType":"YulBlock","src":"6:3:30","statements":[]},{"body":{"nodeType":"YulBlock","src":"76:117:30","statements":[{"nodeType":"YulAssignment","src":"86:22:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"101:6:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"95:5:30"},"nodeType":"YulFunctionCall","src":"95:13:30"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"86:5:30"}]},{"body":{"nodeType":"YulBlock","src":"171:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"180:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"183:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"173:6:30"},"nodeType":"YulFunctionCall","src":"173:12:30"},"nodeType":"YulExpressionStatement","src":"173:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"130:5:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"141:5:30"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"156:3:30","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"161:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"152:3:30"},"nodeType":"YulFunctionCall","src":"152:11:30"},{"kind":"number","nodeType":"YulLiteral","src":"165:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"148:3:30"},"nodeType":"YulFunctionCall","src":"148:19:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"137:3:30"},"nodeType":"YulFunctionCall","src":"137:31:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"127:2:30"},"nodeType":"YulFunctionCall","src":"127:42:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"120:6:30"},"nodeType":"YulFunctionCall","src":"120:50:30"},"nodeType":"YulIf","src":"117:2:30"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"55:6:30","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"66:5:30","type":""}],"src":"14:179:30"},{"body":{"nodeType":"YulBlock","src":"257:107:30","statements":[{"nodeType":"YulAssignment","src":"267:22:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"282:6:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"276:5:30"},"nodeType":"YulFunctionCall","src":"276:13:30"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"267:5:30"}]},{"body":{"nodeType":"YulBlock","src":"342:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"351:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"354:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"344:6:30"},"nodeType":"YulFunctionCall","src":"344:12:30"},"nodeType":"YulExpressionStatement","src":"344:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"311:5:30"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"332:5:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"325:6:30"},"nodeType":"YulFunctionCall","src":"325:13:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"318:6:30"},"nodeType":"YulFunctionCall","src":"318:21:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"308:2:30"},"nodeType":"YulFunctionCall","src":"308:32:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"301:6:30"},"nodeType":"YulFunctionCall","src":"301:40:30"},"nodeType":"YulIf","src":"298:2:30"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"236:6:30","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"247:5:30","type":""}],"src":"198:166:30"},{"body":{"nodeType":"YulBlock","src":"463:152:30","statements":[{"body":{"nodeType":"YulBlock","src":"507:24:30","statements":[{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"516:5:30"},{"name":"value","nodeType":"YulIdentifier","src":"523:5:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"509:6:30"},"nodeType":"YulFunctionCall","src":"509:20:30"},"nodeType":"YulExpressionStatement","src":"509:20:30"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"484:3:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"489:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"480:3:30"},"nodeType":"YulFunctionCall","src":"480:19:30"},{"kind":"number","nodeType":"YulLiteral","src":"501:4:30","type":"","value":"0x20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"476:3:30"},"nodeType":"YulFunctionCall","src":"476:30:30"},"nodeType":"YulIf","src":"473:2:30"},{"nodeType":"YulAssignment","src":"540:29:30","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"564:4:30","type":"","value":"0x20"}],"functionName":{"name":"allocateMemory","nodeType":"YulIdentifier","src":"549:14:30"},"nodeType":"YulFunctionCall","src":"549:20:30"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"540:5:30"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"585:5:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"598:9:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"592:5:30"},"nodeType":"YulFunctionCall","src":"592:16:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"578:6:30"},"nodeType":"YulFunctionCall","src":"578:31:30"},"nodeType":"YulExpressionStatement","src":"578:31:30"}]},"name":"abi_decode_t_struct$_ReserveConfigurationMap_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"434:9:30","type":""},{"name":"end","nodeType":"YulTypedName","src":"445:3:30","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"453:5:30","type":""}],"src":"369:246:30"},{"body":{"nodeType":"YulBlock","src":"682:132:30","statements":[{"nodeType":"YulAssignment","src":"692:22:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"707:6:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"701:5:30"},"nodeType":"YulFunctionCall","src":"701:13:30"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"692:5:30"}]},{"body":{"nodeType":"YulBlock","src":"792:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"801:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"804:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"794:6:30"},"nodeType":"YulFunctionCall","src":"794:12:30"},"nodeType":"YulExpressionStatement","src":"794:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"736:5:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"747:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"754:34:30","type":"","value":"0xffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"743:3:30"},"nodeType":"YulFunctionCall","src":"743:46:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"733:2:30"},"nodeType":"YulFunctionCall","src":"733:57:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"726:6:30"},"nodeType":"YulFunctionCall","src":"726:65:30"},"nodeType":"YulIf","src":"723:2:30"}]},"name":"abi_decode_t_uint128_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"661:6:30","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"672:5:30","type":""}],"src":"620:194:30"},{"body":{"nodeType":"YulBlock","src":"880:110:30","statements":[{"nodeType":"YulAssignment","src":"890:22:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"905:6:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"899:5:30"},"nodeType":"YulFunctionCall","src":"899:13:30"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"890:5:30"}]},{"body":{"nodeType":"YulBlock","src":"968:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"977:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"980:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"970:6:30"},"nodeType":"YulFunctionCall","src":"970:12:30"},"nodeType":"YulExpressionStatement","src":"970:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"934:5:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"945:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"952:12:30","type":"","value":"0xffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"941:3:30"},"nodeType":"YulFunctionCall","src":"941:24:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"931:2:30"},"nodeType":"YulFunctionCall","src":"931:35:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"924:6:30"},"nodeType":"YulFunctionCall","src":"924:43:30"},"nodeType":"YulIf","src":"921:2:30"}]},"name":"abi_decode_t_uint40_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"859:6:30","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"870:5:30","type":""}],"src":"819:171:30"},{"body":{"nodeType":"YulBlock","src":"1055:102:30","statements":[{"nodeType":"YulAssignment","src":"1065:22:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1080:6:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1074:5:30"},"nodeType":"YulFunctionCall","src":"1074:13:30"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1065:5:30"}]},{"body":{"nodeType":"YulBlock","src":"1135:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1144:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1147:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1137:6:30"},"nodeType":"YulFunctionCall","src":"1137:12:30"},"nodeType":"YulExpressionStatement","src":"1137:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1109:5:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1120:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"1127:4:30","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1116:3:30"},"nodeType":"YulFunctionCall","src":"1116:16:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1106:2:30"},"nodeType":"YulFunctionCall","src":"1106:27:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1099:6:30"},"nodeType":"YulFunctionCall","src":"1099:35:30"},"nodeType":"YulIf","src":"1096:2:30"}]},"name":"abi_decode_t_uint8_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1034:6:30","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1045:5:30","type":""}],"src":"995:162:30"},{"body":{"nodeType":"YulBlock","src":"1243:139:30","statements":[{"body":{"nodeType":"YulBlock","src":"1289:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1298:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"1306:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1291:6:30"},"nodeType":"YulFunctionCall","src":"1291:22:30"},"nodeType":"YulExpressionStatement","src":"1291:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1264:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"1273:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1260:3:30"},"nodeType":"YulFunctionCall","src":"1260:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"1285:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1256:3:30"},"nodeType":"YulFunctionCall","src":"1256:32:30"},"nodeType":"YulIf","src":"1253:2:30"},{"nodeType":"YulAssignment","src":"1324:52:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1366:9:30"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1334:31:30"},"nodeType":"YulFunctionCall","src":"1334:42:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1324:6:30"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1209:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1220:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1232:6:30","type":""}],"src":"1162:220:30"},{"body":{"nodeType":"YulBlock","src":"1495:520:30","statements":[{"body":{"nodeType":"YulBlock","src":"1542:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1551:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"1559:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1544:6:30"},"nodeType":"YulFunctionCall","src":"1544:22:30"},"nodeType":"YulExpressionStatement","src":"1544:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1516:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"1525:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1512:3:30"},"nodeType":"YulFunctionCall","src":"1512:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"1537:3:30","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1508:3:30"},"nodeType":"YulFunctionCall","src":"1508:33:30"},"nodeType":"YulIf","src":"1505:2:30"},{"nodeType":"YulVariableDeclaration","src":"1577:32:30","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1605:3:30","type":"","value":"128"}],"functionName":{"name":"allocateMemory","nodeType":"YulIdentifier","src":"1590:14:30"},"nodeType":"YulFunctionCall","src":"1590:19:30"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1581:5:30","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1625:5:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1662:9:30"}],"functionName":{"name":"abi_decode_t_uint8_fromMemory","nodeType":"YulIdentifier","src":"1632:29:30"},"nodeType":"YulFunctionCall","src":"1632:40:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1618:6:30"},"nodeType":"YulFunctionCall","src":"1618:55:30"},"nodeType":"YulExpressionStatement","src":"1618:55:30"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1693:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"1700:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1689:3:30"},"nodeType":"YulFunctionCall","src":"1689:14:30"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1738:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"1749:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1734:3:30"},"nodeType":"YulFunctionCall","src":"1734:18:30"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"1705:28:30"},"nodeType":"YulFunctionCall","src":"1705:48:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1682:6:30"},"nodeType":"YulFunctionCall","src":"1682:72:30"},"nodeType":"YulExpressionStatement","src":"1682:72:30"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1774:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"1781:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1770:3:30"},"nodeType":"YulFunctionCall","src":"1770:14:30"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1819:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"1830:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1815:3:30"},"nodeType":"YulFunctionCall","src":"1815:18:30"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"1786:28:30"},"nodeType":"YulFunctionCall","src":"1786:48:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1763:6:30"},"nodeType":"YulFunctionCall","src":"1763:72:30"},"nodeType":"YulExpressionStatement","src":"1763:72:30"},{"nodeType":"YulVariableDeclaration","src":"1844:40:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1869:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"1880:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1865:3:30"},"nodeType":"YulFunctionCall","src":"1865:18:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1859:5:30"},"nodeType":"YulFunctionCall","src":"1859:25:30"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"1848:7:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"1919:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1928:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"1936:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1921:6:30"},"nodeType":"YulFunctionCall","src":"1921:22:30"},"nodeType":"YulExpressionStatement","src":"1921:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"1906:7:30"},{"kind":"number","nodeType":"YulLiteral","src":"1915:1:30","type":"","value":"2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1903:2:30"},"nodeType":"YulFunctionCall","src":"1903:14:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1896:6:30"},"nodeType":"YulFunctionCall","src":"1896:22:30"},"nodeType":"YulIf","src":"1893:2:30"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1965:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"1972:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1961:3:30"},"nodeType":"YulFunctionCall","src":"1961:14:30"},{"name":"value_1","nodeType":"YulIdentifier","src":"1977:7:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1954:6:30"},"nodeType":"YulFunctionCall","src":"1954:31:30"},"nodeType":"YulExpressionStatement","src":"1954:31:30"},{"nodeType":"YulAssignment","src":"1994:15:30","value":{"name":"value","nodeType":"YulIdentifier","src":"2004:5:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1994:6:30"}]}]},"name":"abi_decode_tuple_t_struct$_AssetData_$4082_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1461:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1472:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1484:6:30","type":""}],"src":"1387:628:30"},{"body":{"nodeType":"YulBlock","src":"2130:1384:30","statements":[{"nodeType":"YulVariableDeclaration","src":"2140:13:30","value":{"kind":"number","nodeType":"YulLiteral","src":"2150:3:30","type":"","value":"416"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2144:2:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"2198:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2207:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"2215:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2200:6:30"},"nodeType":"YulFunctionCall","src":"2200:22:30"},"nodeType":"YulExpressionStatement","src":"2200:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2173:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"2182:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2169:3:30"},"nodeType":"YulFunctionCall","src":"2169:23:30"},{"name":"_1","nodeType":"YulIdentifier","src":"2194:2:30"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2165:3:30"},"nodeType":"YulFunctionCall","src":"2165:32:30"},"nodeType":"YulIf","src":"2162:2:30"},{"nodeType":"YulVariableDeclaration","src":"2233:31:30","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2261:2:30"}],"functionName":{"name":"allocateMemory","nodeType":"YulIdentifier","src":"2246:14:30"},"nodeType":"YulFunctionCall","src":"2246:18:30"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2237:5:30","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2280:5:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2343:9:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2354:7:30"}],"functionName":{"name":"abi_decode_t_struct$_ReserveConfigurationMap_fromMemory","nodeType":"YulIdentifier","src":"2287:55:30"},"nodeType":"YulFunctionCall","src":"2287:75:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2273:6:30"},"nodeType":"YulFunctionCall","src":"2273:90:30"},"nodeType":"YulExpressionStatement","src":"2273:90:30"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2383:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"2390:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2379:3:30"},"nodeType":"YulFunctionCall","src":"2379:14:30"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2431:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2442:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2427:3:30"},"nodeType":"YulFunctionCall","src":"2427:18:30"}],"functionName":{"name":"abi_decode_t_uint128_fromMemory","nodeType":"YulIdentifier","src":"2395:31:30"},"nodeType":"YulFunctionCall","src":"2395:51:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2372:6:30"},"nodeType":"YulFunctionCall","src":"2372:75:30"},"nodeType":"YulExpressionStatement","src":"2372:75:30"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2467:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"2474:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2463:3:30"},"nodeType":"YulFunctionCall","src":"2463:14:30"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2515:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2526:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2511:3:30"},"nodeType":"YulFunctionCall","src":"2511:18:30"}],"functionName":{"name":"abi_decode_t_uint128_fromMemory","nodeType":"YulIdentifier","src":"2479:31:30"},"nodeType":"YulFunctionCall","src":"2479:51:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2456:6:30"},"nodeType":"YulFunctionCall","src":"2456:75:30"},"nodeType":"YulExpressionStatement","src":"2456:75:30"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2551:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"2558:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2547:3:30"},"nodeType":"YulFunctionCall","src":"2547:14:30"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2599:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2610:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2595:3:30"},"nodeType":"YulFunctionCall","src":"2595:18:30"}],"functionName":{"name":"abi_decode_t_uint128_fromMemory","nodeType":"YulIdentifier","src":"2563:31:30"},"nodeType":"YulFunctionCall","src":"2563:51:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2540:6:30"},"nodeType":"YulFunctionCall","src":"2540:75:30"},"nodeType":"YulExpressionStatement","src":"2540:75:30"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2635:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"2642:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2631:3:30"},"nodeType":"YulFunctionCall","src":"2631:15:30"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2684:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2695:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2680:3:30"},"nodeType":"YulFunctionCall","src":"2680:19:30"}],"functionName":{"name":"abi_decode_t_uint128_fromMemory","nodeType":"YulIdentifier","src":"2648:31:30"},"nodeType":"YulFunctionCall","src":"2648:52:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2624:6:30"},"nodeType":"YulFunctionCall","src":"2624:77:30"},"nodeType":"YulExpressionStatement","src":"2624:77:30"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2721:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"2728:3:30","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2717:3:30"},"nodeType":"YulFunctionCall","src":"2717:15:30"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2770:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2781:3:30","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2766:3:30"},"nodeType":"YulFunctionCall","src":"2766:19:30"}],"functionName":{"name":"abi_decode_t_uint128_fromMemory","nodeType":"YulIdentifier","src":"2734:31:30"},"nodeType":"YulFunctionCall","src":"2734:52:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2710:6:30"},"nodeType":"YulFunctionCall","src":"2710:77:30"},"nodeType":"YulExpressionStatement","src":"2710:77:30"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2807:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"2814:3:30","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2803:3:30"},"nodeType":"YulFunctionCall","src":"2803:15:30"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2855:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2866:3:30","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2851:3:30"},"nodeType":"YulFunctionCall","src":"2851:19:30"}],"functionName":{"name":"abi_decode_t_uint40_fromMemory","nodeType":"YulIdentifier","src":"2820:30:30"},"nodeType":"YulFunctionCall","src":"2820:51:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2796:6:30"},"nodeType":"YulFunctionCall","src":"2796:76:30"},"nodeType":"YulExpressionStatement","src":"2796:76:30"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2892:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"2899:3:30","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2888:3:30"},"nodeType":"YulFunctionCall","src":"2888:15:30"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2941:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2952:3:30","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2937:3:30"},"nodeType":"YulFunctionCall","src":"2937:19:30"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"2905:31:30"},"nodeType":"YulFunctionCall","src":"2905:52:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2881:6:30"},"nodeType":"YulFunctionCall","src":"2881:77:30"},"nodeType":"YulExpressionStatement","src":"2881:77:30"},{"nodeType":"YulVariableDeclaration","src":"2967:13:30","value":{"kind":"number","nodeType":"YulLiteral","src":"2977:3:30","type":"","value":"256"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2971:2:30","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3000:5:30"},{"name":"_2","nodeType":"YulIdentifier","src":"3007:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2996:3:30"},"nodeType":"YulFunctionCall","src":"2996:14:30"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3048:9:30"},{"name":"_2","nodeType":"YulIdentifier","src":"3059:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3044:3:30"},"nodeType":"YulFunctionCall","src":"3044:18:30"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"3012:31:30"},"nodeType":"YulFunctionCall","src":"3012:51:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2989:6:30"},"nodeType":"YulFunctionCall","src":"2989:75:30"},"nodeType":"YulExpressionStatement","src":"2989:75:30"},{"nodeType":"YulVariableDeclaration","src":"3073:13:30","value":{"kind":"number","nodeType":"YulLiteral","src":"3083:3:30","type":"","value":"288"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"3077:2:30","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3106:5:30"},{"name":"_3","nodeType":"YulIdentifier","src":"3113:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3102:3:30"},"nodeType":"YulFunctionCall","src":"3102:14:30"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3154:9:30"},{"name":"_3","nodeType":"YulIdentifier","src":"3165:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3150:3:30"},"nodeType":"YulFunctionCall","src":"3150:18:30"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"3118:31:30"},"nodeType":"YulFunctionCall","src":"3118:51:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3095:6:30"},"nodeType":"YulFunctionCall","src":"3095:75:30"},"nodeType":"YulExpressionStatement","src":"3095:75:30"},{"nodeType":"YulVariableDeclaration","src":"3179:13:30","value":{"kind":"number","nodeType":"YulLiteral","src":"3189:3:30","type":"","value":"320"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"3183:2:30","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3212:5:30"},{"name":"_4","nodeType":"YulIdentifier","src":"3219:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3208:3:30"},"nodeType":"YulFunctionCall","src":"3208:14:30"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3260:9:30"},{"name":"_4","nodeType":"YulIdentifier","src":"3271:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3256:3:30"},"nodeType":"YulFunctionCall","src":"3256:18:30"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"3224:31:30"},"nodeType":"YulFunctionCall","src":"3224:51:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3201:6:30"},"nodeType":"YulFunctionCall","src":"3201:75:30"},"nodeType":"YulExpressionStatement","src":"3201:75:30"},{"nodeType":"YulVariableDeclaration","src":"3285:13:30","value":{"kind":"number","nodeType":"YulLiteral","src":"3295:3:30","type":"","value":"352"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"3289:2:30","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3318:5:30"},{"name":"_5","nodeType":"YulIdentifier","src":"3325:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3314:3:30"},"nodeType":"YulFunctionCall","src":"3314:14:30"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3364:9:30"},{"name":"_5","nodeType":"YulIdentifier","src":"3375:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3360:3:30"},"nodeType":"YulFunctionCall","src":"3360:18:30"}],"functionName":{"name":"abi_decode_t_uint8_fromMemory","nodeType":"YulIdentifier","src":"3330:29:30"},"nodeType":"YulFunctionCall","src":"3330:49:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3307:6:30"},"nodeType":"YulFunctionCall","src":"3307:73:30"},"nodeType":"YulExpressionStatement","src":"3307:73:30"},{"nodeType":"YulVariableDeclaration","src":"3389:13:30","value":{"kind":"number","nodeType":"YulLiteral","src":"3399:3:30","type":"","value":"384"},"variables":[{"name":"_6","nodeType":"YulTypedName","src":"3393:2:30","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3422:5:30"},{"name":"_6","nodeType":"YulIdentifier","src":"3429:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3418:3:30"},"nodeType":"YulFunctionCall","src":"3418:14:30"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3468:9:30"},{"name":"_6","nodeType":"YulIdentifier","src":"3479:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3464:3:30"},"nodeType":"YulFunctionCall","src":"3464:18:30"}],"functionName":{"name":"abi_decode_t_uint8_fromMemory","nodeType":"YulIdentifier","src":"3434:29:30"},"nodeType":"YulFunctionCall","src":"3434:49:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3411:6:30"},"nodeType":"YulFunctionCall","src":"3411:73:30"},"nodeType":"YulExpressionStatement","src":"3411:73:30"},{"nodeType":"YulAssignment","src":"3493:15:30","value":{"name":"value","nodeType":"YulIdentifier","src":"3503:5:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3493:6:30"}]}]},"name":"abi_decode_tuple_t_struct$_ReserveData_$4115_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2096:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2107:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2119:6:30","type":""}],"src":"2020:1494:30"},{"body":{"nodeType":"YulBlock","src":"3565:60:30","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3582:3:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3591:5:30"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3606:3:30","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3611:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3602:3:30"},"nodeType":"YulFunctionCall","src":"3602:11:30"},{"kind":"number","nodeType":"YulLiteral","src":"3615:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3598:3:30"},"nodeType":"YulFunctionCall","src":"3598:19:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3587:3:30"},"nodeType":"YulFunctionCall","src":"3587:31:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3575:6:30"},"nodeType":"YulFunctionCall","src":"3575:44:30"},"nodeType":"YulExpressionStatement","src":"3575:44:30"}]},"name":"abi_encode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3549:5:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3556:3:30","type":""}],"src":"3519:106:30"},{"body":{"nodeType":"YulBlock","src":"3686:452:30","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3703:3:30"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3718:5:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3712:5:30"},"nodeType":"YulFunctionCall","src":"3712:12:30"},{"kind":"number","nodeType":"YulLiteral","src":"3726:4:30","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3708:3:30"},"nodeType":"YulFunctionCall","src":"3708:23:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3696:6:30"},"nodeType":"YulFunctionCall","src":"3696:36:30"},"nodeType":"YulExpressionStatement","src":"3696:36:30"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3752:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"3757:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3748:3:30"},"nodeType":"YulFunctionCall","src":"3748:14:30"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3788:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"3795:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3784:3:30"},"nodeType":"YulFunctionCall","src":"3784:16:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3778:5:30"},"nodeType":"YulFunctionCall","src":"3778:23:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3771:6:30"},"nodeType":"YulFunctionCall","src":"3771:31:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3764:6:30"},"nodeType":"YulFunctionCall","src":"3764:39:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3741:6:30"},"nodeType":"YulFunctionCall","src":"3741:63:30"},"nodeType":"YulExpressionStatement","src":"3741:63:30"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3824:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"3829:4:30","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3820:3:30"},"nodeType":"YulFunctionCall","src":"3820:14:30"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3860:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"3867:4:30","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3856:3:30"},"nodeType":"YulFunctionCall","src":"3856:16:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3850:5:30"},"nodeType":"YulFunctionCall","src":"3850:23:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3843:6:30"},"nodeType":"YulFunctionCall","src":"3843:31:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3836:6:30"},"nodeType":"YulFunctionCall","src":"3836:39:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3813:6:30"},"nodeType":"YulFunctionCall","src":"3813:63:30"},"nodeType":"YulExpressionStatement","src":"3813:63:30"},{"nodeType":"YulVariableDeclaration","src":"3885:43:30","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3915:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"3922:4:30","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3911:3:30"},"nodeType":"YulFunctionCall","src":"3911:16:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3905:5:30"},"nodeType":"YulFunctionCall","src":"3905:23:30"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"3889:12:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"3976:111:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3997:1:30","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4004:3:30","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4009:10:30","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4000:3:30"},"nodeType":"YulFunctionCall","src":"4000:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3990:6:30"},"nodeType":"YulFunctionCall","src":"3990:31:30"},"nodeType":"YulExpressionStatement","src":"3990:31:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4041:1:30","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4044:4:30","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4034:6:30"},"nodeType":"YulFunctionCall","src":"4034:15:30"},"nodeType":"YulExpressionStatement","src":"4034:15:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4069:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4072:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4062:6:30"},"nodeType":"YulFunctionCall","src":"4062:15:30"},"nodeType":"YulExpressionStatement","src":"4062:15:30"}]},"condition":{"arguments":[{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"3950:12:30"},{"kind":"number","nodeType":"YulLiteral","src":"3964:1:30","type":"","value":"2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3947:2:30"},"nodeType":"YulFunctionCall","src":"3947:19:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3940:6:30"},"nodeType":"YulFunctionCall","src":"3940:27:30"},"nodeType":"YulIf","src":"3937:2:30"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4107:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"4112:4:30","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4103:3:30"},"nodeType":"YulFunctionCall","src":"4103:14:30"},{"name":"memberValue0","nodeType":"YulIdentifier","src":"4119:12:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4096:6:30"},"nodeType":"YulFunctionCall","src":"4096:36:30"},"nodeType":"YulExpressionStatement","src":"4096:36:30"}]},"name":"abi_encode_t_struct$_AssetData","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3670:5:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3677:3:30","type":""}],"src":"3630:508:30"},{"body":{"nodeType":"YulBlock","src":"4213:29:30","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4222:3:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4233:5:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4227:5:30"},"nodeType":"YulFunctionCall","src":"4227:12:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4215:6:30"},"nodeType":"YulFunctionCall","src":"4215:25:30"},"nodeType":"YulExpressionStatement","src":"4215:25:30"}]},"name":"abi_encode_t_struct$_ReserveConfigurationMap","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4197:5:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4204:3:30","type":""}],"src":"4143:99:30"},{"body":{"nodeType":"YulBlock","src":"4305:1559:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4366:5:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4360:5:30"},"nodeType":"YulFunctionCall","src":"4360:12:30"},{"name":"pos","nodeType":"YulIdentifier","src":"4374:3:30"}],"functionName":{"name":"abi_encode_t_struct$_ReserveConfigurationMap","nodeType":"YulIdentifier","src":"4315:44:30"},"nodeType":"YulFunctionCall","src":"4315:63:30"},"nodeType":"YulExpressionStatement","src":"4315:63:30"},{"nodeType":"YulVariableDeclaration","src":"4387:43:30","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4417:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"4424:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4413:3:30"},"nodeType":"YulFunctionCall","src":"4413:16:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4407:5:30"},"nodeType":"YulFunctionCall","src":"4407:23:30"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"4391:12:30","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"4460:12:30"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4478:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"4483:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4474:3:30"},"nodeType":"YulFunctionCall","src":"4474:14:30"}],"functionName":{"name":"abi_encode_t_uint128","nodeType":"YulIdentifier","src":"4439:20:30"},"nodeType":"YulFunctionCall","src":"4439:50:30"},"nodeType":"YulExpressionStatement","src":"4439:50:30"},{"nodeType":"YulVariableDeclaration","src":"4498:45:30","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4530:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"4537:4:30","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4526:3:30"},"nodeType":"YulFunctionCall","src":"4526:16:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4520:5:30"},"nodeType":"YulFunctionCall","src":"4520:23:30"},"variables":[{"name":"memberValue0_1","nodeType":"YulTypedName","src":"4502:14:30","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_1","nodeType":"YulIdentifier","src":"4573:14:30"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4593:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"4598:4:30","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4589:3:30"},"nodeType":"YulFunctionCall","src":"4589:14:30"}],"functionName":{"name":"abi_encode_t_uint128","nodeType":"YulIdentifier","src":"4552:20:30"},"nodeType":"YulFunctionCall","src":"4552:52:30"},"nodeType":"YulExpressionStatement","src":"4552:52:30"},{"nodeType":"YulVariableDeclaration","src":"4613:45:30","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4645:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"4652:4:30","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4641:3:30"},"nodeType":"YulFunctionCall","src":"4641:16:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4635:5:30"},"nodeType":"YulFunctionCall","src":"4635:23:30"},"variables":[{"name":"memberValue0_2","nodeType":"YulTypedName","src":"4617:14:30","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_2","nodeType":"YulIdentifier","src":"4688:14:30"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4708:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"4713:4:30","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4704:3:30"},"nodeType":"YulFunctionCall","src":"4704:14:30"}],"functionName":{"name":"abi_encode_t_uint128","nodeType":"YulIdentifier","src":"4667:20:30"},"nodeType":"YulFunctionCall","src":"4667:52:30"},"nodeType":"YulExpressionStatement","src":"4667:52:30"},{"nodeType":"YulVariableDeclaration","src":"4728:45:30","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4760:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"4767:4:30","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4756:3:30"},"nodeType":"YulFunctionCall","src":"4756:16:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4750:5:30"},"nodeType":"YulFunctionCall","src":"4750:23:30"},"variables":[{"name":"memberValue0_3","nodeType":"YulTypedName","src":"4732:14:30","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_3","nodeType":"YulIdentifier","src":"4803:14:30"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4823:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"4828:4:30","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4819:3:30"},"nodeType":"YulFunctionCall","src":"4819:14:30"}],"functionName":{"name":"abi_encode_t_uint128","nodeType":"YulIdentifier","src":"4782:20:30"},"nodeType":"YulFunctionCall","src":"4782:52:30"},"nodeType":"YulExpressionStatement","src":"4782:52:30"},{"nodeType":"YulVariableDeclaration","src":"4843:45:30","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4875:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"4882:4:30","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4871:3:30"},"nodeType":"YulFunctionCall","src":"4871:16:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4865:5:30"},"nodeType":"YulFunctionCall","src":"4865:23:30"},"variables":[{"name":"memberValue0_4","nodeType":"YulTypedName","src":"4847:14:30","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_4","nodeType":"YulIdentifier","src":"4918:14:30"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4938:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"4943:4:30","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4934:3:30"},"nodeType":"YulFunctionCall","src":"4934:14:30"}],"functionName":{"name":"abi_encode_t_uint128","nodeType":"YulIdentifier","src":"4897:20:30"},"nodeType":"YulFunctionCall","src":"4897:52:30"},"nodeType":"YulExpressionStatement","src":"4897:52:30"},{"nodeType":"YulVariableDeclaration","src":"4958:45:30","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4990:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"4997:4:30","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4986:3:30"},"nodeType":"YulFunctionCall","src":"4986:16:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4980:5:30"},"nodeType":"YulFunctionCall","src":"4980:23:30"},"variables":[{"name":"memberValue0_5","nodeType":"YulTypedName","src":"4962:14:30","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_5","nodeType":"YulIdentifier","src":"5032:14:30"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5052:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"5057:4:30","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5048:3:30"},"nodeType":"YulFunctionCall","src":"5048:14:30"}],"functionName":{"name":"abi_encode_t_uint40","nodeType":"YulIdentifier","src":"5012:19:30"},"nodeType":"YulFunctionCall","src":"5012:51:30"},"nodeType":"YulExpressionStatement","src":"5012:51:30"},{"nodeType":"YulVariableDeclaration","src":"5072:45:30","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5104:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"5111:4:30","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5100:3:30"},"nodeType":"YulFunctionCall","src":"5100:16:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5094:5:30"},"nodeType":"YulFunctionCall","src":"5094:23:30"},"variables":[{"name":"memberValue0_6","nodeType":"YulTypedName","src":"5076:14:30","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_6","nodeType":"YulIdentifier","src":"5147:14:30"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5167:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"5172:4:30","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5163:3:30"},"nodeType":"YulFunctionCall","src":"5163:14:30"}],"functionName":{"name":"abi_encode_t_address","nodeType":"YulIdentifier","src":"5126:20:30"},"nodeType":"YulFunctionCall","src":"5126:52:30"},"nodeType":"YulExpressionStatement","src":"5126:52:30"},{"nodeType":"YulVariableDeclaration","src":"5187:16:30","value":{"kind":"number","nodeType":"YulLiteral","src":"5197:6:30","type":"","value":"0x0100"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5191:2:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5212:43:30","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5244:5:30"},{"name":"_1","nodeType":"YulIdentifier","src":"5251:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5240:3:30"},"nodeType":"YulFunctionCall","src":"5240:14:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5234:5:30"},"nodeType":"YulFunctionCall","src":"5234:21:30"},"variables":[{"name":"memberValue0_7","nodeType":"YulTypedName","src":"5216:14:30","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_7","nodeType":"YulIdentifier","src":"5285:14:30"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5305:3:30"},{"name":"_1","nodeType":"YulIdentifier","src":"5310:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5301:3:30"},"nodeType":"YulFunctionCall","src":"5301:12:30"}],"functionName":{"name":"abi_encode_t_address","nodeType":"YulIdentifier","src":"5264:20:30"},"nodeType":"YulFunctionCall","src":"5264:50:30"},"nodeType":"YulExpressionStatement","src":"5264:50:30"},{"nodeType":"YulVariableDeclaration","src":"5323:16:30","value":{"kind":"number","nodeType":"YulLiteral","src":"5333:6:30","type":"","value":"0x0120"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"5327:2:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5348:43:30","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5380:5:30"},{"name":"_2","nodeType":"YulIdentifier","src":"5387:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5376:3:30"},"nodeType":"YulFunctionCall","src":"5376:14:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5370:5:30"},"nodeType":"YulFunctionCall","src":"5370:21:30"},"variables":[{"name":"memberValue0_8","nodeType":"YulTypedName","src":"5352:14:30","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_8","nodeType":"YulIdentifier","src":"5421:14:30"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5441:3:30"},{"name":"_2","nodeType":"YulIdentifier","src":"5446:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5437:3:30"},"nodeType":"YulFunctionCall","src":"5437:12:30"}],"functionName":{"name":"abi_encode_t_address","nodeType":"YulIdentifier","src":"5400:20:30"},"nodeType":"YulFunctionCall","src":"5400:50:30"},"nodeType":"YulExpressionStatement","src":"5400:50:30"},{"nodeType":"YulVariableDeclaration","src":"5459:16:30","value":{"kind":"number","nodeType":"YulLiteral","src":"5469:6:30","type":"","value":"0x0140"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"5463:2:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5484:43:30","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5516:5:30"},{"name":"_3","nodeType":"YulIdentifier","src":"5523:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5512:3:30"},"nodeType":"YulFunctionCall","src":"5512:14:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5506:5:30"},"nodeType":"YulFunctionCall","src":"5506:21:30"},"variables":[{"name":"memberValue0_9","nodeType":"YulTypedName","src":"5488:14:30","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_9","nodeType":"YulIdentifier","src":"5557:14:30"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5577:3:30"},{"name":"_3","nodeType":"YulIdentifier","src":"5582:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5573:3:30"},"nodeType":"YulFunctionCall","src":"5573:12:30"}],"functionName":{"name":"abi_encode_t_address","nodeType":"YulIdentifier","src":"5536:20:30"},"nodeType":"YulFunctionCall","src":"5536:50:30"},"nodeType":"YulExpressionStatement","src":"5536:50:30"},{"nodeType":"YulVariableDeclaration","src":"5595:16:30","value":{"kind":"number","nodeType":"YulLiteral","src":"5605:6:30","type":"","value":"0x0160"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"5599:2:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5620:44:30","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5653:5:30"},{"name":"_4","nodeType":"YulIdentifier","src":"5660:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5649:3:30"},"nodeType":"YulFunctionCall","src":"5649:14:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5643:5:30"},"nodeType":"YulFunctionCall","src":"5643:21:30"},"variables":[{"name":"memberValue0_10","nodeType":"YulTypedName","src":"5624:15:30","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_10","nodeType":"YulIdentifier","src":"5692:15:30"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5713:3:30"},{"name":"_4","nodeType":"YulIdentifier","src":"5718:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5709:3:30"},"nodeType":"YulFunctionCall","src":"5709:12:30"}],"functionName":{"name":"abi_encode_t_uint8","nodeType":"YulIdentifier","src":"5673:18:30"},"nodeType":"YulFunctionCall","src":"5673:49:30"},"nodeType":"YulExpressionStatement","src":"5673:49:30"},{"nodeType":"YulVariableDeclaration","src":"5731:16:30","value":{"kind":"number","nodeType":"YulLiteral","src":"5741:6:30","type":"","value":"0x0180"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"5735:2:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5756:44:30","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5789:5:30"},{"name":"_5","nodeType":"YulIdentifier","src":"5796:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5785:3:30"},"nodeType":"YulFunctionCall","src":"5785:14:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5779:5:30"},"nodeType":"YulFunctionCall","src":"5779:21:30"},"variables":[{"name":"memberValue0_11","nodeType":"YulTypedName","src":"5760:15:30","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_11","nodeType":"YulIdentifier","src":"5828:15:30"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5849:3:30"},{"name":"_5","nodeType":"YulIdentifier","src":"5854:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5845:3:30"},"nodeType":"YulFunctionCall","src":"5845:12:30"}],"functionName":{"name":"abi_encode_t_uint8","nodeType":"YulIdentifier","src":"5809:18:30"},"nodeType":"YulFunctionCall","src":"5809:49:30"},"nodeType":"YulExpressionStatement","src":"5809:49:30"}]},"name":"abi_encode_t_struct$_ReserveData","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4289:5:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4296:3:30","type":""}],"src":"4247:1617:30"},{"body":{"nodeType":"YulBlock","src":"5915:75:30","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5932:3:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5941:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"5948:34:30","type":"","value":"0xffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5937:3:30"},"nodeType":"YulFunctionCall","src":"5937:46:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5925:6:30"},"nodeType":"YulFunctionCall","src":"5925:59:30"},"nodeType":"YulExpressionStatement","src":"5925:59:30"}]},"name":"abi_encode_t_uint128","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5899:5:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5906:3:30","type":""}],"src":"5869:121:30"},{"body":{"nodeType":"YulBlock","src":"6040:53:30","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6057:3:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6066:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"6073:12:30","type":"","value":"0xffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6062:3:30"},"nodeType":"YulFunctionCall","src":"6062:24:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6050:6:30"},"nodeType":"YulFunctionCall","src":"6050:37:30"},"nodeType":"YulExpressionStatement","src":"6050:37:30"}]},"name":"abi_encode_t_uint40","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6024:5:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6031:3:30","type":""}],"src":"5995:98:30"},{"body":{"nodeType":"YulBlock","src":"6142:33:30","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6151:3:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6160:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"6167:4:30","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6156:3:30"},"nodeType":"YulFunctionCall","src":"6156:16:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6144:6:30"},"nodeType":"YulFunctionCall","src":"6144:29:30"},"nodeType":"YulExpressionStatement","src":"6144:29:30"}]},"name":"abi_encode_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6126:5:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6133:3:30","type":""}],"src":"6098:77:30"},{"body":{"nodeType":"YulBlock","src":"6281:102:30","statements":[{"nodeType":"YulAssignment","src":"6291:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6303:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"6314:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6299:3:30"},"nodeType":"YulFunctionCall","src":"6299:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6291:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6333:9:30"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6348:6:30"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6364:3:30","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"6369:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6360:3:30"},"nodeType":"YulFunctionCall","src":"6360:11:30"},{"kind":"number","nodeType":"YulLiteral","src":"6373:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6356:3:30"},"nodeType":"YulFunctionCall","src":"6356:19:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6344:3:30"},"nodeType":"YulFunctionCall","src":"6344:32:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6326:6:30"},"nodeType":"YulFunctionCall","src":"6326:51:30"},"nodeType":"YulExpressionStatement","src":"6326:51:30"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6250:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6261:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6272:4:30","type":""}],"src":"6180:203:30"},{"body":{"nodeType":"YulBlock","src":"6513:156:30","statements":[{"nodeType":"YulAssignment","src":"6523:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6535:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"6546:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6531:3:30"},"nodeType":"YulFunctionCall","src":"6531:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6523:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6565:9:30"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6580:6:30"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6596:3:30","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"6601:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6592:3:30"},"nodeType":"YulFunctionCall","src":"6592:11:30"},{"kind":"number","nodeType":"YulLiteral","src":"6605:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6588:3:30"},"nodeType":"YulFunctionCall","src":"6588:19:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6576:3:30"},"nodeType":"YulFunctionCall","src":"6576:32:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6558:6:30"},"nodeType":"YulFunctionCall","src":"6558:51:30"},"nodeType":"YulExpressionStatement","src":"6558:51:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6629:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"6640:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6625:3:30"},"nodeType":"YulFunctionCall","src":"6625:18:30"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6649:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"6657:4:30","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6645:3:30"},"nodeType":"YulFunctionCall","src":"6645:17:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6618:6:30"},"nodeType":"YulFunctionCall","src":"6618:45:30"},"nodeType":"YulExpressionStatement","src":"6618:45:30"}]},"name":"abi_encode_tuple_t_address_t_uint8__to_t_address_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6474:9:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6485:6:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6493:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6504:4:30","type":""}],"src":"6388:281:30"},{"body":{"nodeType":"YulBlock","src":"6875:1377:30","statements":[{"nodeType":"YulVariableDeclaration","src":"6885:12:30","value":{"kind":"number","nodeType":"YulLiteral","src":"6895:2:30","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6889:2:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6906:32:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6924:9:30"},{"name":"_1","nodeType":"YulIdentifier","src":"6935:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6920:3:30"},"nodeType":"YulFunctionCall","src":"6920:18:30"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"6910:6:30","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6954:9:30"},{"name":"_1","nodeType":"YulIdentifier","src":"6965:2:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6947:6:30"},"nodeType":"YulFunctionCall","src":"6947:21:30"},"nodeType":"YulExpressionStatement","src":"6947:21:30"},{"nodeType":"YulVariableDeclaration","src":"6977:17:30","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"6988:6:30"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"6981:3:30","type":""}]},{"nodeType":"YulAssignment","src":"7003:13:30","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"7010:6:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7003:3:30"}]},{"nodeType":"YulVariableDeclaration","src":"7025:33:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7043:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"7054:3:30","type":"","value":"736"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7039:3:30"},"nodeType":"YulFunctionCall","src":"7039:19:30"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"7029:6:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7067:20:30","value":{"name":"value0","nodeType":"YulIdentifier","src":"7081:6:30"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"7071:6:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7096:13:30","value":{"name":"tail","nodeType":"YulIdentifier","src":"7105:4:30"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7100:1:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"7165:1058:30","statements":[{"nodeType":"YulVariableDeclaration","src":"7179:17:30","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7193:2:30","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7189:3:30"},"nodeType":"YulFunctionCall","src":"7189:7:30"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"7183:2:30","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7216:3:30"},{"arguments":[{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"7229:6:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"7237:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7225:3:30"},"nodeType":"YulFunctionCall","src":"7225:22:30"},{"name":"_2","nodeType":"YulIdentifier","src":"7249:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7221:3:30"},"nodeType":"YulFunctionCall","src":"7221:31:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7209:6:30"},"nodeType":"YulFunctionCall","src":"7209:44:30"},"nodeType":"YulExpressionStatement","src":"7209:44:30"},{"nodeType":"YulVariableDeclaration","src":"7266:23:30","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7282:6:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7276:5:30"},"nodeType":"YulFunctionCall","src":"7276:13:30"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"7270:2:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7302:16:30","value":{"kind":"number","nodeType":"YulLiteral","src":"7312:6:30","type":"","value":"0x0240"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"7306:2:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7331:29:30","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"7357:2:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7351:5:30"},"nodeType":"YulFunctionCall","src":"7351:9:30"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"7335:12:30","type":""}]},{"expression":{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"7380:6:30"},{"name":"_4","nodeType":"YulIdentifier","src":"7388:2:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7373:6:30"},"nodeType":"YulFunctionCall","src":"7373:18:30"},"nodeType":"YulExpressionStatement","src":"7373:18:30"},{"nodeType":"YulVariableDeclaration","src":"7404:33:30","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"7424:12:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7418:5:30"},"nodeType":"YulFunctionCall","src":"7418:19:30"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7408:6:30","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"7461:6:30"},{"name":"_4","nodeType":"YulIdentifier","src":"7469:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7457:3:30"},"nodeType":"YulFunctionCall","src":"7457:15:30"},{"name":"length","nodeType":"YulIdentifier","src":"7474:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7450:6:30"},"nodeType":"YulFunctionCall","src":"7450:31:30"},"nodeType":"YulExpressionStatement","src":"7450:31:30"},{"nodeType":"YulVariableDeclaration","src":"7494:15:30","value":{"name":"tail","nodeType":"YulIdentifier","src":"7505:4:30"},"variables":[{"name":"i_1","nodeType":"YulTypedName","src":"7498:3:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"7582:106:30","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"7615:6:30"},{"name":"i_1","nodeType":"YulIdentifier","src":"7623:3:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7611:3:30"},"nodeType":"YulFunctionCall","src":"7611:16:30"},{"kind":"number","nodeType":"YulLiteral","src":"7629:3:30","type":"","value":"608"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7607:3:30"},"nodeType":"YulFunctionCall","src":"7607:26:30"},{"arguments":[{"arguments":[{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"7649:12:30"},{"name":"i_1","nodeType":"YulIdentifier","src":"7663:3:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7645:3:30"},"nodeType":"YulFunctionCall","src":"7645:22:30"},{"name":"_1","nodeType":"YulIdentifier","src":"7669:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7641:3:30"},"nodeType":"YulFunctionCall","src":"7641:31:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7635:5:30"},"nodeType":"YulFunctionCall","src":"7635:38:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7600:6:30"},"nodeType":"YulFunctionCall","src":"7600:74:30"},"nodeType":"YulExpressionStatement","src":"7600:74:30"}]},"condition":{"arguments":[{"name":"i_1","nodeType":"YulIdentifier","src":"7533:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"7538:6:30"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7530:2:30"},"nodeType":"YulFunctionCall","src":"7530:15:30"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7546:23:30","statements":[{"nodeType":"YulAssignment","src":"7548:19:30","value":{"arguments":[{"name":"i_1","nodeType":"YulIdentifier","src":"7559:3:30"},{"name":"_1","nodeType":"YulIdentifier","src":"7564:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7555:3:30"},"nodeType":"YulFunctionCall","src":"7555:12:30"},"variableNames":[{"name":"i_1","nodeType":"YulIdentifier","src":"7548:3:30"}]}]},"pre":{"nodeType":"YulBlock","src":"7526:3:30","statements":[]},"src":"7522:166:30"},{"body":{"nodeType":"YulBlock","src":"7732:75:30","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"7765:6:30"},{"name":"length","nodeType":"YulIdentifier","src":"7773:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7761:3:30"},"nodeType":"YulFunctionCall","src":"7761:19:30"},{"kind":"number","nodeType":"YulLiteral","src":"7782:3:30","type":"","value":"608"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7757:3:30"},"nodeType":"YulFunctionCall","src":"7757:29:30"},{"name":"tail","nodeType":"YulIdentifier","src":"7788:4:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7750:6:30"},"nodeType":"YulFunctionCall","src":"7750:43:30"},"nodeType":"YulExpressionStatement","src":"7750:43:30"}]},"condition":{"arguments":[{"name":"i_1","nodeType":"YulIdentifier","src":"7707:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"7712:6:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7704:2:30"},"nodeType":"YulFunctionCall","src":"7704:15:30"},"nodeType":"YulIf","src":"7701:2:30"},{"nodeType":"YulVariableDeclaration","src":"7820:40:30","value":{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"7852:2:30"},{"name":"_1","nodeType":"YulIdentifier","src":"7856:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7848:3:30"},"nodeType":"YulFunctionCall","src":"7848:11:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7842:5:30"},"nodeType":"YulFunctionCall","src":"7842:18:30"},"variables":[{"name":"memberValue0_1","nodeType":"YulTypedName","src":"7824:14:30","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_1","nodeType":"YulIdentifier","src":"7906:14:30"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"7926:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"7934:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7922:3:30"},"nodeType":"YulFunctionCall","src":"7922:15:30"}],"functionName":{"name":"abi_encode_t_struct$_ReserveData","nodeType":"YulIdentifier","src":"7873:32:30"},"nodeType":"YulFunctionCall","src":"7873:65:30"},"nodeType":"YulExpressionStatement","src":"7873:65:30"},{"nodeType":"YulVariableDeclaration","src":"7951:42:30","value":{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"7983:2:30"},{"kind":"number","nodeType":"YulLiteral","src":"7987:4:30","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7979:3:30"},"nodeType":"YulFunctionCall","src":"7979:13:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7973:5:30"},"nodeType":"YulFunctionCall","src":"7973:20:30"},"variables":[{"name":"memberValue0_2","nodeType":"YulTypedName","src":"7955:14:30","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_2","nodeType":"YulIdentifier","src":"8037:14:30"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"8057:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"8065:6:30","type":"","value":"0x01c0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8053:3:30"},"nodeType":"YulFunctionCall","src":"8053:19:30"}],"functionName":{"name":"abi_encode_t_struct$_AssetData","nodeType":"YulIdentifier","src":"8006:30:30"},"nodeType":"YulFunctionCall","src":"8006:67:30"},"nodeType":"YulExpressionStatement","src":"8006:67:30"},{"nodeType":"YulAssignment","src":"8086:57:30","value":{"arguments":[{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"8104:6:30"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8120:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"8128:2:30","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8116:3:30"},"nodeType":"YulFunctionCall","src":"8116:15:30"},{"name":"_2","nodeType":"YulIdentifier","src":"8133:2:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8112:3:30"},"nodeType":"YulFunctionCall","src":"8112:24:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8100:3:30"},"nodeType":"YulFunctionCall","src":"8100:37:30"},{"kind":"number","nodeType":"YulLiteral","src":"8139:3:30","type":"","value":"608"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8096:3:30"},"nodeType":"YulFunctionCall","src":"8096:47:30"},"variableNames":[{"name":"tail_2","nodeType":"YulIdentifier","src":"8086:6:30"}]},{"nodeType":"YulAssignment","src":"8156:25:30","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8170:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"8178:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8166:3:30"},"nodeType":"YulFunctionCall","src":"8166:15:30"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8156:6:30"}]},{"nodeType":"YulAssignment","src":"8194:19:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8205:3:30"},{"name":"_1","nodeType":"YulIdentifier","src":"8210:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8201:3:30"},"nodeType":"YulFunctionCall","src":"8201:12:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8194:3:30"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7129:1:30"},{"kind":"number","nodeType":"YulLiteral","src":"7132:4:30","type":"","value":"0x16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7126:2:30"},"nodeType":"YulFunctionCall","src":"7126:11:30"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7138:18:30","statements":[{"nodeType":"YulAssignment","src":"7140:14:30","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7149:1:30"},{"kind":"number","nodeType":"YulLiteral","src":"7152:1:30","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7145:3:30"},"nodeType":"YulFunctionCall","src":"7145:9:30"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7140:1:30"}]}]},"pre":{"nodeType":"YulBlock","src":"7122:3:30","statements":[]},"src":"7118:1105:30"},{"nodeType":"YulAssignment","src":"8232:14:30","value":{"name":"tail_2","nodeType":"YulIdentifier","src":"8240:6:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8232:4:30"}]}]},"name":"abi_encode_tuple_t_array$_t_struct$_TokenData_$421_memory_ptr_$22_memory_ptr__to_t_array$_t_struct$_TokenData_$421_memory_ptr_$22_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6844:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6855:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6866:4:30","type":""}],"src":"6674:1578:30"},{"body":{"nodeType":"YulBlock","src":"8301:304:30","statements":[{"nodeType":"YulAssignment","src":"8311:19:30","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8327:2:30","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8321:5:30"},"nodeType":"YulFunctionCall","src":"8321:9:30"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8311:6:30"}]},{"nodeType":"YulVariableDeclaration","src":"8339:35:30","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8361:6:30"},{"name":"size","nodeType":"YulIdentifier","src":"8369:4:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8357:3:30"},"nodeType":"YulFunctionCall","src":"8357:17:30"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"8343:10:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"8457:111:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8478:1:30","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8485:3:30","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"8490:10:30","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8481:3:30"},"nodeType":"YulFunctionCall","src":"8481:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8471:6:30"},"nodeType":"YulFunctionCall","src":"8471:31:30"},"nodeType":"YulExpressionStatement","src":"8471:31:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8522:1:30","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8525:4:30","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8515:6:30"},"nodeType":"YulFunctionCall","src":"8515:15:30"},"nodeType":"YulExpressionStatement","src":"8515:15:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8550:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8553:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8543:6:30"},"nodeType":"YulFunctionCall","src":"8543:15:30"},"nodeType":"YulExpressionStatement","src":"8543:15:30"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"8392:10:30"},{"kind":"number","nodeType":"YulLiteral","src":"8404:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8389:2:30"},"nodeType":"YulFunctionCall","src":"8389:34:30"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"8428:10:30"},{"name":"memPtr","nodeType":"YulIdentifier","src":"8440:6:30"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8425:2:30"},"nodeType":"YulFunctionCall","src":"8425:22:30"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"8386:2:30"},"nodeType":"YulFunctionCall","src":"8386:62:30"},"nodeType":"YulIf","src":"8383:2:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8584:2:30","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"8588:10:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8577:6:30"},"nodeType":"YulFunctionCall","src":"8577:22:30"},"nodeType":"YulExpressionStatement","src":"8577:22:30"}]},"name":"allocateMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"8281:4:30","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"8290:6:30","type":""}],"src":"8257:348:30"},{"body":{"nodeType":"YulBlock","src":"8655:231:30","statements":[{"nodeType":"YulVariableDeclaration","src":"8665:31:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8684:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"8691:4:30","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8680:3:30"},"nodeType":"YulFunctionCall","src":"8680:16:30"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"8669:7:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"8734:115:30","statements":[{"expression":{"arguments":[{"name":"ret","nodeType":"YulIdentifier","src":"8755:3:30"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8764:3:30","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"8769:10:30","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8760:3:30"},"nodeType":"YulFunctionCall","src":"8760:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8748:6:30"},"nodeType":"YulFunctionCall","src":"8748:33:30"},"nodeType":"YulExpressionStatement","src":"8748:33:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8801:1:30","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8804:4:30","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8794:6:30"},"nodeType":"YulFunctionCall","src":"8794:15:30"},"nodeType":"YulExpressionStatement","src":"8794:15:30"},{"expression":{"arguments":[{"name":"ret","nodeType":"YulIdentifier","src":"8829:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"8834:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8822:6:30"},"nodeType":"YulFunctionCall","src":"8822:17:30"},"nodeType":"YulExpressionStatement","src":"8822:17:30"}]},"condition":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"8711:7:30"},{"kind":"number","nodeType":"YulLiteral","src":"8720:4:30","type":"","value":"0xff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8708:2:30"},"nodeType":"YulFunctionCall","src":"8708:17:30"},"nodeType":"YulIf","src":"8705:2:30"},{"nodeType":"YulAssignment","src":"8858:22:30","value":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"8869:7:30"},{"kind":"number","nodeType":"YulLiteral","src":"8878:1:30","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8865:3:30"},"nodeType":"YulFunctionCall","src":"8865:15:30"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"8858:3:30"}]}]},"name":"increment_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8637:5:30","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"8647:3:30","type":""}],"src":"8610:276:30"}]},"contents":"{\n    { }\n    function abi_decode_t_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_t_bool_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_t_struct$_ReserveConfigurationMap_fromMemory(headStart, end) -> value\n    {\n        if slt(sub(end, headStart), 0x20) { revert(value, value) }\n        value := allocateMemory(0x20)\n        mstore(value, mload(headStart))\n    }\n    function abi_decode_t_uint128_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_t_uint40_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_t_uint8_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address_fromMemory(headStart)\n    }\n    function abi_decode_tuple_t_struct$_AssetData_$4082_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value0, value0) }\n        let value := allocateMemory(128)\n        mstore(value, abi_decode_t_uint8_fromMemory(headStart))\n        mstore(add(value, 32), abi_decode_t_bool_fromMemory(add(headStart, 32)))\n        mstore(add(value, 64), abi_decode_t_bool_fromMemory(add(headStart, 64)))\n        let value_1 := mload(add(headStart, 96))\n        if iszero(lt(value_1, 2)) { revert(value0, value0) }\n        mstore(add(value, 96), value_1)\n        value0 := value\n    }\n    function abi_decode_tuple_t_struct$_ReserveData_$4115_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 416\n        if slt(sub(dataEnd, headStart), _1) { revert(value0, value0) }\n        let value := allocateMemory(_1)\n        mstore(value, abi_decode_t_struct$_ReserveConfigurationMap_fromMemory(headStart, dataEnd))\n        mstore(add(value, 32), abi_decode_t_uint128_fromMemory(add(headStart, 32)))\n        mstore(add(value, 64), abi_decode_t_uint128_fromMemory(add(headStart, 64)))\n        mstore(add(value, 96), abi_decode_t_uint128_fromMemory(add(headStart, 96)))\n        mstore(add(value, 128), abi_decode_t_uint128_fromMemory(add(headStart, 128)))\n        mstore(add(value, 160), abi_decode_t_uint128_fromMemory(add(headStart, 160)))\n        mstore(add(value, 192), abi_decode_t_uint40_fromMemory(add(headStart, 192)))\n        mstore(add(value, 224), abi_decode_t_address_fromMemory(add(headStart, 224)))\n        let _2 := 256\n        mstore(add(value, _2), abi_decode_t_address_fromMemory(add(headStart, _2)))\n        let _3 := 288\n        mstore(add(value, _3), abi_decode_t_address_fromMemory(add(headStart, _3)))\n        let _4 := 320\n        mstore(add(value, _4), abi_decode_t_address_fromMemory(add(headStart, _4)))\n        let _5 := 352\n        mstore(add(value, _5), abi_decode_t_uint8_fromMemory(add(headStart, _5)))\n        let _6 := 384\n        mstore(add(value, _6), abi_decode_t_uint8_fromMemory(add(headStart, _6)))\n        value0 := value\n    }\n    function abi_encode_t_address(value, pos)\n    {\n        mstore(pos, and(value, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_t_struct$_AssetData(value, pos)\n    {\n        mstore(pos, and(mload(value), 0xff))\n        mstore(add(pos, 0x20), iszero(iszero(mload(add(value, 0x20)))))\n        mstore(add(pos, 0x40), iszero(iszero(mload(add(value, 0x40)))))\n        let memberValue0 := mload(add(value, 0x60))\n        if iszero(lt(memberValue0, 2))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(add(pos, 0x60), memberValue0)\n    }\n    function abi_encode_t_struct$_ReserveConfigurationMap(value, pos)\n    { mstore(pos, mload(value)) }\n    function abi_encode_t_struct$_ReserveData(value, pos)\n    {\n        abi_encode_t_struct$_ReserveConfigurationMap(mload(value), pos)\n        let memberValue0 := mload(add(value, 0x20))\n        abi_encode_t_uint128(memberValue0, add(pos, 0x20))\n        let memberValue0_1 := mload(add(value, 0x40))\n        abi_encode_t_uint128(memberValue0_1, add(pos, 0x40))\n        let memberValue0_2 := mload(add(value, 0x60))\n        abi_encode_t_uint128(memberValue0_2, add(pos, 0x60))\n        let memberValue0_3 := mload(add(value, 0x80))\n        abi_encode_t_uint128(memberValue0_3, add(pos, 0x80))\n        let memberValue0_4 := mload(add(value, 0xa0))\n        abi_encode_t_uint128(memberValue0_4, add(pos, 0xa0))\n        let memberValue0_5 := mload(add(value, 0xc0))\n        abi_encode_t_uint40(memberValue0_5, add(pos, 0xc0))\n        let memberValue0_6 := mload(add(value, 0xe0))\n        abi_encode_t_address(memberValue0_6, add(pos, 0xe0))\n        let _1 := 0x0100\n        let memberValue0_7 := mload(add(value, _1))\n        abi_encode_t_address(memberValue0_7, add(pos, _1))\n        let _2 := 0x0120\n        let memberValue0_8 := mload(add(value, _2))\n        abi_encode_t_address(memberValue0_8, add(pos, _2))\n        let _3 := 0x0140\n        let memberValue0_9 := mload(add(value, _3))\n        abi_encode_t_address(memberValue0_9, add(pos, _3))\n        let _4 := 0x0160\n        let memberValue0_10 := mload(add(value, _4))\n        abi_encode_t_uint8(memberValue0_10, add(pos, _4))\n        let _5 := 0x0180\n        let memberValue0_11 := mload(add(value, _5))\n        abi_encode_t_uint8(memberValue0_11, add(pos, _5))\n    }\n    function abi_encode_t_uint128(value, pos)\n    {\n        mstore(pos, and(value, 0xffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_t_uint40(value, pos)\n    {\n        mstore(pos, and(value, 0xffffffffff))\n    }\n    function abi_encode_t_uint8(value, pos)\n    { mstore(pos, and(value, 0xff)) }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint8__to_t_address_t_uint8__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, 0xff))\n    }\n    function abi_encode_tuple_t_array$_t_struct$_TokenData_$421_memory_ptr_$22_memory_ptr__to_t_array$_t_struct$_TokenData_$421_memory_ptr_$22_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        pos := tail_1\n        let tail_2 := add(headStart, 736)\n        let srcPtr := value0\n        let i := tail\n        for { } lt(i, 0x16) { i := add(i, 1) }\n        {\n            let _2 := not(31)\n            mstore(pos, add(sub(tail_2, headStart), _2))\n            let _3 := mload(srcPtr)\n            let _4 := 0x0240\n            let memberValue0 := mload(_3)\n            mstore(tail_2, _4)\n            let length := mload(memberValue0)\n            mstore(add(tail_2, _4), length)\n            let i_1 := tail\n            for { } lt(i_1, length) { i_1 := add(i_1, _1) }\n            {\n                mstore(add(add(tail_2, i_1), 608), mload(add(add(memberValue0, i_1), _1)))\n            }\n            if gt(i_1, length)\n            {\n                mstore(add(add(tail_2, length), 608), tail)\n            }\n            let memberValue0_1 := mload(add(_3, _1))\n            abi_encode_t_struct$_ReserveData(memberValue0_1, add(tail_2, _1))\n            let memberValue0_2 := mload(add(_3, 0x40))\n            abi_encode_t_struct$_AssetData(memberValue0_2, add(tail_2, 0x01c0))\n            tail_2 := add(add(tail_2, and(add(length, 31), _2)), 608)\n            srcPtr := add(srcPtr, _1)\n            pos := add(pos, _1)\n        }\n        tail := tail_2\n    }\n    function allocateMemory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        mstore(64, newFreePtr)\n    }\n    function increment_t_uint8(value) -> ret\n    {\n        let value_1 := and(value, 0xff)\n        if eq(value_1, 0xff)\n        {\n            mstore(ret, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(ret, 0x24)\n        }\n        ret := add(value_1, 1)\n    }\n}","id":30,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061002b5760003560e01c806315dae03e14610030575b600080fd5b61003861004e565b6040516100459190610cca565b60405180910390f35b6100566107bb565b90565b6100616107bb565b600061006b6102d8565b90506000610077610533565b90506000856001600160a01b0316630261bf8b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156100b457600080fd5b505afa1580156100c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ec9190610997565b90506100f66107bb565b60005b60168160ff1610156102cd5760006040518060600160405280868460ff166016811061013557634e487b7160e01b600052603260045260246000fd5b60200201518152602001856001600160a01b0316633629e3cd898660ff166016811061017157634e487b7160e01b600052603260045260246000fd5b60200201518c6040518363ffffffff1660e01b8152600401610194929190610cae565b6101a06040518083038186803b1580156101ad57600080fd5b505afa1580156101c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e59190610a1d565b8152602001856001600160a01b0316631652e7b7898660ff166016811061021c57634e487b7160e01b600052603260045260246000fd5b60200201516040518263ffffffff1660e01b815260040161023d9190610c9a565b60806040518083038186803b15801561025557600080fd5b505afa158015610269573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028d91906109b8565b90529050808360ff8416601681106102b557634e487b7160e01b600052603260045260246000fd5b602002015250806102c581610dc3565b9150506100f9565b509695505050505050565b6102e06107e9565b50604080516102c081018252737fc66500c84a76ad7e9c93437bfc5ac33e2ddae98152730d8775f648430679a709e98d2b0cb6250d2887ef6020820152734fabb145d64652a948d72533023f6e7a623c7c5391810191909152736b175474e89094c44da98b954eedeac495271d0f606082015273f629cbd94d3791c9250152bd8dfbdf380e2a3b9c608082015273dd974d5c2e2928dea5f71b9825b8b646686bd20060a082015273514910771af9ca656af840dff83e8264ecf986ca60c0820152730f5d2fb29fb7d3cfee444a200298f468908cc94260e0820152739f8f72aa9304c8b593d555f12ef6589cc3a579a261010082015273408e41876cccdc0f92210600ef50372656052a3861012082015273c011a73ee8576fb46f5e1c5751ca3b9fe0af2a6f6101408201527357ab1ec28d129707052df4df418d58a2d46d5f516101608201526e085d4780b73119b644ae5ecd22b376610180820152731f9840a85d5af5bf1d1762f925bdaddc4201f9846101a082015273a0b86991c6218b36c1d19d4a2e9eb0ce3606eb486101c082015273dac17f958d2ee523a2206206994597c13d831ec76101e0820152732260fac5e5542a773aa44fbcfedf7c193bc2c59961020082015273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2610220820152730bc529c00c6401aef6d220be8c6ea1667f6ad93e61024082015273e41d2489571d322189246dafa5ebde1f4699f498610260820152738798249c2e607446efb7ad49ec89dd1865ff427261028082015273c4ad29ba4b3c580e6d59105fff484999997675ff6102a082015290565b61053b610808565b50604080516103008101825260046102c08201818152634141564560e01b6102e084015282528251808401845260038082526210905560ea1b602083810191909152808501929092528451808601865283815263109554d160e21b8184015284860152845180860186528181526244414960e81b818401526060850152845180860186528181526222a72560e91b81840152608085015284518086018652818152624b4e4360e81b8184015260a085015284518086018652838152634c494e4b60e01b8184015260c085015284518086018652838152634d414e4160e01b8184015260e0850152845180860186528181526226a5a960e91b8184015261010085015284518086018652818152622922a760e91b8184015261012085015284518086018652818152620a69cb60eb1b81840152610140850152845180860186528381526314d554d160e21b818401526101608501528451808601865283815263151554d160e21b818401526101808501528451808601865281815262554e4960e81b818401526101a085015284518086018652838152635553444360e01b818401526101c085015284518086018652838152631554d11560e21b818401526101e085015284518086018652838152635742544360e01b8184015261020085015284518086018652928352630ae8aa8960e31b83830152610220840192909252835180850185528281526259464960e81b8183015261024084015283518085018552918252620b4a4b60eb1b8282015261026083019190915282518084018452600681526578535553484960d01b818301526102808301528251808401909352600a8352696372763363727970746f60b01b908301526102a081019190915290565b604051806102c001604052806016905b6107d3610830565b8152602001906001900390816107cb5790505090565b604051806102c001604052806016906020820280368337509192915050565b604051806102c001604052806016905b60608152602001906001900390816108185790505090565b60405180606001604052806060815260200161084a61085c565b81526020016108576108cf565b905290565b604051806101a001604052806108706108f6565b815260006020820181905260408201819052606082018190526080820181905260a0820181905260c0820181905260e0820181905261010082018190526101208201819052610140820181905261016082018190526101809091015290565b60408051608081018252600080825260208201819052918101829052906060820190610857565b6040518060200160405280600081525090565b80516001600160a01b038116811461092057600080fd5b919050565b8051801515811461092057600080fd5b600060208284031215610946578081fd5b6109506020610d8b565b9151825250919050565b80516001600160801b038116811461092057600080fd5b805164ffffffffff8116811461092057600080fd5b805160ff8116811461092057600080fd5b6000602082840312156109a8578081fd5b6109b182610909565b9392505050565b6000608082840312156109c9578081fd5b6109d36080610d8b565b6109dc83610986565b81526109ea60208401610925565b60208201526109fb60408401610925565b6040820152606083015160028110610a11578283fd5b60608201529392505050565b60006101a0808385031215610a30578182fd5b610a3981610d8b565b9050610a458484610935565b8152610a536020840161095a565b6020820152610a646040840161095a565b6040820152610a756060840161095a565b6060820152610a866080840161095a565b6080820152610a9760a0840161095a565b60a0820152610aa860c08401610971565b60c0820152610ab960e08401610909565b60e0820152610100610acc818501610909565b90820152610120610ade848201610909565b90820152610140610af0848201610909565b90820152610160610b02848201610986565b90820152610180610b14848201610986565b908201529392505050565b6001600160a01b03169052565b60ff8151168252602081015115156020830152604081015115156040830152606081015160028110610b6e57634e487b7160e01b600052602160045260246000fd5b806060840152505050565b519052565b610b89828251610b79565b6020810151610b9b6020840182610c7b565b506040810151610bae6040840182610c7b565b506060810151610bc16060840182610c7b565b506080810151610bd46080840182610c7b565b5060a0810151610be760a0840182610c7b565b5060c0810151610bfa60c0840182610c88565b5060e0810151610c0d60e0840182610b1f565b5061010080820151610c2182850182610b1f565b505061012080820151610c3682850182610b1f565b505061014080820151610c4b82850182610b1f565b505061016080820151610c6082850182610c93565b505061018080820151610c7582850182610c93565b50505050565b6001600160801b03169052565b64ffffffffff169052565b60ff169052565b6001600160a01b0391909116815260200190565b6001600160a01b0392909216825260ff16602082015260400190565b60208082526000906102e0830183820185845b6016811015610d7f57601f198088860301845282516102408151818852805180838a01528a92505b80831015610d24578183018a0151898401610260015291890191610d05565b80831115610d36578a610260828b0101525b898401519250610d488a8a0184610b7e565b60408401519350610d5d6101c08a0185610b2c565b601f019093169690960161026001955050509184019190840190600101610cdd565b50919695505050505050565b60405181810167ffffffffffffffff81118282101715610dbb57634e487b7160e01b600052604160045260246000fd5b604052919050565b600060ff821660ff811415610de657634e487b7160e01b82526011600452602482fd5b6001019291505056fea26469706673582212203bd4984a11251692136f91997773bedc48f40c95aaa7bd946bc279a517231eef64736f6c63430008000033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x15DAE03E EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45 SWAP2 SWAP1 PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x56 PUSH2 0x7BB JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x61 PUSH2 0x7BB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B PUSH2 0x2D8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x77 PUSH2 0x533 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x261BF8B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEC SWAP2 SWAP1 PUSH2 0x997 JUMP JUMPDEST SWAP1 POP PUSH2 0xF6 PUSH2 0x7BB JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x16 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x2CD JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP5 PUSH1 0xFF AND PUSH1 0x16 DUP2 LT PUSH2 0x135 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3629E3CD DUP10 DUP7 PUSH1 0xFF AND PUSH1 0x16 DUP2 LT PUSH2 0x171 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP13 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x194 SWAP3 SWAP2 SWAP1 PUSH2 0xCAE JUMP JUMPDEST PUSH2 0x1A0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0xA1D JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1652E7B7 DUP10 DUP7 PUSH1 0xFF AND PUSH1 0x16 DUP2 LT PUSH2 0x21C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC9A JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x269 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x9B8 JUMP JUMPDEST SWAP1 MSTORE SWAP1 POP DUP1 DUP4 PUSH1 0xFF DUP5 AND PUSH1 0x16 DUP2 LT PUSH2 0x2B5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MSTORE POP DUP1 PUSH2 0x2C5 DUP2 PUSH2 0xDC3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF9 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2E0 PUSH2 0x7E9 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH2 0x2C0 DUP2 ADD DUP3 MSTORE PUSH20 0x7FC66500C84A76AD7E9C93437BFC5AC33E2DDAE9 DUP2 MSTORE PUSH20 0xD8775F648430679A709E98D2B0CB6250D2887EF PUSH1 0x20 DUP3 ADD MSTORE PUSH20 0x4FABB145D64652A948D72533023F6E7A623C7C53 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F PUSH1 0x60 DUP3 ADD MSTORE PUSH20 0xF629CBD94D3791C9250152BD8DFBDF380E2A3B9C PUSH1 0x80 DUP3 ADD MSTORE PUSH20 0xDD974D5C2E2928DEA5F71B9825B8B646686BD200 PUSH1 0xA0 DUP3 ADD MSTORE PUSH20 0x514910771AF9CA656AF840DFF83E8264ECF986CA PUSH1 0xC0 DUP3 ADD MSTORE PUSH20 0xF5D2FB29FB7D3CFEE444A200298F468908CC942 PUSH1 0xE0 DUP3 ADD MSTORE PUSH20 0x9F8F72AA9304C8B593D555F12EF6589CC3A579A2 PUSH2 0x100 DUP3 ADD MSTORE PUSH20 0x408E41876CCCDC0F92210600EF50372656052A38 PUSH2 0x120 DUP3 ADD MSTORE PUSH20 0xC011A73EE8576FB46F5E1C5751CA3B9FE0AF2A6F PUSH2 0x140 DUP3 ADD MSTORE PUSH20 0x57AB1EC28D129707052DF4DF418D58A2D46D5F51 PUSH2 0x160 DUP3 ADD MSTORE PUSH15 0x85D4780B73119B644AE5ECD22B376 PUSH2 0x180 DUP3 ADD MSTORE PUSH20 0x1F9840A85D5AF5BF1D1762F925BDADDC4201F984 PUSH2 0x1A0 DUP3 ADD MSTORE PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 PUSH2 0x1C0 DUP3 ADD MSTORE PUSH20 0xDAC17F958D2EE523A2206206994597C13D831EC7 PUSH2 0x1E0 DUP3 ADD MSTORE PUSH20 0x2260FAC5E5542A773AA44FBCFEDF7C193BC2C599 PUSH2 0x200 DUP3 ADD MSTORE PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH2 0x220 DUP3 ADD MSTORE PUSH20 0xBC529C00C6401AEF6D220BE8C6EA1667F6AD93E PUSH2 0x240 DUP3 ADD MSTORE PUSH20 0xE41D2489571D322189246DAFA5EBDE1F4699F498 PUSH2 0x260 DUP3 ADD MSTORE PUSH20 0x8798249C2E607446EFB7AD49EC89DD1865FF4272 PUSH2 0x280 DUP3 ADD MSTORE PUSH20 0xC4AD29BA4B3C580E6D59105FFF484999997675FF PUSH2 0x2A0 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x53B PUSH2 0x808 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH2 0x300 DUP2 ADD DUP3 MSTORE PUSH1 0x4 PUSH2 0x2C0 DUP3 ADD DUP2 DUP2 MSTORE PUSH4 0x41415645 PUSH1 0xE0 SHL PUSH2 0x2E0 DUP5 ADD MSTORE DUP3 MSTORE DUP3 MLOAD DUP1 DUP5 ADD DUP5 MSTORE PUSH1 0x3 DUP1 DUP3 MSTORE PUSH3 0x109055 PUSH1 0xEA SHL PUSH1 0x20 DUP4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE DUP4 DUP2 MSTORE PUSH4 0x109554D1 PUSH1 0xE2 SHL DUP2 DUP5 ADD MSTORE DUP5 DUP7 ADD MSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE DUP2 DUP2 MSTORE PUSH3 0x444149 PUSH1 0xE8 SHL DUP2 DUP5 ADD MSTORE PUSH1 0x60 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE DUP2 DUP2 MSTORE PUSH3 0x22A725 PUSH1 0xE9 SHL DUP2 DUP5 ADD MSTORE PUSH1 0x80 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE DUP2 DUP2 MSTORE PUSH3 0x4B4E43 PUSH1 0xE8 SHL DUP2 DUP5 ADD MSTORE PUSH1 0xA0 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE DUP4 DUP2 MSTORE PUSH4 0x4C494E4B PUSH1 0xE0 SHL DUP2 DUP5 ADD MSTORE PUSH1 0xC0 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE DUP4 DUP2 MSTORE PUSH4 0x4D414E41 PUSH1 0xE0 SHL DUP2 DUP5 ADD MSTORE PUSH1 0xE0 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE DUP2 DUP2 MSTORE PUSH3 0x26A5A9 PUSH1 0xE9 SHL DUP2 DUP5 ADD MSTORE PUSH2 0x100 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE DUP2 DUP2 MSTORE PUSH3 0x2922A7 PUSH1 0xE9 SHL DUP2 DUP5 ADD MSTORE PUSH2 0x120 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE DUP2 DUP2 MSTORE PUSH3 0xA69CB PUSH1 0xEB SHL DUP2 DUP5 ADD MSTORE PUSH2 0x140 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE DUP4 DUP2 MSTORE PUSH4 0x14D554D1 PUSH1 0xE2 SHL DUP2 DUP5 ADD MSTORE PUSH2 0x160 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE DUP4 DUP2 MSTORE PUSH4 0x151554D1 PUSH1 0xE2 SHL DUP2 DUP5 ADD MSTORE PUSH2 0x180 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE DUP2 DUP2 MSTORE PUSH3 0x554E49 PUSH1 0xE8 SHL DUP2 DUP5 ADD MSTORE PUSH2 0x1A0 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE DUP4 DUP2 MSTORE PUSH4 0x55534443 PUSH1 0xE0 SHL DUP2 DUP5 ADD MSTORE PUSH2 0x1C0 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE DUP4 DUP2 MSTORE PUSH4 0x1554D115 PUSH1 0xE2 SHL DUP2 DUP5 ADD MSTORE PUSH2 0x1E0 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE DUP4 DUP2 MSTORE PUSH4 0x57425443 PUSH1 0xE0 SHL DUP2 DUP5 ADD MSTORE PUSH2 0x200 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE SWAP3 DUP4 MSTORE PUSH4 0xAE8AA89 PUSH1 0xE3 SHL DUP4 DUP4 ADD MSTORE PUSH2 0x220 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP4 MLOAD DUP1 DUP6 ADD DUP6 MSTORE DUP3 DUP2 MSTORE PUSH3 0x594649 PUSH1 0xE8 SHL DUP2 DUP4 ADD MSTORE PUSH2 0x240 DUP5 ADD MSTORE DUP4 MLOAD DUP1 DUP6 ADD DUP6 MSTORE SWAP2 DUP3 MSTORE PUSH3 0xB4A4B PUSH1 0xEB SHL DUP3 DUP3 ADD MSTORE PUSH2 0x260 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP5 ADD DUP5 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH6 0x785355534849 PUSH1 0xD0 SHL DUP2 DUP4 ADD MSTORE PUSH2 0x280 DUP4 ADD MSTORE DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE PUSH1 0xA DUP4 MSTORE PUSH10 0x6372763363727970746F PUSH1 0xB0 SHL SWAP1 DUP4 ADD MSTORE PUSH2 0x2A0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x2C0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x16 SWAP1 JUMPDEST PUSH2 0x7D3 PUSH2 0x830 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x7CB JUMPI SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x2C0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x16 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x2C0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x16 SWAP1 JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x818 JUMPI SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x84A PUSH2 0x85C JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x857 PUSH2 0x8CF JUMP JUMPDEST SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1A0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x870 PUSH2 0x8F6 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xC0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xE0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x100 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x120 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x140 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x160 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x180 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 PUSH1 0x60 DUP3 ADD SWAP1 PUSH2 0x857 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x920 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x920 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x946 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x950 PUSH1 0x20 PUSH2 0xD8B JUMP JUMPDEST SWAP2 MLOAD DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x920 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH5 0xFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x920 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x920 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9A8 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x9B1 DUP3 PUSH2 0x909 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9C9 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x9D3 PUSH1 0x80 PUSH2 0xD8B JUMP JUMPDEST PUSH2 0x9DC DUP4 PUSH2 0x986 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x9EA PUSH1 0x20 DUP5 ADD PUSH2 0x925 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x9FB PUSH1 0x40 DUP5 ADD PUSH2 0x925 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x2 DUP2 LT PUSH2 0xA11 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A0 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA30 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xA39 DUP2 PUSH2 0xD8B JUMP JUMPDEST SWAP1 POP PUSH2 0xA45 DUP5 DUP5 PUSH2 0x935 JUMP JUMPDEST DUP2 MSTORE PUSH2 0xA53 PUSH1 0x20 DUP5 ADD PUSH2 0x95A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xA64 PUSH1 0x40 DUP5 ADD PUSH2 0x95A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0xA75 PUSH1 0x60 DUP5 ADD PUSH2 0x95A JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0xA86 PUSH1 0x80 DUP5 ADD PUSH2 0x95A JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0xA97 PUSH1 0xA0 DUP5 ADD PUSH2 0x95A JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0xAA8 PUSH1 0xC0 DUP5 ADD PUSH2 0x971 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0xAB9 PUSH1 0xE0 DUP5 ADD PUSH2 0x909 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 PUSH2 0xACC DUP2 DUP6 ADD PUSH2 0x909 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x120 PUSH2 0xADE DUP5 DUP3 ADD PUSH2 0x909 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x140 PUSH2 0xAF0 DUP5 DUP3 ADD PUSH2 0x909 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x160 PUSH2 0xB02 DUP5 DUP3 ADD PUSH2 0x986 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x180 PUSH2 0xB14 DUP5 DUP3 ADD PUSH2 0x986 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0xFF DUP2 MLOAD AND DUP3 MSTORE PUSH1 0x20 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x2 DUP2 LT PUSH2 0xB6E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 PUSH1 0x60 DUP5 ADD MSTORE POP POP POP JUMP JUMPDEST MLOAD SWAP1 MSTORE JUMP JUMPDEST PUSH2 0xB89 DUP3 DUP3 MLOAD PUSH2 0xB79 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH2 0xB9B PUSH1 0x20 DUP5 ADD DUP3 PUSH2 0xC7B JUMP JUMPDEST POP PUSH1 0x40 DUP2 ADD MLOAD PUSH2 0xBAE PUSH1 0x40 DUP5 ADD DUP3 PUSH2 0xC7B JUMP JUMPDEST POP PUSH1 0x60 DUP2 ADD MLOAD PUSH2 0xBC1 PUSH1 0x60 DUP5 ADD DUP3 PUSH2 0xC7B JUMP JUMPDEST POP PUSH1 0x80 DUP2 ADD MLOAD PUSH2 0xBD4 PUSH1 0x80 DUP5 ADD DUP3 PUSH2 0xC7B JUMP JUMPDEST POP PUSH1 0xA0 DUP2 ADD MLOAD PUSH2 0xBE7 PUSH1 0xA0 DUP5 ADD DUP3 PUSH2 0xC7B JUMP JUMPDEST POP PUSH1 0xC0 DUP2 ADD MLOAD PUSH2 0xBFA PUSH1 0xC0 DUP5 ADD DUP3 PUSH2 0xC88 JUMP JUMPDEST POP PUSH1 0xE0 DUP2 ADD MLOAD PUSH2 0xC0D PUSH1 0xE0 DUP5 ADD DUP3 PUSH2 0xB1F JUMP JUMPDEST POP PUSH2 0x100 DUP1 DUP3 ADD MLOAD PUSH2 0xC21 DUP3 DUP6 ADD DUP3 PUSH2 0xB1F JUMP JUMPDEST POP POP PUSH2 0x120 DUP1 DUP3 ADD MLOAD PUSH2 0xC36 DUP3 DUP6 ADD DUP3 PUSH2 0xB1F JUMP JUMPDEST POP POP PUSH2 0x140 DUP1 DUP3 ADD MLOAD PUSH2 0xC4B DUP3 DUP6 ADD DUP3 PUSH2 0xB1F JUMP JUMPDEST POP POP PUSH2 0x160 DUP1 DUP3 ADD MLOAD PUSH2 0xC60 DUP3 DUP6 ADD DUP3 PUSH2 0xC93 JUMP JUMPDEST POP POP PUSH2 0x180 DUP1 DUP3 ADD MLOAD PUSH2 0xC75 DUP3 DUP6 ADD DUP3 PUSH2 0xC93 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH5 0xFFFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0xFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0xFF AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2E0 DUP4 ADD DUP4 DUP3 ADD DUP6 DUP5 JUMPDEST PUSH1 0x16 DUP2 LT ISZERO PUSH2 0xD7F JUMPI PUSH1 0x1F NOT DUP1 DUP9 DUP7 SUB ADD DUP5 MSTORE DUP3 MLOAD PUSH2 0x240 DUP2 MLOAD DUP2 DUP9 MSTORE DUP1 MLOAD DUP1 DUP4 DUP11 ADD MSTORE DUP11 SWAP3 POP JUMPDEST DUP1 DUP4 LT ISZERO PUSH2 0xD24 JUMPI DUP2 DUP4 ADD DUP11 ADD MLOAD DUP10 DUP5 ADD PUSH2 0x260 ADD MSTORE SWAP2 DUP10 ADD SWAP2 PUSH2 0xD05 JUMP JUMPDEST DUP1 DUP4 GT ISZERO PUSH2 0xD36 JUMPI DUP11 PUSH2 0x260 DUP3 DUP12 ADD ADD MSTORE JUMPDEST DUP10 DUP5 ADD MLOAD SWAP3 POP PUSH2 0xD48 DUP11 DUP11 ADD DUP5 PUSH2 0xB7E JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MLOAD SWAP4 POP PUSH2 0xD5D PUSH2 0x1C0 DUP11 ADD DUP6 PUSH2 0xB2C JUMP JUMPDEST PUSH1 0x1F ADD SWAP1 SWAP4 AND SWAP7 SWAP1 SWAP7 ADD PUSH2 0x260 ADD SWAP6 POP POP POP SWAP2 DUP5 ADD SWAP2 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xCDD JUMP JUMPDEST POP SWAP2 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xDBB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0xDE6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE 0xD4 SWAP9 0x4A GT 0x25 AND SWAP3 SGT PUSH16 0x91997773BEDC48F40C95AAA7BD946BC2 PUSH26 0xA517231EEF64736F6C6343000800003300000000000000000000 ","sourceMap":"487:430:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;851:64;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;891:20;;:::i;:::-;851:64;:::o;788:717:0:-;917:20;;:::i;:::-;949:25;977:17;:15;:17::i;:::-;949:45;;1004:23;1030:22;:20;:22::i;:::-;1004:48;;1062:24;1102:8;-1:-1:-1;;;;;1102:23:0;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1062:66;;1138:31;;:::i;:::-;1184:7;1179:292;1201:13;1197:1;:17;;;1179:292;;;1235:21;1259:166;;;;;;;;1286:5;1292:1;1286:8;;;;;;;-1:-1:-1;;;1286:8:0;;;;;;;;;;;;;1259:166;;;;1312:11;-1:-1:-1;;;;;1312:26:0;;1339:6;1346:1;1339:9;;;;;;;-1:-1:-1;;;1339:9:0;;;;;;;;;;;;;1350:7;1312:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1259:166;;;;1376:11;-1:-1:-1;;;;;1376:24:0;;1401:6;1408:1;1401:9;;;;;;;-1:-1:-1;;;1401:9:0;;;;;;;;;;;;;1376:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1259:166;;1235:190;-1:-1:-1;1235:190:0;1440:10;:13;;;;;;;;-1:-1:-1;;;1440:13:0;;;;;;;;;;;;:20;-1:-1:-1;1216:3:0;;;;:::i;:::-;;;;1179:292;;;-1:-1:-1;1488:10:0;788:717;-1:-1:-1;;;;;;788:717:0:o;87:1370:1:-;127:18;;:::i;:::-;-1:-1:-1;157:1270:1;;;;;;;;199:42;157:1270;;255:42;157:1270;;;;311:42;157:1270;;;;;;;367:42;157:1270;;;;423:42;157:1270;;;;479:42;157:1270;;;;535:42;157:1270;;;;591:42;157:1270;;;;647:42;157:1270;;;;703:42;157:1270;;;;759:42;157:1270;;;;815:42;157:1270;;;;871:42;157:1270;;;;927:42;157:1270;;;;983:42;157:1270;;;;1039:42;157:1270;;;;1095:42;157:1270;;;;1151:42;157:1270;;;;1207:42;157:1270;;;;1263:42;157:1270;;;;1319:42;157:1270;;;;1375:42;157:1270;;;;87:1370;:::o;1463:575::-;1508:17;;:::i;:::-;-1:-1:-1;1537:473:1;;;;;;;;;;;;;;;-1:-1:-1;;;1537:473:1;;;;;;;;;;;;;;;;;-1:-1:-1;;;1537:473:1;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1537:473:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1537:473:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1537:473:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1537:473:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1537:473:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1537:473:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1537:473:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1537:473:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1537:473:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1537:473:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1537:473:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1537:473:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1537:473:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1537:473:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1537:473:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1537:473:1;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1537:473:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1537:473:1;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1537:473:1;;;;-1:-1:-1;;;1537:473:1;;;;;;;;;;;;-1:-1:-1;;;1537:473:1;;;;-1:-1:-1;;;1537:473:1;;;;1463:575;:::o;-1:-1:-1:-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:179:30:-;95:13;;-1:-1:-1;;;;;137:31:30;;127:42;;117:2;;183:1;180;173:12;117:2;76:117;;;:::o;198:166::-;276:13;;325;;318:21;308:32;;298:2;;354:1;351;344:12;369:246;;501:4;489:9;484:3;480:19;476:30;473:2;;;523:5;516;509:20;473:2;549:20;564:4;549:20;:::i;:::-;592:16;;578:31;;-1:-1:-1;540:29:30;463:152;-1:-1:-1;463:152:30:o;620:194::-;701:13;;-1:-1:-1;;;;;743:46:30;;733:57;;723:2;;804:1;801;794:12;819:171;899:13;;952:12;941:24;;931:35;;921:2;;980:1;977;970:12;995:162;1074:13;;1127:4;1116:16;;1106:27;;1096:2;;1147:1;1144;1137:12;1162:220;;1285:2;1273:9;1264:7;1260:23;1256:32;1253:2;;;1306:6;1298;1291:22;1253:2;1334:42;1366:9;1334:42;:::i;:::-;1324:52;1243:139;-1:-1:-1;;;1243:139:30:o;1387:628::-;;1537:3;1525:9;1516:7;1512:23;1508:33;1505:2;;;1559:6;1551;1544:22;1505:2;1590:19;1605:3;1590:19;:::i;:::-;1632:40;1662:9;1632:40;:::i;:::-;1625:5;1618:55;1705:48;1749:2;1738:9;1734:18;1705:48;:::i;:::-;1700:2;1693:5;1689:14;1682:72;1786:48;1830:2;1819:9;1815:18;1786:48;:::i;:::-;1781:2;1774:5;1770:14;1763:72;1880:2;1869:9;1865:18;1859:25;1915:1;1906:7;1903:14;1893:2;;1936:6;1928;1921:22;1893:2;1972;1961:14;;1954:31;1965:5;1495:520;-1:-1:-1;;;1495:520:30:o;2020:1494::-;;2150:3;2194:2;2182:9;2173:7;2169:23;2165:32;2162:2;;;2215:6;2207;2200:22;2162:2;2246:18;2261:2;2246:18;:::i;:::-;2233:31;;2287:75;2354:7;2343:9;2287:75;:::i;:::-;2280:5;2273:90;2395:51;2442:2;2431:9;2427:18;2395:51;:::i;:::-;2390:2;2383:5;2379:14;2372:75;2479:51;2526:2;2515:9;2511:18;2479:51;:::i;:::-;2474:2;2467:5;2463:14;2456:75;2563:51;2610:2;2599:9;2595:18;2563:51;:::i;:::-;2558:2;2551:5;2547:14;2540:75;2648:52;2695:3;2684:9;2680:19;2648:52;:::i;:::-;2642:3;2635:5;2631:15;2624:77;2734:52;2781:3;2770:9;2766:19;2734:52;:::i;:::-;2728:3;2721:5;2717:15;2710:77;2820:51;2866:3;2855:9;2851:19;2820:51;:::i;:::-;2814:3;2807:5;2803:15;2796:76;2905:52;2952:3;2941:9;2937:19;2905:52;:::i;:::-;2899:3;2892:5;2888:15;2881:77;2977:3;3012:51;3059:2;3048:9;3044:18;3012:51;:::i;:::-;2996:14;;;2989:75;3083:3;3118:51;3150:18;;;3118:51;:::i;:::-;3102:14;;;3095:75;3189:3;3224:51;3256:18;;;3224:51;:::i;:::-;3208:14;;;3201:75;3295:3;3330:49;3360:18;;;3330:49;:::i;:::-;3314:14;;;3307:73;3399:3;3434:49;3464:18;;;3434:49;:::i;:::-;3418:14;;;3411:73;3422:5;2130:1384;-1:-1:-1;;;2130:1384:30:o;3519:106::-;-1:-1:-1;;;;;3587:31:30;3575:44;;3565:60::o;3630:508::-;3726:4;3718:5;3712:12;3708:23;3703:3;3696:36;3795:4;3788:5;3784:16;3778:23;3771:31;3764:39;3757:4;3752:3;3748:14;3741:63;3867:4;3860:5;3856:16;3850:23;3843:31;3836:39;3829:4;3824:3;3820:14;3813:63;3922:4;3915:5;3911:16;3905:23;3964:1;3950:12;3947:19;3937:2;;4009:10;4004:3;4000:20;3997:1;3990:31;4044:4;4041:1;4034:15;4072:4;4069:1;4062:15;3937:2;4119:12;4112:4;4107:3;4103:14;4096:36;;3686:452;;:::o;4143:99::-;4227:12;4215:25;;4213:29::o;4247:1617::-;4315:63;4374:3;4366:5;4360:12;4315:63;:::i;:::-;4424:4;4417:5;4413:16;4407:23;4439:50;4483:4;4478:3;4474:14;4460:12;4439:50;:::i;:::-;;4537:4;4530:5;4526:16;4520:23;4552:52;4598:4;4593:3;4589:14;4573;4552:52;:::i;:::-;;4652:4;4645:5;4641:16;4635:23;4667:52;4713:4;4708:3;4704:14;4688;4667:52;:::i;:::-;;4767:4;4760:5;4756:16;4750:23;4782:52;4828:4;4823:3;4819:14;4803;4782:52;:::i;:::-;;4882:4;4875:5;4871:16;4865:23;4897:52;4943:4;4938:3;4934:14;4918;4897:52;:::i;:::-;;4997:4;4990:5;4986:16;4980:23;5012:51;5057:4;5052:3;5048:14;5032;5012:51;:::i;:::-;;5111:4;5104:5;5100:16;5094:23;5126:52;5172:4;5167:3;5163:14;5147;5126:52;:::i;:::-;;5197:6;5251:2;5244:5;5240:14;5234:21;5264:50;5310:2;5305:3;5301:12;5285:14;5264:50;:::i;:::-;;;5333:6;5387:2;5380:5;5376:14;5370:21;5400:50;5446:2;5441:3;5437:12;5421:14;5400:50;:::i;:::-;;;5469:6;5523:2;5516:5;5512:14;5506:21;5536:50;5582:2;5577:3;5573:12;5557:14;5536:50;:::i;:::-;;;5605:6;5660:2;5653:5;5649:14;5643:21;5673:49;5718:2;5713:3;5709:12;5692:15;5673:49;:::i;:::-;;;5741:6;5796:2;5789:5;5785:14;5779:21;5809:49;5854:2;5849:3;5845:12;5828:15;5809:49;:::i;:::-;;;4305:1559;;:::o;5869:121::-;-1:-1:-1;;;;;5937:46:30;5925:59;;5915:75::o;5995:98::-;6073:12;6062:24;6050:37;;6040:53::o;6098:77::-;6167:4;6156:16;6144:29;;6142:33::o;6180:203::-;-1:-1:-1;;;;;6344:32:30;;;;6326:51;;6314:2;6299:18;;6281:102::o;6388:281::-;-1:-1:-1;;;;;6576:32:30;;;;6558:51;;6657:4;6645:17;6640:2;6625:18;;6618:45;6546:2;6531:18;;6513:156::o;6674:1578::-;6895:2;6947:21;;;6674:1578;;7054:3;7039:19;;6920:18;;;7081:6;6674:1578;7118:1105;7132:4;7129:1;7126:11;7118:1105;;;7193:2;7189:7;7249:2;7237:9;7229:6;7225:22;7221:31;7216:3;7209:44;7282:6;7276:13;7312:6;7357:2;7351:9;7388:2;7380:6;7373:18;7424:12;7418:19;7474:6;7469:2;7461:6;7457:15;7450:31;7505:4;7494:15;;7522:166;7538:6;7533:3;7530:15;7522:166;;;7645:22;;;7641:31;;7635:38;7611:16;;;7629:3;7607:26;7600:74;7555:12;;;;7522:166;;;7712:6;7707:3;7704:15;7701:2;;;7788:4;7782:3;7773:6;7765;7761:19;7757:29;7750:43;7701:2;7856;7852;7848:11;7842:18;7820:40;;7873:65;7934:2;7926:6;7922:15;7906:14;7873:65;:::i;:::-;7987:4;7983:2;7979:13;7973:20;7951:42;;8006:67;8065:6;8057;8053:19;8037:14;8006:67;:::i;:::-;8128:2;8116:15;8112:24;;;8100:37;;;;8139:3;8096:47;;-1:-1:-1;;;8201:12:30;;;;8166:15;;;;7152:1;7145:9;7118:1105;;;-1:-1:-1;8240:6:30;;6875:1377;-1:-1:-1;;;;;;6875:1377:30:o;8257:348::-;8327:2;8321:9;8357:17;;;8404:18;8389:34;;8425:22;;;8386:62;8383:2;;;8490:10;8485:3;8481:20;8478:1;8471:31;8525:4;8522:1;8515:15;8553:4;8550:1;8543:15;8383:2;8584;8577:22;8301:304;;-1:-1:-1;8301:304:30:o;8610:276::-;;8691:4;8684:5;8680:16;8720:4;8711:7;8708:17;8705:2;;;-1:-1:-1;;;8748:33:30;;8804:4;8801:1;8794:15;8834:4;8755:3;8822:17;8705:2;8878:1;8865:15;;8655:231;-1:-1:-1;;8655:231:30:o"},"gasEstimates":{"creation":{"codeDepositCost":"724200","executionCost":"infinite","totalCost":"infinite"},"external":{"getType()":"infinite"}},"methodIdentifiers":{"getType()":"15dae03e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"tranche\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getType\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.ReserveConfigurationMap\",\"name\":\"configuration\",\"type\":\"tuple\"},{\"internalType\":\"uint128\",\"name\":\"liquidityIndex\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"variableBorrowIndex\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentLiquidityRate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentVariableBorrowRate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentStableBorrowRate\",\"type\":\"uint128\"},{\"internalType\":\"uint40\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint40\"},{\"internalType\":\"address\",\"name\":\"aTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stableDebtTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"variableDebtTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"interestRateStrategyAddress\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"tranche\",\"type\":\"uint8\"}],\"internalType\":\"struct DataTypes.ReserveData\",\"name\":\"reserveData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"collateralRisk\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isLendable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isAllowedCollateralInHigherTranches\",\"type\":\"bool\"},{\"internalType\":\"enum DataTypes.ReserveAssetType\",\"name\":\"assetType\",\"type\":\"uint8\"}],\"internalType\":\"struct DataTypes.AssetData\",\"name\":\"assetData\",\"type\":\"tuple\"}],\"internalType\":\"struct TokenData[22]\",\"name\":\"\",\"type\":\"tuple[22]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/analytics/queries/getTokenReserveData.sol\":\"getTokenReserveData\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/analytics/libraries/AnalyticsUtilities.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\nimport {ILendingPool} from \\\"../../interfaces/ILendingPool.sol\\\";\\nimport {DataTypes} from \\\"../../protocol/libraries/types/DataTypes.sol\\\";\\nimport {Constants} from \\\"./Constants.sol\\\";\\nimport {UserBalances, UserAccountData, AggregatedData, TokenReserveData} from \\\"../types/AnalyticsDataTypes.sol\\\";\\nimport {IChainlinkAggregator} from \\\"../../interfaces/IChainlinkAggregator.sol\\\";\\nimport {IERC20Detailed} from \\\"../../dependencies/openzeppelin/contracts/IERC20Detailed.sol\\\";\\nimport {ILendingPoolAddressesProvider} from \\\"../../interfaces/ILendingPoolAddressesProvider.sol\\\";\\nimport {IAaveOracle} from \\\"../../misc/interfaces/IAaveOracle.sol\\\";\\nimport {AggregateData, TokenData} from \\\"../types/Tokens.sol\\\";\\n\\nlibrary AnalyticsUtilities {\\n    function getTokenReserveData(\\n        ILendingPoolAddressesProvider provider,\\n        uint8 tranche\\n    ) internal view returns (TokenData[22] memory) {\\n        address[22] memory tokens = Constants.token();\\n        string[22] memory names = Constants.tokenNames();\\n        ILendingPool lendingPool = ILendingPool(provider.getLendingPool());\\n        TokenData[22] memory returnData;\\n        for (uint8 i = 0; i < tokens.length; i++) {\\n            TokenData memory data = TokenData(\\n                names[i],\\n                lendingPool.getReserveData(tokens[i], tranche),\\n                lendingPool.getAssetData(tokens[i])\\n            );\\n\\n            returnData[i] = data;\\n        }\\n\\n        return returnData;\\n    }\\n\\n    // function getUserTokenInfo(ILendingPoolAddressProvider provider, uint8 tranche, address user)\\n    //     internal\\n    //     view\\n    //     returns (memory)\\n    // {\\n\\n    // }\\n}\\n\",\"keccak256\":\"0xd15236a372e7d7e99f3ef430617a86071742cba6afaf988405113f74994bceb6\",\"license\":\"agpl-3.0\"},\"contracts/analytics/libraries/Constants.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\nlibrary Constants {\\n    function token() internal pure returns (address[22] memory) {\\n        address[22] memory tokens = [\\n            0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9,\\n            0x0D8775F648430679A709E98d2b0Cb6250d2887EF,\\n            0x4Fabb145d64652a948d72533023f6E7A623C7C53,\\n            0x6B175474E89094C44Da98b954EedeAC495271d0F,\\n            0xF629cBd94d3791C9250152BD8dfBDF380E2a3B9c,\\n            0xdd974D5C2e2928deA5F71b9825b8b646686BD200,\\n            0x514910771AF9Ca656af840dff83E8264EcF986CA,\\n            0x0F5D2fB29fb7d3CFeE444a200298f468908cC942,\\n            0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2,\\n            0x408e41876cCCDC0F92210600ef50372656052a38,\\n            0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F,\\n            0x57Ab1ec28D129707052df4dF418D58a2D46d5f51,\\n            0x0000000000085d4780B73119b644AE5ecd22b376,\\n            0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984,\\n            0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48,\\n            0xdAC17F958D2ee523a2206206994597C13D831ec7,\\n            0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599,\\n            0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2,\\n            0x0bc529c00C6401aEF6D220BE8C6Ea1667F6Ad93e,\\n            0xE41d2489571d322189246DaFA5ebDe1F4699F498,\\n            0x8798249c2E607446EfB7Ad49eC89dD1865Ff4272,\\n            0xc4AD29ba4B3c580e6D59105FFf484999997675Ff\\n        ];\\n        return tokens;\\n    }\\n\\n    function tokenNames() internal pure returns (string[22] memory) {\\n        string[22] memory data = [\\n            \\\"AAVE\\\",\\n            \\\"BAT\\\",\\n            \\\"BUSD\\\",\\n            \\\"DAI\\\",\\n            \\\"ENJ\\\",\\n            \\\"KNC\\\",\\n            \\\"LINK\\\",\\n            \\\"MANA\\\",\\n            \\\"MKR\\\",\\n            \\\"REN\\\",\\n            \\\"SNX\\\",\\n            \\\"SUSD\\\",\\n            \\\"TUSD\\\",\\n            \\\"UNI\\\",\\n            \\\"USDC\\\",\\n            \\\"USDT\\\",\\n            \\\"WBTC\\\",\\n            \\\"WETH\\\",\\n            \\\"YFI\\\",\\n            \\\"ZRX\\\",\\n            \\\"xSUSHI\\\",\\n            \\\"crv3crypto\\\"\\n        ];\\n        return data;\\n    }\\n\\n    function ETHPriceOracles() internal pure returns (address[20] memory) {\\n        address[20] memory data = [\\n            0x6Df09E975c830ECae5bd4eD9d90f3A95a4f88012,\\n            0x0d16d4528239e9ee52fa531af613AcdB23D88c94,\\n            0x614715d2Af89E6EC99A233818275142cE88d1Cfd,\\n            0x773616E4d11A78F511299002da57A0a94577F1f4,\\n            0x24D9aB51950F3d62E9144fdC2f3135DAA6Ce8D1B,\\n            0x656c0544eF4C98A6a98491833A89204Abb045d6b,\\n            0xDC530D9457755926550b59e8ECcdaE7624181557,\\n            0x82A44D92D6c329826dc557c5E1Be6ebeC5D5FeB9,\\n            0x24551a8Fb2A7211A25a17B1481f043A8a8adC7f2,\\n            0x3147D7203354Dc06D9fd350c7a2437bcA92387a4,\\n            0x79291A9d692Df95334B1a0B3B4AE6bC606782f8c,\\n            0x8e0b7e6062272B5eF4524250bFFF8e5Bd3497757,\\n            0x3886BA987236181D98F2401c507Fb8BeA7871dF2,\\n            0xD6aA3D25116d8dA79Ea0246c4826EB951872e02e,\\n            0x986b5E1e1755e3C2440e960477f25201B0a8bbD4,\\n            0xEe9F2375b4bdF6387aa8265dD4FB8F16512A1d46,\\n            0xdeb288F737066589598e9214E782fa5A8eD689e8,\\n            0x7c5d4F8345e66f68099581Db340cd65B078C41f4,\\n            0x2Da4983a622a8498bb1a21FaE9D8F6C664939962,\\n            0x9b26214bEC078E68a394AaEbfbffF406Ce14893F\\n        ];\\n        return data;\\n    }\\n\\n    function USDPriceOracles() internal pure returns (address[20] memory) {\\n        address[20] memory data = [\\n            0x547a514d5e3769680Ce22B2361c10Ea13619e8a9,\\n            0x9441D7556e7820B5ca42082cfa99487D56AcA958,\\n            0x833D8Eb16D306ed1FbB5D7A2E019e106B960965A,\\n            0xAed0c38402a5d19df6E4c03F4E2DceD6e29c1ee9,\\n            0x23905C55dC11D609D5d11Dc604905779545De9a7,\\n            0xf8fF43E991A81e6eC886a3D281A2C6cC19aE70Fc,\\n            0x2c1d072e956AFFC0D435Cb7AC38EF18d24d9127c,\\n            0x56a4857acbcfe3a66965c251628B1c9f1c408C19,\\n            0xec1D1B3b0443256cc3860e24a46F108e699484Aa,\\n            0x0f59666EDE214281e956cb3b2D0d69415AfF4A01,\\n            0xDC3EA94CD0AC27d9A86C180091e7f78C683d3699,\\n            0xad35Bd71b9aFE6e4bDc266B345c198eaDEf9Ad94,\\n            0xec746eCF986E2927Abd291a2A1716c940100f8Ba,\\n            0x553303d460EE0afB37EdFf9bE42922D8FF63220e,\\n            0x8fFfFfd4AfB6115b954Bd326cbe7B4BA576818f6,\\n            0x3E7d1eAB13ad0104d2750B8863b489D65364e32D,\\n            0xF4030086522a5bEEa4988F8cA5B36dbC97BeE88c,\\n            0xA027702dbb89fbd58938e4324ac03B58d812b0E1,\\n            0x2885d15b8Af22648b98B122b22FDF4D2a56c6023,\\n            0xCC1f5d9e6956447630d703C8e93b2345c2DE3D13\\n        ];\\n        return data;\\n    }\\n}\\n\",\"keccak256\":\"0x123c0091e94a75d68fb035a3d99df846e07a16ed1c1e7836d3192e0981a9c7e9\",\"license\":\"agpl-3.0\"},\"contracts/analytics/queries/getTokenReserveData.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\nimport {AnalyticsUtilities} from \\\"../libraries/AnalyticsUtilities.sol\\\";\\nimport {Constants} from \\\"../libraries/Constants.sol\\\";\\nimport {IUiPoolDataProviderV2} from \\\"../../misc/interfaces/IUiPoolDataProviderV2.sol\\\";\\nimport {ILendingPoolAddressesProvider} from \\\"../../interfaces/ILendingPoolAddressesProvider.sol\\\";\\nimport {TokenReserveData} from \\\"../types/AnalyticsDataTypes.sol\\\";\\nimport {TokenData} from \\\"../types/Tokens.sol\\\";\\n\\ncontract getTokenReserveData {\\n    constructor(address pool, uint8 tranche) {\\n        TokenData[22] memory returnData = AnalyticsUtilities\\n            .getTokenReserveData(ILendingPoolAddressesProvider(pool), tranche);\\n\\n        bytes memory _data = abi.encode(returnData);\\n        assembly {\\n            return(add(0x20, _data), mload(_data))\\n        }\\n    }\\n\\n    function getType() public view returns (TokenData[22] memory) {}\\n}\\n\",\"keccak256\":\"0x249c4903d2c1839ebe63017e988a96424e6e6ebe93e1398558488797bd78cd50\",\"license\":\"agpl-3.0\"},\"contracts/analytics/types/AnalyticsDataTypes.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\nstruct UserBalances {\\n    int256[20] ethBalances;\\n    int256[20] usdBalances;\\n    uint256[20] userBalance;\\n    string[20] tokenNames;\\n}\\n\\nstruct UserAccountData {\\n    uint256 totalCollateralETH;\\n    uint256 totalDebtETH;\\n    uint256 availableBorrowsETH;\\n    uint256 currentLiquidationThreshold;\\n    uint256 ltv;\\n    uint256 healthFactor;\\n}\\n\\nstruct TokenReserveData {\\n    uint128 liquidityIndex;\\n    uint128 variableBorrowIndex;\\n    uint128 currentLiquidityRate;\\n    uint128 currentVariableBorrowRate;\\n    uint128 currentStableBorrowRate;\\n    uint40 lastUpdateTimestamp;\\n    address aTokenAddress;\\n    address stableDebtTokenAddress;\\n    address variableDebtTokenAddress;\\n    address interestRateStrategyAddress;\\n    uint8 id;\\n    uint8 tranche;\\n}\\n\\nstruct ApiDataType {\\n    UserBalances userBalances;\\n    UserAccountData[3] userTrancheData;\\n    address[] reserveList;\\n    // TokenReserveData[20] tokenReserveData;\\n}\\n\\nstruct AggregatedData {\\n    TokenReserveData[] reserveData;\\n}\\n\",\"keccak256\":\"0x16b9f59fc56a31c120610d16250b0232ecff62c8e4f045703ef700594fceb124\",\"license\":\"agpl-3.0\"},\"contracts/analytics/types/Tokens.sol\":{\"content\":\"// SPDX-License-Identifier: agpl 3.0\\npragma solidity >=0.8.0;\\nimport {DataTypes} from \\\"../../protocol/libraries/types/DataTypes.sol\\\";\\n\\nstruct TokenInfo {\\n    string[] names;\\n}\\n\\nstruct TokenData {\\n    string symbol;\\n    DataTypes.ReserveData reserveData;\\n    DataTypes.AssetData assetData;\\n}\\n\\nstruct AggregateData {\\n    TokenData[] data;\\n}\\n\",\"keccak256\":\"0x8bf842c82006e032efdb1c5dcb94cb295e76dc94ea5fce1fbf2398de5940f782\",\"license\":\"agpl 3.0\"},\"contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount)\\n        external\\n        returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n}\\n\",\"keccak256\":\"0x6a0e7bdec11b28b6b88f25301cd51477bd0025846062465a158eee1144f10bd3\",\"license\":\"agpl-3.0\"},\"contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\n\\ninterface IERC20Detailed is IERC20 {\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x2d62cd546d91ce26b0ddbb8900bfb02f41d7fb225423374ef51a54841f3ddd1c\",\"license\":\"agpl-3.0\"},\"contracts/interfaces/IChainlinkAggregator.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\ninterface IChainlinkAggregator {\\n    function decimals() external view returns (uint8);\\n\\n    function latestAnswer() external view returns (int256);\\n\\n    function latestTimestamp() external view returns (uint256);\\n\\n    function latestRound() external view returns (uint256);\\n\\n    function getAnswer(uint256 roundId) external view returns (int256);\\n\\n    function getTimestamp(uint256 roundId) external view returns (uint256);\\n\\n    event AnswerUpdated(\\n        int256 indexed current,\\n        uint256 indexed roundId,\\n        uint256 timestamp\\n    );\\n    event NewRound(uint256 indexed roundId, address indexed startedBy);\\n}\\n\",\"keccak256\":\"0xe9b6c1724de16518dadf10284718004691a351a25b5348b81867f5ec58f67642\",\"license\":\"agpl-3.0\"},\"contracts/interfaces/ILendingPool.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\nimport {ILendingPoolAddressesProvider} from \\\"./ILendingPoolAddressesProvider.sol\\\";\\nimport {DataTypes} from \\\"../protocol/libraries/types/DataTypes.sol\\\";\\n\\ninterface ILendingPool {\\n    /**\\n     * @dev Emitted on deposit()\\n     * @param reserve The address of the underlying asset of the reserve\\n     * @param user The address initiating the deposit\\n     * @param onBehalfOf The beneficiary of the deposit, receiving the aTokens\\n     * @param amount The amount deposited\\n     * @param referral The referral code used\\n     **/\\n    event Deposit(\\n        address indexed reserve,\\n        uint8 tranche,\\n        address user,\\n        address indexed onBehalfOf,\\n        uint256 amount,\\n        uint16 indexed referral\\n    );\\n\\n    /**\\n     * @dev Emitted on withdraw()\\n     * @param reserve The address of the underlyng asset being withdrawn\\n     * @param user The address initiating the withdrawal, owner of aTokens\\n     * @param to Address that will receive the underlying\\n     * @param amount The amount to be withdrawn\\n     **/\\n    event Withdraw(\\n        address indexed reserve,\\n        address indexed user,\\n        address indexed to,\\n        uint256 amount\\n    );\\n\\n    /**\\n     * @dev Emitted on repay()\\n     * @param reserve The address of the underlying asset of the reserve\\n     * @param user The beneficiary of the repayment, getting his debt reduced\\n     * @param repayer The address of the user initiating the repay(), providing the funds\\n     * @param amount The amount repaid\\n     **/\\n    event Repay(\\n        address indexed reserve,\\n        address indexed user,\\n        address indexed repayer,\\n        uint256 amount\\n    );\\n\\n    /**\\n     * @dev Emitted on swapBorrowRateMode()\\n     * @param reserve The address of the underlying asset of the reserve\\n     * @param user The address of the user swapping his rate mode\\n     * @param rateMode The rate mode that the user wants to swap to\\n     **/\\n    event Swap(address indexed reserve, address indexed user, uint256 rateMode);\\n\\n    /**\\n     * @dev Emitted on setUserUseReserveAsCollateral()\\n     * @param reserve The address of the underlying asset of the reserve\\n     * @param user The address of the user enabling the usage as collateral\\n     **/\\n    event ReserveUsedAsCollateralEnabled(\\n        address indexed reserve,\\n        address indexed user\\n    );\\n\\n    /**\\n     * @dev Emitted on setUserUseReserveAsCollateral()\\n     * @param reserve The address of the underlying asset of the reserve\\n     * @param user The address of the user enabling the usage as collateral\\n     **/\\n    event ReserveUsedAsCollateralDisabled(\\n        address indexed reserve,\\n        address indexed user\\n    );\\n\\n    /**\\n     * @dev Emitted on rebalanceStableBorrowRate()\\n     * @param reserve The address of the underlying asset of the reserve\\n     * @param user The address of the user for which the rebalance has been executed\\n     **/\\n    event RebalanceStableBorrowRate(\\n        address indexed reserve,\\n        address indexed user\\n    );\\n\\n    /**\\n     * @dev Emitted on flashLoan()\\n     * @param target The address of the flash loan receiver contract\\n     * @param initiator The address initiating the flash loan\\n     * @param asset The address of the asset being flash borrowed\\n     * @param amount The amount flash borrowed\\n     * @param premium The fee flash borrowed\\n     * @param referralCode The referral code used\\n     **/\\n    event FlashLoan(\\n        address indexed target,\\n        address indexed initiator,\\n        address indexed asset,\\n        uint256 amount,\\n        uint256 premium,\\n        uint16 referralCode\\n    );\\n\\n    /**\\n     * @dev Emitted when the pause is triggered.\\n     */\\n    event Paused();\\n\\n    /**\\n     * @dev Emitted when the pause is lifted.\\n     */\\n    event Unpaused();\\n\\n    /**\\n     * @dev Emitted when a borrower is liquidated. This event is emitted by the LendingPool via\\n     * LendingPoolCollateral manager using a DELEGATECALL\\n     * This allows to have the events in the generated ABI for LendingPool.\\n     * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\\n     * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\\n     * @param user The address of the borrower getting liquidated\\n     * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\\n     * @param liquidatedCollateralAmount The amount of collateral received by the liiquidator\\n     * @param liquidator The address of the liquidator\\n     * @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\\n     * to receive the underlying collateral asset directly\\n     **/\\n    event LiquidationCall(\\n        address indexed collateralAsset,\\n        address indexed debtAsset,\\n        address indexed user,\\n        uint256 debtToCover,\\n        uint256 liquidatedCollateralAmount,\\n        address liquidator,\\n        bool receiveAToken\\n    );\\n\\n    /**\\n     * @dev Emitted when the state of a reserve is updated. NOTE: This event is actually declared\\n     * in the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal,\\n     * the event will actually be fired by the LendingPool contract. The event is therefore replicated here so it\\n     * gets added to the LendingPool ABI\\n     * @param reserve The address of the underlying asset of the reserve\\n     * @param liquidityRate The new liquidity rate\\n     * @param stableBorrowRate The new stable borrow rate\\n     * @param variableBorrowRate The new variable borrow rate\\n     * @param liquidityIndex The new liquidity index\\n     * @param variableBorrowIndex The new variable borrow index\\n     **/\\n    event ReserveDataUpdated(\\n        address indexed reserve,\\n        uint256 liquidityRate,\\n        uint256 stableBorrowRate,\\n        uint256 variableBorrowRate,\\n        uint256 liquidityIndex,\\n        uint256 variableBorrowIndex\\n    );\\n\\n    /**\\n     * @dev Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\\n     * - E.g. User deposits 100 USDC and gets in return 100 aUSDC\\n     * @param asset The address of the underlying asset to deposit\\n     * @param amount The amount to be deposited\\n     * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\\n     *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\\n     *   is a different wallet\\n     * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\\n     *   0 if the action is executed directly by the user, without any middle-man\\n     **/\\n    function deposit(\\n        address asset,\\n        uint8 tranche,\\n        bool isCollateral,\\n        uint256 amount,\\n        address onBehalfOf,\\n        uint16 referralCode\\n    ) external;\\n\\n    /**\\n     * @dev Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned\\n     * E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\\n     * @param asset The address of the underlying asset to withdraw\\n     * @param amount The underlying amount to be withdrawn\\n     *   - Send the value type(uint256).max in order to withdraw the whole aToken balance\\n     * @param to Address that will receive the underlying, same as msg.sender if the user\\n     *   wants to receive it on his own wallet, or a different address if the beneficiary is a\\n     *   different wallet\\n     * @return The final amount withdrawn\\n     **/\\n    function withdraw(\\n        address asset,\\n        uint8 tranche,\\n        uint256 amount,\\n        address to\\n    ) external returns (uint256);\\n\\n    /**\\n     * @dev Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower\\n     * already deposited enough collateral, or he was given enough allowance by a credit delegator on the\\n     * corresponding debt token (StableDebtToken or VariableDebtToken)\\n     * - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet\\n     *   and 100 stable/variable debt tokens, depending on the `interestRateMode`\\n     * @param asset The address of the underlying asset to borrow\\n     * @param amount The amount to be borrowed\\n     * @param interestRateMode The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\\n     * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\\n     *   0 if the action is executed directly by the user, without any middle-man\\n     * @param onBehalfOf Address of the user who will receive the debt. Should be the address of the borrower itself\\n     * calling the function if he wants to borrow against his own collateral, or the address of the credit delegator\\n     * if he has been given credit delegation allowance\\n     **/\\n    function borrow(\\n        address asset,\\n        uint8 tranche,\\n        uint256 amount,\\n        uint256 interestRateMode,\\n        uint16 referralCode,\\n        address onBehalfOf\\n    ) external;\\n\\n    /**\\n     * @notice Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned\\n     * - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\\n     * @param asset The address of the borrowed underlying asset previously borrowed\\n     * @param amount The amount to repay\\n     * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\\n     * @param rateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\\n     * @param onBehalfOf Address of the user who will get his debt reduced/removed. Should be the address of the\\n     * user calling the function if he wants to reduce/remove his own debt, or the address of any other\\n     * other borrower whose debt should be removed\\n     * @return The final amount repaid\\n     **/\\n    function repay(\\n        address asset,\\n        uint8 tranche,\\n        uint256 amount,\\n        uint256 rateMode,\\n        address onBehalfOf\\n    ) external returns (uint256);\\n\\n    /**\\n     * @dev Allows a borrower to swap his debt between stable and variable mode, or viceversa\\n     * @param asset The address of the underlying asset borrowed\\n     * @param rateMode The rate mode that the user wants to swap to\\n     **/\\n    function swapBorrowRateMode(\\n        address asset,\\n        uint8 tranche,\\n        uint256 rateMode\\n    ) external;\\n\\n    /**\\n     * @dev Rebalances the stable interest rate of a user to the current stable rate defined on the reserve.\\n     * - Users can be rebalanced if the following conditions are satisfied:\\n     *     1. Usage ratio is above 95%\\n     *     2. the current deposit APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been\\n     *        borrowed at a stable rate and depositors are not earning enough\\n     * @param asset The address of the underlying asset borrowed\\n     * @param user The address of the user to be rebalanced\\n     **/\\n    function rebalanceStableBorrowRate(\\n        address asset,\\n        uint8 tranche,\\n        address user\\n    ) external;\\n\\n    /**\\n     * @dev Allows depositors to enable/disable a specific deposited asset as collateral\\n     * @param asset The address of the underlying asset deposited\\n     * @param useAsCollateral `true` if the user wants to use the deposit as collateral, `false` otherwise\\n     **/\\n    function setUserUseReserveAsCollateral(\\n        address asset,\\n        uint8 tranche,\\n        bool useAsCollateral\\n    ) external;\\n\\n    /**\\n     * @dev Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1\\n     * - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives\\n     *   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\\n     * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\\n     * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\\n     * @param user The address of the borrower getting liquidated\\n     * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\\n     * @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\\n     * to receive the underlying collateral asset directly\\n     **/\\n    function liquidationCall(\\n        address collateralAsset,\\n        address debtAsset,\\n        uint8 tranche,\\n        address user,\\n        uint256 debtToCover,\\n        bool receiveAToken\\n    ) external;\\n\\n    /**\\n     * @dev Allows smartcontracts to access the liquidity of the pool within one transaction,\\n     * as long as the amount taken plus a fee is returned.\\n     * IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration.\\n     * For further details please visit https://developers.aave.com\\n     * @param receiverAddress The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface\\n     * @param assets The addresses of the assets being flash-borrowed\\n     * @param amounts The amounts amounts being flash-borrowed\\n     * @param modes Types of the debt to open if the flash loan is not returned:\\n     *   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver\\n     *   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\\n     *   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\\n     * @param onBehalfOf The address  that will receive the debt in the case of using on `modes` 1 or 2\\n     * @param params Variadic packed params to pass to the receiver as extra information\\n     * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\\n     *   0 if the action is executed directly by the user, without any middle-man\\n     **/\\n    function flashLoan(\\n        address receiverAddress,\\n        DataTypes.TrancheAddress[] calldata assets,\\n        uint256[] calldata amounts,\\n        uint256[] calldata modes,\\n        address onBehalfOf,\\n        bytes calldata params,\\n        uint16 referralCode\\n    ) external;\\n\\n    /**\\n     * @dev Returns the user account data across all the reserves\\n     * @param user The address of the user\\n     * @return totalCollateralETH the total collateral in ETH of the user\\n     * @return totalDebtETH the total debt in ETH of the user\\n     * @return availableBorrowsETH the borrowing power left of the user\\n     * @return currentLiquidationThreshold the liquidation threshold of the user\\n     * @return ltv the loan to value of the user\\n     * @return healthFactor the current health factor of the user\\n     **/\\n    function getUserAccountData(address user, uint8 tranche)\\n        external\\n        view\\n        returns (\\n            uint256 totalCollateralETH,\\n            uint256 totalDebtETH,\\n            uint256 availableBorrowsETH,\\n            uint256 currentLiquidationThreshold,\\n            uint256 ltv,\\n            uint256 healthFactor\\n        );\\n\\n    function initReserve(\\n        address reserve,\\n        address aTokenAddress,\\n        address stableDebtAddress,\\n        address variableDebtAddress,\\n        address interestRateStrategyAddress,\\n        uint8 tranche\\n    ) external;\\n\\n    /**\\n     * @dev Updates the address of the interest rate strategy contract\\n     * - Only callable by the LendingPoolConfigurator contract\\n     * @param asset The address of the underlying asset of the reserve\\n     * @param _risk The risk of the asset\\n     **/\\n    function setAssetData(\\n        address asset,\\n        uint8 _risk,\\n        bool _isLendable,\\n        bool _allowedHigherTranche,\\n        uint8 _assetType\\n    ) external;\\n\\n    function setReserveInterestRateStrategyAddress(\\n        address reserve,\\n        uint8 tranche,\\n        address rateStrategyAddress\\n    ) external;\\n\\n    function setConfiguration(\\n        address reserve,\\n        uint8 tranche,\\n        uint256 configuration\\n    ) external;\\n\\n    /**\\n     * @dev Returns the configuration of the reserve\\n     * @param asset The address of the underlying asset of the reserve\\n     * @return The configuration of the reserve\\n     **/\\n    function getConfiguration(address asset, uint8 tranche)\\n        external\\n        view\\n        returns (DataTypes.ReserveConfigurationMap memory);\\n\\n    /**\\n     * @dev Returns the configuration of the user across all the reserves\\n     * @param user The user address\\n     * @return The configuration of the user\\n     **/\\n    function getUserConfiguration(address user)\\n        external\\n        view\\n        returns (DataTypes.UserConfigurationMap memory);\\n\\n    /**\\n     * @dev Returns the normalized income normalized income of the reserve\\n     * @param asset The address of the underlying asset of the reserve\\n     * @return The reserve's normalized income\\n     */\\n    function getReserveNormalizedIncome(address asset, uint8 tranche)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /**\\n     * @dev Returns the normalized variable debt per unit of asset\\n     * @param asset The address of the underlying asset of the reserve\\n     * @return The reserve normalized variable debt\\n     */\\n    function getReserveNormalizedVariableDebt(address asset, uint8 tranche)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /**\\n     * @dev Returns the state and configuration of the reserve\\n     * @param asset The address of the underlying asset of the reserve\\n     * @return The state of the reserve\\n     **/\\n    function getReserveData(address asset, uint8 tranche)\\n        external\\n        view\\n        returns (DataTypes.ReserveData memory);\\n\\n    function finalizeTransfer(\\n        address asset,\\n        uint8 tranche,\\n        address from,\\n        address to,\\n        uint256 amount,\\n        uint256 balanceFromAfter,\\n        uint256 balanceToBefore\\n    ) external;\\n\\n    function getReservesList() external view returns (address[] memory);\\n\\n    function getAssetData(address asset)\\n        external\\n        view\\n        returns (DataTypes.AssetData memory);\\n\\n    function getAddressesProvider()\\n        external\\n        view\\n        returns (ILendingPoolAddressesProvider);\\n\\n    function setPause(bool val) external;\\n\\n    function paused() external view returns (bool);\\n\\n    function editTrancheMultiplier(\\n        uint8 tranche,\\n        uint256 _liquidityRateMultiplier,\\n        uint256 _variableBorrowRateMultiplier,\\n        uint256 _stableBorrowRateMultiplier\\n    ) external;\\n\\n    function getTrancheMultiplier(uint8 tranche)\\n        external\\n        view\\n        returns (DataTypes.TrancheMultiplier memory);\\n}\\n\",\"keccak256\":\"0xa749eacaf399a92bfe2441ca9f3c81a17c1823d122b98361771159b0ab660c8e\",\"license\":\"agpl-3.0\"},\"contracts/interfaces/ILendingPoolAddressesProvider.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\nimport {DataTypes} from \\\"../protocol/libraries/types/DataTypes.sol\\\";\\n\\n/**\\n * @title LendingPoolAddressesProvider contract\\n * @dev Main registry of addresses part of or connected to the protocol, including permissioned roles\\n * - Acting also as factory of proxies and admin of those, so with right to change its implementations\\n * - Owned by the Aave Governance\\n * @author Aave\\n **/\\ninterface ILendingPoolAddressesProvider {\\n    event MarketIdSet(string newMarketId);\\n    event LendingPoolUpdated(address indexed newAddress);\\n    event ConfigurationAdminUpdated(address indexed newAddress);\\n    event EmergencyAdminUpdated(address indexed newAddress);\\n    event LendingPoolConfiguratorUpdated(address indexed newAddress);\\n    event LendingPoolCollateralManagerUpdated(address indexed newAddress);\\n    event PriceOracleUpdated(address indexed newAddress);\\n    event CurvePriceOracleUpdated(address indexed newAddress);\\n    event CurvePriceOracleWrapperUpdated(address indexed newAddress);\\n    event CurveAddressProviderUpdated(address indexed newAddress);\\n    event LendingRateOracleUpdated(address indexed newAddress);\\n    event ProxyCreated(bytes32 id, address indexed newAddress);\\n    event AddressSet(bytes32 id, address indexed newAddress, bool hasProxy);\\n\\n    function getMarketId() external view returns (string memory);\\n\\n    function setMarketId(string calldata marketId) external;\\n\\n    function setAddress(bytes32 id, address newAddress) external;\\n\\n    function setAddressAsProxy(bytes32 id, address impl) external;\\n\\n    function getAddress(bytes32 id) external view returns (address);\\n\\n    function getLendingPool() external view returns (address);\\n\\n    function setLendingPoolImpl(address pool) external;\\n\\n    function getLendingPoolConfigurator() external view returns (address);\\n\\n    function setLendingPoolConfiguratorImpl(address configurator) external;\\n\\n    function getLendingPoolCollateralManager() external view returns (address);\\n\\n    function setLendingPoolCollateralManager(address manager) external;\\n\\n    function getPoolAdmin() external view returns (address);\\n\\n    function setPoolAdmin(address admin) external;\\n\\n    function getEmergencyAdmin() external view returns (address);\\n\\n    function setEmergencyAdmin(address admin) external;\\n\\n    function getPriceOracle(DataTypes.ReserveAssetType assetType)\\n        external\\n        view\\n        returns (address);\\n\\n    function getAavePriceOracle() external view returns (address);\\n\\n    function getCurvePriceOracle() external view returns (address);\\n\\n    function getCurvePriceOracleWrapper() external view returns (address);\\n\\n    function getCurveAddressProvider() external view returns (address);\\n\\n    function setAavePriceOracle(address priceOracle) external;\\n\\n    function setCurveAddressProvider(address addressProvider) external;\\n\\n    function setCurvePriceOracle(address priceOracle) external;\\n\\n    function setCurvePriceOracleWrapper(address priceOracle) external;\\n\\n    function getLendingRateOracle() external view returns (address);\\n\\n    function setLendingRateOracle(address lendingRateOracle) external;\\n}\\n\",\"keccak256\":\"0xd05a545a54108bcf8be808763206cadbceefbfdc9d3e0ceff97fbe7e767cfe5e\",\"license\":\"agpl-3.0\"},\"contracts/misc/interfaces/IAaveOracle.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\n/**\\n * @title IAaveOracle interface\\n * @notice Interface for the Aave oracle.\\n **/\\n\\ninterface IAaveOracle {\\n    function BASE_CURRENCY() external view returns (address); // if usd returns 0x0, if eth returns weth address\\n\\n    function BASE_CURRENCY_UNIT() external view returns (uint256);\\n\\n    /***********\\n    @dev returns the asset price in ETH\\n     */\\n    function getAssetPrice(address asset) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xf55a1037dcbb14f3aa5e7e9c6d126833caa0e176ea0b6d8a85add31df8f5f2c9\",\"license\":\"agpl-3.0\"},\"contracts/misc/interfaces/IUiPoolDataProviderV2.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\nimport {\\n    ILendingPoolAddressesProvider\\n} from \\\"../../interfaces/ILendingPoolAddressesProvider.sol\\\";\\n\\ninterface IUiPoolDataProviderV2 {\\n    struct AggregatedReserveData {\\n        address underlyingAsset;\\n        string name;\\n        string symbol;\\n        uint256 decimals;\\n        uint256 baseLTVasCollateral;\\n        uint256 reserveLiquidationThreshold;\\n        uint256 reserveLiquidationBonus;\\n        uint256 reserveFactor;\\n        bool usageAsCollateralEnabled;\\n        bool borrowingEnabled;\\n        bool stableBorrowRateEnabled;\\n        bool isActive;\\n        bool isFrozen;\\n        // base data\\n        uint128 liquidityIndex;\\n        uint128 variableBorrowIndex;\\n        uint128 liquidityRate;\\n        uint128 variableBorrowRate;\\n        uint128 stableBorrowRate;\\n        uint40 lastUpdateTimestamp;\\n        address aTokenAddress;\\n        address stableDebtTokenAddress;\\n        address variableDebtTokenAddress;\\n        address interestRateStrategyAddress;\\n        //\\n        uint256 availableLiquidity;\\n        uint256 totalPrincipalStableDebt;\\n        uint256 averageStableRate;\\n        uint256 stableDebtLastUpdateTimestamp;\\n        uint256 totalScaledVariableDebt;\\n        uint256 priceInMarketReferenceCurrency;\\n        uint256 variableRateSlope1;\\n        uint256 variableRateSlope2;\\n        uint256 stableRateSlope1;\\n        uint256 stableRateSlope2;\\n    }\\n\\n    struct UserReserveData {\\n        address underlyingAsset;\\n        uint256 scaledATokenBalance;\\n        bool usageAsCollateralEnabledOnUser;\\n        uint256 stableBorrowRate;\\n        uint256 scaledVariableDebt;\\n        uint256 principalStableDebt;\\n        uint256 stableBorrowLastUpdateTimestamp;\\n    }\\n\\n    struct BaseCurrencyInfo {\\n        uint256 marketReferenceCurrencyUnit;\\n        int256 marketReferenceCurrencyPriceInUsd;\\n        int256 networkBaseTokenPriceInUsd;\\n        uint8 networkBaseTokenPriceDecimals;\\n    }\\n\\n    function getReservesList(ILendingPoolAddressesProvider provider)\\n        external\\n        view\\n        returns (address[] memory);\\n\\n    function getReservesData(ILendingPoolAddressesProvider provider)\\n        external\\n        view\\n        returns (AggregatedReserveData[] memory, BaseCurrencyInfo memory);\\n\\n    function getUserReservesData(\\n        ILendingPoolAddressesProvider provider,\\n        address user\\n    ) external view returns (UserReserveData[] memory);\\n}\\n\",\"keccak256\":\"0xdea632c88c190fe89fa8ffefc6a8c81ed70e80c65d21d7f3e50a74dcb716890c\",\"license\":\"agpl-3.0\"},\"contracts/protocol/libraries/types/DataTypes.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\nlibrary DataTypes {\\n    // refer to the whitepaper, section 1.1 basic concepts for a formal description of these properties.\\n\\n    enum ReserveAssetType {\\n        AAVE,\\n        CURVE\\n    } //update with other possible types of the underlying asset\\n    //AAVE is the original assets in the aave protocol\\n    //CURVE is the new LP tokens we are providing support for\\n\\n    struct AssetData {\\n        uint8 collateralRisk;\\n        bool isLendable;\\n        bool isAllowedCollateralInHigherTranches;\\n        ReserveAssetType assetType;\\n    }\\n\\n    struct TrancheAddress {\\n        uint8 tranche;\\n        address asset;\\n    }\\n    struct ReserveData {\\n        //stores the reserve configuration\\n        ReserveConfigurationMap configuration;\\n        //the liquidity index. Expressed in ray\\n        uint128 liquidityIndex; //not used for nonlendable assets\\n        //variable borrow index. Expressed in ray\\n        uint128 variableBorrowIndex; //not used for nonlendable assets\\n        //the current supply rate. Expressed in ray\\n        uint128 currentLiquidityRate; //deposit APR is defined as liquidityRate / RAY //not used for nonlendable assets\\n        //the current variable borrow rate. Expressed in ray\\n        uint128 currentVariableBorrowRate; //not used for nonlendable assets\\n        //the current stable borrow rate. Expressed in ray\\n        uint128 currentStableBorrowRate; //not used for nonlendable assets\\n        uint40 lastUpdateTimestamp;\\n        //tokens addresses\\n        address aTokenAddress;\\n        address stableDebtTokenAddress; //not used for nonlendable assets\\n        address variableDebtTokenAddress; //not used for nonlendable assets\\n        //address of the interest rate strategy\\n        address interestRateStrategyAddress; //not used for nonlendable assets\\n        //the id of the reserve. Represents the position in the list of the active reserves\\n        uint8 id;\\n        uint8 tranche; //I think this will be used for nonlendable assets, cause your collateral only asset can be placed in higher tranche if necessary\\n    }\\n\\n    struct TrancheMultiplier {\\n        uint256 liquidityRateMultiplier;\\n        uint256 variableBorrowRateMultiplier;\\n        uint256 stableBorrowRateMultiplier;\\n    }\\n\\n    uint8 constant NUM_TRANCHES = 3;\\n\\n    struct ReserveConfigurationMap {\\n        //bit 0-15: LTV\\n        //bit 16-31: Liq. threshold\\n        //bit 32-47: Liq. bonus\\n        //bit 48-55: Decimals\\n        //bit 56: Reserve is active\\n        //bit 57: reserve is frozen\\n        //bit 58: borrowing is enabled\\n        //bit 59: stable rate borrowing enabled\\n        //bit 60-63: reserved\\n        //bit 64-79: reserve factor\\n        uint256 data;\\n    }\\n\\n    struct UserConfigurationMap {\\n        uint256 data;\\n    }\\n\\n    enum InterestRateMode {\\n        NONE,\\n        STABLE,\\n        VARIABLE\\n    }\\n\\n    struct AcctTranche {\\n        address user;\\n        uint8 tranche;\\n    }\\n\\n    struct DepositVars {\\n        address asset;\\n        uint8 tranche;\\n        uint8 risk;\\n        bool allowHigherTranche;\\n        bool isLendable;\\n        TrancheMultiplier t;\\n    }\\n\\n    struct ExecuteBorrowParams {\\n        address asset;\\n        uint8 tranche; //tranche the user wants to borrow out of\\n        address user;\\n        address onBehalfOf;\\n        uint256 amount;\\n        uint256 interestRateMode;\\n        address aTokenAddress;\\n        uint16 referralCode;\\n        bool releaseUnderlying;\\n        uint256 _maxStableRateBorrowSizePercent;\\n        uint256 _reservesCount;\\n        TrancheMultiplier t;\\n    }\\n\\n    struct WithdrawParams {\\n        uint256 _reservesCount;\\n        address asset;\\n        uint8 tranche;\\n        uint256 amount;\\n        address to;\\n        TrancheMultiplier t;\\n    }\\n\\n    struct ValidateSetUseReserveAsCollateralParams {\\n        uint8 risk;\\n        bool allowHigherTranche;\\n    }\\n\\n    struct calculateInterestRatesVars {\\n        address reserve;\\n        address aToken;\\n        uint256 liquidityAdded;\\n        uint256 liquidityTaken;\\n        uint256 reserveFactor;\\n    }\\n\\n    struct flashLoanVars {\\n        address receiverAddress;\\n        DataTypes.TrancheAddress[] assets;\\n        uint256[] amounts;\\n        uint256[] modes;\\n        address onBehalfOf;\\n        bytes params;\\n        uint16 referralCode;\\n        uint256 _flashLoanPremiumTotal;\\n        address oracle;\\n        uint256 _maxStableRateBorrowSizePercent;\\n        uint256 _reservesCount;\\n    }\\n}\\n\",\"keccak256\":\"0x7302b5b5775a9a0019bd062c95d5a94a0b7bfa4553ae872968cf8ecf7c35fc8f\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/dependencies/openzeppelin/contracts/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206dae0a2b29d17c0d6dbe94cee41befcbb7588ebec1bef7cf3b0e8e209d388f2664736f6c63430008000033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0xAE0A2B29D17C0D6DBE94CEE41BEF 0xCB 0xB7 PC DUP15 0xBE 0xC1 0xBE 0xF7 0xCF EXTCODESIZE 0xE DUP15 KECCAK256 SWAP14 CODESIZE DUP16 0x26 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ","sourceMap":"131:2684:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;131:2684:5;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206dae0a2b29d17c0d6dbe94cee41befcbb7588ebec1bef7cf3b0e8e209d388f2664736f6c63430008000033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0xAE0A2B29D17C0D6DBE94CEE41BEF 0xCB 0xB7 PC DUP15 0xBE 0xC1 0xBE 0xF7 0xCF EXTCODESIZE 0xE DUP15 KECCAK256 SWAP14 CODESIZE DUP16 0x26 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ","sourceMap":"131:2684:5:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependencies/openzeppelin/contracts/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/Address.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\\n        // for accounts without code, i.e. `keccak256('')`\\n        // bytes32 codehash;\\n        // bytes32 accountHash =\\n        //     0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\n        // // solhint-disable-next-line no-inline-assembly\\n        // assembly {\\n        //     codehash := extcodehash(account)\\n        // }\\n        // return (codehash != accountHash && codehash != 0x0);\\n        return account.code.length > 0; //updated\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(\\n            address(this).balance >= amount,\\n            \\\"Address: insufficient balance\\\"\\n        );\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(\\n            success,\\n            \\\"Address: unable to send value, recipient may have reverted\\\"\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x37523692d5b121789b70f518a1639d6a978d5f863ae026b16cc45b823eecf157\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/dependencies/openzeppelin/contracts/Context.sol":{"Context":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependencies/openzeppelin/contracts/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x68bfa0a768a2c75bcc8ea4588200f8f78d5b20a785189855b4b301770db578cf\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/dependencies/openzeppelin/contracts/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependencies/openzeppelin/contracts/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount)\\n        external\\n        returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n}\\n\",\"keccak256\":\"0x6a0e7bdec11b28b6b88f25301cd51477bd0025846062465a158eee1144f10bd3\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol":{"IERC20Detailed":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol\":\"IERC20Detailed\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount)\\n        external\\n        returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n}\\n\",\"keccak256\":\"0x6a0e7bdec11b28b6b88f25301cd51477bd0025846062465a158eee1144f10bd3\",\"license\":\"agpl-3.0\"},\"contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\n\\ninterface IERC20Detailed is IERC20 {\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x2d62cd546d91ce26b0ddbb8900bfb02f41d7fb225423374ef51a54841f3ddd1c\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/dependencies/openzeppelin/contracts/Ownable.sol":{"Ownable":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50600061001b61006a565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061006e565b3390565b6102c58061007d6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e610081565b005b610058610109565b6040516100659190610200565b60405180910390f35b61004e61007c3660046101d2565b610118565b6100896101ce565b6000546001600160a01b039081169116146100bf5760405162461bcd60e51b81526004016100b69061025a565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6101206101ce565b6000546001600160a01b0390811691161461014d5760405162461bcd60e51b81526004016100b69061025a565b6001600160a01b0381166101735760405162461bcd60e51b81526004016100b690610214565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b6000602082840312156101e3578081fd5b81356001600160a01b03811681146101f9578182fd5b9392505050565b6001600160a01b0391909116815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220f8ba0c146c58f60ab86dc71fea87685c4aab45eb5b67c516835c9c1cc184a20164736f6c63430008000033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH2 0x1B PUSH2 0x6A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH2 0x6E JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH2 0x2C5 DUP1 PUSH2 0x7D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x81 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x109 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x7C CALLDATASIZE PUSH1 0x4 PUSH2 0x1D2 JUMP JUMPDEST PUSH2 0x118 JUMP JUMPDEST PUSH2 0x89 PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xBF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6 SWAP1 PUSH2 0x25A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x14D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6 SWAP1 PUSH2 0x25A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x173 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6 SWAP1 PUSH2 0x214 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E3 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1F9 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 0xBA 0xC EQ PUSH13 0x58F60AB86DC71FEA87685C4AAB GASLIMIT 0xEB JUMPDEST PUSH8 0xC516835C9C1CC184 LOG2 ADD PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ","sourceMap":"578:1689:9:-:0;;;849:149;;;;;;;;;-1:-1:-1;873:17:9;893:12;:10;:12::i;:::-;915:6;:18;;-1:-1:-1;;;;;;915:18:9;-1:-1:-1;;;;;915:18:9;;;;;;;948:43;;915:18;;-1:-1:-1;915:18:9;948:43;;915:6;;948:43;849:149;578:1689;;590:96:6;669:10;590:96;:::o;578:1689:9:-;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1298:30","statements":[{"nodeType":"YulBlock","src":"6:3:30","statements":[]},{"body":{"nodeType":"YulBlock","src":"84:236:30","statements":[{"body":{"nodeType":"YulBlock","src":"130:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"139:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"147:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"132:6:30"},"nodeType":"YulFunctionCall","src":"132:22:30"},"nodeType":"YulExpressionStatement","src":"132:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"105:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"114:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"101:3:30"},"nodeType":"YulFunctionCall","src":"101:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"126:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"97:3:30"},"nodeType":"YulFunctionCall","src":"97:32:30"},"nodeType":"YulIf","src":"94:2:30"},{"nodeType":"YulVariableDeclaration","src":"165:36:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"191:9:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"178:12:30"},"nodeType":"YulFunctionCall","src":"178:23:30"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"169:5:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"264:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"273:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"281:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"266:6:30"},"nodeType":"YulFunctionCall","src":"266:22:30"},"nodeType":"YulExpressionStatement","src":"266:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"234:5:30"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"249:3:30","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"254:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"245:3:30"},"nodeType":"YulFunctionCall","src":"245:11:30"},{"kind":"number","nodeType":"YulLiteral","src":"258:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"241:3:30"},"nodeType":"YulFunctionCall","src":"241:19:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"230:3:30"},"nodeType":"YulFunctionCall","src":"230:31:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"220:2:30"},"nodeType":"YulFunctionCall","src":"220:42:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"213:6:30"},"nodeType":"YulFunctionCall","src":"213:50:30"},"nodeType":"YulIf","src":"210:2:30"},{"nodeType":"YulAssignment","src":"299:15:30","value":{"name":"value","nodeType":"YulIdentifier","src":"309:5:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"299:6:30"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"50:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"61:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"73:6:30","type":""}],"src":"14:306:30"},{"body":{"nodeType":"YulBlock","src":"426:102:30","statements":[{"nodeType":"YulAssignment","src":"436:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"448:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"459:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"444:3:30"},"nodeType":"YulFunctionCall","src":"444:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"436:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"478:9:30"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"493:6:30"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"509:3:30","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"514:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"505:3:30"},"nodeType":"YulFunctionCall","src":"505:11:30"},{"kind":"number","nodeType":"YulLiteral","src":"518:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"501:3:30"},"nodeType":"YulFunctionCall","src":"501:19:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"489:3:30"},"nodeType":"YulFunctionCall","src":"489:32:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"471:6:30"},"nodeType":"YulFunctionCall","src":"471:51:30"},"nodeType":"YulExpressionStatement","src":"471:51:30"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"395:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"406:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"417:4:30","type":""}],"src":"325:203:30"},{"body":{"nodeType":"YulBlock","src":"707:228:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"724:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"735:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"717:6:30"},"nodeType":"YulFunctionCall","src":"717:21:30"},"nodeType":"YulExpressionStatement","src":"717:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"758:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"769:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"754:3:30"},"nodeType":"YulFunctionCall","src":"754:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"774:2:30","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"747:6:30"},"nodeType":"YulFunctionCall","src":"747:30:30"},"nodeType":"YulExpressionStatement","src":"747:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"797:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"808:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"793:3:30"},"nodeType":"YulFunctionCall","src":"793:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"813:34:30","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"786:6:30"},"nodeType":"YulFunctionCall","src":"786:62:30"},"nodeType":"YulExpressionStatement","src":"786:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"868:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"879:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"864:3:30"},"nodeType":"YulFunctionCall","src":"864:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"884:8:30","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"857:6:30"},"nodeType":"YulFunctionCall","src":"857:36:30"},"nodeType":"YulExpressionStatement","src":"857:36:30"},{"nodeType":"YulAssignment","src":"902:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"914:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"925:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"910:3:30"},"nodeType":"YulFunctionCall","src":"910:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"902:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"684:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"698:4:30","type":""}],"src":"533:402:30"},{"body":{"nodeType":"YulBlock","src":"1114:182:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1131:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"1142:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1124:6:30"},"nodeType":"YulFunctionCall","src":"1124:21:30"},"nodeType":"YulExpressionStatement","src":"1124:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1165:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"1176:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1161:3:30"},"nodeType":"YulFunctionCall","src":"1161:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1154:6:30"},"nodeType":"YulFunctionCall","src":"1154:30:30"},"nodeType":"YulExpressionStatement","src":"1154:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1204:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"1215:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1200:3:30"},"nodeType":"YulFunctionCall","src":"1200:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"1220:34:30","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1193:6:30"},"nodeType":"YulFunctionCall","src":"1193:62:30"},"nodeType":"YulExpressionStatement","src":"1193:62:30"},{"nodeType":"YulAssignment","src":"1264:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1276:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"1287:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1272:3:30"},"nodeType":"YulFunctionCall","src":"1272:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1264:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1091:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1105:4:30","type":""}],"src":"940:356:30"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}","id":30,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e610081565b005b610058610109565b6040516100659190610200565b60405180910390f35b61004e61007c3660046101d2565b610118565b6100896101ce565b6000546001600160a01b039081169116146100bf5760405162461bcd60e51b81526004016100b69061025a565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6101206101ce565b6000546001600160a01b0390811691161461014d5760405162461bcd60e51b81526004016100b69061025a565b6001600160a01b0381166101735760405162461bcd60e51b81526004016100b690610214565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b6000602082840312156101e3578081fd5b81356001600160a01b03811681146101f9578182fd5b9392505050565b6001600160a01b0391909116815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220f8ba0c146c58f60ab86dc71fea87685c4aab45eb5b67c516835c9c1cc184a20164736f6c63430008000033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x81 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x109 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x7C CALLDATASIZE PUSH1 0x4 PUSH2 0x1D2 JUMP JUMPDEST PUSH2 0x118 JUMP JUMPDEST PUSH2 0x89 PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xBF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6 SWAP1 PUSH2 0x25A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x14D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6 SWAP1 PUSH2 0x25A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x173 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6 SWAP1 PUSH2 0x214 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E3 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1F9 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 0xBA 0xC EQ PUSH13 0x58F60AB86DC71FEA87685C4AAB GASLIMIT 0xEB JUMPDEST PUSH8 0xC516835C9C1CC184 LOG2 ADD PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ","sourceMap":"578:1689:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1697:145;;;:::i;:::-;;1074:77;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1991:274;;;;;;:::i;:::-;;:::i;1697:145::-;1288:12;:10;:12::i;:::-;1278:6;;-1:-1:-1;;;;;1278:6:9;;;:22;;;1270:67;;;;-1:-1:-1;;;1270:67:9;;;;;;;:::i;:::-;;;;;;;;;1803:1:::1;1787:6:::0;;1766:40:::1;::::0;-1:-1:-1;;;;;1787:6:9;;::::1;::::0;1766:40:::1;::::0;1803:1;;1766:40:::1;1833:1;1816:19:::0;;-1:-1:-1;;;;;;1816:19:9::1;::::0;;1697:145::o;1074:77::-;1112:7;1138:6;-1:-1:-1;;;;;1138:6:9;1074:77;:::o;1991:274::-;1288:12;:10;:12::i;:::-;1278:6;;-1:-1:-1;;;;;1278:6:9;;;:22;;;1270:67;;;;-1:-1:-1;;;1270:67:9;;;;;;;:::i;:::-;-1:-1:-1;;;;;2092:22:9;::::1;2071:107;;;;-1:-1:-1::0;;;2071:107:9::1;;;;;;;:::i;:::-;2214:6;::::0;;2193:38:::1;::::0;-1:-1:-1;;;;;2193:38:9;;::::1;::::0;2214:6;::::1;::::0;2193:38:::1;::::0;::::1;2241:6;:17:::0;;-1:-1:-1;;;;;;2241:17:9::1;-1:-1:-1::0;;;;;2241:17:9;;;::::1;::::0;;;::::1;::::0;;1991:274::o;590:96:6:-;669:10;590:96;:::o;14:306:30:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;178:23;;-1:-1:-1;;;;;230:31:30;;220:42;;210:2;;281:6;273;266:22;210:2;309:5;84:236;-1:-1:-1;;;84:236:30:o;325:203::-;-1:-1:-1;;;;;489:32:30;;;;471:51;;459:2;444:18;;426:102::o;533:402::-;735:2;717:21;;;774:2;754:18;;;747:30;813:34;808:2;793:18;;786:62;-1:-1:-1;;;879:2:30;864:18;;857:36;925:3;910:19;;707:228::o;940:356::-;1142:2;1124:21;;;1161:18;;;1154:30;1220:34;1215:2;1200:18;;1193:62;1287:2;1272:18;;1114:182::o"},"gasEstimates":{"creation":{"codeDepositCost":"141800","executionCost":"22625","totalCost":"164425"},"external":{"owner()":"1070","renounceOwnership()":"24182","transferOwnership(address)":"24426"}},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x68bfa0a768a2c75bcc8ea4588200f8f78d5b20a785189855b4b301770db578cf\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0;\\n\\nimport \\\"./Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\ncontract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(\\n        address indexed previousOwner,\\n        address indexed newOwner\\n    );\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(\\n            newOwner != address(0),\\n            \\\"Ownable: new owner is the zero address\\\"\\n        );\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x27577f376012a863c1c6f74048b33a256a5521baa56167d27bc52d90a87fb1cb\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":610,"contract":"contracts/dependencies/openzeppelin/contracts/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/dependencies/openzeppelin/contracts/SafeERC20.sol":{"SafeERC20":{"abi":[],"devdoc":{"details":"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.","kind":"dev","methods":{},"title":"SafeERC20","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c1bdeb92bbd3f8d7b40c02ef9ae47ee05f24f6a949f6418f40ce5be454e0917a64736f6c63430008000033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 0xBD 0xEB SWAP3 0xBB 0xD3 0xF8 0xD7 0xB4 0xC MUL 0xEF SWAP11 0xE4 PUSH31 0xE05F24F6A949F6418F40CE5BE454E0917A64736F6C63430008000033000000 ","sourceMap":"635:1684:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;635:1684:10;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c1bdeb92bbd3f8d7b40c02ef9ae47ee05f24f6a949f6418f40ce5be454e0917a64736f6c63430008000033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 0xBD 0xEB SWAP3 0xBB 0xD3 0xF8 0xD7 0xB4 0xC MUL 0xEF SWAP11 0xE4 PUSH31 0xE05F24F6A949F6418F40CE5BE454E0917A64736F6C63430008000033000000 ","sourceMap":"635:1684:10:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"callOptionalReturn(contract IERC20,bytes memory)":"infinite","safeApprove(contract IERC20,address,uint256)":"infinite","safeTransfer(contract IERC20,address,uint256)":"infinite","safeTransferFrom(contract IERC20,address,address,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependencies/openzeppelin/contracts/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/Address.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\\n        // for accounts without code, i.e. `keccak256('')`\\n        // bytes32 codehash;\\n        // bytes32 accountHash =\\n        //     0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\n        // // solhint-disable-next-line no-inline-assembly\\n        // assembly {\\n        //     codehash := extcodehash(account)\\n        // }\\n        // return (codehash != accountHash && codehash != 0x0);\\n        return account.code.length > 0; //updated\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(\\n            address(this).balance >= amount,\\n            \\\"Address: insufficient balance\\\"\\n        );\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(\\n            success,\\n            \\\"Address: unable to send value, recipient may have reverted\\\"\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x37523692d5b121789b70f518a1639d6a978d5f863ae026b16cc45b823eecf157\",\"license\":\"agpl-3.0\"},\"contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount)\\n        external\\n        returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n}\\n\",\"keccak256\":\"0x6a0e7bdec11b28b6b88f25301cd51477bd0025846062465a158eee1144f10bd3\",\"license\":\"agpl-3.0\"},\"contracts/dependencies/openzeppelin/contracts/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {SafeMath} from \\\"./SafeMath.sol\\\";\\nimport {Address} from \\\"./Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        callOptionalReturn(\\n            token,\\n            abi.encodeWithSelector(token.transfer.selector, to, value)\\n        );\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        callOptionalReturn(\\n            token,\\n            abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\\n        );\\n    }\\n\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        callOptionalReturn(\\n            token,\\n            abi.encodeWithSelector(token.approve.selector, spender, value)\\n        );\\n    }\\n\\n    function callOptionalReturn(IERC20 token, bytes memory data) private {\\n        require(address(token).isContract(), \\\"SafeERC20: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        require(success, \\\"SafeERC20: low-level call failed\\\");\\n\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(\\n                abi.decode(returndata, (bool)),\\n                \\\"SafeERC20: ERC20 operation did not succeed\\\"\\n            );\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xb4f0a6930495daa6a124f1183b6caee5dc8283b230fa0d51ae90322f7ba24aad\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b)\\n        internal\\n        pure\\n        returns (bool, uint256)\\n    {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b)\\n        internal\\n        pure\\n        returns (bool, uint256)\\n    {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b)\\n        internal\\n        pure\\n        returns (bool, uint256)\\n    {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b)\\n        internal\\n        pure\\n        returns (bool, uint256)\\n    {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b)\\n        internal\\n        pure\\n        returns (bool, uint256)\\n    {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x92977dbde9b82328cac05a270258b1e93c9a0e1d4851786aac4d86e916bd54ca\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/dependencies/openzeppelin/contracts/SafeMath.sol":{"SafeMath":{"abi":[],"devdoc":{"details":"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220935574d0eac9dbfe747728dceb81136a274eb1ae8b922dacc301c243dc24409464736f6c63430008000033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 SSTORE PUSH21 0xD0EAC9DBFE747728DCEB81136A274EB1AE8B922DAC 0xC3 ADD 0xC2 NUMBER 0xDC 0x24 BLOCKHASH SWAP5 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ","sourceMap":"482:6440:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6440:11;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220935574d0eac9dbfe747728dceb81136a274eb1ae8b922dacc301c243dc24409464736f6c63430008000033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 SSTORE PUSH21 0xD0EAC9DBFE747728DCEB81136A274EB1AE8B922DAC 0xC3 ADD 0xC2 NUMBER 0xDC 0x24 BLOCKHASH SWAP5 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ","sourceMap":"482:6440:11:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"add(uint256,uint256)":"infinite","div(uint256,uint256)":"infinite","div(uint256,uint256,string memory)":"infinite","mod(uint256,uint256)":"infinite","mod(uint256,uint256,string memory)":"infinite","mul(uint256,uint256)":"infinite","sub(uint256,uint256)":"infinite","sub(uint256,uint256,string memory)":"infinite","tryAdd(uint256,uint256)":"infinite","tryDiv(uint256,uint256)":"infinite","tryMod(uint256,uint256)":"infinite","tryMul(uint256,uint256)":"infinite","trySub(uint256,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b)\\n        internal\\n        pure\\n        returns (bool, uint256)\\n    {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b)\\n        internal\\n        pure\\n        returns (bool, uint256)\\n    {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b)\\n        internal\\n        pure\\n        returns (bool, uint256)\\n    {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b)\\n        internal\\n        pure\\n        returns (bool, uint256)\\n    {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b)\\n        internal\\n        pure\\n        returns (bool, uint256)\\n    {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x92977dbde9b82328cac05a270258b1e93c9a0e1d4851786aac4d86e916bd54ca\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IChainlinkAggregator.sol":{"IChainlinkAggregator":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"int256","name":"current","type":"int256"},{"indexed":true,"internalType":"uint256","name":"roundId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"AnswerUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"roundId","type":"uint256"},{"indexed":true,"internalType":"address","name":"startedBy","type":"address"}],"name":"NewRound","type":"event"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"roundId","type":"uint256"}],"name":"getAnswer","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"roundId","type":"uint256"}],"name":"getTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestAnswer","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRound","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"decimals()":"313ce567","getAnswer(uint256)":"b5ab58dc","getTimestamp(uint256)":"b633620c","latestAnswer()":"50d25bcd","latestRound()":"668a0f02","latestTimestamp()":"8205bf6a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"int256\",\"name\":\"current\",\"type\":\"int256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"AnswerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"startedBy\",\"type\":\"address\"}],\"name\":\"NewRound\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"name\":\"getAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"name\":\"getTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IChainlinkAggregator.sol\":\"IChainlinkAggregator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IChainlinkAggregator.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\ninterface IChainlinkAggregator {\\n    function decimals() external view returns (uint8);\\n\\n    function latestAnswer() external view returns (int256);\\n\\n    function latestTimestamp() external view returns (uint256);\\n\\n    function latestRound() external view returns (uint256);\\n\\n    function getAnswer(uint256 roundId) external view returns (int256);\\n\\n    function getTimestamp(uint256 roundId) external view returns (uint256);\\n\\n    event AnswerUpdated(\\n        int256 indexed current,\\n        uint256 indexed roundId,\\n        uint256 timestamp\\n    );\\n    event NewRound(uint256 indexed roundId, address indexed startedBy);\\n}\\n\",\"keccak256\":\"0xe9b6c1724de16518dadf10284718004691a351a25b5348b81867f5ec58f67642\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/ILendingPool.sol":{"ILendingPool":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":false,"internalType":"uint8","name":"tranche","type":"uint8"},{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"onBehalfOf","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":true,"internalType":"uint16","name":"referral","type":"uint16"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":true,"internalType":"address","name":"initiator","type":"address"},{"indexed":true,"internalType":"address","name":"asset","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"premium","type":"uint256"},{"indexed":false,"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"FlashLoan","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"collateralAsset","type":"address"},{"indexed":true,"internalType":"address","name":"debtAsset","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"debtToCover","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"liquidatedCollateralAmount","type":"uint256"},{"indexed":false,"internalType":"address","name":"liquidator","type":"address"},{"indexed":false,"internalType":"bool","name":"receiveAToken","type":"bool"}],"name":"LiquidationCall","type":"event"},{"anonymous":false,"inputs":[],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"RebalanceStableBorrowRate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"repayer","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Repay","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":false,"internalType":"uint256","name":"liquidityRate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"stableBorrowRate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"variableBorrowRate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"liquidityIndex","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"variableBorrowIndex","type":"uint256"}],"name":"ReserveDataUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"ReserveUsedAsCollateralDisabled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"ReserveUsedAsCollateralEnabled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"rateMode","type":"uint256"}],"name":"Swap","type":"event"},{"anonymous":false,"inputs":[],"name":"Unpaused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint8","name":"tranche","type":"uint8"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"interestRateMode","type":"uint256"},{"internalType":"uint16","name":"referralCode","type":"uint16"},{"internalType":"address","name":"onBehalfOf","type":"address"}],"name":"borrow","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint8","name":"tranche","type":"uint8"},{"internalType":"bool","name":"isCollateral","type":"bool"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"onBehalfOf","type":"address"},{"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint8","name":"tranche","type":"uint8"},{"internalType":"uint256","name":"_liquidityRateMultiplier","type":"uint256"},{"internalType":"uint256","name":"_variableBorrowRateMultiplier","type":"uint256"},{"internalType":"uint256","name":"_stableBorrowRateMultiplier","type":"uint256"}],"name":"editTrancheMultiplier","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint8","name":"tranche","type":"uint8"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"balanceFromAfter","type":"uint256"},{"internalType":"uint256","name":"balanceToBefore","type":"uint256"}],"name":"finalizeTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"receiverAddress","type":"address"},{"components":[{"internalType":"uint8","name":"tranche","type":"uint8"},{"internalType":"address","name":"asset","type":"address"}],"internalType":"struct DataTypes.TrancheAddress[]","name":"assets","type":"tuple[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"uint256[]","name":"modes","type":"uint256[]"},{"internalType":"address","name":"onBehalfOf","type":"address"},{"internalType":"bytes","name":"params","type":"bytes"},{"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"flashLoan","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getAddressesProvider","outputs":[{"internalType":"contract ILendingPoolAddressesProvider","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getAssetData","outputs":[{"components":[{"internalType":"uint8","name":"collateralRisk","type":"uint8"},{"internalType":"bool","name":"isLendable","type":"bool"},{"internalType":"bool","name":"isAllowedCollateralInHigherTranches","type":"bool"},{"internalType":"enum DataTypes.ReserveAssetType","name":"assetType","type":"uint8"}],"internalType":"struct DataTypes.AssetData","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint8","name":"tranche","type":"uint8"}],"name":"getConfiguration","outputs":[{"components":[{"internalType":"uint256","name":"data","type":"uint256"}],"internalType":"struct DataTypes.ReserveConfigurationMap","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint8","name":"tranche","type":"uint8"}],"name":"getReserveData","outputs":[{"components":[{"components":[{"internalType":"uint256","name":"data","type":"uint256"}],"internalType":"struct DataTypes.ReserveConfigurationMap","name":"configuration","type":"tuple"},{"internalType":"uint128","name":"liquidityIndex","type":"uint128"},{"internalType":"uint128","name":"variableBorrowIndex","type":"uint128"},{"internalType":"uint128","name":"currentLiquidityRate","type":"uint128"},{"internalType":"uint128","name":"currentVariableBorrowRate","type":"uint128"},{"internalType":"uint128","name":"currentStableBorrowRate","type":"uint128"},{"internalType":"uint40","name":"lastUpdateTimestamp","type":"uint40"},{"internalType":"address","name":"aTokenAddress","type":"address"},{"internalType":"address","name":"stableDebtTokenAddress","type":"address"},{"internalType":"address","name":"variableDebtTokenAddress","type":"address"},{"internalType":"address","name":"interestRateStrategyAddress","type":"address"},{"internalType":"uint8","name":"id","type":"uint8"},{"internalType":"uint8","name":"tranche","type":"uint8"}],"internalType":"struct DataTypes.ReserveData","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint8","name":"tranche","type":"uint8"}],"name":"getReserveNormalizedIncome","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint8","name":"tranche","type":"uint8"}],"name":"getReserveNormalizedVariableDebt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getReservesList","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint8","name":"tranche","type":"uint8"}],"name":"getTrancheMultiplier","outputs":[{"components":[{"internalType":"uint256","name":"liquidityRateMultiplier","type":"uint256"},{"internalType":"uint256","name":"variableBorrowRateMultiplier","type":"uint256"},{"internalType":"uint256","name":"stableBorrowRateMultiplier","type":"uint256"}],"internalType":"struct DataTypes.TrancheMultiplier","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint8","name":"tranche","type":"uint8"}],"name":"getUserAccountData","outputs":[{"internalType":"uint256","name":"totalCollateralETH","type":"uint256"},{"internalType":"uint256","name":"totalDebtETH","type":"uint256"},{"internalType":"uint256","name":"availableBorrowsETH","type":"uint256"},{"internalType":"uint256","name":"currentLiquidationThreshold","type":"uint256"},{"internalType":"uint256","name":"ltv","type":"uint256"},{"internalType":"uint256","name":"healthFactor","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserConfiguration","outputs":[{"components":[{"internalType":"uint256","name":"data","type":"uint256"}],"internalType":"struct DataTypes.UserConfigurationMap","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"reserve","type":"address"},{"internalType":"address","name":"aTokenAddress","type":"address"},{"internalType":"address","name":"stableDebtAddress","type":"address"},{"internalType":"address","name":"variableDebtAddress","type":"address"},{"internalType":"address","name":"interestRateStrategyAddress","type":"address"},{"internalType":"uint8","name":"tranche","type":"uint8"}],"name":"initReserve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"collateralAsset","type":"address"},{"internalType":"address","name":"debtAsset","type":"address"},{"internalType":"uint8","name":"tranche","type":"uint8"},{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"debtToCover","type":"uint256"},{"internalType":"bool","name":"receiveAToken","type":"bool"}],"name":"liquidationCall","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint8","name":"tranche","type":"uint8"},{"internalType":"address","name":"user","type":"address"}],"name":"rebalanceStableBorrowRate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint8","name":"tranche","type":"uint8"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"rateMode","type":"uint256"},{"internalType":"address","name":"onBehalfOf","type":"address"}],"name":"repay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint8","name":"_risk","type":"uint8"},{"internalType":"bool","name":"_isLendable","type":"bool"},{"internalType":"bool","name":"_allowedHigherTranche","type":"bool"},{"internalType":"uint8","name":"_assetType","type":"uint8"}],"name":"setAssetData","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"reserve","type":"address"},{"internalType":"uint8","name":"tranche","type":"uint8"},{"internalType":"uint256","name":"configuration","type":"uint256"}],"name":"setConfiguration","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"val","type":"bool"}],"name":"setPause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"reserve","type":"address"},{"internalType":"uint8","name":"tranche","type":"uint8"},{"internalType":"address","name":"rateStrategyAddress","type":"address"}],"name":"setReserveInterestRateStrategyAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint8","name":"tranche","type":"uint8"},{"internalType":"bool","name":"useAsCollateral","type":"bool"}],"name":"setUserUseReserveAsCollateral","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint8","name":"tranche","type":"uint8"},{"internalType":"uint256","name":"rateMode","type":"uint256"}],"name":"swapBorrowRateMode","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint8","name":"tranche","type":"uint8"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"name":"withdraw","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"Deposit(address,uint8,address,address,uint256,uint16)":{"details":"Emitted on deposit()","params":{"amount":"The amount deposited","onBehalfOf":"The beneficiary of the deposit, receiving the aTokens","referral":"The referral code used*","reserve":"The address of the underlying asset of the reserve","user":"The address initiating the deposit"}},"FlashLoan(address,address,address,uint256,uint256,uint16)":{"details":"Emitted on flashLoan()","params":{"amount":"The amount flash borrowed","asset":"The address of the asset being flash borrowed","initiator":"The address initiating the flash loan","premium":"The fee flash borrowed","referralCode":"The referral code used*","target":"The address of the flash loan receiver contract"}},"LiquidationCall(address,address,address,uint256,uint256,address,bool)":{"details":"Emitted when a borrower is liquidated. This event is emitted by the LendingPool via LendingPoolCollateral manager using a DELEGATECALL This allows to have the events in the generated ABI for LendingPool.","params":{"collateralAsset":"The address of the underlying asset used as collateral, to receive as result of the liquidation","debtAsset":"The address of the underlying borrowed asset to be repaid with the liquidation","debtToCover":"The debt amount of borrowed `asset` the liquidator wants to cover","liquidatedCollateralAmount":"The amount of collateral received by the liiquidator","liquidator":"The address of the liquidator","receiveAToken":"`true` if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly*","user":"The address of the borrower getting liquidated"}},"Paused()":{"details":"Emitted when the pause is triggered."},"RebalanceStableBorrowRate(address,address)":{"details":"Emitted on rebalanceStableBorrowRate()","params":{"reserve":"The address of the underlying asset of the reserve","user":"The address of the user for which the rebalance has been executed*"}},"Repay(address,address,address,uint256)":{"details":"Emitted on repay()","params":{"amount":"The amount repaid*","repayer":"The address of the user initiating the repay(), providing the funds","reserve":"The address of the underlying asset of the reserve","user":"The beneficiary of the repayment, getting his debt reduced"}},"ReserveDataUpdated(address,uint256,uint256,uint256,uint256,uint256)":{"details":"Emitted when the state of a reserve is updated. NOTE: This event is actually declared in the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal, the event will actually be fired by the LendingPool contract. The event is therefore replicated here so it gets added to the LendingPool ABI","params":{"liquidityIndex":"The new liquidity index","liquidityRate":"The new liquidity rate","reserve":"The address of the underlying asset of the reserve","stableBorrowRate":"The new stable borrow rate","variableBorrowIndex":"The new variable borrow index*","variableBorrowRate":"The new variable borrow rate"}},"ReserveUsedAsCollateralDisabled(address,address)":{"details":"Emitted on setUserUseReserveAsCollateral()","params":{"reserve":"The address of the underlying asset of the reserve","user":"The address of the user enabling the usage as collateral*"}},"ReserveUsedAsCollateralEnabled(address,address)":{"details":"Emitted on setUserUseReserveAsCollateral()","params":{"reserve":"The address of the underlying asset of the reserve","user":"The address of the user enabling the usage as collateral*"}},"Swap(address,address,uint256)":{"details":"Emitted on swapBorrowRateMode()","params":{"rateMode":"The rate mode that the user wants to swap to*","reserve":"The address of the underlying asset of the reserve","user":"The address of the user swapping his rate mode"}},"Unpaused()":{"details":"Emitted when the pause is lifted."},"Withdraw(address,address,address,uint256)":{"details":"Emitted on withdraw()","params":{"amount":"The amount to be withdrawn*","reserve":"The address of the underlyng asset being withdrawn","to":"Address that will receive the underlying","user":"The address initiating the withdrawal, owner of aTokens"}}},"kind":"dev","methods":{"borrow(address,uint8,uint256,uint256,uint16,address)":{"details":"Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower already deposited enough collateral, or he was given enough allowance by a credit delegator on the corresponding debt token (StableDebtToken or VariableDebtToken) - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet   and 100 stable/variable debt tokens, depending on the `interestRateMode`","params":{"amount":"The amount to be borrowed","asset":"The address of the underlying asset to borrow","interestRateMode":"The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable","onBehalfOf":"Address of the user who will receive the debt. Should be the address of the borrower itself calling the function if he wants to borrow against his own collateral, or the address of the credit delegator if he has been given credit delegation allowance*","referralCode":"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"}},"deposit(address,uint8,bool,uint256,address,uint16)":{"details":"Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User deposits 100 USDC and gets in return 100 aUSDC","params":{"amount":"The amount to be deposited","asset":"The address of the underlying asset to deposit","onBehalfOf":"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet","referralCode":"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*"}},"flashLoan(address,(uint8,address)[],uint256[],uint256[],address,bytes,uint16)":{"details":"Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned. IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://developers.aave.com","params":{"amounts":"The amounts amounts being flash-borrowed","assets":"The addresses of the assets being flash-borrowed","modes":"Types of the debt to open if the flash loan is not returned:   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address","onBehalfOf":"The address  that will receive the debt in the case of using on `modes` 1 or 2","params":"Variadic packed params to pass to the receiver as extra information","receiverAddress":"The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface","referralCode":"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*"}},"getConfiguration(address,uint8)":{"details":"Returns the configuration of the reserve","params":{"asset":"The address of the underlying asset of the reserve"},"returns":{"_0":"The configuration of the reserve*"}},"getReserveData(address,uint8)":{"details":"Returns the state and configuration of the reserve","params":{"asset":"The address of the underlying asset of the reserve"},"returns":{"_0":"The state of the reserve*"}},"getReserveNormalizedIncome(address,uint8)":{"details":"Returns the normalized income normalized income of the reserve","params":{"asset":"The address of the underlying asset of the reserve"},"returns":{"_0":"The reserve's normalized income"}},"getReserveNormalizedVariableDebt(address,uint8)":{"details":"Returns the normalized variable debt per unit of asset","params":{"asset":"The address of the underlying asset of the reserve"},"returns":{"_0":"The reserve normalized variable debt"}},"getUserAccountData(address,uint8)":{"details":"Returns the user account data across all the reserves","params":{"user":"The address of the user"},"returns":{"availableBorrowsETH":"the borrowing power left of the user","currentLiquidationThreshold":"the liquidation threshold of the user","healthFactor":"the current health factor of the user*","ltv":"the loan to value of the user","totalCollateralETH":"the total collateral in ETH of the user","totalDebtETH":"the total debt in ETH of the user"}},"getUserConfiguration(address)":{"details":"Returns the configuration of the user across all the reserves","params":{"user":"The user address"},"returns":{"_0":"The configuration of the user*"}},"liquidationCall(address,address,uint8,address,uint256,bool)":{"details":"Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1 - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk","params":{"collateralAsset":"The address of the underlying asset used as collateral, to receive as result of the liquidation","debtAsset":"The address of the underlying borrowed asset to be repaid with the liquidation","debtToCover":"The debt amount of borrowed `asset` the liquidator wants to cover","receiveAToken":"`true` if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly*","user":"The address of the borrower getting liquidated"}},"rebalanceStableBorrowRate(address,uint8,address)":{"details":"Rebalances the stable interest rate of a user to the current stable rate defined on the reserve. - Users can be rebalanced if the following conditions are satisfied:     1. Usage ratio is above 95%     2. the current deposit APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been        borrowed at a stable rate and depositors are not earning enough","params":{"asset":"The address of the underlying asset borrowed","user":"The address of the user to be rebalanced*"}},"repay(address,uint8,uint256,uint256,address)":{"params":{"amount":"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`","asset":"The address of the borrowed underlying asset previously borrowed","onBehalfOf":"Address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed","rateMode":"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable"},"returns":{"_0":"The final amount repaid*"}},"setAssetData(address,uint8,bool,bool,uint8)":{"details":"Updates the address of the interest rate strategy contract - Only callable by the LendingPoolConfigurator contract","params":{"_risk":"The risk of the asset*","asset":"The address of the underlying asset of the reserve"}},"setUserUseReserveAsCollateral(address,uint8,bool)":{"details":"Allows depositors to enable/disable a specific deposited asset as collateral","params":{"asset":"The address of the underlying asset deposited","useAsCollateral":"`true` if the user wants to use the deposit as collateral, `false` otherwise*"}},"swapBorrowRateMode(address,uint8,uint256)":{"details":"Allows a borrower to swap his debt between stable and variable mode, or viceversa","params":{"asset":"The address of the underlying asset borrowed","rateMode":"The rate mode that the user wants to swap to*"}},"withdraw(address,uint8,uint256,address)":{"details":"Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC","params":{"amount":"The underlying amount to be withdrawn   - Send the value type(uint256).max in order to withdraw the whole aToken balance","asset":"The address of the underlying asset to withdraw","to":"Address that will receive the underlying, same as msg.sender if the user   wants to receive it on his own wallet, or a different address if the beneficiary is a   different wallet"},"returns":{"_0":"The final amount withdrawn*"}}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"borrow(address,uint8,uint256,uint256,uint16,address)":"f182c036","deposit(address,uint8,bool,uint256,address,uint16)":"f6118476","editTrancheMultiplier(uint8,uint256,uint256,uint256)":"14058967","finalizeTransfer(address,uint8,address,address,uint256,uint256,uint256)":"c1fc1e90","flashLoan(address,(uint8,address)[],uint256[],uint256[],address,bytes,uint16)":"0782623e","getAddressesProvider()":"fe65acfe","getAssetData(address)":"1652e7b7","getConfiguration(address,uint8)":"39142300","getReserveData(address,uint8)":"3629e3cd","getReserveNormalizedIncome(address,uint8)":"776f6891","getReserveNormalizedVariableDebt(address,uint8)":"013351ef","getReservesList()":"d1946dbc","getTrancheMultiplier(uint8)":"bfb88060","getUserAccountData(address,uint8)":"60e96389","getUserConfiguration(address)":"4417a583","initReserve(address,address,address,address,address,uint8)":"7b6d52d4","liquidationCall(address,address,uint8,address,uint256,bool)":"3f2591f7","paused()":"5c975abb","rebalanceStableBorrowRate(address,uint8,address)":"a7c245f0","repay(address,uint8,uint256,uint256,address)":"624490d4","setAssetData(address,uint8,bool,bool,uint8)":"9f71ff22","setConfiguration(address,uint8,uint256)":"f13771da","setPause(bool)":"bedb86fb","setReserveInterestRateStrategyAddress(address,uint8,address)":"de14ae28","setUserUseReserveAsCollateral(address,uint8,bool)":"9372e1e7","swapBorrowRateMode(address,uint8,uint256)":"f2e1cf16","withdraw(address,uint8,uint256,address)":"452572f3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"tranche\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referral\",\"type\":\"uint16\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"FlashLoan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"debtAsset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"debtToCover\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidatedCollateralAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"receiveAToken\",\"type\":\"bool\"}],\"name\":\"LiquidationCall\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"RebalanceStableBorrowRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"repayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Repay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stableBorrowRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"variableBorrowRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"variableBorrowIndex\",\"type\":\"uint256\"}],\"name\":\"ReserveDataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ReserveUsedAsCollateralDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ReserveUsedAsCollateralEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rateMode\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"tranche\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"tranche\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isCollateral\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"tranche\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_liquidityRateMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_variableBorrowRateMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stableBorrowRateMultiplier\",\"type\":\"uint256\"}],\"name\":\"editTrancheMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"tranche\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceFromAfter\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceToBefore\",\"type\":\"uint256\"}],\"name\":\"finalizeTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"tranche\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"internalType\":\"struct DataTypes.TrancheAddress[]\",\"name\":\"assets\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"modes\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"flashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddressesProvider\",\"outputs\":[{\"internalType\":\"contract ILendingPoolAddressesProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"collateralRisk\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isLendable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isAllowedCollateralInHigherTranches\",\"type\":\"bool\"},{\"internalType\":\"enum DataTypes.ReserveAssetType\",\"name\":\"assetType\",\"type\":\"uint8\"}],\"internalType\":\"struct DataTypes.AssetData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"tranche\",\"type\":\"uint8\"}],\"name\":\"getConfiguration\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.ReserveConfigurationMap\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"tranche\",\"type\":\"uint8\"}],\"name\":\"getReserveData\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.ReserveConfigurationMap\",\"name\":\"configuration\",\"type\":\"tuple\"},{\"internalType\":\"uint128\",\"name\":\"liquidityIndex\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"variableBorrowIndex\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentLiquidityRate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentVariableBorrowRate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentStableBorrowRate\",\"type\":\"uint128\"},{\"internalType\":\"uint40\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint40\"},{\"internalType\":\"address\",\"name\":\"aTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stableDebtTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"variableDebtTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"interestRateStrategyAddress\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"tranche\",\"type\":\"uint8\"}],\"internalType\":\"struct DataTypes.ReserveData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"tranche\",\"type\":\"uint8\"}],\"name\":\"getReserveNormalizedIncome\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"tranche\",\"type\":\"uint8\"}],\"name\":\"getReserveNormalizedVariableDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReservesList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"tranche\",\"type\":\"uint8\"}],\"name\":\"getTrancheMultiplier\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"liquidityRateMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"variableBorrowRateMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stableBorrowRateMultiplier\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.TrancheMultiplier\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"tranche\",\"type\":\"uint8\"}],\"name\":\"getUserAccountData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalCollateralETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDebtETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"availableBorrowsETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentLiquidationThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ltv\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"healthFactor\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserConfiguration\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.UserConfigurationMap\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"aTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stableDebtAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"variableDebtAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"interestRateStrategyAddress\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"tranche\",\"type\":\"uint8\"}],\"name\":\"initReserve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"debtAsset\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"tranche\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"debtToCover\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"receiveAToken\",\"type\":\"bool\"}],\"name\":\"liquidationCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"tranche\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"rebalanceStableBorrowRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"tranche\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateMode\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"name\":\"repay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_risk\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"_isLendable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_allowedHigherTranche\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"_assetType\",\"type\":\"uint8\"}],\"name\":\"setAssetData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"tranche\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"configuration\",\"type\":\"uint256\"}],\"name\":\"setConfiguration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"val\",\"type\":\"bool\"}],\"name\":\"setPause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"tranche\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"rateStrategyAddress\",\"type\":\"address\"}],\"name\":\"setReserveInterestRateStrategyAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"tranche\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"useAsCollateral\",\"type\":\"bool\"}],\"name\":\"setUserUseReserveAsCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"tranche\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"rateMode\",\"type\":\"uint256\"}],\"name\":\"swapBorrowRateMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"tranche\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Deposit(address,uint8,address,address,uint256,uint16)\":{\"details\":\"Emitted on deposit()\",\"params\":{\"amount\":\"The amount deposited\",\"onBehalfOf\":\"The beneficiary of the deposit, receiving the aTokens\",\"referral\":\"The referral code used*\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address initiating the deposit\"}},\"FlashLoan(address,address,address,uint256,uint256,uint16)\":{\"details\":\"Emitted on flashLoan()\",\"params\":{\"amount\":\"The amount flash borrowed\",\"asset\":\"The address of the asset being flash borrowed\",\"initiator\":\"The address initiating the flash loan\",\"premium\":\"The fee flash borrowed\",\"referralCode\":\"The referral code used*\",\"target\":\"The address of the flash loan receiver contract\"}},\"LiquidationCall(address,address,address,uint256,uint256,address,bool)\":{\"details\":\"Emitted when a borrower is liquidated. This event is emitted by the LendingPool via LendingPoolCollateral manager using a DELEGATECALL This allows to have the events in the generated ABI for LendingPool.\",\"params\":{\"collateralAsset\":\"The address of the underlying asset used as collateral, to receive as result of the liquidation\",\"debtAsset\":\"The address of the underlying borrowed asset to be repaid with the liquidation\",\"debtToCover\":\"The debt amount of borrowed `asset` the liquidator wants to cover\",\"liquidatedCollateralAmount\":\"The amount of collateral received by the liiquidator\",\"liquidator\":\"The address of the liquidator\",\"receiveAToken\":\"`true` if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly*\",\"user\":\"The address of the borrower getting liquidated\"}},\"Paused()\":{\"details\":\"Emitted when the pause is triggered.\"},\"RebalanceStableBorrowRate(address,address)\":{\"details\":\"Emitted on rebalanceStableBorrowRate()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user for which the rebalance has been executed*\"}},\"Repay(address,address,address,uint256)\":{\"details\":\"Emitted on repay()\",\"params\":{\"amount\":\"The amount repaid*\",\"repayer\":\"The address of the user initiating the repay(), providing the funds\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The beneficiary of the repayment, getting his debt reduced\"}},\"ReserveDataUpdated(address,uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"Emitted when the state of a reserve is updated. NOTE: This event is actually declared in the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal, the event will actually be fired by the LendingPool contract. The event is therefore replicated here so it gets added to the LendingPool ABI\",\"params\":{\"liquidityIndex\":\"The new liquidity index\",\"liquidityRate\":\"The new liquidity rate\",\"reserve\":\"The address of the underlying asset of the reserve\",\"stableBorrowRate\":\"The new stable borrow rate\",\"variableBorrowIndex\":\"The new variable borrow index*\",\"variableBorrowRate\":\"The new variable borrow rate\"}},\"ReserveUsedAsCollateralDisabled(address,address)\":{\"details\":\"Emitted on setUserUseReserveAsCollateral()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user enabling the usage as collateral*\"}},\"ReserveUsedAsCollateralEnabled(address,address)\":{\"details\":\"Emitted on setUserUseReserveAsCollateral()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user enabling the usage as collateral*\"}},\"Swap(address,address,uint256)\":{\"details\":\"Emitted on swapBorrowRateMode()\",\"params\":{\"rateMode\":\"The rate mode that the user wants to swap to*\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user swapping his rate mode\"}},\"Unpaused()\":{\"details\":\"Emitted when the pause is lifted.\"},\"Withdraw(address,address,address,uint256)\":{\"details\":\"Emitted on withdraw()\",\"params\":{\"amount\":\"The amount to be withdrawn*\",\"reserve\":\"The address of the underlyng asset being withdrawn\",\"to\":\"Address that will receive the underlying\",\"user\":\"The address initiating the withdrawal, owner of aTokens\"}}},\"kind\":\"dev\",\"methods\":{\"borrow(address,uint8,uint256,uint256,uint16,address)\":{\"details\":\"Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower already deposited enough collateral, or he was given enough allowance by a credit delegator on the corresponding debt token (StableDebtToken or VariableDebtToken) - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet   and 100 stable/variable debt tokens, depending on the `interestRateMode`\",\"params\":{\"amount\":\"The amount to be borrowed\",\"asset\":\"The address of the underlying asset to borrow\",\"interestRateMode\":\"The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"Address of the user who will receive the debt. Should be the address of the borrower itself calling the function if he wants to borrow against his own collateral, or the address of the credit delegator if he has been given credit delegation allowance*\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"deposit(address,uint8,bool,uint256,address,uint16)\":{\"details\":\"Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User deposits 100 USDC and gets in return 100 aUSDC\",\"params\":{\"amount\":\"The amount to be deposited\",\"asset\":\"The address of the underlying asset to deposit\",\"onBehalfOf\":\"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*\"}},\"flashLoan(address,(uint8,address)[],uint256[],uint256[],address,bytes,uint16)\":{\"details\":\"Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned. IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://developers.aave.com\",\"params\":{\"amounts\":\"The amounts amounts being flash-borrowed\",\"assets\":\"The addresses of the assets being flash-borrowed\",\"modes\":\"Types of the debt to open if the flash loan is not returned:   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\",\"onBehalfOf\":\"The address  that will receive the debt in the case of using on `modes` 1 or 2\",\"params\":\"Variadic packed params to pass to the receiver as extra information\",\"receiverAddress\":\"The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*\"}},\"getConfiguration(address,uint8)\":{\"details\":\"Returns the configuration of the reserve\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The configuration of the reserve*\"}},\"getReserveData(address,uint8)\":{\"details\":\"Returns the state and configuration of the reserve\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The state of the reserve*\"}},\"getReserveNormalizedIncome(address,uint8)\":{\"details\":\"Returns the normalized income normalized income of the reserve\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The reserve's normalized income\"}},\"getReserveNormalizedVariableDebt(address,uint8)\":{\"details\":\"Returns the normalized variable debt per unit of asset\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The reserve normalized variable debt\"}},\"getUserAccountData(address,uint8)\":{\"details\":\"Returns the user account data across all the reserves\",\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"availableBorrowsETH\":\"the borrowing power left of the user\",\"currentLiquidationThreshold\":\"the liquidation threshold of the user\",\"healthFactor\":\"the current health factor of the user*\",\"ltv\":\"the loan to value of the user\",\"totalCollateralETH\":\"the total collateral in ETH of the user\",\"totalDebtETH\":\"the total debt in ETH of the user\"}},\"getUserConfiguration(address)\":{\"details\":\"Returns the configuration of the user across all the reserves\",\"params\":{\"user\":\"The user address\"},\"returns\":{\"_0\":\"The configuration of the user*\"}},\"liquidationCall(address,address,uint8,address,uint256,bool)\":{\"details\":\"Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1 - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\",\"params\":{\"collateralAsset\":\"The address of the underlying asset used as collateral, to receive as result of the liquidation\",\"debtAsset\":\"The address of the underlying borrowed asset to be repaid with the liquidation\",\"debtToCover\":\"The debt amount of borrowed `asset` the liquidator wants to cover\",\"receiveAToken\":\"`true` if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly*\",\"user\":\"The address of the borrower getting liquidated\"}},\"rebalanceStableBorrowRate(address,uint8,address)\":{\"details\":\"Rebalances the stable interest rate of a user to the current stable rate defined on the reserve. - Users can be rebalanced if the following conditions are satisfied:     1. Usage ratio is above 95%     2. the current deposit APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been        borrowed at a stable rate and depositors are not earning enough\",\"params\":{\"asset\":\"The address of the underlying asset borrowed\",\"user\":\"The address of the user to be rebalanced*\"}},\"repay(address,uint8,uint256,uint256,address)\":{\"params\":{\"amount\":\"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\",\"asset\":\"The address of the borrowed underlying asset previously borrowed\",\"onBehalfOf\":\"Address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed\",\"rateMode\":\"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\"},\"returns\":{\"_0\":\"The final amount repaid*\"}},\"setAssetData(address,uint8,bool,bool,uint8)\":{\"details\":\"Updates the address of the interest rate strategy contract - Only callable by the LendingPoolConfigurator contract\",\"params\":{\"_risk\":\"The risk of the asset*\",\"asset\":\"The address of the underlying asset of the reserve\"}},\"setUserUseReserveAsCollateral(address,uint8,bool)\":{\"details\":\"Allows depositors to enable/disable a specific deposited asset as collateral\",\"params\":{\"asset\":\"The address of the underlying asset deposited\",\"useAsCollateral\":\"`true` if the user wants to use the deposit as collateral, `false` otherwise*\"}},\"swapBorrowRateMode(address,uint8,uint256)\":{\"details\":\"Allows a borrower to swap his debt between stable and variable mode, or viceversa\",\"params\":{\"asset\":\"The address of the underlying asset borrowed\",\"rateMode\":\"The rate mode that the user wants to swap to*\"}},\"withdraw(address,uint8,uint256,address)\":{\"details\":\"Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\",\"params\":{\"amount\":\"The underlying amount to be withdrawn   - Send the value type(uint256).max in order to withdraw the whole aToken balance\",\"asset\":\"The address of the underlying asset to withdraw\",\"to\":\"Address that will receive the underlying, same as msg.sender if the user   wants to receive it on his own wallet, or a different address if the beneficiary is a   different wallet\"},\"returns\":{\"_0\":\"The final amount withdrawn*\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"repay(address,uint8,uint256,uint256,address)\":{\"notice\":\"Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ILendingPool.sol\":\"ILendingPool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ILendingPool.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\nimport {ILendingPoolAddressesProvider} from \\\"./ILendingPoolAddressesProvider.sol\\\";\\nimport {DataTypes} from \\\"../protocol/libraries/types/DataTypes.sol\\\";\\n\\ninterface ILendingPool {\\n    /**\\n     * @dev Emitted on deposit()\\n     * @param reserve The address of the underlying asset of the reserve\\n     * @param user The address initiating the deposit\\n     * @param onBehalfOf The beneficiary of the deposit, receiving the aTokens\\n     * @param amount The amount deposited\\n     * @param referral The referral code used\\n     **/\\n    event Deposit(\\n        address indexed reserve,\\n        uint8 tranche,\\n        address user,\\n        address indexed onBehalfOf,\\n        uint256 amount,\\n        uint16 indexed referral\\n    );\\n\\n    /**\\n     * @dev Emitted on withdraw()\\n     * @param reserve The address of the underlyng asset being withdrawn\\n     * @param user The address initiating the withdrawal, owner of aTokens\\n     * @param to Address that will receive the underlying\\n     * @param amount The amount to be withdrawn\\n     **/\\n    event Withdraw(\\n        address indexed reserve,\\n        address indexed user,\\n        address indexed to,\\n        uint256 amount\\n    );\\n\\n    /**\\n     * @dev Emitted on repay()\\n     * @param reserve The address of the underlying asset of the reserve\\n     * @param user The beneficiary of the repayment, getting his debt reduced\\n     * @param repayer The address of the user initiating the repay(), providing the funds\\n     * @param amount The amount repaid\\n     **/\\n    event Repay(\\n        address indexed reserve,\\n        address indexed user,\\n        address indexed repayer,\\n        uint256 amount\\n    );\\n\\n    /**\\n     * @dev Emitted on swapBorrowRateMode()\\n     * @param reserve The address of the underlying asset of the reserve\\n     * @param user The address of the user swapping his rate mode\\n     * @param rateMode The rate mode that the user wants to swap to\\n     **/\\n    event Swap(address indexed reserve, address indexed user, uint256 rateMode);\\n\\n    /**\\n     * @dev Emitted on setUserUseReserveAsCollateral()\\n     * @param reserve The address of the underlying asset of the reserve\\n     * @param user The address of the user enabling the usage as collateral\\n     **/\\n    event ReserveUsedAsCollateralEnabled(\\n        address indexed reserve,\\n        address indexed user\\n    );\\n\\n    /**\\n     * @dev Emitted on setUserUseReserveAsCollateral()\\n     * @param reserve The address of the underlying asset of the reserve\\n     * @param user The address of the user enabling the usage as collateral\\n     **/\\n    event ReserveUsedAsCollateralDisabled(\\n        address indexed reserve,\\n        address indexed user\\n    );\\n\\n    /**\\n     * @dev Emitted on rebalanceStableBorrowRate()\\n     * @param reserve The address of the underlying asset of the reserve\\n     * @param user The address of the user for which the rebalance has been executed\\n     **/\\n    event RebalanceStableBorrowRate(\\n        address indexed reserve,\\n        address indexed user\\n    );\\n\\n    /**\\n     * @dev Emitted on flashLoan()\\n     * @param target The address of the flash loan receiver contract\\n     * @param initiator The address initiating the flash loan\\n     * @param asset The address of the asset being flash borrowed\\n     * @param amount The amount flash borrowed\\n     * @param premium The fee flash borrowed\\n     * @param referralCode The referral code used\\n     **/\\n    event FlashLoan(\\n        address indexed target,\\n        address indexed initiator,\\n        address indexed asset,\\n        uint256 amount,\\n        uint256 premium,\\n        uint16 referralCode\\n    );\\n\\n    /**\\n     * @dev Emitted when the pause is triggered.\\n     */\\n    event Paused();\\n\\n    /**\\n     * @dev Emitted when the pause is lifted.\\n     */\\n    event Unpaused();\\n\\n    /**\\n     * @dev Emitted when a borrower is liquidated. This event is emitted by the LendingPool via\\n     * LendingPoolCollateral manager using a DELEGATECALL\\n     * This allows to have the events in the generated ABI for LendingPool.\\n     * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\\n     * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\\n     * @param user The address of the borrower getting liquidated\\n     * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\\n     * @param liquidatedCollateralAmount The amount of collateral received by the liiquidator\\n     * @param liquidator The address of the liquidator\\n     * @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\\n     * to receive the underlying collateral asset directly\\n     **/\\n    event LiquidationCall(\\n        address indexed collateralAsset,\\n        address indexed debtAsset,\\n        address indexed user,\\n        uint256 debtToCover,\\n        uint256 liquidatedCollateralAmount,\\n        address liquidator,\\n        bool receiveAToken\\n    );\\n\\n    /**\\n     * @dev Emitted when the state of a reserve is updated. NOTE: This event is actually declared\\n     * in the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal,\\n     * the event will actually be fired by the LendingPool contract. The event is therefore replicated here so it\\n     * gets added to the LendingPool ABI\\n     * @param reserve The address of the underlying asset of the reserve\\n     * @param liquidityRate The new liquidity rate\\n     * @param stableBorrowRate The new stable borrow rate\\n     * @param variableBorrowRate The new variable borrow rate\\n     * @param liquidityIndex The new liquidity index\\n     * @param variableBorrowIndex The new variable borrow index\\n     **/\\n    event ReserveDataUpdated(\\n        address indexed reserve,\\n        uint256 liquidityRate,\\n        uint256 stableBorrowRate,\\n        uint256 variableBorrowRate,\\n        uint256 liquidityIndex,\\n        uint256 variableBorrowIndex\\n    );\\n\\n    /**\\n     * @dev Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\\n     * - E.g. User deposits 100 USDC and gets in return 100 aUSDC\\n     * @param asset The address of the underlying asset to deposit\\n     * @param amount The amount to be deposited\\n     * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\\n     *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\\n     *   is a different wallet\\n     * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\\n     *   0 if the action is executed directly by the user, without any middle-man\\n     **/\\n    function deposit(\\n        address asset,\\n        uint8 tranche,\\n        bool isCollateral,\\n        uint256 amount,\\n        address onBehalfOf,\\n        uint16 referralCode\\n    ) external;\\n\\n    /**\\n     * @dev Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned\\n     * E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\\n     * @param asset The address of the underlying asset to withdraw\\n     * @param amount The underlying amount to be withdrawn\\n     *   - Send the value type(uint256).max in order to withdraw the whole aToken balance\\n     * @param to Address that will receive the underlying, same as msg.sender if the user\\n     *   wants to receive it on his own wallet, or a different address if the beneficiary is a\\n     *   different wallet\\n     * @return The final amount withdrawn\\n     **/\\n    function withdraw(\\n        address asset,\\n        uint8 tranche,\\n        uint256 amount,\\n        address to\\n    ) external returns (uint256);\\n\\n    /**\\n     * @dev Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower\\n     * already deposited enough collateral, or he was given enough allowance by a credit delegator on the\\n     * corresponding debt token (StableDebtToken or VariableDebtToken)\\n     * - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet\\n     *   and 100 stable/variable debt tokens, depending on the `interestRateMode`\\n     * @param asset The address of the underlying asset to borrow\\n     * @param amount The amount to be borrowed\\n     * @param interestRateMode The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\\n     * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\\n     *   0 if the action is executed directly by the user, without any middle-man\\n     * @param onBehalfOf Address of the user who will receive the debt. Should be the address of the borrower itself\\n     * calling the function if he wants to borrow against his own collateral, or the address of the credit delegator\\n     * if he has been given credit delegation allowance\\n     **/\\n    function borrow(\\n        address asset,\\n        uint8 tranche,\\n        uint256 amount,\\n        uint256 interestRateMode,\\n        uint16 referralCode,\\n        address onBehalfOf\\n    ) external;\\n\\n    /**\\n     * @notice Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned\\n     * - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\\n     * @param asset The address of the borrowed underlying asset previously borrowed\\n     * @param amount The amount to repay\\n     * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\\n     * @param rateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\\n     * @param onBehalfOf Address of the user who will get his debt reduced/removed. Should be the address of the\\n     * user calling the function if he wants to reduce/remove his own debt, or the address of any other\\n     * other borrower whose debt should be removed\\n     * @return The final amount repaid\\n     **/\\n    function repay(\\n        address asset,\\n        uint8 tranche,\\n        uint256 amount,\\n        uint256 rateMode,\\n        address onBehalfOf\\n    ) external returns (uint256);\\n\\n    /**\\n     * @dev Allows a borrower to swap his debt between stable and variable mode, or viceversa\\n     * @param asset The address of the underlying asset borrowed\\n     * @param rateMode The rate mode that the user wants to swap to\\n     **/\\n    function swapBorrowRateMode(\\n        address asset,\\n        uint8 tranche,\\n        uint256 rateMode\\n    ) external;\\n\\n    /**\\n     * @dev Rebalances the stable interest rate of a user to the current stable rate defined on the reserve.\\n     * - Users can be rebalanced if the following conditions are satisfied:\\n     *     1. Usage ratio is above 95%\\n     *     2. the current deposit APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been\\n     *        borrowed at a stable rate and depositors are not earning enough\\n     * @param asset The address of the underlying asset borrowed\\n     * @param user The address of the user to be rebalanced\\n     **/\\n    function rebalanceStableBorrowRate(\\n        address asset,\\n        uint8 tranche,\\n        address user\\n    ) external;\\n\\n    /**\\n     * @dev Allows depositors to enable/disable a specific deposited asset as collateral\\n     * @param asset The address of the underlying asset deposited\\n     * @param useAsCollateral `true` if the user wants to use the deposit as collateral, `false` otherwise\\n     **/\\n    function setUserUseReserveAsCollateral(\\n        address asset,\\n        uint8 tranche,\\n        bool useAsCollateral\\n    ) external;\\n\\n    /**\\n     * @dev Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1\\n     * - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives\\n     *   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\\n     * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\\n     * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\\n     * @param user The address of the borrower getting liquidated\\n     * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\\n     * @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\\n     * to receive the underlying collateral asset directly\\n     **/\\n    function liquidationCall(\\n        address collateralAsset,\\n        address debtAsset,\\n        uint8 tranche,\\n        address user,\\n        uint256 debtToCover,\\n        bool receiveAToken\\n    ) external;\\n\\n    /**\\n     * @dev Allows smartcontracts to access the liquidity of the pool within one transaction,\\n     * as long as the amount taken plus a fee is returned.\\n     * IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration.\\n     * For further details please visit https://developers.aave.com\\n     * @param receiverAddress The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface\\n     * @param assets The addresses of the assets being flash-borrowed\\n     * @param amounts The amounts amounts being flash-borrowed\\n     * @param modes Types of the debt to open if the flash loan is not returned:\\n     *   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver\\n     *   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\\n     *   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\\n     * @param onBehalfOf The address  that will receive the debt in the case of using on `modes` 1 or 2\\n     * @param params Variadic packed params to pass to the receiver as extra information\\n     * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\\n     *   0 if the action is executed directly by the user, without any middle-man\\n     **/\\n    function flashLoan(\\n        address receiverAddress,\\n        DataTypes.TrancheAddress[] calldata assets,\\n        uint256[] calldata amounts,\\n        uint256[] calldata modes,\\n        address onBehalfOf,\\n        bytes calldata params,\\n        uint16 referralCode\\n    ) external;\\n\\n    /**\\n     * @dev Returns the user account data across all the reserves\\n     * @param user The address of the user\\n     * @return totalCollateralETH the total collateral in ETH of the user\\n     * @return totalDebtETH the total debt in ETH of the user\\n     * @return availableBorrowsETH the borrowing power left of the user\\n     * @return currentLiquidationThreshold the liquidation threshold of the user\\n     * @return ltv the loan to value of the user\\n     * @return healthFactor the current health factor of the user\\n     **/\\n    function getUserAccountData(address user, uint8 tranche)\\n        external\\n        view\\n        returns (\\n            uint256 totalCollateralETH,\\n            uint256 totalDebtETH,\\n            uint256 availableBorrowsETH,\\n            uint256 currentLiquidationThreshold,\\n            uint256 ltv,\\n            uint256 healthFactor\\n        );\\n\\n    function initReserve(\\n        address reserve,\\n        address aTokenAddress,\\n        address stableDebtAddress,\\n        address variableDebtAddress,\\n        address interestRateStrategyAddress,\\n        uint8 tranche\\n    ) external;\\n\\n    /**\\n     * @dev Updates the address of the interest rate strategy contract\\n     * - Only callable by the LendingPoolConfigurator contract\\n     * @param asset The address of the underlying asset of the reserve\\n     * @param _risk The risk of the asset\\n     **/\\n    function setAssetData(\\n        address asset,\\n        uint8 _risk,\\n        bool _isLendable,\\n        bool _allowedHigherTranche,\\n        uint8 _assetType\\n    ) external;\\n\\n    function setReserveInterestRateStrategyAddress(\\n        address reserve,\\n        uint8 tranche,\\n        address rateStrategyAddress\\n    ) external;\\n\\n    function setConfiguration(\\n        address reserve,\\n        uint8 tranche,\\n        uint256 configuration\\n    ) external;\\n\\n    /**\\n     * @dev Returns the configuration of the reserve\\n     * @param asset The address of the underlying asset of the reserve\\n     * @return The configuration of the reserve\\n     **/\\n    function getConfiguration(address asset, uint8 tranche)\\n        external\\n        view\\n        returns (DataTypes.ReserveConfigurationMap memory);\\n\\n    /**\\n     * @dev Returns the configuration of the user across all the reserves\\n     * @param user The user address\\n     * @return The configuration of the user\\n     **/\\n    function getUserConfiguration(address user)\\n        external\\n        view\\n        returns (DataTypes.UserConfigurationMap memory);\\n\\n    /**\\n     * @dev Returns the normalized income normalized income of the reserve\\n     * @param asset The address of the underlying asset of the reserve\\n     * @return The reserve's normalized income\\n     */\\n    function getReserveNormalizedIncome(address asset, uint8 tranche)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /**\\n     * @dev Returns the normalized variable debt per unit of asset\\n     * @param asset The address of the underlying asset of the reserve\\n     * @return The reserve normalized variable debt\\n     */\\n    function getReserveNormalizedVariableDebt(address asset, uint8 tranche)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /**\\n     * @dev Returns the state and configuration of the reserve\\n     * @param asset The address of the underlying asset of the reserve\\n     * @return The state of the reserve\\n     **/\\n    function getReserveData(address asset, uint8 tranche)\\n        external\\n        view\\n        returns (DataTypes.ReserveData memory);\\n\\n    function finalizeTransfer(\\n        address asset,\\n        uint8 tranche,\\n        address from,\\n        address to,\\n        uint256 amount,\\n        uint256 balanceFromAfter,\\n        uint256 balanceToBefore\\n    ) external;\\n\\n    function getReservesList() external view returns (address[] memory);\\n\\n    function getAssetData(address asset)\\n        external\\n        view\\n        returns (DataTypes.AssetData memory);\\n\\n    function getAddressesProvider()\\n        external\\n        view\\n        returns (ILendingPoolAddressesProvider);\\n\\n    function setPause(bool val) external;\\n\\n    function paused() external view returns (bool);\\n\\n    function editTrancheMultiplier(\\n        uint8 tranche,\\n        uint256 _liquidityRateMultiplier,\\n        uint256 _variableBorrowRateMultiplier,\\n        uint256 _stableBorrowRateMultiplier\\n    ) external;\\n\\n    function getTrancheMultiplier(uint8 tranche)\\n        external\\n        view\\n        returns (DataTypes.TrancheMultiplier memory);\\n}\\n\",\"keccak256\":\"0xa749eacaf399a92bfe2441ca9f3c81a17c1823d122b98361771159b0ab660c8e\",\"license\":\"agpl-3.0\"},\"contracts/interfaces/ILendingPoolAddressesProvider.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\nimport {DataTypes} from \\\"../protocol/libraries/types/DataTypes.sol\\\";\\n\\n/**\\n * @title LendingPoolAddressesProvider contract\\n * @dev Main registry of addresses part of or connected to the protocol, including permissioned roles\\n * - Acting also as factory of proxies and admin of those, so with right to change its implementations\\n * - Owned by the Aave Governance\\n * @author Aave\\n **/\\ninterface ILendingPoolAddressesProvider {\\n    event MarketIdSet(string newMarketId);\\n    event LendingPoolUpdated(address indexed newAddress);\\n    event ConfigurationAdminUpdated(address indexed newAddress);\\n    event EmergencyAdminUpdated(address indexed newAddress);\\n    event LendingPoolConfiguratorUpdated(address indexed newAddress);\\n    event LendingPoolCollateralManagerUpdated(address indexed newAddress);\\n    event PriceOracleUpdated(address indexed newAddress);\\n    event CurvePriceOracleUpdated(address indexed newAddress);\\n    event CurvePriceOracleWrapperUpdated(address indexed newAddress);\\n    event CurveAddressProviderUpdated(address indexed newAddress);\\n    event LendingRateOracleUpdated(address indexed newAddress);\\n    event ProxyCreated(bytes32 id, address indexed newAddress);\\n    event AddressSet(bytes32 id, address indexed newAddress, bool hasProxy);\\n\\n    function getMarketId() external view returns (string memory);\\n\\n    function setMarketId(string calldata marketId) external;\\n\\n    function setAddress(bytes32 id, address newAddress) external;\\n\\n    function setAddressAsProxy(bytes32 id, address impl) external;\\n\\n    function getAddress(bytes32 id) external view returns (address);\\n\\n    function getLendingPool() external view returns (address);\\n\\n    function setLendingPoolImpl(address pool) external;\\n\\n    function getLendingPoolConfigurator() external view returns (address);\\n\\n    function setLendingPoolConfiguratorImpl(address configurator) external;\\n\\n    function getLendingPoolCollateralManager() external view returns (address);\\n\\n    function setLendingPoolCollateralManager(address manager) external;\\n\\n    function getPoolAdmin() external view returns (address);\\n\\n    function setPoolAdmin(address admin) external;\\n\\n    function getEmergencyAdmin() external view returns (address);\\n\\n    function setEmergencyAdmin(address admin) external;\\n\\n    function getPriceOracle(DataTypes.ReserveAssetType assetType)\\n        external\\n        view\\n        returns (address);\\n\\n    function getAavePriceOracle() external view returns (address);\\n\\n    function getCurvePriceOracle() external view returns (address);\\n\\n    function getCurvePriceOracleWrapper() external view returns (address);\\n\\n    function getCurveAddressProvider() external view returns (address);\\n\\n    function setAavePriceOracle(address priceOracle) external;\\n\\n    function setCurveAddressProvider(address addressProvider) external;\\n\\n    function setCurvePriceOracle(address priceOracle) external;\\n\\n    function setCurvePriceOracleWrapper(address priceOracle) external;\\n\\n    function getLendingRateOracle() external view returns (address);\\n\\n    function setLendingRateOracle(address lendingRateOracle) external;\\n}\\n\",\"keccak256\":\"0xd05a545a54108bcf8be808763206cadbceefbfdc9d3e0ceff97fbe7e767cfe5e\",\"license\":\"agpl-3.0\"},\"contracts/protocol/libraries/types/DataTypes.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\nlibrary DataTypes {\\n    // refer to the whitepaper, section 1.1 basic concepts for a formal description of these properties.\\n\\n    enum ReserveAssetType {\\n        AAVE,\\n        CURVE\\n    } //update with other possible types of the underlying asset\\n    //AAVE is the original assets in the aave protocol\\n    //CURVE is the new LP tokens we are providing support for\\n\\n    struct AssetData {\\n        uint8 collateralRisk;\\n        bool isLendable;\\n        bool isAllowedCollateralInHigherTranches;\\n        ReserveAssetType assetType;\\n    }\\n\\n    struct TrancheAddress {\\n        uint8 tranche;\\n        address asset;\\n    }\\n    struct ReserveData {\\n        //stores the reserve configuration\\n        ReserveConfigurationMap configuration;\\n        //the liquidity index. Expressed in ray\\n        uint128 liquidityIndex; //not used for nonlendable assets\\n        //variable borrow index. Expressed in ray\\n        uint128 variableBorrowIndex; //not used for nonlendable assets\\n        //the current supply rate. Expressed in ray\\n        uint128 currentLiquidityRate; //deposit APR is defined as liquidityRate / RAY //not used for nonlendable assets\\n        //the current variable borrow rate. Expressed in ray\\n        uint128 currentVariableBorrowRate; //not used for nonlendable assets\\n        //the current stable borrow rate. Expressed in ray\\n        uint128 currentStableBorrowRate; //not used for nonlendable assets\\n        uint40 lastUpdateTimestamp;\\n        //tokens addresses\\n        address aTokenAddress;\\n        address stableDebtTokenAddress; //not used for nonlendable assets\\n        address variableDebtTokenAddress; //not used for nonlendable assets\\n        //address of the interest rate strategy\\n        address interestRateStrategyAddress; //not used for nonlendable assets\\n        //the id of the reserve. Represents the position in the list of the active reserves\\n        uint8 id;\\n        uint8 tranche; //I think this will be used for nonlendable assets, cause your collateral only asset can be placed in higher tranche if necessary\\n    }\\n\\n    struct TrancheMultiplier {\\n        uint256 liquidityRateMultiplier;\\n        uint256 variableBorrowRateMultiplier;\\n        uint256 stableBorrowRateMultiplier;\\n    }\\n\\n    uint8 constant NUM_TRANCHES = 3;\\n\\n    struct ReserveConfigurationMap {\\n        //bit 0-15: LTV\\n        //bit 16-31: Liq. threshold\\n        //bit 32-47: Liq. bonus\\n        //bit 48-55: Decimals\\n        //bit 56: Reserve is active\\n        //bit 57: reserve is frozen\\n        //bit 58: borrowing is enabled\\n        //bit 59: stable rate borrowing enabled\\n        //bit 60-63: reserved\\n        //bit 64-79: reserve factor\\n        uint256 data;\\n    }\\n\\n    struct UserConfigurationMap {\\n        uint256 data;\\n    }\\n\\n    enum InterestRateMode {\\n        NONE,\\n        STABLE,\\n        VARIABLE\\n    }\\n\\n    struct AcctTranche {\\n        address user;\\n        uint8 tranche;\\n    }\\n\\n    struct DepositVars {\\n        address asset;\\n        uint8 tranche;\\n        uint8 risk;\\n        bool allowHigherTranche;\\n        bool isLendable;\\n        TrancheMultiplier t;\\n    }\\n\\n    struct ExecuteBorrowParams {\\n        address asset;\\n        uint8 tranche; //tranche the user wants to borrow out of\\n        address user;\\n        address onBehalfOf;\\n        uint256 amount;\\n        uint256 interestRateMode;\\n        address aTokenAddress;\\n        uint16 referralCode;\\n        bool releaseUnderlying;\\n        uint256 _maxStableRateBorrowSizePercent;\\n        uint256 _reservesCount;\\n        TrancheMultiplier t;\\n    }\\n\\n    struct WithdrawParams {\\n        uint256 _reservesCount;\\n        address asset;\\n        uint8 tranche;\\n        uint256 amount;\\n        address to;\\n        TrancheMultiplier t;\\n    }\\n\\n    struct ValidateSetUseReserveAsCollateralParams {\\n        uint8 risk;\\n        bool allowHigherTranche;\\n    }\\n\\n    struct calculateInterestRatesVars {\\n        address reserve;\\n        address aToken;\\n        uint256 liquidityAdded;\\n        uint256 liquidityTaken;\\n        uint256 reserveFactor;\\n    }\\n\\n    struct flashLoanVars {\\n        address receiverAddress;\\n        DataTypes.TrancheAddress[] assets;\\n        uint256[] amounts;\\n        uint256[] modes;\\n        address onBehalfOf;\\n        bytes params;\\n        uint16 referralCode;\\n        uint256 _flashLoanPremiumTotal;\\n        address oracle;\\n        uint256 _maxStableRateBorrowSizePercent;\\n        uint256 _reservesCount;\\n    }\\n}\\n\",\"keccak256\":\"0x7302b5b5775a9a0019bd062c95d5a94a0b7bfa4553ae872968cf8ecf7c35fc8f\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"repay(address,uint8,uint256,uint256,address)":{"notice":"Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address"}},"version":1}}},"contracts/interfaces/ILendingPoolAddressesProvider.sol":{"ILendingPoolAddressesProvider":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"id","type":"bytes32"},{"indexed":true,"internalType":"address","name":"newAddress","type":"address"},{"indexed":false,"internalType":"bool","name":"hasProxy","type":"bool"}],"name":"AddressSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"ConfigurationAdminUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"CurveAddressProviderUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"CurvePriceOracleUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"CurvePriceOracleWrapperUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"EmergencyAdminUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"LendingPoolCollateralManagerUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"LendingPoolConfiguratorUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"LendingPoolUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"LendingRateOracleUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"newMarketId","type":"string"}],"name":"MarketIdSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"PriceOracleUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"id","type":"bytes32"},{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"ProxyCreated","type":"event"},{"inputs":[],"name":"getAavePriceOracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"getAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurveAddressProvider","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurvePriceOracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurvePriceOracleWrapper","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getEmergencyAdmin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLendingPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLendingPoolCollateralManager","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLendingPoolConfigurator","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLendingRateOracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMarketId","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPoolAdmin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum DataTypes.ReserveAssetType","name":"assetType","type":"uint8"}],"name":"getPriceOracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"priceOracle","type":"address"}],"name":"setAavePriceOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"address","name":"newAddress","type":"address"}],"name":"setAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"address","name":"impl","type":"address"}],"name":"setAddressAsProxy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"addressProvider","type":"address"}],"name":"setCurveAddressProvider","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"priceOracle","type":"address"}],"name":"setCurvePriceOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"priceOracle","type":"address"}],"name":"setCurvePriceOracleWrapper","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"setEmergencyAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"manager","type":"address"}],"name":"setLendingPoolCollateralManager","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"configurator","type":"address"}],"name":"setLendingPoolConfiguratorImpl","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"setLendingPoolImpl","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"lendingRateOracle","type":"address"}],"name":"setLendingRateOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"marketId","type":"string"}],"name":"setMarketId","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"setPoolAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Aave*","details":"Main registry of addresses part of or connected to the protocol, including permissioned roles - Acting also as factory of proxies and admin of those, so with right to change its implementations - Owned by the Aave Governance","kind":"dev","methods":{},"title":"LendingPoolAddressesProvider contract","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getAavePriceOracle()":"f139dc81","getAddress(bytes32)":"21f8a721","getCurveAddressProvider()":"59696e16","getCurvePriceOracle()":"ba61fe31","getCurvePriceOracleWrapper()":"992ecae7","getEmergencyAdmin()":"ddcaa9ea","getLendingPool()":"0261bf8b","getLendingPoolCollateralManager()":"712d9171","getLendingPoolConfigurator()":"85c858b1","getLendingRateOracle()":"3618abba","getMarketId()":"568ef470","getPoolAdmin()":"aecda378","getPriceOracle(uint8)":"1a9dffb3","setAavePriceOracle(address)":"985420f4","setAddress(bytes32,address)":"ca446dd9","setAddressAsProxy(bytes32,address)":"5dcc528c","setCurveAddressProvider(address)":"9bc3d098","setCurvePriceOracle(address)":"0aafb34e","setCurvePriceOracleWrapper(address)":"e4bc9d64","setEmergencyAdmin(address)":"35da3394","setLendingPoolCollateralManager(address)":"398e5553","setLendingPoolConfiguratorImpl(address)":"c12542df","setLendingPoolImpl(address)":"5aef021f","setLendingRateOracle(address)":"820d1274","setMarketId(string)":"f67b1847","setPoolAdmin(address)":"283d62ad"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"hasProxy\",\"type\":\"bool\"}],\"name\":\"AddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ConfigurationAdminUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"CurveAddressProviderUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"CurvePriceOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"CurvePriceOracleWrapperUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"EmergencyAdminUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingPoolCollateralManagerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingPoolConfiguratorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingPoolUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingRateOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newMarketId\",\"type\":\"string\"}],\"name\":\"MarketIdSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PriceOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ProxyCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getAavePriceOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurveAddressProvider\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurvePriceOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurvePriceOracleWrapper\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEmergencyAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingPoolCollateralManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingPoolConfigurator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingRateOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMarketId\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum DataTypes.ReserveAssetType\",\"name\":\"assetType\",\"type\":\"uint8\"}],\"name\":\"getPriceOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceOracle\",\"type\":\"address\"}],\"name\":\"setAavePriceOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"impl\",\"type\":\"address\"}],\"name\":\"setAddressAsProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressProvider\",\"type\":\"address\"}],\"name\":\"setCurveAddressProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceOracle\",\"type\":\"address\"}],\"name\":\"setCurvePriceOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceOracle\",\"type\":\"address\"}],\"name\":\"setCurvePriceOracleWrapper\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"setEmergencyAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"setLendingPoolCollateralManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"configurator\",\"type\":\"address\"}],\"name\":\"setLendingPoolConfiguratorImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"setLendingPoolImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lendingRateOracle\",\"type\":\"address\"}],\"name\":\"setLendingRateOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"marketId\",\"type\":\"string\"}],\"name\":\"setMarketId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"setPoolAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave*\",\"details\":\"Main registry of addresses part of or connected to the protocol, including permissioned roles - Acting also as factory of proxies and admin of those, so with right to change its implementations - Owned by the Aave Governance\",\"kind\":\"dev\",\"methods\":{},\"title\":\"LendingPoolAddressesProvider contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ILendingPoolAddressesProvider.sol\":\"ILendingPoolAddressesProvider\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ILendingPoolAddressesProvider.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\nimport {DataTypes} from \\\"../protocol/libraries/types/DataTypes.sol\\\";\\n\\n/**\\n * @title LendingPoolAddressesProvider contract\\n * @dev Main registry of addresses part of or connected to the protocol, including permissioned roles\\n * - Acting also as factory of proxies and admin of those, so with right to change its implementations\\n * - Owned by the Aave Governance\\n * @author Aave\\n **/\\ninterface ILendingPoolAddressesProvider {\\n    event MarketIdSet(string newMarketId);\\n    event LendingPoolUpdated(address indexed newAddress);\\n    event ConfigurationAdminUpdated(address indexed newAddress);\\n    event EmergencyAdminUpdated(address indexed newAddress);\\n    event LendingPoolConfiguratorUpdated(address indexed newAddress);\\n    event LendingPoolCollateralManagerUpdated(address indexed newAddress);\\n    event PriceOracleUpdated(address indexed newAddress);\\n    event CurvePriceOracleUpdated(address indexed newAddress);\\n    event CurvePriceOracleWrapperUpdated(address indexed newAddress);\\n    event CurveAddressProviderUpdated(address indexed newAddress);\\n    event LendingRateOracleUpdated(address indexed newAddress);\\n    event ProxyCreated(bytes32 id, address indexed newAddress);\\n    event AddressSet(bytes32 id, address indexed newAddress, bool hasProxy);\\n\\n    function getMarketId() external view returns (string memory);\\n\\n    function setMarketId(string calldata marketId) external;\\n\\n    function setAddress(bytes32 id, address newAddress) external;\\n\\n    function setAddressAsProxy(bytes32 id, address impl) external;\\n\\n    function getAddress(bytes32 id) external view returns (address);\\n\\n    function getLendingPool() external view returns (address);\\n\\n    function setLendingPoolImpl(address pool) external;\\n\\n    function getLendingPoolConfigurator() external view returns (address);\\n\\n    function setLendingPoolConfiguratorImpl(address configurator) external;\\n\\n    function getLendingPoolCollateralManager() external view returns (address);\\n\\n    function setLendingPoolCollateralManager(address manager) external;\\n\\n    function getPoolAdmin() external view returns (address);\\n\\n    function setPoolAdmin(address admin) external;\\n\\n    function getEmergencyAdmin() external view returns (address);\\n\\n    function setEmergencyAdmin(address admin) external;\\n\\n    function getPriceOracle(DataTypes.ReserveAssetType assetType)\\n        external\\n        view\\n        returns (address);\\n\\n    function getAavePriceOracle() external view returns (address);\\n\\n    function getCurvePriceOracle() external view returns (address);\\n\\n    function getCurvePriceOracleWrapper() external view returns (address);\\n\\n    function getCurveAddressProvider() external view returns (address);\\n\\n    function setAavePriceOracle(address priceOracle) external;\\n\\n    function setCurveAddressProvider(address addressProvider) external;\\n\\n    function setCurvePriceOracle(address priceOracle) external;\\n\\n    function setCurvePriceOracleWrapper(address priceOracle) external;\\n\\n    function getLendingRateOracle() external view returns (address);\\n\\n    function setLendingRateOracle(address lendingRateOracle) external;\\n}\\n\",\"keccak256\":\"0xd05a545a54108bcf8be808763206cadbceefbfdc9d3e0ceff97fbe7e767cfe5e\",\"license\":\"agpl-3.0\"},\"contracts/protocol/libraries/types/DataTypes.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\nlibrary DataTypes {\\n    // refer to the whitepaper, section 1.1 basic concepts for a formal description of these properties.\\n\\n    enum ReserveAssetType {\\n        AAVE,\\n        CURVE\\n    } //update with other possible types of the underlying asset\\n    //AAVE is the original assets in the aave protocol\\n    //CURVE is the new LP tokens we are providing support for\\n\\n    struct AssetData {\\n        uint8 collateralRisk;\\n        bool isLendable;\\n        bool isAllowedCollateralInHigherTranches;\\n        ReserveAssetType assetType;\\n    }\\n\\n    struct TrancheAddress {\\n        uint8 tranche;\\n        address asset;\\n    }\\n    struct ReserveData {\\n        //stores the reserve configuration\\n        ReserveConfigurationMap configuration;\\n        //the liquidity index. Expressed in ray\\n        uint128 liquidityIndex; //not used for nonlendable assets\\n        //variable borrow index. Expressed in ray\\n        uint128 variableBorrowIndex; //not used for nonlendable assets\\n        //the current supply rate. Expressed in ray\\n        uint128 currentLiquidityRate; //deposit APR is defined as liquidityRate / RAY //not used for nonlendable assets\\n        //the current variable borrow rate. Expressed in ray\\n        uint128 currentVariableBorrowRate; //not used for nonlendable assets\\n        //the current stable borrow rate. Expressed in ray\\n        uint128 currentStableBorrowRate; //not used for nonlendable assets\\n        uint40 lastUpdateTimestamp;\\n        //tokens addresses\\n        address aTokenAddress;\\n        address stableDebtTokenAddress; //not used for nonlendable assets\\n        address variableDebtTokenAddress; //not used for nonlendable assets\\n        //address of the interest rate strategy\\n        address interestRateStrategyAddress; //not used for nonlendable assets\\n        //the id of the reserve. Represents the position in the list of the active reserves\\n        uint8 id;\\n        uint8 tranche; //I think this will be used for nonlendable assets, cause your collateral only asset can be placed in higher tranche if necessary\\n    }\\n\\n    struct TrancheMultiplier {\\n        uint256 liquidityRateMultiplier;\\n        uint256 variableBorrowRateMultiplier;\\n        uint256 stableBorrowRateMultiplier;\\n    }\\n\\n    uint8 constant NUM_TRANCHES = 3;\\n\\n    struct ReserveConfigurationMap {\\n        //bit 0-15: LTV\\n        //bit 16-31: Liq. threshold\\n        //bit 32-47: Liq. bonus\\n        //bit 48-55: Decimals\\n        //bit 56: Reserve is active\\n        //bit 57: reserve is frozen\\n        //bit 58: borrowing is enabled\\n        //bit 59: stable rate borrowing enabled\\n        //bit 60-63: reserved\\n        //bit 64-79: reserve factor\\n        uint256 data;\\n    }\\n\\n    struct UserConfigurationMap {\\n        uint256 data;\\n    }\\n\\n    enum InterestRateMode {\\n        NONE,\\n        STABLE,\\n        VARIABLE\\n    }\\n\\n    struct AcctTranche {\\n        address user;\\n        uint8 tranche;\\n    }\\n\\n    struct DepositVars {\\n        address asset;\\n        uint8 tranche;\\n        uint8 risk;\\n        bool allowHigherTranche;\\n        bool isLendable;\\n        TrancheMultiplier t;\\n    }\\n\\n    struct ExecuteBorrowParams {\\n        address asset;\\n        uint8 tranche; //tranche the user wants to borrow out of\\n        address user;\\n        address onBehalfOf;\\n        uint256 amount;\\n        uint256 interestRateMode;\\n        address aTokenAddress;\\n        uint16 referralCode;\\n        bool releaseUnderlying;\\n        uint256 _maxStableRateBorrowSizePercent;\\n        uint256 _reservesCount;\\n        TrancheMultiplier t;\\n    }\\n\\n    struct WithdrawParams {\\n        uint256 _reservesCount;\\n        address asset;\\n        uint8 tranche;\\n        uint256 amount;\\n        address to;\\n        TrancheMultiplier t;\\n    }\\n\\n    struct ValidateSetUseReserveAsCollateralParams {\\n        uint8 risk;\\n        bool allowHigherTranche;\\n    }\\n\\n    struct calculateInterestRatesVars {\\n        address reserve;\\n        address aToken;\\n        uint256 liquidityAdded;\\n        uint256 liquidityTaken;\\n        uint256 reserveFactor;\\n    }\\n\\n    struct flashLoanVars {\\n        address receiverAddress;\\n        DataTypes.TrancheAddress[] assets;\\n        uint256[] amounts;\\n        uint256[] modes;\\n        address onBehalfOf;\\n        bytes params;\\n        uint16 referralCode;\\n        uint256 _flashLoanPremiumTotal;\\n        address oracle;\\n        uint256 _maxStableRateBorrowSizePercent;\\n        uint256 _reservesCount;\\n    }\\n}\\n\",\"keccak256\":\"0x7302b5b5775a9a0019bd062c95d5a94a0b7bfa4553ae872968cf8ecf7c35fc8f\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IPriceOracleGetter.sol":{"IPriceOracleGetter":{"abi":[{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getAssetPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"getAssetPrice(address)":{"details":"returns the asset price in ETH","params":{"asset":"the address of the asset"},"returns":{"_0":"the ETH price of the asset*"}}},"title":"IPriceOracleGetter interface","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getAssetPrice(address)":"b3596f07"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getAssetPrice(address)\":{\"details\":\"returns the asset price in ETH\",\"params\":{\"asset\":\"the address of the asset\"},\"returns\":{\"_0\":\"the ETH price of the asset*\"}}},\"title\":\"IPriceOracleGetter interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Interface for the Aave price oracle.*\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IPriceOracleGetter.sol\":\"IPriceOracleGetter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IPriceOracleGetter.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\n/**\\n * @title IPriceOracleGetter interface\\n * @notice Interface for the Aave price oracle.\\n **/\\n\\ninterface IPriceOracleGetter {\\n    /**\\n     * @dev returns the asset price in ETH\\n     * @param asset the address of the asset\\n     * @return the ETH price of the asset\\n     **/\\n    function getAssetPrice(address asset) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xd0ddd343f94683ab5210c629a098a2d306433543e9ac0d6d3841672f8166f260\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"Interface for the Aave price oracle.*","version":1}}},"contracts/misc/AaveOracle.sol":{"AaveOracle":{"abi":[{"inputs":[{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"address[]","name":"sources","type":"address[]"},{"internalType":"address","name":"fallbackOracle","type":"address"},{"internalType":"address","name":"baseCurrency","type":"address"},{"internalType":"uint256","name":"baseCurrencyUnit","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"asset","type":"address"},{"indexed":true,"internalType":"address","name":"source","type":"address"}],"name":"AssetSourceUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"baseCurrency","type":"address"},{"indexed":false,"internalType":"uint256","name":"baseCurrencyUnit","type":"uint256"}],"name":"BaseCurrencySet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"fallbackOracle","type":"address"}],"name":"FallbackOracleUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"BASE_CURRENCY","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"BASE_CURRENCY_UNIT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getAssetPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"assets","type":"address[]"}],"name":"getAssetsPrices","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getFallbackOracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getSourceOfAsset","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"address[]","name":"sources","type":"address[]"}],"name":"setAssetSources","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"fallbackOracle","type":"address"}],"name":"setFallbackOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Aave","kind":"dev","methods":{"constructor":{"params":{"assets":"The addresses of the assets","baseCurrency":"the base currency used for the price quotes. If USD is used, base currency is 0x0","baseCurrencyUnit":"the unit of the base currency","fallbackOracle":"The address of the fallback oracle to use if the data of an        aggregator is not consistent","sources":"The address of the source of each asset"}},"getAssetPrice(address)":{"params":{"asset":"The asset address"}},"getAssetsPrices(address[])":{"params":{"assets":"The list of assets addresses"}},"getFallbackOracle()":{"returns":{"_0":"address The addres of the fallback oracle"}},"getSourceOfAsset(address)":{"params":{"asset":"The address of the asset"},"returns":{"_0":"address The address of the source"}},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setAssetSources(address[],address[])":{"params":{"assets":"The addresses of the assets","sources":"The address of the source of each asset"}},"setFallbackOracle(address)":{"params":{"fallbackOracle":"The address of the fallbackOracle"}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"title":"AaveOracle","version":1},"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2957:30","statements":[{"nodeType":"YulBlock","src":"6:3:30","statements":[]},{"body":{"nodeType":"YulBlock","src":"76:117:30","statements":[{"nodeType":"YulAssignment","src":"86:22:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"101:6:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"95:5:30"},"nodeType":"YulFunctionCall","src":"95:13:30"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"86:5:30"}]},{"body":{"nodeType":"YulBlock","src":"171:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"180:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"183:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"173:6:30"},"nodeType":"YulFunctionCall","src":"173:12:30"},"nodeType":"YulExpressionStatement","src":"173:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"130:5:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"141:5:30"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"156:3:30","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"161:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"152:3:30"},"nodeType":"YulFunctionCall","src":"152:11:30"},{"kind":"number","nodeType":"YulLiteral","src":"165:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"148:3:30"},"nodeType":"YulFunctionCall","src":"148:19:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"137:3:30"},"nodeType":"YulFunctionCall","src":"137:31:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"127:2:30"},"nodeType":"YulFunctionCall","src":"127:42:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"120:6:30"},"nodeType":"YulFunctionCall","src":"120:50:30"},"nodeType":"YulIf","src":"117:2:30"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"55:6:30","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"66:5:30","type":""}],"src":"14:179:30"},{"body":{"nodeType":"YulBlock","src":"279:868:30","statements":[{"body":{"nodeType":"YulBlock","src":"328:24:30","statements":[{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"337:5:30"},{"name":"array","nodeType":"YulIdentifier","src":"344:5:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"330:6:30"},"nodeType":"YulFunctionCall","src":"330:20:30"},"nodeType":"YulExpressionStatement","src":"330:20:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"307:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"315:4:30","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"303:3:30"},"nodeType":"YulFunctionCall","src":"303:17:30"},{"name":"end","nodeType":"YulIdentifier","src":"322:3:30"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"299:3:30"},"nodeType":"YulFunctionCall","src":"299:27:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"292:6:30"},"nodeType":"YulFunctionCall","src":"292:35:30"},"nodeType":"YulIf","src":"289:2:30"},{"nodeType":"YulVariableDeclaration","src":"361:23:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"377:6:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"371:5:30"},"nodeType":"YulFunctionCall","src":"371:13:30"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"365:2:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"393:14:30","value":{"kind":"number","nodeType":"YulLiteral","src":"403:4:30","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"397:2:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"416:28:30","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"434:2:30","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"438:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"430:3:30"},"nodeType":"YulFunctionCall","src":"430:10:30"},{"kind":"number","nodeType":"YulLiteral","src":"442:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"426:3:30"},"nodeType":"YulFunctionCall","src":"426:18:30"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"420:2:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"467:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"469:16:30"},"nodeType":"YulFunctionCall","src":"469:18:30"},"nodeType":"YulExpressionStatement","src":"469:18:30"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"459:2:30"},{"name":"_3","nodeType":"YulIdentifier","src":"463:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"456:2:30"},"nodeType":"YulFunctionCall","src":"456:10:30"},"nodeType":"YulIf","src":"453:2:30"},{"nodeType":"YulVariableDeclaration","src":"498:21:30","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"512:2:30"},{"name":"_2","nodeType":"YulIdentifier","src":"516:2:30"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"508:3:30"},"nodeType":"YulFunctionCall","src":"508:11:30"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"502:2:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"528:23:30","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"548:2:30","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"542:5:30"},"nodeType":"YulFunctionCall","src":"542:9:30"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"532:6:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"560:42:30","value":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"586:6:30"},{"name":"_4","nodeType":"YulIdentifier","src":"594:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"582:3:30"},"nodeType":"YulFunctionCall","src":"582:15:30"},{"name":"_2","nodeType":"YulIdentifier","src":"599:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"578:3:30"},"nodeType":"YulFunctionCall","src":"578:24:30"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"564:10:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"661:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"663:16:30"},"nodeType":"YulFunctionCall","src":"663:18:30"},"nodeType":"YulExpressionStatement","src":"663:18:30"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"620:10:30"},{"name":"_3","nodeType":"YulIdentifier","src":"632:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"617:2:30"},"nodeType":"YulFunctionCall","src":"617:18:30"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"640:10:30"},{"name":"memPtr","nodeType":"YulIdentifier","src":"652:6:30"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"637:2:30"},"nodeType":"YulFunctionCall","src":"637:22:30"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"614:2:30"},"nodeType":"YulFunctionCall","src":"614:46:30"},"nodeType":"YulIf","src":"611:2:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"699:2:30","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"703:10:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"692:6:30"},"nodeType":"YulFunctionCall","src":"692:22:30"},"nodeType":"YulExpressionStatement","src":"692:22:30"},{"nodeType":"YulVariableDeclaration","src":"723:17:30","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"734:6:30"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"727:3:30","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"756:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"764:2:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"749:6:30"},"nodeType":"YulFunctionCall","src":"749:18:30"},"nodeType":"YulExpressionStatement","src":"749:18:30"},{"nodeType":"YulAssignment","src":"776:22:30","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"787:6:30"},{"name":"_2","nodeType":"YulIdentifier","src":"795:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"783:3:30"},"nodeType":"YulFunctionCall","src":"783:15:30"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"776:3:30"}]},{"nodeType":"YulVariableDeclaration","src":"807:26:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"822:6:30"},{"name":"_2","nodeType":"YulIdentifier","src":"830:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"818:3:30"},"nodeType":"YulFunctionCall","src":"818:15:30"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"811:3:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"879:24:30","statements":[{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"888:5:30"},{"name":"array","nodeType":"YulIdentifier","src":"895:5:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"881:6:30"},"nodeType":"YulFunctionCall","src":"881:20:30"},"nodeType":"YulExpressionStatement","src":"881:20:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"856:6:30"},{"name":"_4","nodeType":"YulIdentifier","src":"864:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"852:3:30"},"nodeType":"YulFunctionCall","src":"852:15:30"},{"name":"_2","nodeType":"YulIdentifier","src":"869:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"848:3:30"},"nodeType":"YulFunctionCall","src":"848:24:30"},{"name":"end","nodeType":"YulIdentifier","src":"874:3:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"845:2:30"},"nodeType":"YulFunctionCall","src":"845:33:30"},"nodeType":"YulIf","src":"842:2:30"},{"nodeType":"YulVariableDeclaration","src":"912:14:30","value":{"name":"array","nodeType":"YulIdentifier","src":"921:5:30"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"916:1:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"980:137:30","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1001:3:30"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1038:3:30"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1006:31:30"},"nodeType":"YulFunctionCall","src":"1006:36:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"994:6:30"},"nodeType":"YulFunctionCall","src":"994:49:30"},"nodeType":"YulExpressionStatement","src":"994:49:30"},{"nodeType":"YulAssignment","src":"1056:19:30","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1067:3:30"},{"name":"_2","nodeType":"YulIdentifier","src":"1072:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1063:3:30"},"nodeType":"YulFunctionCall","src":"1063:12:30"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"1056:3:30"}]},{"nodeType":"YulAssignment","src":"1088:19:30","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1099:3:30"},{"name":"_2","nodeType":"YulIdentifier","src":"1104:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1095:3:30"},"nodeType":"YulFunctionCall","src":"1095:12:30"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"1088:3:30"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"946:1:30"},{"name":"_1","nodeType":"YulIdentifier","src":"949:2:30"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"943:2:30"},"nodeType":"YulFunctionCall","src":"943:9:30"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"953:18:30","statements":[{"nodeType":"YulAssignment","src":"955:14:30","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"964:1:30"},{"kind":"number","nodeType":"YulLiteral","src":"967:1:30","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"960:3:30"},"nodeType":"YulFunctionCall","src":"960:9:30"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"955:1:30"}]}]},"pre":{"nodeType":"YulBlock","src":"939:3:30","statements":[]},"src":"935:182:30"},{"nodeType":"YulAssignment","src":"1126:15:30","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1135:6:30"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1126:5:30"}]}]},"name":"abi_decode_t_array$_t_address_$dyn_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"253:6:30","type":""},{"name":"end","nodeType":"YulTypedName","src":"261:3:30","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"269:5:30","type":""}],"src":"198:949:30"},{"body":{"nodeType":"YulBlock","src":"1351:694:30","statements":[{"body":{"nodeType":"YulBlock","src":"1398:26:30","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"1407:6:30"},{"name":"value4","nodeType":"YulIdentifier","src":"1415:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1400:6:30"},"nodeType":"YulFunctionCall","src":"1400:22:30"},"nodeType":"YulExpressionStatement","src":"1400:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1372:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"1381:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1368:3:30"},"nodeType":"YulFunctionCall","src":"1368:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"1393:3:30","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1364:3:30"},"nodeType":"YulFunctionCall","src":"1364:33:30"},"nodeType":"YulIf","src":"1361:2:30"},{"nodeType":"YulVariableDeclaration","src":"1433:30:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1453:9:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1447:5:30"},"nodeType":"YulFunctionCall","src":"1447:16:30"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1437:6:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1472:28:30","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1490:2:30","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1494:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1486:3:30"},"nodeType":"YulFunctionCall","src":"1486:10:30"},{"kind":"number","nodeType":"YulLiteral","src":"1498:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1482:3:30"},"nodeType":"YulFunctionCall","src":"1482:18:30"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1476:2:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"1527:26:30","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"1536:6:30"},{"name":"value4","nodeType":"YulIdentifier","src":"1544:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:30"},"nodeType":"YulFunctionCall","src":"1529:22:30"},"nodeType":"YulExpressionStatement","src":"1529:22:30"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1515:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"1523:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1512:2:30"},"nodeType":"YulFunctionCall","src":"1512:14:30"},"nodeType":"YulIf","src":"1509:2:30"},{"nodeType":"YulAssignment","src":"1562:88:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1622:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"1633:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1618:3:30"},"nodeType":"YulFunctionCall","src":"1618:22:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1642:7:30"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_fromMemory","nodeType":"YulIdentifier","src":"1572:45:30"},"nodeType":"YulFunctionCall","src":"1572:78:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1562:6:30"}]},{"nodeType":"YulVariableDeclaration","src":"1659:41:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1685:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"1696:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1681:3:30"},"nodeType":"YulFunctionCall","src":"1681:18:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1675:5:30"},"nodeType":"YulFunctionCall","src":"1675:25:30"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1663:8:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"1729:26:30","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"1738:6:30"},{"name":"value4","nodeType":"YulIdentifier","src":"1746:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1731:6:30"},"nodeType":"YulFunctionCall","src":"1731:22:30"},"nodeType":"YulExpressionStatement","src":"1731:22:30"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1715:8:30"},{"name":"_1","nodeType":"YulIdentifier","src":"1725:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1712:2:30"},"nodeType":"YulFunctionCall","src":"1712:16:30"},"nodeType":"YulIf","src":"1709:2:30"},{"nodeType":"YulAssignment","src":"1764:90:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1824:9:30"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1835:8:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1820:3:30"},"nodeType":"YulFunctionCall","src":"1820:24:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1846:7:30"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_fromMemory","nodeType":"YulIdentifier","src":"1774:45:30"},"nodeType":"YulFunctionCall","src":"1774:80:30"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1764:6:30"}]},{"nodeType":"YulAssignment","src":"1863:61:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1909:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"1920:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1905:3:30"},"nodeType":"YulFunctionCall","src":"1905:18:30"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1873:31:30"},"nodeType":"YulFunctionCall","src":"1873:51:30"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1863:6:30"}]},{"nodeType":"YulAssignment","src":"1933:61:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1979:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"1990:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1975:3:30"},"nodeType":"YulFunctionCall","src":"1975:18:30"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1943:31:30"},"nodeType":"YulFunctionCall","src":"1943:51:30"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1933:6:30"}]},{"nodeType":"YulAssignment","src":"2003:36:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2023:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2034:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2019:3:30"},"nodeType":"YulFunctionCall","src":"2019:19:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2013:5:30"},"nodeType":"YulFunctionCall","src":"2013:26:30"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"2003:6:30"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptrt_addresst_addresst_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1285:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1296:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1308:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1316:6:30","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1324:6:30","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1332:6:30","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1340:6:30","type":""}],"src":"1152:893:30"},{"body":{"nodeType":"YulBlock","src":"2224:176:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2241:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2252:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2234:6:30"},"nodeType":"YulFunctionCall","src":"2234:21:30"},"nodeType":"YulExpressionStatement","src":"2234:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2275:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2286:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2271:3:30"},"nodeType":"YulFunctionCall","src":"2271:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"2291:2:30","type":"","value":"26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2264:6:30"},"nodeType":"YulFunctionCall","src":"2264:30:30"},"nodeType":"YulExpressionStatement","src":"2264:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2314:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2325:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2310:3:30"},"nodeType":"YulFunctionCall","src":"2310:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"2330:28:30","type":"","value":"INCONSISTENT_PARAMS_LENGTH"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2303:6:30"},"nodeType":"YulFunctionCall","src":"2303:56:30"},"nodeType":"YulExpressionStatement","src":"2303:56:30"},{"nodeType":"YulAssignment","src":"2368:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2380:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2391:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2376:3:30"},"nodeType":"YulFunctionCall","src":"2376:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2368:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_a807dff59d3474096247bf1cf10d6df8b988b576943ecf8c7dd58f40a940e704__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2201:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2215:4:30","type":""}],"src":"2050:350:30"},{"body":{"nodeType":"YulBlock","src":"2506:76:30","statements":[{"nodeType":"YulAssignment","src":"2516:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2528:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2539:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2524:3:30"},"nodeType":"YulFunctionCall","src":"2524:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2516:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2558:9:30"},{"name":"value0","nodeType":"YulIdentifier","src":"2569:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2551:6:30"},"nodeType":"YulFunctionCall","src":"2551:25:30"},"nodeType":"YulExpressionStatement","src":"2551:25:30"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2475:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2486:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2497:4:30","type":""}],"src":"2405:177:30"},{"body":{"nodeType":"YulBlock","src":"2634:189:30","statements":[{"body":{"nodeType":"YulBlock","src":"2673:115:30","statements":[{"expression":{"arguments":[{"name":"ret","nodeType":"YulIdentifier","src":"2694:3:30"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2703:3:30","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2708:10:30","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2699:3:30"},"nodeType":"YulFunctionCall","src":"2699:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2687:6:30"},"nodeType":"YulFunctionCall","src":"2687:33:30"},"nodeType":"YulExpressionStatement","src":"2687:33:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2740:1:30","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2743:4:30","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2733:6:30"},"nodeType":"YulFunctionCall","src":"2733:15:30"},"nodeType":"YulExpressionStatement","src":"2733:15:30"},{"expression":{"arguments":[{"name":"ret","nodeType":"YulIdentifier","src":"2768:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"2773:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2761:6:30"},"nodeType":"YulFunctionCall","src":"2761:17:30"},"nodeType":"YulExpressionStatement","src":"2761:17:30"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2650:5:30"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2661:1:30","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2657:3:30"},"nodeType":"YulFunctionCall","src":"2657:6:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2647:2:30"},"nodeType":"YulFunctionCall","src":"2647:17:30"},"nodeType":"YulIf","src":"2644:2:30"},{"nodeType":"YulAssignment","src":"2797:20:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2808:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"2815:1:30","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2804:3:30"},"nodeType":"YulFunctionCall","src":"2804:13:30"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2797:3:30"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2616:5:30","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2626:3:30","type":""}],"src":"2587:236:30"},{"body":{"nodeType":"YulBlock","src":"2860:95:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2877:1:30","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2884:3:30","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2889:10:30","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2880:3:30"},"nodeType":"YulFunctionCall","src":"2880:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2870:6:30"},"nodeType":"YulFunctionCall","src":"2870:31:30"},"nodeType":"YulExpressionStatement","src":"2870:31:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2917:1:30","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2920:4:30","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2910:6:30"},"nodeType":"YulFunctionCall","src":"2910:15:30"},"nodeType":"YulExpressionStatement","src":"2910:15:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2941:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2944:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2934:6:30"},"nodeType":"YulFunctionCall","src":"2934:15:30"},"nodeType":"YulExpressionStatement","src":"2934:15:30"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2828:127:30"}]},"contents":"{\n    { }\n    function abi_decode_t_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_t_array$_t_address_$dyn_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := mload(offset)\n        let _2 := 0x20\n        let _3 := sub(shl(64, 1), 1)\n        if gt(_1, _3) { panic_error_0x41() }\n        let _4 := mul(_1, _2)\n        let memPtr := mload(64)\n        let newFreePtr := add(add(memPtr, _4), _2)\n        if or(gt(newFreePtr, _3), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let src := add(offset, _2)\n        if gt(add(add(offset, _4), _2), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, 1) }\n        {\n            mstore(dst, abi_decode_t_address_fromMemory(src))\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptrt_addresst_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value4, value4) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(value4, value4) }\n        value0 := abi_decode_t_array$_t_address_$dyn_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(value4, value4) }\n        value1 := abi_decode_t_array$_t_address_$dyn_fromMemory(add(headStart, offset_1), dataEnd)\n        value2 := abi_decode_t_address_fromMemory(add(headStart, 64))\n        value3 := abi_decode_t_address_fromMemory(add(headStart, 96))\n        value4 := mload(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_stringliteral_a807dff59d3474096247bf1cf10d6df8b988b576943ecf8c7dd58f40a940e704__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"INCONSISTENT_PARAMS_LENGTH\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(ret, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(ret, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}","id":30,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60c06040523480156200001157600080fd5b50604051620010663803806200106683398101604081905262000034916200039b565b60006200004062000108565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35062000095836200010c565b620000a1858562000156565b6001600160601b0319606083901b1660805260a08190526040516001600160a01b038316907fe27c4c1372396a3d15a9922f74f9dfc7c72b1ad6d63868470787249c356454c190620000f590849062000468565b60405180910390a25050505050620004af565b3390565b600280546001600160a01b0319166001600160a01b0383169081179091556040517fce7a780d33665b1ea097af5f155e3821b809ecbaa839d3b33aa83ba28168cefb90600090a250565b8051825114620001835760405162461bcd60e51b81526004016200017a9062000431565b60405180910390fd5b60005b8251811015620002cf57818181518110620001b157634e487b7160e01b600052603260045260246000fd5b602002602001015160016000858481518110620001de57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055508181815181106200024b57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03168382815181106200027d57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03167f22c5b7b2d8561d39f7f210b6b326a1aa69f15311163082308ac4877db6339dc160405160405180910390a380620002c68162000471565b91505062000186565b505050565b80516001600160a01b0381168114620002ec57600080fd5b919050565b600082601f83011262000302578081fd5b815160206001600160401b038083111562000321576200032162000499565b8183026040518382820101818110848211171562000343576200034362000499565b6040528481528381019250868401828801850189101562000362578687fd5b8692505b858310156200038f576200037a81620002d4565b84529284019260019290920191840162000366565b50979650505050505050565b600080600080600060a08688031215620003b3578081fd5b85516001600160401b0380821115620003ca578283fd5b620003d889838a01620002f1565b96506020880151915080821115620003ee578283fd5b50620003fd88828901620002f1565b9450506200040e60408701620002d4565b92506200041e60608701620002d4565b9150608086015190509295509295909350565b6020808252601a908201527f494e434f4e53495354454e545f504152414d535f4c454e475448000000000000604082015260600190565b90815260200190565b60006000198214156200049257634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b60805160601c60a051610b80620004e660003960008181610254015261047901526000818161044f01526106480152610b806000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806392bf2be01161007157806392bf2be0146101065780639d23d9f214610119578063abfd531014610139578063b3596f071461014c578063e19f47001461015f578063f2fde38b14610167576100a9565b8063170aee73146100ae5780636210308c146100c3578063715018a6146100e15780638c89b64f146100e95780638da5cb5b146100fe575b600080fd5b6100c16100bc366004610921565b61017a565b005b6100cb6101c4565b6040516100d89190610a10565b60405180910390f35b6100c16101d3565b6100f1610252565b6040516100d89190610b1a565b6100cb610276565b6100cb610114366004610921565b610285565b61012c61012736600461094f565b6102a6565b6040516100d89190610a24565b6100c161014736600461098f565b610385565b6100f161015a366004610921565b61042d565b6100cb610646565b6100c1610175366004610921565b61066a565b610182610720565b6000546001600160a01b039081169116146101b85760405162461bcd60e51b81526004016101af90610aae565b60405180910390fd5b6101c181610724565b50565b6002546001600160a01b031690565b6101db610720565b6000546001600160a01b039081169116146102085760405162461bcd60e51b81526004016101af90610aae565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b031690565b6001600160a01b03808216600090815260016020526040902054165b919050565b606060008267ffffffffffffffff8111156102d157634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156102fa578160200160208202803683370190505b50905060005b8381101561037d5761034085858381811061032b57634e487b7160e01b600052603260045260246000fd5b905060200201602081019061015a9190610921565b82828151811061036057634e487b7160e01b600052603260045260246000fd5b60209081029190910101528061037581610b23565b915050610300565b509392505050565b61038d610720565b6000546001600160a01b039081169116146103ba5760405162461bcd60e51b81526004016101af90610aae565b6104278484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505060408051602080880282810182019093528782529093508792508691829185019084908082843760009201919091525061076e92505050565b50505050565b6001600160a01b038082166000818152600160205260408120549092908116917f000000000000000000000000000000000000000000000000000000000000000090911614156104a0577f00000000000000000000000000000000000000000000000000000000000000009150506102a1565b6001600160a01b0381166105365760025460405163b3596f0760e01b81526001600160a01b039091169063b3596f07906104de908690600401610a10565b60206040518083038186803b1580156104f657600080fd5b505afa15801561050a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052e91906109f8565b9150506102a1565b6000816001600160a01b03166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561057157600080fd5b505afa158015610585573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a991906109f8565b905060008113156105bd5791506102a19050565b60025460405163b3596f0760e01b81526001600160a01b039091169063b3596f07906105ed908790600401610a10565b60206040518083038186803b15801561060557600080fd5b505afa158015610619573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063d91906109f8565b925050506102a1565b7f000000000000000000000000000000000000000000000000000000000000000081565b610672610720565b6000546001600160a01b0390811691161461069f5760405162461bcd60e51b81526004016101af90610aae565b6001600160a01b0381166106c55760405162461bcd60e51b81526004016101af90610a68565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b600280546001600160a01b0319166001600160a01b0383169081179091556040517fce7a780d33665b1ea097af5f155e3821b809ecbaa839d3b33aa83ba28168cefb90600090a250565b805182511461078f5760405162461bcd60e51b81526004016101af90610ae3565b60005b82518110156108d3578181815181106107bb57634e487b7160e01b600052603260045260246000fd5b6020026020010151600160008584815181106107e757634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b0316021790555081818151811061085357634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b031683828151811061088457634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03167f22c5b7b2d8561d39f7f210b6b326a1aa69f15311163082308ac4877db6339dc160405160405180910390a3806108cb81610b23565b915050610792565b505050565b60008083601f8401126108e9578182fd5b50813567ffffffffffffffff811115610900578182fd5b602083019150836020808302850101111561091a57600080fd5b9250929050565b600060208284031215610932578081fd5b81356001600160a01b0381168114610948578182fd5b9392505050565b60008060208385031215610961578081fd5b823567ffffffffffffffff811115610977578182fd5b610983858286016108d8565b90969095509350505050565b600080600080604085870312156109a4578182fd5b843567ffffffffffffffff808211156109bb578384fd5b6109c7888389016108d8565b909650945060208701359150808211156109df578384fd5b506109ec878288016108d8565b95989497509550505050565b600060208284031215610a09578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6020808252825182820181905260009190848201906040850190845b81811015610a5c57835183529284019291840191600101610a40565b50909695505050505050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601a908201527f494e434f4e53495354454e545f504152414d535f4c454e475448000000000000604082015260600190565b90815260200190565b6000600019821415610b4357634e487b7160e01b81526011600452602481fd5b506001019056fea26469706673582212208a0990bfedc825c8ec9f474683d99d002d3c25d6ac9e726924f2951f72b889f364736f6c63430008000033","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1066 CODESIZE SUB DUP1 PUSH3 0x1066 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x39B JUMP JUMPDEST PUSH1 0x0 PUSH3 0x40 PUSH3 0x108 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH3 0x95 DUP4 PUSH3 0x10C JUMP JUMPDEST PUSH3 0xA1 DUP6 DUP6 PUSH3 0x156 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP4 SWAP1 SHL AND PUSH1 0x80 MSTORE PUSH1 0xA0 DUP2 SWAP1 MSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xE27C4C1372396A3D15A9922F74F9DFC7C72B1AD6D63868470787249C356454C1 SWAP1 PUSH3 0xF5 SWAP1 DUP5 SWAP1 PUSH3 0x468 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP PUSH3 0x4AF JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xCE7A780D33665B1EA097AF5F155E3821B809ECBAA839D3B33AA83BA28168CEFB SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH3 0x183 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x17A SWAP1 PUSH3 0x431 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH3 0x2CF JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH3 0x1B1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH3 0x1DE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH3 0x24B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x27D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x22C5B7B2D8561D39F7F210B6B326A1AA69F15311163082308AC4877DB6339DC1 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH3 0x2C6 DUP2 PUSH3 0x471 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x186 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x2EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x302 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP4 GT ISZERO PUSH3 0x321 JUMPI PUSH3 0x321 PUSH3 0x499 JUMP JUMPDEST DUP2 DUP4 MUL PUSH1 0x40 MLOAD DUP4 DUP3 DUP3 ADD ADD DUP2 DUP2 LT DUP5 DUP3 GT OR ISZERO PUSH3 0x343 JUMPI PUSH3 0x343 PUSH3 0x499 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP5 DUP2 MSTORE DUP4 DUP2 ADD SWAP3 POP DUP7 DUP5 ADD DUP3 DUP9 ADD DUP6 ADD DUP10 LT ISZERO PUSH3 0x362 JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP3 POP JUMPDEST DUP6 DUP4 LT ISZERO PUSH3 0x38F JUMPI PUSH3 0x37A DUP2 PUSH3 0x2D4 JUMP JUMPDEST DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 DUP5 ADD PUSH3 0x366 JUMP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x3B3 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x3CA JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH3 0x3D8 DUP10 DUP4 DUP11 ADD PUSH3 0x2F1 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x3EE JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH3 0x3FD DUP9 DUP3 DUP10 ADD PUSH3 0x2F1 JUMP JUMPDEST SWAP5 POP POP PUSH3 0x40E PUSH1 0x40 DUP8 ADD PUSH3 0x2D4 JUMP JUMPDEST SWAP3 POP PUSH3 0x41E PUSH1 0x60 DUP8 ADD PUSH3 0x2D4 JUMP JUMPDEST SWAP2 POP PUSH1 0x80 DUP7 ADD MLOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x494E434F4E53495354454E545F504152414D535F4C454E475448000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH3 0x492 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH2 0xB80 PUSH3 0x4E6 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x254 ADD MSTORE PUSH2 0x479 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x44F ADD MSTORE PUSH2 0x648 ADD MSTORE PUSH2 0xB80 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x92BF2BE0 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x92BF2BE0 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x9D23D9F2 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0xABFD5310 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0xB3596F07 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0xE19F4700 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x167 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x170AEE73 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x6210308C EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE1 JUMPI DUP1 PUSH4 0x8C89B64F EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xFE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0xBC CALLDATASIZE PUSH1 0x4 PUSH2 0x921 JUMP JUMPDEST PUSH2 0x17A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCB PUSH2 0x1C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0xA10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC1 PUSH2 0x1D3 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x252 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0xB1A JUMP JUMPDEST PUSH2 0xCB PUSH2 0x276 JUMP JUMPDEST PUSH2 0xCB PUSH2 0x114 CALLDATASIZE PUSH1 0x4 PUSH2 0x921 JUMP JUMPDEST PUSH2 0x285 JUMP JUMPDEST PUSH2 0x12C PUSH2 0x127 CALLDATASIZE PUSH1 0x4 PUSH2 0x94F JUMP JUMPDEST PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0xA24 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x147 CALLDATASIZE PUSH1 0x4 PUSH2 0x98F JUMP JUMPDEST PUSH2 0x385 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0x921 JUMP JUMPDEST PUSH2 0x42D JUMP JUMPDEST PUSH2 0xCB PUSH2 0x646 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x921 JUMP JUMPDEST PUSH2 0x66A JUMP JUMPDEST PUSH2 0x182 PUSH2 0x720 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF SWAP1 PUSH2 0xAAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C1 DUP2 PUSH2 0x724 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x1DB PUSH2 0x720 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x208 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF SWAP1 PUSH2 0xAAE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2FA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x37D JUMPI PUSH2 0x340 DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x32B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x921 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x360 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x375 DUP2 PUSH2 0xB23 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x300 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x38D PUSH2 0x720 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF SWAP1 PUSH2 0xAAE JUMP JUMPDEST PUSH2 0x427 DUP5 DUP5 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP9 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP8 DUP3 MSTORE SWAP1 SWAP4 POP DUP8 SWAP3 POP DUP7 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x76E SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP3 SWAP1 DUP2 AND SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND EQ ISZERO PUSH2 0x4A0 JUMPI PUSH32 0x0 SWAP2 POP POP PUSH2 0x2A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x536 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB3596F07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xB3596F07 SWAP1 PUSH2 0x4DE SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0xA10 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x50A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x52E SWAP2 SWAP1 PUSH2 0x9F8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2A1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x50D25BCD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x571 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x585 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5A9 SWAP2 SWAP1 PUSH2 0x9F8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SGT ISZERO PUSH2 0x5BD JUMPI SWAP2 POP PUSH2 0x2A1 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB3596F07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xB3596F07 SWAP1 PUSH2 0x5ED SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0xA10 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x605 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x619 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x63D SWAP2 SWAP1 PUSH2 0x9F8 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x2A1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x672 PUSH2 0x720 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x69F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF SWAP1 PUSH2 0xAAE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x6C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF SWAP1 PUSH2 0xA68 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xCE7A780D33665B1EA097AF5F155E3821B809ECBAA839D3B33AA83BA28168CEFB SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x78F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF SWAP1 PUSH2 0xAE3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x8D3 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x7BB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x7E7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x853 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x884 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x22C5B7B2D8561D39F7F210B6B326A1AA69F15311163082308AC4877DB6339DC1 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH2 0x8CB DUP2 PUSH2 0xB23 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x792 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x8E9 JUMPI DUP2 DUP3 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x900 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP1 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x91A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x932 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x948 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x961 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x977 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x983 DUP6 DUP3 DUP7 ADD PUSH2 0x8D8 JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x9A4 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x9BB JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x9C7 DUP9 DUP4 DUP10 ADD PUSH2 0x8D8 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x9DF JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH2 0x9EC DUP8 DUP3 DUP9 ADD PUSH2 0x8D8 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA09 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA5C JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xA40 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x494E434F4E53495354454E545F504152414D535F4C454E475448000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0xB43 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 MULMOD SWAP1 0xBF 0xED 0xC8 0x25 0xC8 0xEC SWAP16 SELFBALANCE CHAINID DUP4 0xD9 SWAP14 STOP 0x2D EXTCODECOPY 0x25 0xD6 0xAC SWAP15 PUSH19 0x6924F2951F72B889F364736F6C634300080000 CALLER ","sourceMap":"871:4691:16:-:0;;;1866:430;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;873:17:9;893:12;:10;:12::i;:::-;915:6;:18;;-1:-1:-1;;;;;;915:18:9;-1:-1:-1;;;;;915:18:9;;;;;;;948:43;;915:18;;-1:-1:-1;915:18:9;948:43;;915:6;;948:43;-1:-1:-1;2064:34:16;2083:14;2064:18;:34::i;:::-;2108;2126:6;2134:7;2108:17;:34::i;:::-;-1:-1:-1;;;;;;2152:28:16;;;;;;;2190:37;;;;2242:47;;-1:-1:-1;;;;;2152:28:16;;;2242:47;;;;2211:16;;2242:47;:::i;:::-;;;;;;;;1866:430;;;;;871:4691;;590:96:6;669:10;590:96;:::o;3675:182:16:-;3746:15;:52;;-1:-1:-1;;;;;;3746:52:16;-1:-1:-1;;;;;3746:52:16;;;;;;;;3813:37;;;;-1:-1:-1;;3813:37:16;3675:182;:::o;3152:393::-;3296:7;:14;3279:6;:13;:31;3271:70;;;;-1:-1:-1;;;3271:70:16;;;;;;;:::i;:::-;;;;;;;;;3356:9;3351:188;3375:6;:13;3371:1;:17;3351:188;;;3457:7;3465:1;3457:10;;;;;;-1:-1:-1;;;3457:10:16;;;;;;;;;;;;;;;3409:13;:24;3423:6;3430:1;3423:9;;;;;;-1:-1:-1;;;3423:9:16;;;;;;;;;;;;;;;-1:-1:-1;;;;;3409:24:16;-1:-1:-1;;;;;3409:24:16;;;;;;;;;;;;;:59;;;;;-1:-1:-1;;;;;3409:59:16;;;;;-1:-1:-1;;;;;3409:59:16;;;;;;3517:7;3525:1;3517:10;;;;;;-1:-1:-1;;;3517:10:16;;;;;;;;;;;;;;;-1:-1:-1;;;;;3487:41:16;3506:6;3513:1;3506:9;;;;;;-1:-1:-1;;;3506:9:16;;;;;;;;;;;;;;;-1:-1:-1;;;;;3487:41:16;;;;;;;;;;;3390:3;;;;:::i;:::-;;;;3351:188;;;;3152:393;;:::o;14:179:30:-;95:13;;-1:-1:-1;;;;;137:31:30;;127:42;;117:2;;183:1;180;173:12;117:2;76:117;;;:::o;198:949::-;;322:3;315:4;307:6;303:17;299:27;289:2;;344:5;337;330:20;289:2;371:13;;403:4;-1:-1:-1;;;;;456:10:30;;;453:2;;;469:18;;:::i;:::-;516:2;512;508:11;548:2;542:9;599:2;594;586:6;582:15;578:24;652:6;640:10;637:22;632:2;620:10;617:18;614:46;611:2;;;663:18;;:::i;:::-;699:2;692:22;749:18;;;783:15;;;;-1:-1:-1;818:15:30;;;852;;;848:24;;845:33;-1:-1:-1;842:2:30;;;895:5;888;881:20;842:2;921:5;912:14;;935:182;949:2;946:1;943:9;935:182;;;1006:36;1038:3;1006:36;:::i;:::-;994:49;;1063:12;;;;967:1;960:9;;;;;1095:12;;935:182;;;-1:-1:-1;1135:6:30;279:868;-1:-1:-1;;;;;;;279:868:30:o;1152:893::-;;;;;;1393:3;1381:9;1372:7;1368:23;1364:33;1361:2;;;1415:6;1407;1400:22;1361:2;1447:16;;-1:-1:-1;;;;;1512:14:30;;;1509:2;;;1544:6;1536;1529:22;1509:2;1572:78;1642:7;1633:6;1622:9;1618:22;1572:78;:::i;:::-;1562:88;;1696:2;1685:9;1681:18;1675:25;1659:41;;1725:2;1715:8;1712:16;1709:2;;;1746:6;1738;1731:22;1709:2;;1774:80;1846:7;1835:8;1824:9;1820:24;1774:80;:::i;:::-;1764:90;;;1873:51;1920:2;1909:9;1905:18;1873:51;:::i;:::-;1863:61;;1943:51;1990:2;1979:9;1975:18;1943:51;:::i;:::-;1933:61;;2034:3;2023:9;2019:19;2013:26;2003:36;;1351:694;;;;;;;;:::o;2050:350::-;2252:2;2234:21;;;2291:2;2271:18;;;2264:30;2330:28;2325:2;2310:18;;2303:56;2391:2;2376:18;;2224:176::o;2405:177::-;2551:25;;;2539:2;2524:18;;2506:76::o;2587:236::-;;-1:-1:-1;;2647:17:30;;2644:2;;;-1:-1:-1;;;2687:33:30;;2743:4;2740:1;2733:15;2773:4;2694:3;2761:17;2644:2;-1:-1:-1;2815:1:30;2804:13;;2634:189::o;2828:127::-;2889:10;2884:3;2880:20;2877:1;2870:31;2920:4;2917:1;2910:15;2944:4;2941:1;2934:15;2860:95;871:4691:16;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4810:30","statements":[{"nodeType":"YulBlock","src":"6:3:30","statements":[]},{"body":{"nodeType":"YulBlock","src":"104:314:30","statements":[{"body":{"nodeType":"YulBlock","src":"153:30:30","statements":[{"expression":{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"162:8:30"},{"name":"arrayPos","nodeType":"YulIdentifier","src":"172:8:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"155:6:30"},"nodeType":"YulFunctionCall","src":"155:26:30"},"nodeType":"YulExpressionStatement","src":"155:26:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"132:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"140:4:30","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"128:3:30"},"nodeType":"YulFunctionCall","src":"128:17:30"},{"name":"end","nodeType":"YulIdentifier","src":"147:3:30"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"124:3:30"},"nodeType":"YulFunctionCall","src":"124:27:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"117:6:30"},"nodeType":"YulFunctionCall","src":"117:35:30"},"nodeType":"YulIf","src":"114:2:30"},{"nodeType":"YulAssignment","src":"192:30:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"215:6:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"202:12:30"},"nodeType":"YulFunctionCall","src":"202:20:30"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"192:6:30"}]},{"body":{"nodeType":"YulBlock","src":"265:30:30","statements":[{"expression":{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"274:8:30"},{"name":"arrayPos","nodeType":"YulIdentifier","src":"284:8:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"267:6:30"},"nodeType":"YulFunctionCall","src":"267:26:30"},"nodeType":"YulExpressionStatement","src":"267:26:30"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"237:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"245:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"234:2:30"},"nodeType":"YulFunctionCall","src":"234:30:30"},"nodeType":"YulIf","src":"231:2:30"},{"nodeType":"YulAssignment","src":"304:29:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"320:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"328:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"316:3:30"},"nodeType":"YulFunctionCall","src":"316:17:30"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"304:8:30"}]},{"body":{"nodeType":"YulBlock","src":"396:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"405:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"408:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"398:6:30"},"nodeType":"YulFunctionCall","src":"398:12:30"},"nodeType":"YulExpressionStatement","src":"398:12:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"356:6:30"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"368:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"376:4:30","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"364:3:30"},"nodeType":"YulFunctionCall","src":"364:17:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"352:3:30"},"nodeType":"YulFunctionCall","src":"352:30:30"},{"kind":"number","nodeType":"YulLiteral","src":"384:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"348:3:30"},"nodeType":"YulFunctionCall","src":"348:41:30"},{"name":"end","nodeType":"YulIdentifier","src":"391:3:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"345:2:30"},"nodeType":"YulFunctionCall","src":"345:50:30"},"nodeType":"YulIf","src":"342:2:30"}]},"name":"abi_decode_t_array$_t_address_$dyn_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"67:6:30","type":""},{"name":"end","nodeType":"YulTypedName","src":"75:3:30","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"83:8:30","type":""},{"name":"length","nodeType":"YulTypedName","src":"93:6:30","type":""}],"src":"14:404:30"},{"body":{"nodeType":"YulBlock","src":"493:236:30","statements":[{"body":{"nodeType":"YulBlock","src":"539:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"548:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"556:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"541:6:30"},"nodeType":"YulFunctionCall","src":"541:22:30"},"nodeType":"YulExpressionStatement","src":"541:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"514:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"523:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"510:3:30"},"nodeType":"YulFunctionCall","src":"510:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"535:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"506:3:30"},"nodeType":"YulFunctionCall","src":"506:32:30"},"nodeType":"YulIf","src":"503:2:30"},{"nodeType":"YulVariableDeclaration","src":"574:36:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"600:9:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"587:12:30"},"nodeType":"YulFunctionCall","src":"587:23:30"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"578:5:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"673:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"682:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"690:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"675:6:30"},"nodeType":"YulFunctionCall","src":"675:22:30"},"nodeType":"YulExpressionStatement","src":"675:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"632:5:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"643:5:30"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"658:3:30","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"663:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"654:3:30"},"nodeType":"YulFunctionCall","src":"654:11:30"},{"kind":"number","nodeType":"YulLiteral","src":"667:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"650:3:30"},"nodeType":"YulFunctionCall","src":"650:19:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"639:3:30"},"nodeType":"YulFunctionCall","src":"639:31:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"629:2:30"},"nodeType":"YulFunctionCall","src":"629:42:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"622:6:30"},"nodeType":"YulFunctionCall","src":"622:50:30"},"nodeType":"YulIf","src":"619:2:30"},{"nodeType":"YulAssignment","src":"708:15:30","value":{"name":"value","nodeType":"YulIdentifier","src":"718:5:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"708:6:30"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"459:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"470:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"482:6:30","type":""}],"src":"423:306:30"},{"body":{"nodeType":"YulBlock","src":"839:358:30","statements":[{"body":{"nodeType":"YulBlock","src":"885:26:30","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"894:6:30"},{"name":"value1","nodeType":"YulIdentifier","src":"902:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"887:6:30"},"nodeType":"YulFunctionCall","src":"887:22:30"},"nodeType":"YulExpressionStatement","src":"887:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"860:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"869:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"856:3:30"},"nodeType":"YulFunctionCall","src":"856:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"881:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"852:3:30"},"nodeType":"YulFunctionCall","src":"852:32:30"},"nodeType":"YulIf","src":"849:2:30"},{"nodeType":"YulVariableDeclaration","src":"920:37:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"947:9:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"934:12:30"},"nodeType":"YulFunctionCall","src":"934:23:30"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"924:6:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"1000:26:30","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1009:6:30"},{"name":"value1","nodeType":"YulIdentifier","src":"1017:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1002:6:30"},"nodeType":"YulFunctionCall","src":"1002:22:30"},"nodeType":"YulExpressionStatement","src":"1002:22:30"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"972:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"980:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"969:2:30"},"nodeType":"YulFunctionCall","src":"969:30:30"},"nodeType":"YulIf","src":"966:2:30"},{"nodeType":"YulVariableDeclaration","src":"1035:102:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1109:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"1120:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1105:3:30"},"nodeType":"YulFunctionCall","src":"1105:22:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1129:7:30"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_calldata","nodeType":"YulIdentifier","src":"1061:43:30"},"nodeType":"YulFunctionCall","src":"1061:76:30"},"variables":[{"name":"value0_1","nodeType":"YulTypedName","src":"1039:8:30","type":""},{"name":"value1_1","nodeType":"YulTypedName","src":"1049:8:30","type":""}]},{"nodeType":"YulAssignment","src":"1146:18:30","value":{"name":"value0_1","nodeType":"YulIdentifier","src":"1156:8:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1146:6:30"}]},{"nodeType":"YulAssignment","src":"1173:18:30","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"1183:8:30"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1173:6:30"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"797:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"808:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"820:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"828:6:30","type":""}],"src":"734:463:30"},{"body":{"nodeType":"YulBlock","src":"1359:658:30","statements":[{"body":{"nodeType":"YulBlock","src":"1405:26:30","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"1414:6:30"},{"name":"value2","nodeType":"YulIdentifier","src":"1422:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1407:6:30"},"nodeType":"YulFunctionCall","src":"1407:22:30"},"nodeType":"YulExpressionStatement","src":"1407:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1380:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"1389:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1376:3:30"},"nodeType":"YulFunctionCall","src":"1376:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"1401:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1372:3:30"},"nodeType":"YulFunctionCall","src":"1372:32:30"},"nodeType":"YulIf","src":"1369:2:30"},{"nodeType":"YulVariableDeclaration","src":"1440:37:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1467:9:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1454:12:30"},"nodeType":"YulFunctionCall","src":"1454:23:30"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1444:6:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1486:28:30","value":{"kind":"number","nodeType":"YulLiteral","src":"1496:18:30","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1490:2:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"1541:26:30","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"1550:6:30"},{"name":"value2","nodeType":"YulIdentifier","src":"1558:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1543:6:30"},"nodeType":"YulFunctionCall","src":"1543:22:30"},"nodeType":"YulExpressionStatement","src":"1543:22:30"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1529:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"1537:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1526:2:30"},"nodeType":"YulFunctionCall","src":"1526:14:30"},"nodeType":"YulIf","src":"1523:2:30"},{"nodeType":"YulVariableDeclaration","src":"1576:102:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1650:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"1661:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1646:3:30"},"nodeType":"YulFunctionCall","src":"1646:22:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1670:7:30"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_calldata","nodeType":"YulIdentifier","src":"1602:43:30"},"nodeType":"YulFunctionCall","src":"1602:76:30"},"variables":[{"name":"value0_1","nodeType":"YulTypedName","src":"1580:8:30","type":""},{"name":"value1_1","nodeType":"YulTypedName","src":"1590:8:30","type":""}]},{"nodeType":"YulAssignment","src":"1687:18:30","value":{"name":"value0_1","nodeType":"YulIdentifier","src":"1697:8:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1687:6:30"}]},{"nodeType":"YulAssignment","src":"1714:18:30","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"1724:8:30"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1714:6:30"}]},{"nodeType":"YulVariableDeclaration","src":"1741:48:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1774:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"1785:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1770:3:30"},"nodeType":"YulFunctionCall","src":"1770:18:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1757:12:30"},"nodeType":"YulFunctionCall","src":"1757:32:30"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1745:8:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"1818:26:30","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"1827:6:30"},{"name":"value2","nodeType":"YulIdentifier","src":"1835:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1820:6:30"},"nodeType":"YulFunctionCall","src":"1820:22:30"},"nodeType":"YulExpressionStatement","src":"1820:22:30"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1804:8:30"},{"name":"_1","nodeType":"YulIdentifier","src":"1814:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1801:2:30"},"nodeType":"YulFunctionCall","src":"1801:16:30"},"nodeType":"YulIf","src":"1798:2:30"},{"nodeType":"YulVariableDeclaration","src":"1853:104:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1927:9:30"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1938:8:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1923:3:30"},"nodeType":"YulFunctionCall","src":"1923:24:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1949:7:30"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_calldata","nodeType":"YulIdentifier","src":"1879:43:30"},"nodeType":"YulFunctionCall","src":"1879:78:30"},"variables":[{"name":"value2_1","nodeType":"YulTypedName","src":"1857:8:30","type":""},{"name":"value3_1","nodeType":"YulTypedName","src":"1867:8:30","type":""}]},{"nodeType":"YulAssignment","src":"1966:18:30","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"1976:8:30"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1966:6:30"}]},{"nodeType":"YulAssignment","src":"1993:18:30","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"2003:8:30"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1993:6:30"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1301:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1312:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1324:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1332:6:30","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1340:6:30","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1348:6:30","type":""}],"src":"1202:815:30"},{"body":{"nodeType":"YulBlock","src":"2102:113:30","statements":[{"body":{"nodeType":"YulBlock","src":"2148:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2157:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"2165:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2150:6:30"},"nodeType":"YulFunctionCall","src":"2150:22:30"},"nodeType":"YulExpressionStatement","src":"2150:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2123:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"2132:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2119:3:30"},"nodeType":"YulFunctionCall","src":"2119:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"2144:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2115:3:30"},"nodeType":"YulFunctionCall","src":"2115:32:30"},"nodeType":"YulIf","src":"2112:2:30"},{"nodeType":"YulAssignment","src":"2183:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2199:9:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2193:5:30"},"nodeType":"YulFunctionCall","src":"2193:16:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2183:6:30"}]}]},"name":"abi_decode_tuple_t_int256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2068:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2079:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2091:6:30","type":""}],"src":"2022:193:30"},{"body":{"nodeType":"YulBlock","src":"2301:113:30","statements":[{"body":{"nodeType":"YulBlock","src":"2347:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2356:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"2364:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2349:6:30"},"nodeType":"YulFunctionCall","src":"2349:22:30"},"nodeType":"YulExpressionStatement","src":"2349:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2322:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"2331:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2318:3:30"},"nodeType":"YulFunctionCall","src":"2318:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"2343:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2314:3:30"},"nodeType":"YulFunctionCall","src":"2314:32:30"},"nodeType":"YulIf","src":"2311:2:30"},{"nodeType":"YulAssignment","src":"2382:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2398:9:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2392:5:30"},"nodeType":"YulFunctionCall","src":"2392:16:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2382:6:30"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2267:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2278:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2290:6:30","type":""}],"src":"2220:194:30"},{"body":{"nodeType":"YulBlock","src":"2520:102:30","statements":[{"nodeType":"YulAssignment","src":"2530:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2542:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2553:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2538:3:30"},"nodeType":"YulFunctionCall","src":"2538:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2530:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2572:9:30"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2587:6:30"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2603:3:30","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2608:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2599:3:30"},"nodeType":"YulFunctionCall","src":"2599:11:30"},{"kind":"number","nodeType":"YulLiteral","src":"2612:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2595:3:30"},"nodeType":"YulFunctionCall","src":"2595:19:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2583:3:30"},"nodeType":"YulFunctionCall","src":"2583:32:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2565:6:30"},"nodeType":"YulFunctionCall","src":"2565:51:30"},"nodeType":"YulExpressionStatement","src":"2565:51:30"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2489:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2500:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2511:4:30","type":""}],"src":"2419:203:30"},{"body":{"nodeType":"YulBlock","src":"2778:484:30","statements":[{"nodeType":"YulVariableDeclaration","src":"2788:12:30","value":{"kind":"number","nodeType":"YulLiteral","src":"2798:2:30","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2792:2:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2809:32:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2827:9:30"},{"name":"_1","nodeType":"YulIdentifier","src":"2838:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2823:3:30"},"nodeType":"YulFunctionCall","src":"2823:18:30"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"2813:6:30","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2857:9:30"},{"name":"_1","nodeType":"YulIdentifier","src":"2868:2:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2850:6:30"},"nodeType":"YulFunctionCall","src":"2850:21:30"},"nodeType":"YulExpressionStatement","src":"2850:21:30"},{"nodeType":"YulVariableDeclaration","src":"2880:17:30","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"2891:6:30"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"2884:3:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2906:27:30","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2926:6:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2920:5:30"},"nodeType":"YulFunctionCall","src":"2920:13:30"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2910:6:30","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"2949:6:30"},{"name":"length","nodeType":"YulIdentifier","src":"2957:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2942:6:30"},"nodeType":"YulFunctionCall","src":"2942:22:30"},"nodeType":"YulExpressionStatement","src":"2942:22:30"},{"nodeType":"YulAssignment","src":"2973:25:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2984:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2995:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2980:3:30"},"nodeType":"YulFunctionCall","src":"2980:18:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2973:3:30"}]},{"nodeType":"YulVariableDeclaration","src":"3007:29:30","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3025:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"3033:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3021:3:30"},"nodeType":"YulFunctionCall","src":"3021:15:30"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"3011:6:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3045:13:30","value":{"name":"tail","nodeType":"YulIdentifier","src":"3054:4:30"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3049:1:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"3116:120:30","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3137:3:30"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3148:6:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3142:5:30"},"nodeType":"YulFunctionCall","src":"3142:13:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3130:6:30"},"nodeType":"YulFunctionCall","src":"3130:26:30"},"nodeType":"YulExpressionStatement","src":"3130:26:30"},{"nodeType":"YulAssignment","src":"3169:19:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3180:3:30"},{"name":"_1","nodeType":"YulIdentifier","src":"3185:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3176:3:30"},"nodeType":"YulFunctionCall","src":"3176:12:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3169:3:30"}]},{"nodeType":"YulAssignment","src":"3201:25:30","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3215:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"3223:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3211:3:30"},"nodeType":"YulFunctionCall","src":"3211:15:30"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3201:6:30"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3078:1:30"},{"name":"length","nodeType":"YulIdentifier","src":"3081:6:30"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3075:2:30"},"nodeType":"YulFunctionCall","src":"3075:13:30"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3089:18:30","statements":[{"nodeType":"YulAssignment","src":"3091:14:30","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3100:1:30"},{"kind":"number","nodeType":"YulLiteral","src":"3103:1:30","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3096:3:30"},"nodeType":"YulFunctionCall","src":"3096:9:30"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3091:1:30"}]}]},"pre":{"nodeType":"YulBlock","src":"3071:3:30","statements":[]},"src":"3067:169:30"},{"nodeType":"YulAssignment","src":"3245:11:30","value":{"name":"pos","nodeType":"YulIdentifier","src":"3253:3:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3245:4:30"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2747:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2758:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2769:4:30","type":""}],"src":"2627:635:30"},{"body":{"nodeType":"YulBlock","src":"3441:228:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3458:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3469:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3451:6:30"},"nodeType":"YulFunctionCall","src":"3451:21:30"},"nodeType":"YulExpressionStatement","src":"3451:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3492:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3503:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3488:3:30"},"nodeType":"YulFunctionCall","src":"3488:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"3508:2:30","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3481:6:30"},"nodeType":"YulFunctionCall","src":"3481:30:30"},"nodeType":"YulExpressionStatement","src":"3481:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3531:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3542:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3527:3:30"},"nodeType":"YulFunctionCall","src":"3527:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"3547:34:30","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3520:6:30"},"nodeType":"YulFunctionCall","src":"3520:62:30"},"nodeType":"YulExpressionStatement","src":"3520:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3602:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3613:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3598:3:30"},"nodeType":"YulFunctionCall","src":"3598:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"3618:8:30","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3591:6:30"},"nodeType":"YulFunctionCall","src":"3591:36:30"},"nodeType":"YulExpressionStatement","src":"3591:36:30"},{"nodeType":"YulAssignment","src":"3636:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3648:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3659:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3644:3:30"},"nodeType":"YulFunctionCall","src":"3644:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3636:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3418:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3432:4:30","type":""}],"src":"3267:402:30"},{"body":{"nodeType":"YulBlock","src":"3848:182:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3865:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3876:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3858:6:30"},"nodeType":"YulFunctionCall","src":"3858:21:30"},"nodeType":"YulExpressionStatement","src":"3858:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3899:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3910:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3895:3:30"},"nodeType":"YulFunctionCall","src":"3895:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"3915:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3888:6:30"},"nodeType":"YulFunctionCall","src":"3888:30:30"},"nodeType":"YulExpressionStatement","src":"3888:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3938:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3949:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3934:3:30"},"nodeType":"YulFunctionCall","src":"3934:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"3954:34:30","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3927:6:30"},"nodeType":"YulFunctionCall","src":"3927:62:30"},"nodeType":"YulExpressionStatement","src":"3927:62:30"},{"nodeType":"YulAssignment","src":"3998:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4010:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"4021:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4006:3:30"},"nodeType":"YulFunctionCall","src":"4006:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3998:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3825:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3839:4:30","type":""}],"src":"3674:356:30"},{"body":{"nodeType":"YulBlock","src":"4209:176:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4226:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"4237:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4219:6:30"},"nodeType":"YulFunctionCall","src":"4219:21:30"},"nodeType":"YulExpressionStatement","src":"4219:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4260:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"4271:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4256:3:30"},"nodeType":"YulFunctionCall","src":"4256:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"4276:2:30","type":"","value":"26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4249:6:30"},"nodeType":"YulFunctionCall","src":"4249:30:30"},"nodeType":"YulExpressionStatement","src":"4249:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4299:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"4310:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4295:3:30"},"nodeType":"YulFunctionCall","src":"4295:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"4315:28:30","type":"","value":"INCONSISTENT_PARAMS_LENGTH"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4288:6:30"},"nodeType":"YulFunctionCall","src":"4288:56:30"},"nodeType":"YulExpressionStatement","src":"4288:56:30"},{"nodeType":"YulAssignment","src":"4353:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4365:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"4376:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4361:3:30"},"nodeType":"YulFunctionCall","src":"4361:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4353:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_a807dff59d3474096247bf1cf10d6df8b988b576943ecf8c7dd58f40a940e704__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4186:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4200:4:30","type":""}],"src":"4035:350:30"},{"body":{"nodeType":"YulBlock","src":"4491:76:30","statements":[{"nodeType":"YulAssignment","src":"4501:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4513:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"4524:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4509:3:30"},"nodeType":"YulFunctionCall","src":"4509:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4501:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4543:9:30"},{"name":"value0","nodeType":"YulIdentifier","src":"4554:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4536:6:30"},"nodeType":"YulFunctionCall","src":"4536:25:30"},"nodeType":"YulExpressionStatement","src":"4536:25:30"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4460:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4471:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4482:4:30","type":""}],"src":"4390:177:30"},{"body":{"nodeType":"YulBlock","src":"4619:189:30","statements":[{"body":{"nodeType":"YulBlock","src":"4658:115:30","statements":[{"expression":{"arguments":[{"name":"ret","nodeType":"YulIdentifier","src":"4679:3:30"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4688:3:30","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4693:10:30","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4684:3:30"},"nodeType":"YulFunctionCall","src":"4684:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4672:6:30"},"nodeType":"YulFunctionCall","src":"4672:33:30"},"nodeType":"YulExpressionStatement","src":"4672:33:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4725:1:30","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4728:4:30","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4718:6:30"},"nodeType":"YulFunctionCall","src":"4718:15:30"},"nodeType":"YulExpressionStatement","src":"4718:15:30"},{"expression":{"arguments":[{"name":"ret","nodeType":"YulIdentifier","src":"4753:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"4758:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4746:6:30"},"nodeType":"YulFunctionCall","src":"4746:17:30"},"nodeType":"YulExpressionStatement","src":"4746:17:30"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4635:5:30"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4646:1:30","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4642:3:30"},"nodeType":"YulFunctionCall","src":"4642:6:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4632:2:30"},"nodeType":"YulFunctionCall","src":"4632:17:30"},"nodeType":"YulIf","src":"4629:2:30"},{"nodeType":"YulAssignment","src":"4782:20:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4793:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"4800:1:30","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4789:3:30"},"nodeType":"YulFunctionCall","src":"4789:13:30"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"4782:3:30"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4601:5:30","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"4611:3:30","type":""}],"src":"4572:236:30"}]},"contents":"{\n    { }\n    function abi_decode_t_array$_t_address_$dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(arrayPos, arrayPos) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(arrayPos, arrayPos) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, mul(length, 0x20)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value1, value1) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(value1, value1) }\n        let value0_1, value1_1 := abi_decode_t_array$_t_address_$dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value2, value2) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value2, value2) }\n        let value0_1, value1_1 := abi_decode_t_array$_t_address_$dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(value2, value2) }\n        let value2_1, value3_1 := abi_decode_t_array$_t_address_$dyn_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_decode_tuple_t_int256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a807dff59d3474096247bf1cf10d6df8b988b576943ecf8c7dd58f40a940e704__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"INCONSISTENT_PARAMS_LENGTH\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(ret, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(ret, 0x24)\n        }\n        ret := add(value, 1)\n    }\n}","id":30,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"1938":[{"length":32,"start":1103},{"length":32,"start":1608}],"1940":[{"length":32,"start":596},{"length":32,"start":1145}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c806392bf2be01161007157806392bf2be0146101065780639d23d9f214610119578063abfd531014610139578063b3596f071461014c578063e19f47001461015f578063f2fde38b14610167576100a9565b8063170aee73146100ae5780636210308c146100c3578063715018a6146100e15780638c89b64f146100e95780638da5cb5b146100fe575b600080fd5b6100c16100bc366004610921565b61017a565b005b6100cb6101c4565b6040516100d89190610a10565b60405180910390f35b6100c16101d3565b6100f1610252565b6040516100d89190610b1a565b6100cb610276565b6100cb610114366004610921565b610285565b61012c61012736600461094f565b6102a6565b6040516100d89190610a24565b6100c161014736600461098f565b610385565b6100f161015a366004610921565b61042d565b6100cb610646565b6100c1610175366004610921565b61066a565b610182610720565b6000546001600160a01b039081169116146101b85760405162461bcd60e51b81526004016101af90610aae565b60405180910390fd5b6101c181610724565b50565b6002546001600160a01b031690565b6101db610720565b6000546001600160a01b039081169116146102085760405162461bcd60e51b81526004016101af90610aae565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b031690565b6001600160a01b03808216600090815260016020526040902054165b919050565b606060008267ffffffffffffffff8111156102d157634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156102fa578160200160208202803683370190505b50905060005b8381101561037d5761034085858381811061032b57634e487b7160e01b600052603260045260246000fd5b905060200201602081019061015a9190610921565b82828151811061036057634e487b7160e01b600052603260045260246000fd5b60209081029190910101528061037581610b23565b915050610300565b509392505050565b61038d610720565b6000546001600160a01b039081169116146103ba5760405162461bcd60e51b81526004016101af90610aae565b6104278484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505060408051602080880282810182019093528782529093508792508691829185019084908082843760009201919091525061076e92505050565b50505050565b6001600160a01b038082166000818152600160205260408120549092908116917f000000000000000000000000000000000000000000000000000000000000000090911614156104a0577f00000000000000000000000000000000000000000000000000000000000000009150506102a1565b6001600160a01b0381166105365760025460405163b3596f0760e01b81526001600160a01b039091169063b3596f07906104de908690600401610a10565b60206040518083038186803b1580156104f657600080fd5b505afa15801561050a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052e91906109f8565b9150506102a1565b6000816001600160a01b03166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561057157600080fd5b505afa158015610585573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a991906109f8565b905060008113156105bd5791506102a19050565b60025460405163b3596f0760e01b81526001600160a01b039091169063b3596f07906105ed908790600401610a10565b60206040518083038186803b15801561060557600080fd5b505afa158015610619573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063d91906109f8565b925050506102a1565b7f000000000000000000000000000000000000000000000000000000000000000081565b610672610720565b6000546001600160a01b0390811691161461069f5760405162461bcd60e51b81526004016101af90610aae565b6001600160a01b0381166106c55760405162461bcd60e51b81526004016101af90610a68565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b600280546001600160a01b0319166001600160a01b0383169081179091556040517fce7a780d33665b1ea097af5f155e3821b809ecbaa839d3b33aa83ba28168cefb90600090a250565b805182511461078f5760405162461bcd60e51b81526004016101af90610ae3565b60005b82518110156108d3578181815181106107bb57634e487b7160e01b600052603260045260246000fd5b6020026020010151600160008584815181106107e757634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b0316021790555081818151811061085357634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b031683828151811061088457634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03167f22c5b7b2d8561d39f7f210b6b326a1aa69f15311163082308ac4877db6339dc160405160405180910390a3806108cb81610b23565b915050610792565b505050565b60008083601f8401126108e9578182fd5b50813567ffffffffffffffff811115610900578182fd5b602083019150836020808302850101111561091a57600080fd5b9250929050565b600060208284031215610932578081fd5b81356001600160a01b0381168114610948578182fd5b9392505050565b60008060208385031215610961578081fd5b823567ffffffffffffffff811115610977578182fd5b610983858286016108d8565b90969095509350505050565b600080600080604085870312156109a4578182fd5b843567ffffffffffffffff808211156109bb578384fd5b6109c7888389016108d8565b909650945060208701359150808211156109df578384fd5b506109ec878288016108d8565b95989497509550505050565b600060208284031215610a09578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6020808252825182820181905260009190848201906040850190845b81811015610a5c57835183529284019291840191600101610a40565b50909695505050505050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601a908201527f494e434f4e53495354454e545f504152414d535f4c454e475448000000000000604082015260600190565b90815260200190565b6000600019821415610b4357634e487b7160e01b81526011600452602481fd5b506001019056fea26469706673582212208a0990bfedc825c8ec9f474683d99d002d3c25d6ac9e726924f2951f72b889f364736f6c63430008000033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x92BF2BE0 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x92BF2BE0 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x9D23D9F2 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0xABFD5310 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0xB3596F07 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0xE19F4700 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x167 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x170AEE73 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x6210308C EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE1 JUMPI DUP1 PUSH4 0x8C89B64F EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xFE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0xBC CALLDATASIZE PUSH1 0x4 PUSH2 0x921 JUMP JUMPDEST PUSH2 0x17A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCB PUSH2 0x1C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0xA10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC1 PUSH2 0x1D3 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x252 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0xB1A JUMP JUMPDEST PUSH2 0xCB PUSH2 0x276 JUMP JUMPDEST PUSH2 0xCB PUSH2 0x114 CALLDATASIZE PUSH1 0x4 PUSH2 0x921 JUMP JUMPDEST PUSH2 0x285 JUMP JUMPDEST PUSH2 0x12C PUSH2 0x127 CALLDATASIZE PUSH1 0x4 PUSH2 0x94F JUMP JUMPDEST PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0xA24 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x147 CALLDATASIZE PUSH1 0x4 PUSH2 0x98F JUMP JUMPDEST PUSH2 0x385 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0x921 JUMP JUMPDEST PUSH2 0x42D JUMP JUMPDEST PUSH2 0xCB PUSH2 0x646 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x921 JUMP JUMPDEST PUSH2 0x66A JUMP JUMPDEST PUSH2 0x182 PUSH2 0x720 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF SWAP1 PUSH2 0xAAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C1 DUP2 PUSH2 0x724 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x1DB PUSH2 0x720 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x208 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF SWAP1 PUSH2 0xAAE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2FA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x37D JUMPI PUSH2 0x340 DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x32B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x921 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x360 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x375 DUP2 PUSH2 0xB23 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x300 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x38D PUSH2 0x720 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF SWAP1 PUSH2 0xAAE JUMP JUMPDEST PUSH2 0x427 DUP5 DUP5 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP9 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP8 DUP3 MSTORE SWAP1 SWAP4 POP DUP8 SWAP3 POP DUP7 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x76E SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP3 SWAP1 DUP2 AND SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND EQ ISZERO PUSH2 0x4A0 JUMPI PUSH32 0x0 SWAP2 POP POP PUSH2 0x2A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x536 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB3596F07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xB3596F07 SWAP1 PUSH2 0x4DE SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0xA10 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x50A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x52E SWAP2 SWAP1 PUSH2 0x9F8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2A1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x50D25BCD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x571 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x585 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5A9 SWAP2 SWAP1 PUSH2 0x9F8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SGT ISZERO PUSH2 0x5BD JUMPI SWAP2 POP PUSH2 0x2A1 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB3596F07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xB3596F07 SWAP1 PUSH2 0x5ED SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0xA10 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x605 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x619 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x63D SWAP2 SWAP1 PUSH2 0x9F8 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x2A1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x672 PUSH2 0x720 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x69F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF SWAP1 PUSH2 0xAAE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x6C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF SWAP1 PUSH2 0xA68 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xCE7A780D33665B1EA097AF5F155E3821B809ECBAA839D3B33AA83BA28168CEFB SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x78F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF SWAP1 PUSH2 0xAE3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x8D3 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x7BB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x7E7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x853 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x884 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x22C5B7B2D8561D39F7F210B6B326A1AA69F15311163082308AC4877DB6339DC1 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH2 0x8CB DUP2 PUSH2 0xB23 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x792 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x8E9 JUMPI DUP2 DUP3 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x900 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP1 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x91A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x932 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x948 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x961 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x977 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x983 DUP6 DUP3 DUP7 ADD PUSH2 0x8D8 JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x9A4 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x9BB JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x9C7 DUP9 DUP4 DUP10 ADD PUSH2 0x8D8 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x9DF JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH2 0x9EC DUP8 DUP3 DUP9 ADD PUSH2 0x8D8 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA09 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA5C JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xA40 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x494E434F4E53495354454E545F504152414D535F4C454E475448000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0xB43 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 MULMOD SWAP1 0xBF 0xED 0xC8 0x25 0xC8 0xEC SWAP16 SELFBALANCE CHAINID DUP4 0xD9 SWAP14 STOP 0x2D EXTCODECOPY 0x25 0xD6 0xAC SWAP15 PUSH19 0x6924F2951F72B889F364736F6C634300080000 CALLER ","sourceMap":"871:4691:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2844:121;;;;;;:::i;:::-;;:::i;:::-;;5451:109;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1697:145:9;;;:::i;1369:43:16:-;;;:::i;:::-;;;;;;;:::i;1074:77:9:-;;;:::i;5205:126:16:-;;;;;;:::i;:::-;;:::i;4706:329::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2515:172::-;;;;;;:::i;:::-;;:::i;3949:630::-;;;;;;:::i;:::-;;:::i;1325:38::-;;;:::i;1991:274:9:-;;;;;;:::i;:::-;;:::i;2844:121:16:-;1288:12:9;:10;:12::i;:::-;1278:6;;-1:-1:-1;;;;;1278:6:9;;;:22;;;1270:67;;;;-1:-1:-1;;;1270:67:9;;;;;;;:::i;:::-;;;;;;;;;2924:34:16::1;2943:14;2924:18;:34::i;:::-;2844:121:::0;:::o;5451:109::-;5537:15;;-1:-1:-1;;;;;5537:15:16;5451:109;:::o;1697:145:9:-;1288:12;:10;:12::i;:::-;1278:6;;-1:-1:-1;;;;;1278:6:9;;;:22;;;1270:67;;;;-1:-1:-1;;;1270:67:9;;;;;;;:::i;:::-;1803:1:::1;1787:6:::0;;1766:40:::1;::::0;-1:-1:-1;;;;;1787:6:9;;::::1;::::0;1766:40:::1;::::0;1803:1;;1766:40:::1;1833:1;1816:19:::0;;-1:-1:-1;;;;;;1816:19:9::1;::::0;;1697:145::o;1369:43:16:-;;;:::o;1074:77:9:-;1112:7;1138:6;-1:-1:-1;;;;;1138:6:9;1074:77;:::o;5205:126:16:-;-1:-1:-1;;;;;5303:20:16;;;5269:7;5303:20;;;:13;:20;;;;;;;5205:126;;;;:::o;4706:329::-;4805:16;4837:23;4877:6;4863:28;;;;;;-1:-1:-1;;;4863:28:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4863:28:16;;4837:54;;4906:9;4901:105;4921:17;;;4901:105;;;4971:24;4985:6;;4992:1;4985:9;;;;;-1:-1:-1;;;4985:9:16;;;;;;;;;;;;;;;;;;;;;;:::i;4971:24::-;4959:6;4966:1;4959:9;;;;;;-1:-1:-1;;;4959:9:16;;;;;;;;;;;;;;;;;;:36;4940:3;;;;:::i;:::-;;;;4901:105;;;-1:-1:-1;5022:6:16;4706:329;-1:-1:-1;;;4706:329:16:o;2515:172::-;1288:12:9;:10;:12::i;:::-;1278:6;;-1:-1:-1;;;;;1278:6:9;;;:22;;;1270:67;;;;-1:-1:-1;;;1270:67:9;;;;;;;:::i;:::-;2646:34:16::1;2664:6;;2646:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;2646:34:16::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;;;;;;-1:-1:-1;2672:7:16;;-1:-1:-1;2672:7:16;;;;2646:34;::::1;::::0;2672:7;;2646:34;2672:7;2646:34;::::1;;::::0;::::1;::::0;;;;-1:-1:-1;2646:17:16::1;::::0;-1:-1:-1;;;2646:34:16:i:1;:::-;2515:172:::0;;;;:::o;3949:630::-;-1:-1:-1;;;;;4102:20:16;;;4049:7;4102:20;;;:13;:20;;;;;;4049:7;;4102:20;;;;4146:13;4137:22;;;;4133:440;;;4182:18;4175:25;;;;;4133:440;-1:-1:-1;;;;;4221:29:16;;4217:356;;4273:15;;:36;;-1:-1:-1;;;4273:36:16;;-1:-1:-1;;;;;4273:15:16;;;;:29;;:36;;4303:5;;4273:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4266:43;;;;;4217:356;4340:12;4376:6;-1:-1:-1;;;;;4355:41:16;;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4340:58;;4424:1;4416:5;:9;4412:151;;;4460:5;-1:-1:-1;4445:21:16;;-1:-1:-1;4445:21:16;4412:151;4512:15;;:36;;-1:-1:-1;;;4512:36:16;;-1:-1:-1;;;;;4512:15:16;;;;:29;;:36;;4542:5;;4512:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4505:43;;;;;;1325:38;;;:::o;1991:274:9:-;1288:12;:10;:12::i;:::-;1278:6;;-1:-1:-1;;;;;1278:6:9;;;:22;;;1270:67;;;;-1:-1:-1;;;1270:67:9;;;;;;;:::i;:::-;-1:-1:-1;;;;;2092:22:9;::::1;2071:107;;;;-1:-1:-1::0;;;2071:107:9::1;;;;;;;:::i;:::-;2214:6;::::0;;2193:38:::1;::::0;-1:-1:-1;;;;;2193:38:9;;::::1;::::0;2214:6;::::1;::::0;2193:38:::1;::::0;::::1;2241:6;:17:::0;;-1:-1:-1;;;;;;2241:17:9::1;-1:-1:-1::0;;;;;2241:17:9;;;::::1;::::0;;;::::1;::::0;;1991:274::o;590:96:6:-;669:10;590:96;:::o;3675:182:16:-;3746:15;:52;;-1:-1:-1;;;;;;3746:52:16;-1:-1:-1;;;;;3746:52:16;;;;;;;;3813:37;;;;-1:-1:-1;;3813:37:16;3675:182;:::o;3152:393::-;3296:7;:14;3279:6;:13;:31;3271:70;;;;-1:-1:-1;;;3271:70:16;;;;;;;:::i;:::-;3356:9;3351:188;3375:6;:13;3371:1;:17;3351:188;;;3457:7;3465:1;3457:10;;;;;;-1:-1:-1;;;3457:10:16;;;;;;;;;;;;;;;3409:13;:24;3423:6;3430:1;3423:9;;;;;;-1:-1:-1;;;3423:9:16;;;;;;;;;;;;;;;-1:-1:-1;;;;;3409:24:16;-1:-1:-1;;;;;3409:24:16;;;;;;;;;;;;;:59;;;;;-1:-1:-1;;;;;3409:59:16;;;;;-1:-1:-1;;;;;3409:59:16;;;;;;3517:7;3525:1;3517:10;;;;;;-1:-1:-1;;;3517:10:16;;;;;;;;;;;;;;;-1:-1:-1;;;;;3487:41:16;3506:6;3513:1;3506:9;;;;;;-1:-1:-1;;;3506:9:16;;;;;;;;;;;;;;;-1:-1:-1;;;;;3487:41:16;;;;;;;;;;;3390:3;;;;:::i;:::-;;;;3351:188;;;;3152:393;;:::o;14:404:30:-;;;147:3;140:4;132:6;128:17;124:27;114:2;;172:8;162;155:26;114:2;-1:-1:-1;202:20:30;;245:18;234:30;;231:2;;;284:8;274;267:26;231:2;328:4;320:6;316:17;304:29;;391:3;384:4;376;368:6;364:17;356:6;352:30;348:41;345:50;342:2;;;408:1;405;398:12;342:2;104:314;;;;;:::o;423:306::-;;535:2;523:9;514:7;510:23;506:32;503:2;;;556:6;548;541:22;503:2;587:23;;-1:-1:-1;;;;;639:31:30;;629:42;;619:2;;690:6;682;675:22;619:2;718:5;493:236;-1:-1:-1;;;493:236:30:o;734:463::-;;;881:2;869:9;860:7;856:23;852:32;849:2;;;902:6;894;887:22;849:2;947:9;934:23;980:18;972:6;969:30;966:2;;;1017:6;1009;1002:22;966:2;1061:76;1129:7;1120:6;1109:9;1105:22;1061:76;:::i;:::-;1156:8;;1035:102;;-1:-1:-1;839:358:30;-1:-1:-1;;;;839:358:30:o;1202:815::-;;;;;1401:2;1389:9;1380:7;1376:23;1372:32;1369:2;;;1422:6;1414;1407:22;1369:2;1467:9;1454:23;1496:18;1537:2;1529:6;1526:14;1523:2;;;1558:6;1550;1543:22;1523:2;1602:76;1670:7;1661:6;1650:9;1646:22;1602:76;:::i;:::-;1697:8;;-1:-1:-1;1576:102:30;-1:-1:-1;1785:2:30;1770:18;;1757:32;;-1:-1:-1;1801:16:30;;;1798:2;;;1835:6;1827;1820:22;1798:2;;1879:78;1949:7;1938:8;1927:9;1923:24;1879:78;:::i;:::-;1359:658;;;;-1:-1:-1;1976:8:30;-1:-1:-1;;;;1359:658:30:o;2022:193::-;;2144:2;2132:9;2123:7;2119:23;2115:32;2112:2;;;2165:6;2157;2150:22;2112:2;-1:-1:-1;2193:16:30;;2102:113;-1:-1:-1;2102:113:30:o;2419:203::-;-1:-1:-1;;;;;2583:32:30;;;;2565:51;;2553:2;2538:18;;2520:102::o;2627:635::-;2798:2;2850:21;;;2920:13;;2823:18;;;2942:22;;;2627:635;;2798:2;3021:15;;;;2995:2;2980:18;;;2627:635;3067:169;3081:6;3078:1;3075:13;3067:169;;;3142:13;;3130:26;;3211:15;;;;3176:12;;;;3103:1;3096:9;3067:169;;;-1:-1:-1;3253:3:30;;2778:484;-1:-1:-1;;;;;;2778:484:30:o;3267:402::-;3469:2;3451:21;;;3508:2;3488:18;;;3481:30;3547:34;3542:2;3527:18;;3520:62;-1:-1:-1;;;3613:2:30;3598:18;;3591:36;3659:3;3644:19;;3441:228::o;3674:356::-;3876:2;3858:21;;;3895:18;;;3888:30;3954:34;3949:2;3934:18;;3927:62;4021:2;4006:18;;3848:182::o;4035:350::-;4237:2;4219:21;;;4276:2;4256:18;;;4249:30;4315:28;4310:2;4295:18;;4288:56;4376:2;4361:18;;4209:176::o;4390:177::-;4536:25;;;4524:2;4509:18;;4491:76::o;4572:236::-;;-1:-1:-1;;4632:17:30;;4629:2;;;-1:-1:-1;;;4672:33:30;;4728:4;4725:1;4718:15;4758:4;4679:3;4746:17;4629:2;-1:-1:-1;4800:1:30;4789:13;;4619:189::o"},"gasEstimates":{"creation":{"codeDepositCost":"588800","executionCost":"infinite","totalCost":"infinite"},"external":{"BASE_CURRENCY()":"infinite","BASE_CURRENCY_UNIT()":"infinite","getAssetPrice(address)":"infinite","getAssetsPrices(address[])":"infinite","getFallbackOracle()":"1093","getSourceOfAsset(address)":"1274","owner()":"1159","renounceOwnership()":"24249","setAssetSources(address[],address[])":"infinite","setFallbackOracle(address)":"23184","transferOwnership(address)":"24514"},"internal":{"_setAssetsSources(address[] memory,address[] memory)":"infinite","_setFallbackOracle(address)":"22026"}},"methodIdentifiers":{"BASE_CURRENCY()":"e19f4700","BASE_CURRENCY_UNIT()":"8c89b64f","getAssetPrice(address)":"b3596f07","getAssetsPrices(address[])":"9d23d9f2","getFallbackOracle()":"6210308c","getSourceOfAsset(address)":"92bf2be0","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setAssetSources(address[],address[])":"abfd5310","setFallbackOracle(address)":"170aee73","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"sources\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"fallbackOracle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseCurrency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"baseCurrencyUnit\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"AssetSourceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"baseCurrency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseCurrencyUnit\",\"type\":\"uint256\"}],\"name\":\"BaseCurrencySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fallbackOracle\",\"type\":\"address\"}],\"name\":\"FallbackOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BASE_CURRENCY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BASE_CURRENCY_UNIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"name\":\"getAssetsPrices\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFallbackOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getSourceOfAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"sources\",\"type\":\"address[]\"}],\"name\":\"setAssetSources\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fallbackOracle\",\"type\":\"address\"}],\"name\":\"setFallbackOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"assets\":\"The addresses of the assets\",\"baseCurrency\":\"the base currency used for the price quotes. If USD is used, base currency is 0x0\",\"baseCurrencyUnit\":\"the unit of the base currency\",\"fallbackOracle\":\"The address of the fallback oracle to use if the data of an        aggregator is not consistent\",\"sources\":\"The address of the source of each asset\"}},\"getAssetPrice(address)\":{\"params\":{\"asset\":\"The asset address\"}},\"getAssetsPrices(address[])\":{\"params\":{\"assets\":\"The list of assets addresses\"}},\"getFallbackOracle()\":{\"returns\":{\"_0\":\"address The addres of the fallback oracle\"}},\"getSourceOfAsset(address)\":{\"params\":{\"asset\":\"The address of the asset\"},\"returns\":{\"_0\":\"address The address of the source\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setAssetSources(address[],address[])\":{\"params\":{\"assets\":\"The addresses of the assets\",\"sources\":\"The address of the source of each asset\"}},\"setFallbackOracle(address)\":{\"params\":{\"fallbackOracle\":\"The address of the fallbackOracle\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"AaveOracle\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor\"},\"getAssetPrice(address)\":{\"notice\":\"Gets an asset price by address\"},\"getAssetsPrices(address[])\":{\"notice\":\"Gets a list of prices from a list of assets addresses\"},\"getFallbackOracle()\":{\"notice\":\"Gets the address of the fallback oracle\"},\"getSourceOfAsset(address)\":{\"notice\":\"Gets the address of the source for an asset address\"},\"setAssetSources(address[],address[])\":{\"notice\":\"External function called by the Aave governance to set or replace sources of assets\"},\"setFallbackOracle(address)\":{\"notice\":\"Sets the fallbackOracle - Callable only by the Aave governance\"}},\"notice\":\"Proxy smart contract to get the price of an asset from a price source, with Chainlink Aggregator         smart contracts as primary option - If the returned price by a Chainlink aggregator is <= 0, the call is forwarded to a fallbackOracle - Owned by the Aave governance system, allowed to add sources for assets, replace them   and change the fallbackOracle\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/misc/AaveOracle.sol\":\"AaveOracle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/Address.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\\n        // for accounts without code, i.e. `keccak256('')`\\n        // bytes32 codehash;\\n        // bytes32 accountHash =\\n        //     0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\n        // // solhint-disable-next-line no-inline-assembly\\n        // assembly {\\n        //     codehash := extcodehash(account)\\n        // }\\n        // return (codehash != accountHash && codehash != 0x0);\\n        return account.code.length > 0; //updated\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(\\n            address(this).balance >= amount,\\n            \\\"Address: insufficient balance\\\"\\n        );\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(\\n            success,\\n            \\\"Address: unable to send value, recipient may have reverted\\\"\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x37523692d5b121789b70f518a1639d6a978d5f863ae026b16cc45b823eecf157\",\"license\":\"agpl-3.0\"},\"contracts/dependencies/openzeppelin/contracts/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x68bfa0a768a2c75bcc8ea4588200f8f78d5b20a785189855b4b301770db578cf\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount)\\n        external\\n        returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n}\\n\",\"keccak256\":\"0x6a0e7bdec11b28b6b88f25301cd51477bd0025846062465a158eee1144f10bd3\",\"license\":\"agpl-3.0\"},\"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0;\\n\\nimport \\\"./Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\ncontract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(\\n        address indexed previousOwner,\\n        address indexed newOwner\\n    );\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(\\n            newOwner != address(0),\\n            \\\"Ownable: new owner is the zero address\\\"\\n        );\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x27577f376012a863c1c6f74048b33a256a5521baa56167d27bc52d90a87fb1cb\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/contracts/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {SafeMath} from \\\"./SafeMath.sol\\\";\\nimport {Address} from \\\"./Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        callOptionalReturn(\\n            token,\\n            abi.encodeWithSelector(token.transfer.selector, to, value)\\n        );\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        callOptionalReturn(\\n            token,\\n            abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\\n        );\\n    }\\n\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        callOptionalReturn(\\n            token,\\n            abi.encodeWithSelector(token.approve.selector, spender, value)\\n        );\\n    }\\n\\n    function callOptionalReturn(IERC20 token, bytes memory data) private {\\n        require(address(token).isContract(), \\\"SafeERC20: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        require(success, \\\"SafeERC20: low-level call failed\\\");\\n\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(\\n                abi.decode(returndata, (bool)),\\n                \\\"SafeERC20: ERC20 operation did not succeed\\\"\\n            );\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xb4f0a6930495daa6a124f1183b6caee5dc8283b230fa0d51ae90322f7ba24aad\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b)\\n        internal\\n        pure\\n        returns (bool, uint256)\\n    {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b)\\n        internal\\n        pure\\n        returns (bool, uint256)\\n    {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b)\\n        internal\\n        pure\\n        returns (bool, uint256)\\n    {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b)\\n        internal\\n        pure\\n        returns (bool, uint256)\\n    {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b)\\n        internal\\n        pure\\n        returns (bool, uint256)\\n    {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x92977dbde9b82328cac05a270258b1e93c9a0e1d4851786aac4d86e916bd54ca\",\"license\":\"MIT\"},\"contracts/interfaces/IChainlinkAggregator.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\ninterface IChainlinkAggregator {\\n    function decimals() external view returns (uint8);\\n\\n    function latestAnswer() external view returns (int256);\\n\\n    function latestTimestamp() external view returns (uint256);\\n\\n    function latestRound() external view returns (uint256);\\n\\n    function getAnswer(uint256 roundId) external view returns (int256);\\n\\n    function getTimestamp(uint256 roundId) external view returns (uint256);\\n\\n    event AnswerUpdated(\\n        int256 indexed current,\\n        uint256 indexed roundId,\\n        uint256 timestamp\\n    );\\n    event NewRound(uint256 indexed roundId, address indexed startedBy);\\n}\\n\",\"keccak256\":\"0xe9b6c1724de16518dadf10284718004691a351a25b5348b81867f5ec58f67642\",\"license\":\"agpl-3.0\"},\"contracts/interfaces/IPriceOracleGetter.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\n/**\\n * @title IPriceOracleGetter interface\\n * @notice Interface for the Aave price oracle.\\n **/\\n\\ninterface IPriceOracleGetter {\\n    /**\\n     * @dev returns the asset price in ETH\\n     * @param asset the address of the asset\\n     * @return the ETH price of the asset\\n     **/\\n    function getAssetPrice(address asset) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xd0ddd343f94683ab5210c629a098a2d306433543e9ac0d6d3841672f8166f260\",\"license\":\"agpl-3.0\"},\"contracts/misc/AaveOracle.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\nimport {Ownable} from \\\"../dependencies/openzeppelin/contracts/Ownable.sol\\\";\\nimport {IERC20} from \\\"../dependencies/openzeppelin/contracts/IERC20.sol\\\";\\n\\nimport {IPriceOracleGetter} from \\\"../interfaces/IPriceOracleGetter.sol\\\";\\nimport {IChainlinkAggregator} from \\\"../interfaces/IChainlinkAggregator.sol\\\";\\nimport {SafeERC20} from \\\"../dependencies/openzeppelin/contracts/SafeERC20.sol\\\";\\n\\n/// @title AaveOracle\\n/// @author Aave\\n/// @notice Proxy smart contract to get the price of an asset from a price source, with Chainlink Aggregator\\n///         smart contracts as primary option\\n/// - If the returned price by a Chainlink aggregator is <= 0, the call is forwarded to a fallbackOracle\\n/// - Owned by the Aave governance system, allowed to add sources for assets, replace them\\n///   and change the fallbackOracle\\ncontract AaveOracle is IPriceOracleGetter, Ownable {\\n    using SafeERC20 for IERC20;\\n\\n    event BaseCurrencySet(\\n        address indexed baseCurrency,\\n        uint256 baseCurrencyUnit\\n    );\\n    event AssetSourceUpdated(address indexed asset, address indexed source);\\n    event FallbackOracleUpdated(address indexed fallbackOracle);\\n\\n    mapping(address => IChainlinkAggregator) private assetsSources;\\n    IPriceOracleGetter private _fallbackOracle;\\n    address public immutable BASE_CURRENCY;\\n    uint256 public immutable BASE_CURRENCY_UNIT;\\n\\n    /// @notice Constructor\\n    /// @param assets The addresses of the assets\\n    /// @param sources The address of the source of each asset\\n    /// @param fallbackOracle The address of the fallback oracle to use if the data of an\\n    ///        aggregator is not consistent\\n    /// @param baseCurrency the base currency used for the price quotes. If USD is used, base currency is 0x0\\n    /// @param baseCurrencyUnit the unit of the base currency\\n    constructor(\\n        address[] memory assets,\\n        address[] memory sources,\\n        address fallbackOracle,\\n        address baseCurrency,\\n        uint256 baseCurrencyUnit\\n    ) public {\\n        _setFallbackOracle(fallbackOracle);\\n        _setAssetsSources(assets, sources);\\n        BASE_CURRENCY = baseCurrency;\\n        BASE_CURRENCY_UNIT = baseCurrencyUnit;\\n        emit BaseCurrencySet(baseCurrency, baseCurrencyUnit);\\n    }\\n\\n    /// @notice External function called by the Aave governance to set or replace sources of assets\\n    /// @param assets The addresses of the assets\\n    /// @param sources The address of the source of each asset\\n    function setAssetSources(\\n        address[] calldata assets,\\n        address[] calldata sources\\n    ) external onlyOwner {\\n        _setAssetsSources(assets, sources);\\n    }\\n\\n    /// @notice Sets the fallbackOracle\\n    /// - Callable only by the Aave governance\\n    /// @param fallbackOracle The address of the fallbackOracle\\n    function setFallbackOracle(address fallbackOracle) external onlyOwner {\\n        _setFallbackOracle(fallbackOracle);\\n    }\\n\\n    /// @notice Internal function to set the sources for each asset\\n    /// @param assets The addresses of the assets\\n    /// @param sources The address of the source of each asset\\n    function _setAssetsSources(\\n        address[] memory assets,\\n        address[] memory sources\\n    ) internal {\\n        require(assets.length == sources.length, \\\"INCONSISTENT_PARAMS_LENGTH\\\");\\n        for (uint256 i = 0; i < assets.length; i++) {\\n            assetsSources[assets[i]] = IChainlinkAggregator(sources[i]);\\n            emit AssetSourceUpdated(assets[i], sources[i]);\\n        }\\n    }\\n\\n    /// @notice Internal function to set the fallbackOracle\\n    /// @param fallbackOracle The address of the fallbackOracle\\n    function _setFallbackOracle(address fallbackOracle) internal {\\n        _fallbackOracle = IPriceOracleGetter(fallbackOracle);\\n        emit FallbackOracleUpdated(fallbackOracle);\\n    }\\n\\n    /// @notice Gets an asset price by address\\n    /// @param asset The asset address\\n    function getAssetPrice(address asset)\\n        public\\n        view\\n        override\\n        returns (uint256)\\n    {\\n        IChainlinkAggregator source = assetsSources[asset];\\n\\n        if (asset == BASE_CURRENCY) {\\n            return BASE_CURRENCY_UNIT;\\n        } else if (address(source) == address(0)) {\\n            return _fallbackOracle.getAssetPrice(asset);\\n        } else {\\n            int256 price = IChainlinkAggregator(source).latestAnswer();\\n            if (price > 0) {\\n                return uint256(price);\\n            } else {\\n                return _fallbackOracle.getAssetPrice(asset);\\n            }\\n        }\\n    }\\n\\n    /// @notice Gets a list of prices from a list of assets addresses\\n    /// @param assets The list of assets addresses\\n    function getAssetsPrices(address[] calldata assets)\\n        external\\n        view\\n        returns (uint256[] memory)\\n    {\\n        uint256[] memory prices = new uint256[](assets.length);\\n        for (uint256 i = 0; i < assets.length; i++) {\\n            prices[i] = getAssetPrice(assets[i]);\\n        }\\n        return prices;\\n    }\\n\\n    /// @notice Gets the address of the source for an asset address\\n    /// @param asset The address of the asset\\n    /// @return address The address of the source\\n    function getSourceOfAsset(address asset) external view returns (address) {\\n        return address(assetsSources[asset]);\\n    }\\n\\n    /// @notice Gets the address of the fallback oracle\\n    /// @return address The addres of the fallback oracle\\n    function getFallbackOracle() external view returns (address) {\\n        return address(_fallbackOracle);\\n    }\\n}\\n\",\"keccak256\":\"0xd6b51453891793a3bdfadfa9dbac1514e5b2eef1ec903cf2ee84cb38f254682a\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[{"astId":610,"contract":"contracts/misc/AaveOracle.sol:AaveOracle","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":1933,"contract":"contracts/misc/AaveOracle.sol:AaveOracle","label":"assetsSources","offset":0,"slot":"1","type":"t_mapping(t_address,t_contract(IChainlinkAggregator)1235)"},{"astId":1936,"contract":"contracts/misc/AaveOracle.sol:AaveOracle","label":"_fallbackOracle","offset":0,"slot":"2","type":"t_contract(IPriceOracleGetter)1891"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_contract(IChainlinkAggregator)1235":{"encoding":"inplace","label":"contract IChainlinkAggregator","numberOfBytes":"20"},"t_contract(IPriceOracleGetter)1891":{"encoding":"inplace","label":"contract IPriceOracleGetter","numberOfBytes":"20"},"t_mapping(t_address,t_contract(IChainlinkAggregator)1235)":{"encoding":"mapping","key":"t_address","label":"mapping(address => contract IChainlinkAggregator)","numberOfBytes":"32","value":"t_contract(IChainlinkAggregator)1235"}}},"userdoc":{"kind":"user","methods":{"constructor":{"notice":"Constructor"},"getAssetPrice(address)":{"notice":"Gets an asset price by address"},"getAssetsPrices(address[])":{"notice":"Gets a list of prices from a list of assets addresses"},"getFallbackOracle()":{"notice":"Gets the address of the fallback oracle"},"getSourceOfAsset(address)":{"notice":"Gets the address of the source for an asset address"},"setAssetSources(address[],address[])":{"notice":"External function called by the Aave governance to set or replace sources of assets"},"setFallbackOracle(address)":{"notice":"Sets the fallbackOracle - Callable only by the Aave governance"}},"notice":"Proxy smart contract to get the price of an asset from a price source, with Chainlink Aggregator         smart contracts as primary option - If the returned price by a Chainlink aggregator is <= 0, the call is forwarded to a fallbackOracle - Owned by the Aave governance system, allowed to add sources for assets, replace them   and change the fallbackOracle","version":1}}},"contracts/misc/interfaces/IAaveOracle.sol":{"IAaveOracle":{"abi":[{"inputs":[],"name":"BASE_CURRENCY","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"BASE_CURRENCY_UNIT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getAssetPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"title":"IAaveOracle interface","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"BASE_CURRENCY()":"e19f4700","BASE_CURRENCY_UNIT()":"8c89b64f","getAssetPrice(address)":"b3596f07"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BASE_CURRENCY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BASE_CURRENCY_UNIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"IAaveOracle interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Interface for the Aave oracle.*\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/misc/interfaces/IAaveOracle.sol\":\"IAaveOracle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/misc/interfaces/IAaveOracle.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\n/**\\n * @title IAaveOracle interface\\n * @notice Interface for the Aave oracle.\\n **/\\n\\ninterface IAaveOracle {\\n    function BASE_CURRENCY() external view returns (address); // if usd returns 0x0, if eth returns weth address\\n\\n    function BASE_CURRENCY_UNIT() external view returns (uint256);\\n\\n    /***********\\n    @dev returns the asset price in ETH\\n     */\\n    function getAssetPrice(address asset) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xf55a1037dcbb14f3aa5e7e9c6d126833caa0e176ea0b6d8a85add31df8f5f2c9\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"Interface for the Aave oracle.*","version":1}}},"contracts/misc/interfaces/IUiPoolDataProviderV2.sol":{"IUiPoolDataProviderV2":{"abi":[{"inputs":[{"internalType":"contract ILendingPoolAddressesProvider","name":"provider","type":"address"}],"name":"getReservesData","outputs":[{"components":[{"internalType":"address","name":"underlyingAsset","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"uint256","name":"baseLTVasCollateral","type":"uint256"},{"internalType":"uint256","name":"reserveLiquidationThreshold","type":"uint256"},{"internalType":"uint256","name":"reserveLiquidationBonus","type":"uint256"},{"internalType":"uint256","name":"reserveFactor","type":"uint256"},{"internalType":"bool","name":"usageAsCollateralEnabled","type":"bool"},{"internalType":"bool","name":"borrowingEnabled","type":"bool"},{"internalType":"bool","name":"stableBorrowRateEnabled","type":"bool"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"bool","name":"isFrozen","type":"bool"},{"internalType":"uint128","name":"liquidityIndex","type":"uint128"},{"internalType":"uint128","name":"variableBorrowIndex","type":"uint128"},{"internalType":"uint128","name":"liquidityRate","type":"uint128"},{"internalType":"uint128","name":"variableBorrowRate","type":"uint128"},{"internalType":"uint128","name":"stableBorrowRate","type":"uint128"},{"internalType":"uint40","name":"lastUpdateTimestamp","type":"uint40"},{"internalType":"address","name":"aTokenAddress","type":"address"},{"internalType":"address","name":"stableDebtTokenAddress","type":"address"},{"internalType":"address","name":"variableDebtTokenAddress","type":"address"},{"internalType":"address","name":"interestRateStrategyAddress","type":"address"},{"internalType":"uint256","name":"availableLiquidity","type":"uint256"},{"internalType":"uint256","name":"totalPrincipalStableDebt","type":"uint256"},{"internalType":"uint256","name":"averageStableRate","type":"uint256"},{"internalType":"uint256","name":"stableDebtLastUpdateTimestamp","type":"uint256"},{"internalType":"uint256","name":"totalScaledVariableDebt","type":"uint256"},{"internalType":"uint256","name":"priceInMarketReferenceCurrency","type":"uint256"},{"internalType":"uint256","name":"variableRateSlope1","type":"uint256"},{"internalType":"uint256","name":"variableRateSlope2","type":"uint256"},{"internalType":"uint256","name":"stableRateSlope1","type":"uint256"},{"internalType":"uint256","name":"stableRateSlope2","type":"uint256"}],"internalType":"struct IUiPoolDataProviderV2.AggregatedReserveData[]","name":"","type":"tuple[]"},{"components":[{"internalType":"uint256","name":"marketReferenceCurrencyUnit","type":"uint256"},{"internalType":"int256","name":"marketReferenceCurrencyPriceInUsd","type":"int256"},{"internalType":"int256","name":"networkBaseTokenPriceInUsd","type":"int256"},{"internalType":"uint8","name":"networkBaseTokenPriceDecimals","type":"uint8"}],"internalType":"struct IUiPoolDataProviderV2.BaseCurrencyInfo","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract ILendingPoolAddressesProvider","name":"provider","type":"address"}],"name":"getReservesList","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract ILendingPoolAddressesProvider","name":"provider","type":"address"},{"internalType":"address","name":"user","type":"address"}],"name":"getUserReservesData","outputs":[{"components":[{"internalType":"address","name":"underlyingAsset","type":"address"},{"internalType":"uint256","name":"scaledATokenBalance","type":"uint256"},{"internalType":"bool","name":"usageAsCollateralEnabledOnUser","type":"bool"},{"internalType":"uint256","name":"stableBorrowRate","type":"uint256"},{"internalType":"uint256","name":"scaledVariableDebt","type":"uint256"},{"internalType":"uint256","name":"principalStableDebt","type":"uint256"},{"internalType":"uint256","name":"stableBorrowLastUpdateTimestamp","type":"uint256"}],"internalType":"struct IUiPoolDataProviderV2.UserReserveData[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getReservesData(address)":"ec489c21","getReservesList(address)":"586c1442","getUserReservesData(address,address)":"51974cc0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ILendingPoolAddressesProvider\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"getReservesData\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"underlyingAsset\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseLTVasCollateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveLiquidationThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveLiquidationBonus\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveFactor\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"usageAsCollateralEnabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"borrowingEnabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"stableBorrowRateEnabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isFrozen\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"liquidityIndex\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"variableBorrowIndex\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"liquidityRate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"variableBorrowRate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"stableBorrowRate\",\"type\":\"uint128\"},{\"internalType\":\"uint40\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint40\"},{\"internalType\":\"address\",\"name\":\"aTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stableDebtTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"variableDebtTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"interestRateStrategyAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"availableLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalPrincipalStableDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"averageStableRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stableDebtLastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalScaledVariableDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceInMarketReferenceCurrency\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"variableRateSlope1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"variableRateSlope2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stableRateSlope1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stableRateSlope2\",\"type\":\"uint256\"}],\"internalType\":\"struct IUiPoolDataProviderV2.AggregatedReserveData[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"marketReferenceCurrencyUnit\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"marketReferenceCurrencyPriceInUsd\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"networkBaseTokenPriceInUsd\",\"type\":\"int256\"},{\"internalType\":\"uint8\",\"name\":\"networkBaseTokenPriceDecimals\",\"type\":\"uint8\"}],\"internalType\":\"struct IUiPoolDataProviderV2.BaseCurrencyInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ILendingPoolAddressesProvider\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"getReservesList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ILendingPoolAddressesProvider\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserReservesData\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"underlyingAsset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"scaledATokenBalance\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"usageAsCollateralEnabledOnUser\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"stableBorrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scaledVariableDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"principalStableDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stableBorrowLastUpdateTimestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct IUiPoolDataProviderV2.UserReserveData[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/misc/interfaces/IUiPoolDataProviderV2.sol\":\"IUiPoolDataProviderV2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ILendingPoolAddressesProvider.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\nimport {DataTypes} from \\\"../protocol/libraries/types/DataTypes.sol\\\";\\n\\n/**\\n * @title LendingPoolAddressesProvider contract\\n * @dev Main registry of addresses part of or connected to the protocol, including permissioned roles\\n * - Acting also as factory of proxies and admin of those, so with right to change its implementations\\n * - Owned by the Aave Governance\\n * @author Aave\\n **/\\ninterface ILendingPoolAddressesProvider {\\n    event MarketIdSet(string newMarketId);\\n    event LendingPoolUpdated(address indexed newAddress);\\n    event ConfigurationAdminUpdated(address indexed newAddress);\\n    event EmergencyAdminUpdated(address indexed newAddress);\\n    event LendingPoolConfiguratorUpdated(address indexed newAddress);\\n    event LendingPoolCollateralManagerUpdated(address indexed newAddress);\\n    event PriceOracleUpdated(address indexed newAddress);\\n    event CurvePriceOracleUpdated(address indexed newAddress);\\n    event CurvePriceOracleWrapperUpdated(address indexed newAddress);\\n    event CurveAddressProviderUpdated(address indexed newAddress);\\n    event LendingRateOracleUpdated(address indexed newAddress);\\n    event ProxyCreated(bytes32 id, address indexed newAddress);\\n    event AddressSet(bytes32 id, address indexed newAddress, bool hasProxy);\\n\\n    function getMarketId() external view returns (string memory);\\n\\n    function setMarketId(string calldata marketId) external;\\n\\n    function setAddress(bytes32 id, address newAddress) external;\\n\\n    function setAddressAsProxy(bytes32 id, address impl) external;\\n\\n    function getAddress(bytes32 id) external view returns (address);\\n\\n    function getLendingPool() external view returns (address);\\n\\n    function setLendingPoolImpl(address pool) external;\\n\\n    function getLendingPoolConfigurator() external view returns (address);\\n\\n    function setLendingPoolConfiguratorImpl(address configurator) external;\\n\\n    function getLendingPoolCollateralManager() external view returns (address);\\n\\n    function setLendingPoolCollateralManager(address manager) external;\\n\\n    function getPoolAdmin() external view returns (address);\\n\\n    function setPoolAdmin(address admin) external;\\n\\n    function getEmergencyAdmin() external view returns (address);\\n\\n    function setEmergencyAdmin(address admin) external;\\n\\n    function getPriceOracle(DataTypes.ReserveAssetType assetType)\\n        external\\n        view\\n        returns (address);\\n\\n    function getAavePriceOracle() external view returns (address);\\n\\n    function getCurvePriceOracle() external view returns (address);\\n\\n    function getCurvePriceOracleWrapper() external view returns (address);\\n\\n    function getCurveAddressProvider() external view returns (address);\\n\\n    function setAavePriceOracle(address priceOracle) external;\\n\\n    function setCurveAddressProvider(address addressProvider) external;\\n\\n    function setCurvePriceOracle(address priceOracle) external;\\n\\n    function setCurvePriceOracleWrapper(address priceOracle) external;\\n\\n    function getLendingRateOracle() external view returns (address);\\n\\n    function setLendingRateOracle(address lendingRateOracle) external;\\n}\\n\",\"keccak256\":\"0xd05a545a54108bcf8be808763206cadbceefbfdc9d3e0ceff97fbe7e767cfe5e\",\"license\":\"agpl-3.0\"},\"contracts/misc/interfaces/IUiPoolDataProviderV2.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\nimport {\\n    ILendingPoolAddressesProvider\\n} from \\\"../../interfaces/ILendingPoolAddressesProvider.sol\\\";\\n\\ninterface IUiPoolDataProviderV2 {\\n    struct AggregatedReserveData {\\n        address underlyingAsset;\\n        string name;\\n        string symbol;\\n        uint256 decimals;\\n        uint256 baseLTVasCollateral;\\n        uint256 reserveLiquidationThreshold;\\n        uint256 reserveLiquidationBonus;\\n        uint256 reserveFactor;\\n        bool usageAsCollateralEnabled;\\n        bool borrowingEnabled;\\n        bool stableBorrowRateEnabled;\\n        bool isActive;\\n        bool isFrozen;\\n        // base data\\n        uint128 liquidityIndex;\\n        uint128 variableBorrowIndex;\\n        uint128 liquidityRate;\\n        uint128 variableBorrowRate;\\n        uint128 stableBorrowRate;\\n        uint40 lastUpdateTimestamp;\\n        address aTokenAddress;\\n        address stableDebtTokenAddress;\\n        address variableDebtTokenAddress;\\n        address interestRateStrategyAddress;\\n        //\\n        uint256 availableLiquidity;\\n        uint256 totalPrincipalStableDebt;\\n        uint256 averageStableRate;\\n        uint256 stableDebtLastUpdateTimestamp;\\n        uint256 totalScaledVariableDebt;\\n        uint256 priceInMarketReferenceCurrency;\\n        uint256 variableRateSlope1;\\n        uint256 variableRateSlope2;\\n        uint256 stableRateSlope1;\\n        uint256 stableRateSlope2;\\n    }\\n\\n    struct UserReserveData {\\n        address underlyingAsset;\\n        uint256 scaledATokenBalance;\\n        bool usageAsCollateralEnabledOnUser;\\n        uint256 stableBorrowRate;\\n        uint256 scaledVariableDebt;\\n        uint256 principalStableDebt;\\n        uint256 stableBorrowLastUpdateTimestamp;\\n    }\\n\\n    struct BaseCurrencyInfo {\\n        uint256 marketReferenceCurrencyUnit;\\n        int256 marketReferenceCurrencyPriceInUsd;\\n        int256 networkBaseTokenPriceInUsd;\\n        uint8 networkBaseTokenPriceDecimals;\\n    }\\n\\n    function getReservesList(ILendingPoolAddressesProvider provider)\\n        external\\n        view\\n        returns (address[] memory);\\n\\n    function getReservesData(ILendingPoolAddressesProvider provider)\\n        external\\n        view\\n        returns (AggregatedReserveData[] memory, BaseCurrencyInfo memory);\\n\\n    function getUserReservesData(\\n        ILendingPoolAddressesProvider provider,\\n        address user\\n    ) external view returns (UserReserveData[] memory);\\n}\\n\",\"keccak256\":\"0xdea632c88c190fe89fa8ffefc6a8c81ed70e80c65d21d7f3e50a74dcb716890c\",\"license\":\"agpl-3.0\"},\"contracts/protocol/libraries/types/DataTypes.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\nlibrary DataTypes {\\n    // refer to the whitepaper, section 1.1 basic concepts for a formal description of these properties.\\n\\n    enum ReserveAssetType {\\n        AAVE,\\n        CURVE\\n    } //update with other possible types of the underlying asset\\n    //AAVE is the original assets in the aave protocol\\n    //CURVE is the new LP tokens we are providing support for\\n\\n    struct AssetData {\\n        uint8 collateralRisk;\\n        bool isLendable;\\n        bool isAllowedCollateralInHigherTranches;\\n        ReserveAssetType assetType;\\n    }\\n\\n    struct TrancheAddress {\\n        uint8 tranche;\\n        address asset;\\n    }\\n    struct ReserveData {\\n        //stores the reserve configuration\\n        ReserveConfigurationMap configuration;\\n        //the liquidity index. Expressed in ray\\n        uint128 liquidityIndex; //not used for nonlendable assets\\n        //variable borrow index. Expressed in ray\\n        uint128 variableBorrowIndex; //not used for nonlendable assets\\n        //the current supply rate. Expressed in ray\\n        uint128 currentLiquidityRate; //deposit APR is defined as liquidityRate / RAY //not used for nonlendable assets\\n        //the current variable borrow rate. Expressed in ray\\n        uint128 currentVariableBorrowRate; //not used for nonlendable assets\\n        //the current stable borrow rate. Expressed in ray\\n        uint128 currentStableBorrowRate; //not used for nonlendable assets\\n        uint40 lastUpdateTimestamp;\\n        //tokens addresses\\n        address aTokenAddress;\\n        address stableDebtTokenAddress; //not used for nonlendable assets\\n        address variableDebtTokenAddress; //not used for nonlendable assets\\n        //address of the interest rate strategy\\n        address interestRateStrategyAddress; //not used for nonlendable assets\\n        //the id of the reserve. Represents the position in the list of the active reserves\\n        uint8 id;\\n        uint8 tranche; //I think this will be used for nonlendable assets, cause your collateral only asset can be placed in higher tranche if necessary\\n    }\\n\\n    struct TrancheMultiplier {\\n        uint256 liquidityRateMultiplier;\\n        uint256 variableBorrowRateMultiplier;\\n        uint256 stableBorrowRateMultiplier;\\n    }\\n\\n    uint8 constant NUM_TRANCHES = 3;\\n\\n    struct ReserveConfigurationMap {\\n        //bit 0-15: LTV\\n        //bit 16-31: Liq. threshold\\n        //bit 32-47: Liq. bonus\\n        //bit 48-55: Decimals\\n        //bit 56: Reserve is active\\n        //bit 57: reserve is frozen\\n        //bit 58: borrowing is enabled\\n        //bit 59: stable rate borrowing enabled\\n        //bit 60-63: reserved\\n        //bit 64-79: reserve factor\\n        uint256 data;\\n    }\\n\\n    struct UserConfigurationMap {\\n        uint256 data;\\n    }\\n\\n    enum InterestRateMode {\\n        NONE,\\n        STABLE,\\n        VARIABLE\\n    }\\n\\n    struct AcctTranche {\\n        address user;\\n        uint8 tranche;\\n    }\\n\\n    struct DepositVars {\\n        address asset;\\n        uint8 tranche;\\n        uint8 risk;\\n        bool allowHigherTranche;\\n        bool isLendable;\\n        TrancheMultiplier t;\\n    }\\n\\n    struct ExecuteBorrowParams {\\n        address asset;\\n        uint8 tranche; //tranche the user wants to borrow out of\\n        address user;\\n        address onBehalfOf;\\n        uint256 amount;\\n        uint256 interestRateMode;\\n        address aTokenAddress;\\n        uint16 referralCode;\\n        bool releaseUnderlying;\\n        uint256 _maxStableRateBorrowSizePercent;\\n        uint256 _reservesCount;\\n        TrancheMultiplier t;\\n    }\\n\\n    struct WithdrawParams {\\n        uint256 _reservesCount;\\n        address asset;\\n        uint8 tranche;\\n        uint256 amount;\\n        address to;\\n        TrancheMultiplier t;\\n    }\\n\\n    struct ValidateSetUseReserveAsCollateralParams {\\n        uint8 risk;\\n        bool allowHigherTranche;\\n    }\\n\\n    struct calculateInterestRatesVars {\\n        address reserve;\\n        address aToken;\\n        uint256 liquidityAdded;\\n        uint256 liquidityTaken;\\n        uint256 reserveFactor;\\n    }\\n\\n    struct flashLoanVars {\\n        address receiverAddress;\\n        DataTypes.TrancheAddress[] assets;\\n        uint256[] amounts;\\n        uint256[] modes;\\n        address onBehalfOf;\\n        bytes params;\\n        uint16 referralCode;\\n        uint256 _flashLoanPremiumTotal;\\n        address oracle;\\n        uint256 _maxStableRateBorrowSizePercent;\\n        uint256 _reservesCount;\\n    }\\n}\\n\",\"keccak256\":\"0x7302b5b5775a9a0019bd062c95d5a94a0b7bfa4553ae872968cf8ecf7c35fc8f\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/oracles/ConvexOracleV2.sol":{"ConvexOracleV2":{"abi":[{"inputs":[{"internalType":"contract CurveOracleV2","name":"_curve_oracle","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"curve_pool","type":"address"},{"internalType":"uint256[]","name":"prices","type":"uint256[]"},{"internalType":"uint16","name":"pid","type":"uint16"},{"internalType":"address","name":"convex_lp","type":"address"},{"internalType":"address","name":"curve_lp","type":"address"}],"name":"get_convex_price","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:348:30","statements":[{"nodeType":"YulBlock","src":"6:3:30","statements":[]},{"body":{"nodeType":"YulBlock","src":"117:229:30","statements":[{"body":{"nodeType":"YulBlock","src":"163:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"172:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"180:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"165:6:30"},"nodeType":"YulFunctionCall","src":"165:22:30"},"nodeType":"YulExpressionStatement","src":"165:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"138:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"147:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"134:3:30"},"nodeType":"YulFunctionCall","src":"134:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"159:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"130:3:30"},"nodeType":"YulFunctionCall","src":"130:32:30"},"nodeType":"YulIf","src":"127:2:30"},{"nodeType":"YulVariableDeclaration","src":"198:29:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"217:9:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"211:5:30"},"nodeType":"YulFunctionCall","src":"211:16:30"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"202:5:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"290:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"299:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"307:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"292:6:30"},"nodeType":"YulFunctionCall","src":"292:22:30"},"nodeType":"YulExpressionStatement","src":"292:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"249:5:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"260:5:30"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"275:3:30","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"280:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"271:3:30"},"nodeType":"YulFunctionCall","src":"271:11:30"},{"kind":"number","nodeType":"YulLiteral","src":"284:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"267:3:30"},"nodeType":"YulFunctionCall","src":"267:19:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"256:3:30"},"nodeType":"YulFunctionCall","src":"256:31:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"246:2:30"},"nodeType":"YulFunctionCall","src":"246:42:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"239:6:30"},"nodeType":"YulFunctionCall","src":"239:50:30"},"nodeType":"YulIf","src":"236:2:30"},{"nodeType":"YulAssignment","src":"325:15:30","value":{"name":"value","nodeType":"YulIdentifier","src":"335:5:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"325:6:30"}]}]},"name":"abi_decode_tuple_t_contract$_CurveOracleV2_$2527_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"83:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"94:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"106:6:30","type":""}],"src":"14:332:30"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_contract$_CurveOracleV2_$2527_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n}","id":30,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b5060405161036838038061036883398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b6102d7806100916000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80632a417cc714610030575b600080fd5b61004361003e366004610115565b610059565b6040516100509190610282565b60405180910390f35b600080546040516336e5b51960e11b815282916001600160a01b031690636dcb6a329061008c908a908a9060040161022c565b60206040518083038186803b1580156100a457600080fd5b505afa1580156100b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100dc9190610214565b979650505050505050565b80356001600160a01b03811681146100fe57600080fd5b919050565b803561ffff811681146100fe57600080fd5b600080600080600060a0868803121561012c578081fd5b610135866100e7565b945060208087013567ffffffffffffffff80821115610152578384fd5b818901915089601f830112610165578384fd5b8135818111156101775761017761028b565b838102604051858282010181811085821117156101965761019661028b565b604052828152858101935084860182860187018e10156101b4578788fd5b8795505b838610156101d65780358552600195909501949386019386016101b8565b508099505050505050506101ec60408701610103565b92506101fa606087016100e7565b9150610208608087016100e7565b90509295509295909350565b600060208284031215610225578081fd5b5051919050565b6001600160a01b038316815260406020808301829052835191830182905260009184820191906060850190845b8181101561027557845183529383019391830191600101610259565b5090979650505050505050565b90815260200190565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220682c868ea4135c481aa51fd389967b4452794ae519e1718bab24b79feff6eb6d64736f6c63430008000033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x368 CODESIZE SUB DUP1 PUSH2 0x368 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x54 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x82 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x65 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7B JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2D7 DUP1 PUSH2 0x91 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2A417CC7 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0x115 JUMP JUMPDEST PUSH2 0x59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x282 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x36E5B519 PUSH1 0xE1 SHL DUP2 MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6DCB6A32 SWAP1 PUSH2 0x8C SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x22C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDC SWAP2 SWAP1 PUSH2 0x214 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0xFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x12C JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x135 DUP7 PUSH2 0xE7 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP1 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x152 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP10 ADD SWAP2 POP DUP10 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x165 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x177 JUMPI PUSH2 0x177 PUSH2 0x28B JUMP JUMPDEST DUP4 DUP2 MUL PUSH1 0x40 MLOAD DUP6 DUP3 DUP3 ADD ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x196 JUMPI PUSH2 0x196 PUSH2 0x28B JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP6 DUP2 ADD SWAP4 POP DUP5 DUP7 ADD DUP3 DUP7 ADD DUP8 ADD DUP15 LT ISZERO PUSH2 0x1B4 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP6 POP JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x1D6 JUMPI DUP1 CALLDATALOAD DUP6 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP7 ADD SWAP4 DUP7 ADD PUSH2 0x1B8 JUMP JUMPDEST POP DUP1 SWAP10 POP POP POP POP POP POP POP PUSH2 0x1EC PUSH1 0x40 DUP8 ADD PUSH2 0x103 JUMP JUMPDEST SWAP3 POP PUSH2 0x1FA PUSH1 0x60 DUP8 ADD PUSH2 0xE7 JUMP JUMPDEST SWAP2 POP PUSH2 0x208 PUSH1 0x80 DUP8 ADD PUSH2 0xE7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x225 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE DUP4 MLOAD SWAP2 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP5 DUP3 ADD SWAP2 SWAP1 PUSH1 0x60 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x275 JUMPI DUP5 MLOAD DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x259 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x2C868EA4135C481AA5 0x1F 0xD3 DUP10 SWAP7 PUSH28 0x4452794AE519E1718BAB24B79FEFF6EB6D64736F6C63430008000033 ","sourceMap":"371:1393:19:-:0;;;670:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;721:12;:28;;-1:-1:-1;;;;;;721:28:19;-1:-1:-1;;;;;721:28:19;;;;;;;;;;371:1393;;14:332:30;;159:2;147:9;138:7;134:23;130:32;127:2;;;180:6;172;165:22;127:2;211:16;;-1:-1:-1;;;;;256:31:30;;246:42;;236:2;;307:6;299;292:22;236:2;335:5;117:229;-1:-1:-1;;;117:229:30:o;:::-;371:1393:19;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3074:30","statements":[{"nodeType":"YulBlock","src":"6:3:30","statements":[]},{"body":{"nodeType":"YulBlock","src":"65:124:30","statements":[{"nodeType":"YulAssignment","src":"75:29:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"97:6:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"84:12:30"},"nodeType":"YulFunctionCall","src":"84:20:30"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"75:5:30"}]},{"body":{"nodeType":"YulBlock","src":"167:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"176:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"179:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"169:6:30"},"nodeType":"YulFunctionCall","src":"169:12:30"},"nodeType":"YulExpressionStatement","src":"169:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"126:5:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"137:5:30"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"152:3:30","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"157:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"148:3:30"},"nodeType":"YulFunctionCall","src":"148:11:30"},{"kind":"number","nodeType":"YulLiteral","src":"161:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"144:3:30"},"nodeType":"YulFunctionCall","src":"144:19:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"133:3:30"},"nodeType":"YulFunctionCall","src":"133:31:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"123:2:30"},"nodeType":"YulFunctionCall","src":"123:42:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"116:6:30"},"nodeType":"YulFunctionCall","src":"116:50:30"},"nodeType":"YulIf","src":"113:2:30"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"44:6:30","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"55:5:30","type":""}],"src":"14:175:30"},{"body":{"nodeType":"YulBlock","src":"244:111:30","statements":[{"nodeType":"YulAssignment","src":"254:29:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"276:6:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"263:12:30"},"nodeType":"YulFunctionCall","src":"263:20:30"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"254:5:30"}]},{"body":{"nodeType":"YulBlock","src":"333:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"342:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"345:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"335:6:30"},"nodeType":"YulFunctionCall","src":"335:12:30"},"nodeType":"YulExpressionStatement","src":"335:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"305:5:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"316:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"323:6:30","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"312:3:30"},"nodeType":"YulFunctionCall","src":"312:18:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"302:2:30"},"nodeType":"YulFunctionCall","src":"302:29:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"295:6:30"},"nodeType":"YulFunctionCall","src":"295:37:30"},"nodeType":"YulIf","src":"292:2:30"}]},"name":"abi_decode_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"223:6:30","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"234:5:30","type":""}],"src":"194:161:30"},{"body":{"nodeType":"YulBlock","src":"522:1300:30","statements":[{"body":{"nodeType":"YulBlock","src":"569:26:30","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"578:6:30"},{"name":"value4","nodeType":"YulIdentifier","src":"586:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"571:6:30"},"nodeType":"YulFunctionCall","src":"571:22:30"},"nodeType":"YulExpressionStatement","src":"571:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"543:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"552:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"539:3:30"},"nodeType":"YulFunctionCall","src":"539:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"564:3:30","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"535:3:30"},"nodeType":"YulFunctionCall","src":"535:33:30"},"nodeType":"YulIf","src":"532:2:30"},{"nodeType":"YulAssignment","src":"604:41:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"635:9:30"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"614:20:30"},"nodeType":"YulFunctionCall","src":"614:31:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"604:6:30"}]},{"nodeType":"YulVariableDeclaration","src":"654:12:30","value":{"kind":"number","nodeType":"YulLiteral","src":"664:2:30","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"658:2:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"675:46:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"706:9:30"},{"name":"_1","nodeType":"YulIdentifier","src":"717:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"702:3:30"},"nodeType":"YulFunctionCall","src":"702:18:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"689:12:30"},"nodeType":"YulFunctionCall","src":"689:32:30"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"679:6:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"730:28:30","value":{"kind":"number","nodeType":"YulLiteral","src":"740:18:30","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"734:2:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"785:26:30","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"794:6:30"},{"name":"value4","nodeType":"YulIdentifier","src":"802:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"787:6:30"},"nodeType":"YulFunctionCall","src":"787:22:30"},"nodeType":"YulExpressionStatement","src":"787:22:30"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"773:6:30"},{"name":"_2","nodeType":"YulIdentifier","src":"781:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"770:2:30"},"nodeType":"YulFunctionCall","src":"770:14:30"},"nodeType":"YulIf","src":"767:2:30"},{"nodeType":"YulVariableDeclaration","src":"820:32:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"834:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"845:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"830:3:30"},"nodeType":"YulFunctionCall","src":"830:22:30"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"824:2:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"900:26:30","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"909:6:30"},{"name":"value4","nodeType":"YulIdentifier","src":"917:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"902:6:30"},"nodeType":"YulFunctionCall","src":"902:22:30"},"nodeType":"YulExpressionStatement","src":"902:22:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"879:2:30"},{"kind":"number","nodeType":"YulLiteral","src":"883:4:30","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"875:3:30"},"nodeType":"YulFunctionCall","src":"875:13:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"890:7:30"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"871:3:30"},"nodeType":"YulFunctionCall","src":"871:27:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"864:6:30"},"nodeType":"YulFunctionCall","src":"864:35:30"},"nodeType":"YulIf","src":"861:2:30"},{"nodeType":"YulVariableDeclaration","src":"935:26:30","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"958:2:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"945:12:30"},"nodeType":"YulFunctionCall","src":"945:16:30"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"939:2:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"984:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"986:16:30"},"nodeType":"YulFunctionCall","src":"986:18:30"},"nodeType":"YulExpressionStatement","src":"986:18:30"}]},"condition":{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"976:2:30"},{"name":"_2","nodeType":"YulIdentifier","src":"980:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"973:2:30"},"nodeType":"YulFunctionCall","src":"973:10:30"},"nodeType":"YulIf","src":"970:2:30"},{"nodeType":"YulVariableDeclaration","src":"1015:21:30","value":{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"1029:2:30"},{"name":"_1","nodeType":"YulIdentifier","src":"1033:2:30"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1025:3:30"},"nodeType":"YulFunctionCall","src":"1025:11:30"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"1019:2:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1045:23:30","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1065:2:30","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1059:5:30"},"nodeType":"YulFunctionCall","src":"1059:9:30"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1049:6:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1077:42:30","value":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1103:6:30"},{"name":"_5","nodeType":"YulIdentifier","src":"1111:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1099:3:30"},"nodeType":"YulFunctionCall","src":"1099:15:30"},{"name":"_1","nodeType":"YulIdentifier","src":"1116:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1095:3:30"},"nodeType":"YulFunctionCall","src":"1095:24:30"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1081:10:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"1178:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1180:16:30"},"nodeType":"YulFunctionCall","src":"1180:18:30"},"nodeType":"YulExpressionStatement","src":"1180:18:30"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1137:10:30"},{"name":"_2","nodeType":"YulIdentifier","src":"1149:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1134:2:30"},"nodeType":"YulFunctionCall","src":"1134:18:30"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1157:10:30"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1169:6:30"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1154:2:30"},"nodeType":"YulFunctionCall","src":"1154:22:30"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1131:2:30"},"nodeType":"YulFunctionCall","src":"1131:46:30"},"nodeType":"YulIf","src":"1128:2:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1216:2:30","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1220:10:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1209:6:30"},"nodeType":"YulFunctionCall","src":"1209:22:30"},"nodeType":"YulExpressionStatement","src":"1209:22:30"},{"nodeType":"YulVariableDeclaration","src":"1240:17:30","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1251:6:30"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"1244:3:30","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1273:6:30"},{"name":"_4","nodeType":"YulIdentifier","src":"1281:2:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1266:6:30"},"nodeType":"YulFunctionCall","src":"1266:18:30"},"nodeType":"YulExpressionStatement","src":"1266:18:30"},{"nodeType":"YulAssignment","src":"1293:22:30","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1304:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"1312:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1300:3:30"},"nodeType":"YulFunctionCall","src":"1300:15:30"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"1293:3:30"}]},{"nodeType":"YulVariableDeclaration","src":"1324:22:30","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1339:2:30"},{"name":"_1","nodeType":"YulIdentifier","src":"1343:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1335:3:30"},"nodeType":"YulFunctionCall","src":"1335:11:30"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"1328:3:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"1392:26:30","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"1401:6:30"},{"name":"value4","nodeType":"YulIdentifier","src":"1409:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1394:6:30"},"nodeType":"YulFunctionCall","src":"1394:22:30"},"nodeType":"YulExpressionStatement","src":"1394:22:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1369:2:30"},{"name":"_5","nodeType":"YulIdentifier","src":"1373:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1365:3:30"},"nodeType":"YulFunctionCall","src":"1365:11:30"},{"name":"_1","nodeType":"YulIdentifier","src":"1378:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1361:3:30"},"nodeType":"YulFunctionCall","src":"1361:20:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1383:7:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1358:2:30"},"nodeType":"YulFunctionCall","src":"1358:33:30"},"nodeType":"YulIf","src":"1355:2:30"},{"nodeType":"YulVariableDeclaration","src":"1427:15:30","value":{"name":"value4","nodeType":"YulIdentifier","src":"1436:6:30"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1431:1:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"1496:118:30","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1517:3:30"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1535:3:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1522:12:30"},"nodeType":"YulFunctionCall","src":"1522:17:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1510:6:30"},"nodeType":"YulFunctionCall","src":"1510:30:30"},"nodeType":"YulExpressionStatement","src":"1510:30:30"},{"nodeType":"YulAssignment","src":"1553:19:30","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1564:3:30"},{"name":"_1","nodeType":"YulIdentifier","src":"1569:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1560:3:30"},"nodeType":"YulFunctionCall","src":"1560:12:30"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"1553:3:30"}]},{"nodeType":"YulAssignment","src":"1585:19:30","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1596:3:30"},{"name":"_1","nodeType":"YulIdentifier","src":"1601:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1592:3:30"},"nodeType":"YulFunctionCall","src":"1592:12:30"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"1585:3:30"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1462:1:30"},{"name":"_4","nodeType":"YulIdentifier","src":"1465:2:30"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1459:2:30"},"nodeType":"YulFunctionCall","src":"1459:9:30"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1469:18:30","statements":[{"nodeType":"YulAssignment","src":"1471:14:30","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1480:1:30"},{"kind":"number","nodeType":"YulLiteral","src":"1483:1:30","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1476:3:30"},"nodeType":"YulFunctionCall","src":"1476:9:30"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1471:1:30"}]}]},"pre":{"nodeType":"YulBlock","src":"1455:3:30","statements":[]},"src":"1451:163:30"},{"nodeType":"YulAssignment","src":"1623:16:30","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1633:6:30"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1623:6:30"}]},{"nodeType":"YulAssignment","src":"1648:49:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1682:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"1693:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1678:3:30"},"nodeType":"YulFunctionCall","src":"1678:18:30"}],"functionName":{"name":"abi_decode_t_uint16","nodeType":"YulIdentifier","src":"1658:19:30"},"nodeType":"YulFunctionCall","src":"1658:39:30"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1648:6:30"}]},{"nodeType":"YulAssignment","src":"1706:50:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1741:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"1752:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1737:3:30"},"nodeType":"YulFunctionCall","src":"1737:18:30"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1716:20:30"},"nodeType":"YulFunctionCall","src":"1716:40:30"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1706:6:30"}]},{"nodeType":"YulAssignment","src":"1765:51:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1800:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"1811:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1796:3:30"},"nodeType":"YulFunctionCall","src":"1796:19:30"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1775:20:30"},"nodeType":"YulFunctionCall","src":"1775:41:30"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"1765:6:30"}]}]},"name":"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_uint16t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"456:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"467:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"479:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"487:6:30","type":""},{"name":"value2","nodeType":"YulTypedName","src":"495:6:30","type":""},{"name":"value3","nodeType":"YulTypedName","src":"503:6:30","type":""},{"name":"value4","nodeType":"YulTypedName","src":"511:6:30","type":""}],"src":"360:1462:30"},{"body":{"nodeType":"YulBlock","src":"1908:113:30","statements":[{"body":{"nodeType":"YulBlock","src":"1954:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1963:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"1971:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1956:6:30"},"nodeType":"YulFunctionCall","src":"1956:22:30"},"nodeType":"YulExpressionStatement","src":"1956:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1929:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"1938:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1925:3:30"},"nodeType":"YulFunctionCall","src":"1925:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"1950:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1921:3:30"},"nodeType":"YulFunctionCall","src":"1921:32:30"},"nodeType":"YulIf","src":"1918:2:30"},{"nodeType":"YulAssignment","src":"1989:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2005:9:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1999:5:30"},"nodeType":"YulFunctionCall","src":"1999:16:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1989:6:30"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1874:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1885:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1897:6:30","type":""}],"src":"1827:194:30"},{"body":{"nodeType":"YulBlock","src":"2205:553:30","statements":[{"nodeType":"YulVariableDeclaration","src":"2215:32:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2233:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2244:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2229:3:30"},"nodeType":"YulFunctionCall","src":"2229:18:30"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"2219:6:30","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2263:9:30"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2278:6:30"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2294:3:30","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2299:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2290:3:30"},"nodeType":"YulFunctionCall","src":"2290:11:30"},{"kind":"number","nodeType":"YulLiteral","src":"2303:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2286:3:30"},"nodeType":"YulFunctionCall","src":"2286:19:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2274:3:30"},"nodeType":"YulFunctionCall","src":"2274:32:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2256:6:30"},"nodeType":"YulFunctionCall","src":"2256:51:30"},"nodeType":"YulExpressionStatement","src":"2256:51:30"},{"nodeType":"YulVariableDeclaration","src":"2316:12:30","value":{"kind":"number","nodeType":"YulLiteral","src":"2326:2:30","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2320:2:30","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2348:9:30"},{"name":"_1","nodeType":"YulIdentifier","src":"2359:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2344:3:30"},"nodeType":"YulFunctionCall","src":"2344:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"2364:2:30","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2337:6:30"},"nodeType":"YulFunctionCall","src":"2337:30:30"},"nodeType":"YulExpressionStatement","src":"2337:30:30"},{"nodeType":"YulVariableDeclaration","src":"2376:17:30","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"2387:6:30"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"2380:3:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2402:27:30","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2422:6:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2416:5:30"},"nodeType":"YulFunctionCall","src":"2416:13:30"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2406:6:30","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"2445:6:30"},{"name":"length","nodeType":"YulIdentifier","src":"2453:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2438:6:30"},"nodeType":"YulFunctionCall","src":"2438:22:30"},"nodeType":"YulExpressionStatement","src":"2438:22:30"},{"nodeType":"YulAssignment","src":"2469:25:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2480:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2491:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2476:3:30"},"nodeType":"YulFunctionCall","src":"2476:18:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2469:3:30"}]},{"nodeType":"YulVariableDeclaration","src":"2503:29:30","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2521:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"2529:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2517:3:30"},"nodeType":"YulFunctionCall","src":"2517:15:30"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"2507:6:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2541:13:30","value":{"name":"tail","nodeType":"YulIdentifier","src":"2550:4:30"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2545:1:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"2612:120:30","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2633:3:30"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2644:6:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2638:5:30"},"nodeType":"YulFunctionCall","src":"2638:13:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2626:6:30"},"nodeType":"YulFunctionCall","src":"2626:26:30"},"nodeType":"YulExpressionStatement","src":"2626:26:30"},{"nodeType":"YulAssignment","src":"2665:19:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2676:3:30"},{"name":"_1","nodeType":"YulIdentifier","src":"2681:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2672:3:30"},"nodeType":"YulFunctionCall","src":"2672:12:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2665:3:30"}]},{"nodeType":"YulAssignment","src":"2697:25:30","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2711:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"2719:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2707:3:30"},"nodeType":"YulFunctionCall","src":"2707:15:30"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2697:6:30"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2574:1:30"},{"name":"length","nodeType":"YulIdentifier","src":"2577:6:30"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2571:2:30"},"nodeType":"YulFunctionCall","src":"2571:13:30"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2585:18:30","statements":[{"nodeType":"YulAssignment","src":"2587:14:30","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2596:1:30"},{"kind":"number","nodeType":"YulLiteral","src":"2599:1:30","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2592:3:30"},"nodeType":"YulFunctionCall","src":"2592:9:30"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2587:1:30"}]}]},"pre":{"nodeType":"YulBlock","src":"2567:3:30","statements":[]},"src":"2563:169:30"},{"nodeType":"YulAssignment","src":"2741:11:30","value":{"name":"pos","nodeType":"YulIdentifier","src":"2749:3:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2741:4:30"}]}]},"name":"abi_encode_tuple_t_address_t_array$_t_uint256_$dyn_memory_ptr__to_t_address_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2166:9:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2177:6:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2185:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2196:4:30","type":""}],"src":"2026:732:30"},{"body":{"nodeType":"YulBlock","src":"2864:76:30","statements":[{"nodeType":"YulAssignment","src":"2874:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2886:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2897:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2882:3:30"},"nodeType":"YulFunctionCall","src":"2882:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2874:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2916:9:30"},{"name":"value0","nodeType":"YulIdentifier","src":"2927:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2909:6:30"},"nodeType":"YulFunctionCall","src":"2909:25:30"},"nodeType":"YulExpressionStatement","src":"2909:25:30"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2833:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2844:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2855:4:30","type":""}],"src":"2763:177:30"},{"body":{"nodeType":"YulBlock","src":"2977:95:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2994:1:30","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3001:3:30","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3006:10:30","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2997:3:30"},"nodeType":"YulFunctionCall","src":"2997:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2987:6:30"},"nodeType":"YulFunctionCall","src":"2987:31:30"},"nodeType":"YulExpressionStatement","src":"2987:31:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3034:1:30","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3037:4:30","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3027:6:30"},"nodeType":"YulFunctionCall","src":"3027:15:30"},"nodeType":"YulExpressionStatement","src":"3027:15:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3058:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3061:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3051:6:30"},"nodeType":"YulFunctionCall","src":"3051:15:30"},"nodeType":"YulExpressionStatement","src":"3051:15:30"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2945:127:30"}]},"contents":"{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_t_uint16(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_uint16t_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value4, value4) }\n        value0 := abi_decode_t_address(headStart)\n        let _1 := 32\n        let offset := calldataload(add(headStart, _1))\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(value4, value4) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value4, value4) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := mul(_4, _1)\n        let memPtr := mload(64)\n        let newFreePtr := add(add(memPtr, _5), _1)\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let src := add(_3, _1)\n        if gt(add(add(_3, _5), _1), dataEnd) { revert(value4, value4) }\n        let i := value4\n        for { } lt(i, _4) { i := add(i, 1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _1)\n            src := add(src, _1)\n        }\n        value1 := memPtr\n        value2 := abi_decode_t_uint16(add(headStart, 64))\n        value3 := abi_decode_t_address(add(headStart, 96))\n        value4 := abi_decode_t_address(add(headStart, 128))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_array$_t_uint256_$dyn_memory_ptr__to_t_address_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        let _1 := 32\n        mstore(add(headStart, _1), 64)\n        let pos := tail_1\n        let length := mload(value1)\n        mstore(tail_1, length)\n        pos := add(headStart, 96)\n        let srcPtr := add(value1, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}","id":30,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061002b5760003560e01c80632a417cc714610030575b600080fd5b61004361003e366004610115565b610059565b6040516100509190610282565b60405180910390f35b600080546040516336e5b51960e11b815282916001600160a01b031690636dcb6a329061008c908a908a9060040161022c565b60206040518083038186803b1580156100a457600080fd5b505afa1580156100b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100dc9190610214565b979650505050505050565b80356001600160a01b03811681146100fe57600080fd5b919050565b803561ffff811681146100fe57600080fd5b600080600080600060a0868803121561012c578081fd5b610135866100e7565b945060208087013567ffffffffffffffff80821115610152578384fd5b818901915089601f830112610165578384fd5b8135818111156101775761017761028b565b838102604051858282010181811085821117156101965761019661028b565b604052828152858101935084860182860187018e10156101b4578788fd5b8795505b838610156101d65780358552600195909501949386019386016101b8565b508099505050505050506101ec60408701610103565b92506101fa606087016100e7565b9150610208608087016100e7565b90509295509295909350565b600060208284031215610225578081fd5b5051919050565b6001600160a01b038316815260406020808301829052835191830182905260009184820191906060850190845b8181101561027557845183529383019391830191600101610259565b5090979650505050505050565b90815260200190565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220682c868ea4135c481aa51fd389967b4452794ae519e1718bab24b79feff6eb6d64736f6c63430008000033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2A417CC7 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0x115 JUMP JUMPDEST PUSH2 0x59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x282 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x36E5B519 PUSH1 0xE1 SHL DUP2 MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6DCB6A32 SWAP1 PUSH2 0x8C SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x22C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDC SWAP2 SWAP1 PUSH2 0x214 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0xFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x12C JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x135 DUP7 PUSH2 0xE7 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP1 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x152 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP10 ADD SWAP2 POP DUP10 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x165 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x177 JUMPI PUSH2 0x177 PUSH2 0x28B JUMP JUMPDEST DUP4 DUP2 MUL PUSH1 0x40 MLOAD DUP6 DUP3 DUP3 ADD ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x196 JUMPI PUSH2 0x196 PUSH2 0x28B JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP6 DUP2 ADD SWAP4 POP DUP5 DUP7 ADD DUP3 DUP7 ADD DUP8 ADD DUP15 LT ISZERO PUSH2 0x1B4 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP6 POP JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x1D6 JUMPI DUP1 CALLDATALOAD DUP6 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP7 ADD SWAP4 DUP7 ADD PUSH2 0x1B8 JUMP JUMPDEST POP DUP1 SWAP10 POP POP POP POP POP POP POP PUSH2 0x1EC PUSH1 0x40 DUP8 ADD PUSH2 0x103 JUMP JUMPDEST SWAP3 POP PUSH2 0x1FA PUSH1 0x60 DUP8 ADD PUSH2 0xE7 JUMP JUMPDEST SWAP2 POP PUSH2 0x208 PUSH1 0x80 DUP8 ADD PUSH2 0xE7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x225 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE DUP4 MLOAD SWAP2 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP5 DUP3 ADD SWAP2 SWAP1 PUSH1 0x60 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x275 JUMPI DUP5 MLOAD DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x259 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x2C868EA4135C481AA5 0x1F 0xD3 DUP10 SWAP7 PUSH28 0x4452794AE519E1718BAB24B79FEFF6EB6D64736F6C63430008000033 ","sourceMap":"371:1393:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;838:628;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;1027:7;1071:12;;:42;;-1:-1:-1;;;1071:42:19;;1027:7;;-1:-1:-1;;;;;1071:12:19;;:22;;:42;;1094:10;;1106:6;;1071:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1046:67;838:628;-1:-1:-1;;;;;;;838:628:19:o;14:175:30:-;84:20;;-1:-1:-1;;;;;133:31:30;;123:42;;113:2;;179:1;176;169:12;113:2;65:124;;;:::o;194:161::-;263:20;;323:6;312:18;;302:29;;292:2;;345:1;342;335:12;360:1462;;;;;;564:3;552:9;543:7;539:23;535:33;532:2;;;586:6;578;571:22;532:2;614:31;635:9;614:31;:::i;:::-;604:41;;664:2;717;706:9;702:18;689:32;740:18;781:2;773:6;770:14;767:2;;;802:6;794;787:22;767:2;845:6;834:9;830:22;820:32;;890:7;883:4;879:2;875:13;871:27;861:2;;917:6;909;902:22;861:2;958;945:16;980:2;976;973:10;970:2;;;986:18;;:::i;:::-;1033:2;1029;1025:11;1065:2;1059:9;1116:2;1111;1103:6;1099:15;1095:24;1169:6;1157:10;1154:22;1149:2;1137:10;1134:18;1131:46;1128:2;;;1180:18;;:::i;:::-;1216:2;1209:22;1266:18;;;1300:15;;;;-1:-1:-1;1335:11:30;;;1365;;;1361:20;;1358:33;-1:-1:-1;1355:2:30;;;1409:6;1401;1394:22;1355:2;1436:6;1427:15;;1451:163;1465:2;1462:1;1459:9;1451:163;;;1522:17;;1510:30;;1483:1;1476:9;;;;;1560:12;;;;1592;;1451:163;;;1455:3;1633:6;1623:16;;;;;;;;1658:39;1693:2;1682:9;1678:18;1658:39;:::i;:::-;1648:49;;1716:40;1752:2;1741:9;1737:18;1716:40;:::i;:::-;1706:50;;1775:41;1811:3;1800:9;1796:19;1775:41;:::i;:::-;1765:51;;522:1300;;;;;;;;:::o;1827:194::-;;1950:2;1938:9;1929:7;1925:23;1921:32;1918:2;;;1971:6;1963;1956:22;1918:2;-1:-1:-1;1999:16:30;;1908:113;-1:-1:-1;1908:113:30:o;2026:732::-;-1:-1:-1;;;;;2274:32:30;;2256:51;;2244:2;2326;2344:18;;;2337:30;;;2416:13;;2229:18;;;2438:22;;;2026:732;;2517:15;;;;2326:2;2491;2476:18;;;2026:732;2563:169;2577:6;2574:1;2571:13;2563:169;;;2638:13;;2626:26;;2707:15;;;;2672:12;;;;2599:1;2592:9;2563:169;;;-1:-1:-1;2749:3:30;;2205:553;-1:-1:-1;;;;;;;2205:553:30:o;2763:177::-;2909:25;;;2897:2;2882:18;;2864:76::o;2945:127::-;3006:10;3001:3;2997:20;2994:1;2987:31;3037:4;3034:1;3027:15;3061:4;3058:1;3051:15"},"gasEstimates":{"creation":{"codeDepositCost":"145400","executionCost":"infinite","totalCost":"infinite"},"external":{"get_convex_price(address,uint256[],uint16,address,address)":"infinite"},"internal":{"calculate_convex_price(uint256,uint256,uint256)":"infinite"}},"methodIdentifiers":{"get_convex_price(address,uint256[],uint16,address,address)":"2a417cc7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract CurveOracleV2\",\"name\":\"_curve_oracle\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"curve_pool\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"prices\",\"type\":\"uint256[]\"},{\"internalType\":\"uint16\",\"name\":\"pid\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"convex_lp\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"curve_lp\",\"type\":\"address\"}],\"name\":\"get_convex_price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracles/ConvexOracleV2.sol\":\"ConvexOracleV2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/oracles/ConvexOracleV2.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity >=0.8.0;\\n\\n//import {IBooster} from \\\"../utils/interfaces/IBooster.sol\\\";\\nimport {CurveOracleV2} from \\\"./CurveOracleV2.sol\\\";\\nimport {FixedPointMathLib} from \\\"./libs/FixedPointMathLib.sol\\\";\\nimport {IERC20} from \\\"./interfaces/IERC20.sol\\\";\\n\\n//assuming we can price Convex pools like UniV2 pools more than like Curve pools\\ncontract ConvexOracleV2 {\\n    //address private constant BOOSTER = 0xF403C135812408BFbE8713b5A23a04b3D48AAE31; //convex deposit contract\\n    CurveOracleV2 private curve_oracle;\\n\\n    //get total underlying in USD and divide by num of tokens\\n    //use external script to get pid by curve lp token\\n    constructor(CurveOracleV2 _curve_oracle) {\\n        curve_oracle = _curve_oracle;\\n    }\\n\\n    //get curve lp tokens price, get convex lp token \\\"depositToken\\\", divide\\n    function get_convex_price(\\n        address curve_pool,\\n        uint256[] memory prices,\\n        uint16 pid,\\n        address convex_lp,\\n        address curve_lp\\n    ) external view returns (uint256) {\\n        uint256 curve_lp_price = curve_oracle.get_price(curve_pool, prices); //returns 1e36 scaled uint\\n        //\\tuint256 curve_supply = IERC20(curve_lp).totalSupply();\\n        //\\tuint256 convex_supply = IERC20(convex_lp).totalSupply();\\n\\n        //\\tuint256 convex_price = calculate_convex_price(\\n        //\\t\\tcurve_lp_price,\\n        //\\t\\tcurve_supply,\\n        //\\t\\tconvex_supply\\n        //\\t);\\n\\n        return curve_lp_price;\\n    }\\n\\n    //not sure how vulnerable this is, check back later\\n    function calculate_convex_price(\\n        uint256 curve_lp_price,\\n        uint256 curve_supply,\\n        uint256 convex_supply\\n    ) internal pure returns (uint256) {\\n        return (curve_lp_price * curve_supply) / convex_supply;\\n    }\\n}\\n\",\"keccak256\":\"0x95b0b98377e7d11a815ae7980022ccec1bd4c834c88a428ef74f5a84bd016391\",\"license\":\"UNLICENSED\"},\"contracts/oracles/CurveOracleV2.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity >=0.8.0;\\n\\nimport {ICurvePool} from \\\"./interfaces/ICurvePoolV1.sol\\\";\\nimport {ICurveOracle} from \\\"./interfaces/ICurveOracle.sol\\\";\\nimport {vMath} from \\\"./libs/vMath.sol\\\";\\n\\ncontract CurveOracleV2 is ICurveOracle {\\n    function get_price(address curve_pool, uint256[] memory prices)\\n        external\\n        view\\n        override\\n        returns (uint256)\\n    {\\n        uint256 virtual_price = ICurvePool(curve_pool).get_virtual_price();\\n\\n        uint256 lp_price = calculate_v2_token_price(\\n            uint8(prices.length),\\n            virtual_price,\\n            prices\\n        );\\n\\n        return lp_price;\\n    }\\n\\n    //returns n_token * vp * (p1 * p2 * p3) ^1/n\\n    //n should only ever be 2, 3, or 4\\n    //returns the lp_price scaled by 1e36, so scale down by 1e36\\n    function calculate_v2_token_price(\\n        uint8 n,\\n        uint256 virtual_price,\\n        uint256[] memory prices\\n    ) internal pure returns (uint256) {\\n        uint256 product = vMath.product(prices);\\n        uint256 geo_mean = vMath.geometric_mean(n, product);\\n        return (n * virtual_price * geo_mean) / 10**18; //since virtual price has 18 decimals\\n    }\\n}\\n\",\"keccak256\":\"0x16811fe57c7083b8deb7831136e1fa0db6a4ef3aa4c66aa0a74cbb87f9a69e9f\",\"license\":\"UNLICENSED\"},\"contracts/oracles/interfaces/ICurveOracle.sol\":{\"content\":\"pragma solidity >=0.8.0;\\n\\ninterface ICurveOracle {\\n    function get_price(address curve_pool, uint256[] memory prices)\\n        external\\n        view\\n        returns (uint256);\\n}\\n\",\"keccak256\":\"0xdda871f8372f09487237b4047dbbcc88810eb55c357b2e91e13a068e043d4179\"},\"contracts/oracles/interfaces/ICurvePoolV1.sol\":{\"content\":\"pragma solidity >=0.8.0;\\n\\ninterface ICurvePool {\\n    function get_virtual_price() external view returns (uint256);\\n\\n    function coins(uint256 n) external view returns (address);\\n}\\n\",\"keccak256\":\"0xb4e7352cd3099cce79a810654c7433e0386b47f364bb5c4f75be5afb8a32b19c\"},\"contracts/oracles/interfaces/IERC20.sol\":{\"content\":\"pragma solidity >=0.8.0;\\n\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the token decimals.\\n     */\\n    function decimals() external view returns (uint8);\\n\\n    /**\\n     * @dev Returns the token symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the bep token owner.\\n     */\\n    function getOwner() external view returns (address);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount)\\n        external\\n        returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address _owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n}\\n\",\"keccak256\":\"0x647c6703e37aa5feb0eac5d74f41edb481254bc120e470e336561297b47999a8\"},\"contracts/oracles/libs/FixedPointMathLib.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Arithmetic library with operations for fixed-point numbers.\\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/utils/FixedPointMathLib.sol)\\n/// @author Inspired by USM (https://github.com/usmfum/USM/blob/master/contracts/WadMath.sol)\\nlibrary FixedPointMathLib {\\n    /*//////////////////////////////////////////////////////////////\\n                    SIMPLIFIED FIXED POINT OPERATIONS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 internal constant WAD = 1e18; // The scalar of ETH and most ERC20s.\\n\\n    function mulWadDown(uint256 x, uint256 y) internal pure returns (uint256) {\\n        return mulDivDown(x, y, WAD); // Equivalent to (x * y) / WAD rounded down.\\n    }\\n\\n    function mulWadUp(uint256 x, uint256 y) internal pure returns (uint256) {\\n        return mulDivUp(x, y, WAD); // Equivalent to (x * y) / WAD rounded up.\\n    }\\n\\n    function divWadDown(uint256 x, uint256 y) internal pure returns (uint256) {\\n        return mulDivDown(x, WAD, y); // Equivalent to (x * WAD) / y rounded down.\\n    }\\n\\n    function divWadUp(uint256 x, uint256 y) internal pure returns (uint256) {\\n        return mulDivUp(x, WAD, y); // Equivalent to (x * WAD) / y rounded up.\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                    LOW LEVEL FIXED POINT OPERATIONS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function mulDivDown(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 z) {\\n        assembly {\\n            // Store x * y in z for now.\\n            z := mul(x, y)\\n\\n            // Equivalent to require(denominator != 0 && (x == 0 || (x * y) / x == y))\\n            if iszero(\\n                and(\\n                    iszero(iszero(denominator)),\\n                    or(iszero(x), eq(div(z, x), y))\\n                )\\n            ) {\\n                revert(0, 0)\\n            }\\n\\n            // Divide z by the denominator.\\n            z := div(z, denominator)\\n        }\\n    }\\n\\n    function mulDivUp(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 z) {\\n        assembly {\\n            // Store x * y in z for now.\\n            z := mul(x, y)\\n\\n            // Equivalent to require(denominator != 0 && (x == 0 || (x * y) / x == y))\\n            if iszero(\\n                and(\\n                    iszero(iszero(denominator)),\\n                    or(iszero(x), eq(div(z, x), y))\\n                )\\n            ) {\\n                revert(0, 0)\\n            }\\n\\n            // First, divide z - 1 by the denominator and add 1.\\n            // We allow z - 1 to underflow if z is 0, because we multiply the\\n            // end result by 0 if z is zero, ensuring we return 0 if z is zero.\\n            z := mul(iszero(iszero(z)), add(div(sub(z, 1), denominator), 1))\\n        }\\n    }\\n\\n    function rpow(\\n        uint256 x,\\n        uint256 n,\\n        uint256 scalar\\n    ) internal pure returns (uint256 z) {\\n        assembly {\\n            switch x\\n            case 0 {\\n                switch n\\n                case 0 {\\n                    // 0 ** 0 = 1\\n                    z := scalar\\n                }\\n                default {\\n                    // 0 ** n = 0\\n                    z := 0\\n                }\\n            }\\n            default {\\n                switch mod(n, 2)\\n                case 0 {\\n                    // If n is even, store scalar in z for now.\\n                    z := scalar\\n                }\\n                default {\\n                    // If n is odd, store x in z for now.\\n                    z := x\\n                }\\n\\n                // Shifting right by 1 is like dividing by 2.\\n                let half := shr(1, scalar)\\n\\n                for {\\n                    // Shift n right by 1 before looping to halve it.\\n                    n := shr(1, n)\\n                } n {\\n                    // Shift n right by 1 each iteration to halve it.\\n                    n := shr(1, n)\\n                } {\\n                    // Revert immediately if x ** 2 would overflow.\\n                    // Equivalent to iszero(eq(div(xx, x), x)) here.\\n                    if shr(128, x) {\\n                        revert(0, 0)\\n                    }\\n\\n                    // Store x squared.\\n                    let xx := mul(x, x)\\n\\n                    // Round to the nearest number.\\n                    let xxRound := add(xx, half)\\n\\n                    // Revert if xx + half overflowed.\\n                    if lt(xxRound, xx) {\\n                        revert(0, 0)\\n                    }\\n\\n                    // Set x to scaled xxRound.\\n                    x := div(xxRound, scalar)\\n\\n                    // If n is even:\\n                    if mod(n, 2) {\\n                        // Compute z * x.\\n                        let zx := mul(z, x)\\n\\n                        // If z * x overflowed:\\n                        if iszero(eq(div(zx, x), z)) {\\n                            // Revert if x is non-zero.\\n                            if iszero(iszero(x)) {\\n                                revert(0, 0)\\n                            }\\n                        }\\n\\n                        // Round to the nearest number.\\n                        let zxRound := add(zx, half)\\n\\n                        // Revert if zx + half overflowed.\\n                        if lt(zxRound, zx) {\\n                            revert(0, 0)\\n                        }\\n\\n                        // Return properly scaled zxRound.\\n                        z := div(zxRound, scalar)\\n                    }\\n                }\\n            }\\n        }\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                        GENERAL NUMBER UTILITIES\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function sqrt(uint256 x) internal pure returns (uint256 z) {\\n        assembly {\\n            // Start off with z at 1.\\n            z := 1\\n\\n            // Used below to help find a nearby power of 2.\\n            let y := x\\n\\n            // Find the lowest power of 2 that is at least sqrt(x).\\n            if iszero(lt(y, 0x100000000000000000000000000000000)) {\\n                y := shr(128, y) // Like dividing by 2 ** 128.\\n                z := shl(64, z) // Like multiplying by 2 ** 64.\\n            }\\n            if iszero(lt(y, 0x10000000000000000)) {\\n                y := shr(64, y) // Like dividing by 2 ** 64.\\n                z := shl(32, z) // Like multiplying by 2 ** 32.\\n            }\\n            if iszero(lt(y, 0x100000000)) {\\n                y := shr(32, y) // Like dividing by 2 ** 32.\\n                z := shl(16, z) // Like multiplying by 2 ** 16.\\n            }\\n            if iszero(lt(y, 0x10000)) {\\n                y := shr(16, y) // Like dividing by 2 ** 16.\\n                z := shl(8, z) // Like multiplying by 2 ** 8.\\n            }\\n            if iszero(lt(y, 0x100)) {\\n                y := shr(8, y) // Like dividing by 2 ** 8.\\n                z := shl(4, z) // Like multiplying by 2 ** 4.\\n            }\\n            if iszero(lt(y, 0x10)) {\\n                y := shr(4, y) // Like dividing by 2 ** 4.\\n                z := shl(2, z) // Like multiplying by 2 ** 2.\\n            }\\n            if iszero(lt(y, 0x8)) {\\n                // Equivalent to 2 ** z.\\n                z := shl(1, z)\\n            }\\n\\n            // Shifting right by 1 is like dividing by 2.\\n            z := shr(1, add(z, div(x, z)))\\n            z := shr(1, add(z, div(x, z)))\\n            z := shr(1, add(z, div(x, z)))\\n            z := shr(1, add(z, div(x, z)))\\n            z := shr(1, add(z, div(x, z)))\\n            z := shr(1, add(z, div(x, z)))\\n            z := shr(1, add(z, div(x, z)))\\n\\n            // Compute a rounded down version of z.\\n            let zRoundDown := div(x, z)\\n\\n            // If zRoundDown is smaller, use it.\\n            if lt(zRoundDown, z) {\\n                z := zRoundDown\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xcc1552fe037c973c1ab30f607708735de7626eb22dcf6b2a02f2a39fa5d2b965\",\"license\":\"AGPL-3.0-only\"},\"contracts/oracles/libs/IntegralMath.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity >=0.8.0;\\n\\nimport \\\"./Uint.sol\\\";\\n\\nlibrary IntegralMath {\\n    /**\\n     * @dev Compute the largest integer smaller than or equal to the binary logarithm of `n`\\n     */\\n    function floorLog2(uint256 n) internal pure returns (uint8) {\\n        unchecked {\\n            uint8 res = 0;\\n\\n            if (n < 256) {\\n                // at most 8 iterations\\n                while (n > 1) {\\n                    n >>= 1;\\n                    res += 1;\\n                }\\n            } else {\\n                // exactly 8 iterations\\n                for (uint8 s = 128; s > 0; s >>= 1) {\\n                    if (n >= 1 << s) {\\n                        n >>= s;\\n                        res |= s;\\n                    }\\n                }\\n            }\\n\\n            return res;\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the largest integer smaller than or equal to the square root of `n`\\n     */\\n    function floorSqrt(uint256 n) internal pure returns (uint256) {\\n        unchecked {\\n            if (n > 0) {\\n                uint256 x = n / 2 + 1;\\n                uint256 y = (x + n / x) / 2;\\n                while (x > y) {\\n                    x = y;\\n                    y = (x + n / x) / 2;\\n                }\\n                return x;\\n            }\\n            return 0;\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the smallest integer larger than or equal to the square root of `n`\\n     */\\n    function ceilSqrt(uint256 n) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 x = floorSqrt(n);\\n            return x**2 == n ? x : x + 1;\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the largest integer smaller than or equal to the cubic root of `n`\\n     */\\n    function floorCbrt(uint256 n) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 x = 0;\\n            for (uint256 y = 1 << 255; y > 0; y >>= 3) {\\n                x <<= 1;\\n                uint256 z = 3 * x * (x + 1) + 1;\\n                if (n / y >= z) {\\n                    n -= y * z;\\n                    x += 1;\\n                }\\n            }\\n            return x;\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the smallest integer larger than or equal to the cubic root of `n`\\n     */\\n    function ceilCbrt(uint256 n) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 x = floorCbrt(n);\\n            return x**3 == n ? x : x + 1;\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the nearest integer to the quotient of `n` and `d` (or `n / d`)\\n     */\\n    function roundDiv(uint256 n, uint256 d) internal pure returns (uint256) {\\n        unchecked {\\n            return n / d + (n % d) / (d - d / 2);\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the largest integer smaller than or equal to `x * y / z`\\n     */\\n    function mulDivF(\\n        uint256 x,\\n        uint256 y,\\n        uint256 z\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            (uint256 xyh, uint256 xyl) = mul512(x, y);\\n            if (xyh == 0) {\\n                // `x * y < 2 ^ 256`\\n                return xyl / z;\\n            }\\n            if (xyh < z) {\\n                // `x * y / z < 2 ^ 256`\\n                uint256 m = mulMod(x, y, z); // `m = x * y % z`\\n                (uint256 nh, uint256 nl) = sub512(xyh, xyl, m); // `n = x * y - m` hence `n / z = floor(x * y / z)`\\n                if (nh == 0) {\\n                    // `n < 2 ^ 256`\\n                    return nl / z;\\n                }\\n                uint256 p = unsafeSub(0, z) & z; // `p` is the largest power of 2 which `z` is divisible by\\n                uint256 q = div512(nh, nl, p); // `n` is divisible by `p` because `n` is divisible by `z` and `z` is divisible by `p`\\n                uint256 r = inv256(z / p); // `z / p = 1 mod 2` hence `inverse(z / p) = 1 mod 2 ^ 256`\\n                return unsafeMul(q, r); // `q * r = (n / p) * inverse(z / p) = n / z`\\n            }\\n            revert(); // `x * y / z >= 2 ^ 256`\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the smallest integer larger than or equal to `x * y / z`\\n     */\\n    function mulDivC(\\n        uint256 x,\\n        uint256 y,\\n        uint256 z\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 w = mulDivF(x, y, z);\\n            if (mulMod(x, y, z) > 0) return safeAdd(w, 1);\\n            return w;\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the value of `x * y`\\n     */\\n    function mul512(uint256 x, uint256 y)\\n        private\\n        pure\\n        returns (uint256, uint256)\\n    {\\n        unchecked {\\n            uint256 p = mulModMax(x, y);\\n            uint256 q = unsafeMul(x, y);\\n            if (p >= q) return (p - q, q);\\n            return (unsafeSub(p, q) - 1, q);\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the value of `2 ^ 256 * xh + xl - y`, where `2 ^ 256 * xh + xl >= y`\\n     */\\n    function sub512(\\n        uint256 xh,\\n        uint256 xl,\\n        uint256 y\\n    ) private pure returns (uint256, uint256) {\\n        unchecked {\\n            if (xl >= y) return (xh, xl - y);\\n            return (xh - 1, unsafeSub(xl, y));\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the value of `(2 ^ 256 * xh + xl) / pow2n`, where `xl` is divisible by `pow2n`\\n     */\\n    function div512(\\n        uint256 xh,\\n        uint256 xl,\\n        uint256 pow2n\\n    ) private pure returns (uint256) {\\n        unchecked {\\n            uint256 pow2nInv = unsafeAdd(unsafeSub(0, pow2n) / pow2n, 1); // `1 << (256 - n)`\\n            return unsafeMul(xh, pow2nInv) | (xl / pow2n); // `(xh << (256 - n)) | (xl >> n)`\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the inverse of `d` modulo `2 ^ 256`, where `d` is congruent to `1` modulo `2`\\n     */\\n    function inv256(uint256 d) private pure returns (uint256) {\\n        unchecked {\\n            // approximate the root of `f(x) = 1 / x - d` using the newton\\u2013raphson convergence method\\n            uint256 x = 1;\\n            for (uint256 i = 0; i < 8; ++i)\\n                x = unsafeMul(x, unsafeSub(2, unsafeMul(x, d))); // `x = x * (2 - x * d) mod 2 ^ 256`\\n            return x;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2433205309bedeec21e98639f6e1b9ae4b72bddfd16d3c7caa23f0bedd74c07a\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/oracles/libs/Uint.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity >=0.8.0;\\n\\nuint256 constant MAX_VAL = type(uint256).max;\\n\\n// reverts on overflow\\nfunction safeAdd(uint256 x, uint256 y) pure returns (uint256) {\\n    return x + y;\\n}\\n\\n// does not revert on overflow\\nfunction unsafeAdd(uint256 x, uint256 y) pure returns (uint256) {\\n    unchecked {\\n        return x + y;\\n    }\\n}\\n\\n// does not revert on overflow\\nfunction unsafeSub(uint256 x, uint256 y) pure returns (uint256) {\\n    unchecked {\\n        return x - y;\\n    }\\n}\\n\\n// does not revert on overflow\\nfunction unsafeMul(uint256 x, uint256 y) pure returns (uint256) {\\n    unchecked {\\n        return x * y;\\n    }\\n}\\n\\n// does not overflow\\nfunction mulModMax(uint256 x, uint256 y) pure returns (uint256) {\\n    unchecked {\\n        return mulmod(x, y, MAX_VAL);\\n    }\\n}\\n\\n// does not overflow\\nfunction mulMod(\\n    uint256 x,\\n    uint256 y,\\n    uint256 z\\n) pure returns (uint256) {\\n    unchecked {\\n        return mulmod(x, y, z);\\n    }\\n}\\n\",\"keccak256\":\"0x998fcec9a910b59ed67db5af0939b271f062585a8c16a614b529197ed86d0a8d\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/oracles/libs/vMath.sol\":{\"content\":\"pragma solidity >=0.8.0;\\n\\nimport {FixedPointMathLib} from \\\"./FixedPointMathLib.sol\\\";\\nimport {IntegralMath} from \\\"./IntegralMath.sol\\\";\\n\\nlibrary vMath {\\n    uint256 internal constant WAD = 1e18; // The scalar of ETH and most ERC20s.\\n\\n    function min(uint256[] calldata array) external pure returns (uint256) {\\n        uint256 min = array[0];\\n        for (uint8 i = 1; i < array.length; i++) {\\n            if (min > array[i]) {\\n                min = array[i];\\n            }\\n        }\\n        return min;\\n    }\\n\\n    function product(uint256[] calldata nums) external pure returns (uint256) {\\n        uint256 product = nums[0];\\n        for (uint256 i = 1; i < nums.length; i++) {\\n            product *= nums[i];\\n        }\\n        return product;\\n    }\\n\\n    //limited to curve pools only, either 2 or 3 assets (mostly 2)\\n    function geometric_mean(uint8 n, uint256 product)\\n        external\\n        pure\\n        returns (uint256)\\n    {\\n        if (n == 2) {\\n            return FixedPointMathLib.sqrt(product);\\n        } else {\\n            //n == 3\\n            return IntegralMath.floorCbrt(product);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x771260414afb50c4937cc8185436eadf2292162955a4ea25cb1b8405d9a0e0fb\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2385,"contract":"contracts/oracles/ConvexOracleV2.sol:ConvexOracleV2","label":"curve_oracle","offset":0,"slot":"0","type":"t_contract(CurveOracleV2)2527"}],"types":{"t_contract(CurveOracleV2)2527":{"encoding":"inplace","label":"contract CurveOracleV2","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/oracles/CurveOracleV2.sol":{"CurveOracleV2":{"abi":[{"inputs":[{"internalType":"address","name":"curve_pool","type":"address"},{"internalType":"uint256[]","name":"prices","type":"uint256[]"}],"name":"get_price","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{"contracts/oracles/libs/vMath.sol":{"vMath":[{"length":20,"start":267},{"length":20,"start":406}]}},"object":"608060405234801561001057600080fd5b5061041d806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80636dcb6a3214610030575b600080fd5b61004361003e366004610234565b610059565b604051610050919061036a565b60405180910390f35b600080836001600160a01b031663bb7b8b806040518163ffffffff1660e01b815260040160206040518083038186803b15801561009557600080fd5b505afa1580156100a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100cd919061030e565b905060006100dd845183866100e6565b95945050505050565b60008073__$fc961522ee25e21dc45bf9241cf35e1d80$__638e5fede8846040518263ffffffff1660e01b81526004016101209190610326565b60206040518083038186803b15801561013857600080fd5b505af415801561014c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610170919061030e565b9050600073__$fc961522ee25e21dc45bf9241cf35e1d80$__63f43b9abe87846040518363ffffffff1660e01b81526004016101ad929190610373565b60206040518083038186803b1580156101c557600080fd5b505af41580156101d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101fd919061030e565b9050670de0b6b3a7640000816102168760ff8a166103a6565b61022091906103a6565b61022a9190610386565b9695505050505050565b60008060408385031215610246578182fd5b82356001600160a01b038116811461025c578283fd5b915060208381013567ffffffffffffffff80821115610279578384fd5b818601915086601f83011261028c578384fd5b81358181111561029e5761029e6103d1565b838102604051858282010181811085821117156102bd576102bd6103d1565b604052828152858101935084860182860187018b10156102db578788fd5b8795505b838610156102fd5780358552600195909501949386019386016102df565b508096505050505050509250929050565b60006020828403121561031f578081fd5b5051919050565b6020808252825182820181905260009190848201906040850190845b8181101561035e57835183529284019291840191600101610342565b50909695505050505050565b90815260200190565b60ff929092168252602082015260400190565b6000826103a157634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156103cc57634e487b7160e01b81526011600452602481fd5b500290565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220c648a395119d1a2d73bcf69c7e327c1d1f246d001f88426d16c8f0f19b808df864736f6c63430008000033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41D DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6DCB6A32 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0x234 JUMP JUMPDEST PUSH2 0x59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x36A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBB7B8B80 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x30E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xDD DUP5 MLOAD DUP4 DUP7 PUSH2 0xE6 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0x0 PUSH4 0x8E5FEDE8 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120 SWAP2 SWAP1 PUSH2 0x326 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x14C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x30E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0x0 PUSH4 0xF43B9ABE DUP8 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AD SWAP3 SWAP2 SWAP1 PUSH2 0x373 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x30E JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x216 DUP8 PUSH1 0xFF DUP11 AND PUSH2 0x3A6 JUMP JUMPDEST PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x3A6 JUMP JUMPDEST PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x386 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x246 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x25C JUMPI DUP3 DUP4 REVERT JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 DUP2 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x279 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x28C JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x29E JUMPI PUSH2 0x29E PUSH2 0x3D1 JUMP JUMPDEST DUP4 DUP2 MUL PUSH1 0x40 MLOAD DUP6 DUP3 DUP3 ADD ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x2BD JUMPI PUSH2 0x2BD PUSH2 0x3D1 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP6 DUP2 ADD SWAP4 POP DUP5 DUP7 ADD DUP3 DUP7 ADD DUP8 ADD DUP12 LT ISZERO PUSH2 0x2DB JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP6 POP JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x2FD JUMPI DUP1 CALLDATALOAD DUP6 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP7 ADD SWAP4 DUP7 ADD PUSH2 0x2DF JUMP JUMPDEST POP DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31F JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x35E JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x342 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3A1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3CC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 0x48 LOG3 SWAP6 GT SWAP14 BYTE 0x2D PUSH20 0xBCF69C7E327C1D1F246D001F88426D16C8F0F19B DUP1 DUP14 0xF8 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ","sourceMap":"224:965:20:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3291:30","statements":[{"nodeType":"YulBlock","src":"6:3:30","statements":[]},{"body":{"nodeType":"YulBlock","src":"126:1230:30","statements":[{"body":{"nodeType":"YulBlock","src":"172:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"181:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"189:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"174:6:30"},"nodeType":"YulFunctionCall","src":"174:22:30"},"nodeType":"YulExpressionStatement","src":"174:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"147:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"156:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"143:3:30"},"nodeType":"YulFunctionCall","src":"143:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"168:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"139:3:30"},"nodeType":"YulFunctionCall","src":"139:32:30"},"nodeType":"YulIf","src":"136:2:30"},{"nodeType":"YulVariableDeclaration","src":"207:36:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"233:9:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"220:12:30"},"nodeType":"YulFunctionCall","src":"220:23:30"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"211:5:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"306:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"315:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"323:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"308:6:30"},"nodeType":"YulFunctionCall","src":"308:22:30"},"nodeType":"YulExpressionStatement","src":"308:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"265:5:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"276:5:30"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"291:3:30","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"296:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"287:3:30"},"nodeType":"YulFunctionCall","src":"287:11:30"},{"kind":"number","nodeType":"YulLiteral","src":"300:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"283:3:30"},"nodeType":"YulFunctionCall","src":"283:19:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"272:3:30"},"nodeType":"YulFunctionCall","src":"272:31:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"262:2:30"},"nodeType":"YulFunctionCall","src":"262:42:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"255:6:30"},"nodeType":"YulFunctionCall","src":"255:50:30"},"nodeType":"YulIf","src":"252:2:30"},{"nodeType":"YulAssignment","src":"341:15:30","value":{"name":"value","nodeType":"YulIdentifier","src":"351:5:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"341:6:30"}]},{"nodeType":"YulVariableDeclaration","src":"365:12:30","value":{"kind":"number","nodeType":"YulLiteral","src":"375:2:30","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"369:2:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"386:46:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"417:9:30"},{"name":"_1","nodeType":"YulIdentifier","src":"428:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"413:3:30"},"nodeType":"YulFunctionCall","src":"413:18:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"400:12:30"},"nodeType":"YulFunctionCall","src":"400:32:30"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"390:6:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"441:28:30","value":{"kind":"number","nodeType":"YulLiteral","src":"451:18:30","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"445:2:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"496:26:30","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"505:6:30"},{"name":"value1","nodeType":"YulIdentifier","src":"513:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"498:6:30"},"nodeType":"YulFunctionCall","src":"498:22:30"},"nodeType":"YulExpressionStatement","src":"498:22:30"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"484:6:30"},{"name":"_2","nodeType":"YulIdentifier","src":"492:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"481:2:30"},"nodeType":"YulFunctionCall","src":"481:14:30"},"nodeType":"YulIf","src":"478:2:30"},{"nodeType":"YulVariableDeclaration","src":"531:32:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"545:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"556:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"541:3:30"},"nodeType":"YulFunctionCall","src":"541:22:30"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"535:2:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"611:26:30","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"620:6:30"},{"name":"value1","nodeType":"YulIdentifier","src":"628:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"613:6:30"},"nodeType":"YulFunctionCall","src":"613:22:30"},"nodeType":"YulExpressionStatement","src":"613:22:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"590:2:30"},{"kind":"number","nodeType":"YulLiteral","src":"594:4:30","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"586:3:30"},"nodeType":"YulFunctionCall","src":"586:13:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"601:7:30"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"582:3:30"},"nodeType":"YulFunctionCall","src":"582:27:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"575:6:30"},"nodeType":"YulFunctionCall","src":"575:35:30"},"nodeType":"YulIf","src":"572:2:30"},{"nodeType":"YulVariableDeclaration","src":"646:26:30","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"669:2:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"656:12:30"},"nodeType":"YulFunctionCall","src":"656:16:30"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"650:2:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"695:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"697:16:30"},"nodeType":"YulFunctionCall","src":"697:18:30"},"nodeType":"YulExpressionStatement","src":"697:18:30"}]},"condition":{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"687:2:30"},{"name":"_2","nodeType":"YulIdentifier","src":"691:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"684:2:30"},"nodeType":"YulFunctionCall","src":"684:10:30"},"nodeType":"YulIf","src":"681:2:30"},{"nodeType":"YulVariableDeclaration","src":"726:21:30","value":{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"740:2:30"},{"name":"_1","nodeType":"YulIdentifier","src":"744:2:30"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"736:3:30"},"nodeType":"YulFunctionCall","src":"736:11:30"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"730:2:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"756:23:30","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"776:2:30","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"770:5:30"},"nodeType":"YulFunctionCall","src":"770:9:30"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"760:6:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"788:42:30","value":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"814:6:30"},{"name":"_5","nodeType":"YulIdentifier","src":"822:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"810:3:30"},"nodeType":"YulFunctionCall","src":"810:15:30"},{"name":"_1","nodeType":"YulIdentifier","src":"827:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"806:3:30"},"nodeType":"YulFunctionCall","src":"806:24:30"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"792:10:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"889:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"891:16:30"},"nodeType":"YulFunctionCall","src":"891:18:30"},"nodeType":"YulExpressionStatement","src":"891:18:30"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"848:10:30"},{"name":"_2","nodeType":"YulIdentifier","src":"860:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"845:2:30"},"nodeType":"YulFunctionCall","src":"845:18:30"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"868:10:30"},{"name":"memPtr","nodeType":"YulIdentifier","src":"880:6:30"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"865:2:30"},"nodeType":"YulFunctionCall","src":"865:22:30"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"842:2:30"},"nodeType":"YulFunctionCall","src":"842:46:30"},"nodeType":"YulIf","src":"839:2:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"927:2:30","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"931:10:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"920:6:30"},"nodeType":"YulFunctionCall","src":"920:22:30"},"nodeType":"YulExpressionStatement","src":"920:22:30"},{"nodeType":"YulVariableDeclaration","src":"951:17:30","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"962:6:30"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"955:3:30","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"984:6:30"},{"name":"_4","nodeType":"YulIdentifier","src":"992:2:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"977:6:30"},"nodeType":"YulFunctionCall","src":"977:18:30"},"nodeType":"YulExpressionStatement","src":"977:18:30"},{"nodeType":"YulAssignment","src":"1004:22:30","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1015:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"1023:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1011:3:30"},"nodeType":"YulFunctionCall","src":"1011:15:30"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"1004:3:30"}]},{"nodeType":"YulVariableDeclaration","src":"1035:22:30","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1050:2:30"},{"name":"_1","nodeType":"YulIdentifier","src":"1054:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1046:3:30"},"nodeType":"YulFunctionCall","src":"1046:11:30"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"1039:3:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"1103:26:30","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1112:6:30"},{"name":"value1","nodeType":"YulIdentifier","src":"1120:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1105:6:30"},"nodeType":"YulFunctionCall","src":"1105:22:30"},"nodeType":"YulExpressionStatement","src":"1105:22:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1080:2:30"},{"name":"_5","nodeType":"YulIdentifier","src":"1084:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1076:3:30"},"nodeType":"YulFunctionCall","src":"1076:11:30"},{"name":"_1","nodeType":"YulIdentifier","src":"1089:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1072:3:30"},"nodeType":"YulFunctionCall","src":"1072:20:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1094:7:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1069:2:30"},"nodeType":"YulFunctionCall","src":"1069:33:30"},"nodeType":"YulIf","src":"1066:2:30"},{"nodeType":"YulVariableDeclaration","src":"1138:15:30","value":{"name":"value1","nodeType":"YulIdentifier","src":"1147:6:30"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1142:1:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"1207:118:30","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1228:3:30"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1246:3:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1233:12:30"},"nodeType":"YulFunctionCall","src":"1233:17:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1221:6:30"},"nodeType":"YulFunctionCall","src":"1221:30:30"},"nodeType":"YulExpressionStatement","src":"1221:30:30"},{"nodeType":"YulAssignment","src":"1264:19:30","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1275:3:30"},{"name":"_1","nodeType":"YulIdentifier","src":"1280:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1271:3:30"},"nodeType":"YulFunctionCall","src":"1271:12:30"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"1264:3:30"}]},{"nodeType":"YulAssignment","src":"1296:19:30","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1307:3:30"},{"name":"_1","nodeType":"YulIdentifier","src":"1312:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1303:3:30"},"nodeType":"YulFunctionCall","src":"1303:12:30"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"1296:3:30"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1173:1:30"},{"name":"_4","nodeType":"YulIdentifier","src":"1176:2:30"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1170:2:30"},"nodeType":"YulFunctionCall","src":"1170:9:30"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1180:18:30","statements":[{"nodeType":"YulAssignment","src":"1182:14:30","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1191:1:30"},{"kind":"number","nodeType":"YulLiteral","src":"1194:1:30","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1187:3:30"},"nodeType":"YulFunctionCall","src":"1187:9:30"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1182:1:30"}]}]},"pre":{"nodeType":"YulBlock","src":"1166:3:30","statements":[]},"src":"1162:163:30"},{"nodeType":"YulAssignment","src":"1334:16:30","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1344:6:30"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1334:6:30"}]}]},"name":"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"84:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"95:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"107:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"115:6:30","type":""}],"src":"14:1342:30"},{"body":{"nodeType":"YulBlock","src":"1442:113:30","statements":[{"body":{"nodeType":"YulBlock","src":"1488:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1497:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"1505:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1490:6:30"},"nodeType":"YulFunctionCall","src":"1490:22:30"},"nodeType":"YulExpressionStatement","src":"1490:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1463:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"1472:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1459:3:30"},"nodeType":"YulFunctionCall","src":"1459:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"1484:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1455:3:30"},"nodeType":"YulFunctionCall","src":"1455:32:30"},"nodeType":"YulIf","src":"1452:2:30"},{"nodeType":"YulAssignment","src":"1523:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1539:9:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1533:5:30"},"nodeType":"YulFunctionCall","src":"1533:16:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1523:6:30"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1408:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1419:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1431:6:30","type":""}],"src":"1361:194:30"},{"body":{"nodeType":"YulBlock","src":"1719:484:30","statements":[{"nodeType":"YulVariableDeclaration","src":"1729:12:30","value":{"kind":"number","nodeType":"YulLiteral","src":"1739:2:30","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1733:2:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1750:32:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1768:9:30"},{"name":"_1","nodeType":"YulIdentifier","src":"1779:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1764:3:30"},"nodeType":"YulFunctionCall","src":"1764:18:30"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"1754:6:30","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1798:9:30"},{"name":"_1","nodeType":"YulIdentifier","src":"1809:2:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1791:6:30"},"nodeType":"YulFunctionCall","src":"1791:21:30"},"nodeType":"YulExpressionStatement","src":"1791:21:30"},{"nodeType":"YulVariableDeclaration","src":"1821:17:30","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"1832:6:30"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"1825:3:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1847:27:30","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1867:6:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1861:5:30"},"nodeType":"YulFunctionCall","src":"1861:13:30"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1851:6:30","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"1890:6:30"},{"name":"length","nodeType":"YulIdentifier","src":"1898:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1883:6:30"},"nodeType":"YulFunctionCall","src":"1883:22:30"},"nodeType":"YulExpressionStatement","src":"1883:22:30"},{"nodeType":"YulAssignment","src":"1914:25:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1925:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"1936:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1921:3:30"},"nodeType":"YulFunctionCall","src":"1921:18:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1914:3:30"}]},{"nodeType":"YulVariableDeclaration","src":"1948:29:30","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1966:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"1974:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1962:3:30"},"nodeType":"YulFunctionCall","src":"1962:15:30"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"1952:6:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1986:13:30","value":{"name":"tail","nodeType":"YulIdentifier","src":"1995:4:30"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1990:1:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"2057:120:30","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2078:3:30"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2089:6:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2083:5:30"},"nodeType":"YulFunctionCall","src":"2083:13:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2071:6:30"},"nodeType":"YulFunctionCall","src":"2071:26:30"},"nodeType":"YulExpressionStatement","src":"2071:26:30"},{"nodeType":"YulAssignment","src":"2110:19:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2121:3:30"},{"name":"_1","nodeType":"YulIdentifier","src":"2126:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2117:3:30"},"nodeType":"YulFunctionCall","src":"2117:12:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2110:3:30"}]},{"nodeType":"YulAssignment","src":"2142:25:30","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2156:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"2164:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2152:3:30"},"nodeType":"YulFunctionCall","src":"2152:15:30"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2142:6:30"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2019:1:30"},{"name":"length","nodeType":"YulIdentifier","src":"2022:6:30"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2016:2:30"},"nodeType":"YulFunctionCall","src":"2016:13:30"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2030:18:30","statements":[{"nodeType":"YulAssignment","src":"2032:14:30","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2041:1:30"},{"kind":"number","nodeType":"YulLiteral","src":"2044:1:30","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2037:3:30"},"nodeType":"YulFunctionCall","src":"2037:9:30"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2032:1:30"}]}]},"pre":{"nodeType":"YulBlock","src":"2012:3:30","statements":[]},"src":"2008:169:30"},{"nodeType":"YulAssignment","src":"2186:11:30","value":{"name":"pos","nodeType":"YulIdentifier","src":"2194:3:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2186:4:30"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_library_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1688:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1699:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1710:4:30","type":""}],"src":"1560:643:30"},{"body":{"nodeType":"YulBlock","src":"2309:76:30","statements":[{"nodeType":"YulAssignment","src":"2319:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2331:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2342:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2327:3:30"},"nodeType":"YulFunctionCall","src":"2327:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2319:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2361:9:30"},{"name":"value0","nodeType":"YulIdentifier","src":"2372:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2354:6:30"},"nodeType":"YulFunctionCall","src":"2354:25:30"},"nodeType":"YulExpressionStatement","src":"2354:25:30"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2278:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2289:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2300:4:30","type":""}],"src":"2208:177:30"},{"body":{"nodeType":"YulBlock","src":"2523:130:30","statements":[{"nodeType":"YulAssignment","src":"2533:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2545:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2556:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2541:3:30"},"nodeType":"YulFunctionCall","src":"2541:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2533:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2575:9:30"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2590:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"2598:4:30","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2586:3:30"},"nodeType":"YulFunctionCall","src":"2586:17:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2568:6:30"},"nodeType":"YulFunctionCall","src":"2568:36:30"},"nodeType":"YulExpressionStatement","src":"2568:36:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2624:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2635:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2620:3:30"},"nodeType":"YulFunctionCall","src":"2620:18:30"},{"name":"value1","nodeType":"YulIdentifier","src":"2640:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2613:6:30"},"nodeType":"YulFunctionCall","src":"2613:34:30"},"nodeType":"YulExpressionStatement","src":"2613:34:30"}]},"name":"abi_encode_tuple_t_uint8_t_uint256__to_t_uint8_t_uint256__fromStack_library_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2484:9:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2495:6:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2503:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2514:4:30","type":""}],"src":"2390:263:30"},{"body":{"nodeType":"YulBlock","src":"2704:171:30","statements":[{"body":{"nodeType":"YulBlock","src":"2735:111:30","statements":[{"expression":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"2756:1:30"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2763:3:30","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2768:10:30","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2759:3:30"},"nodeType":"YulFunctionCall","src":"2759:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2749:6:30"},"nodeType":"YulFunctionCall","src":"2749:31:30"},"nodeType":"YulExpressionStatement","src":"2749:31:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2800:1:30","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2803:4:30","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2793:6:30"},"nodeType":"YulFunctionCall","src":"2793:15:30"},"nodeType":"YulExpressionStatement","src":"2793:15:30"},{"expression":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"2828:1:30"},{"kind":"number","nodeType":"YulLiteral","src":"2831:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2821:6:30"},"nodeType":"YulFunctionCall","src":"2821:15:30"},"nodeType":"YulExpressionStatement","src":"2821:15:30"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"2724:1:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2717:6:30"},"nodeType":"YulFunctionCall","src":"2717:9:30"},"nodeType":"YulIf","src":"2714:2:30"},{"nodeType":"YulAssignment","src":"2855:14:30","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2864:1:30"},{"name":"y","nodeType":"YulIdentifier","src":"2867:1:30"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2860:3:30"},"nodeType":"YulFunctionCall","src":"2860:9:30"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2855:1:30"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2689:1:30","type":""},{"name":"y","nodeType":"YulTypedName","src":"2692:1:30","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"2698:1:30","type":""}],"src":"2658:217:30"},{"body":{"nodeType":"YulBlock","src":"2932:225:30","statements":[{"body":{"nodeType":"YulBlock","src":"2999:123:30","statements":[{"expression":{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"3020:7:30"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3033:3:30","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3038:10:30","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3029:3:30"},"nodeType":"YulFunctionCall","src":"3029:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3013:6:30"},"nodeType":"YulFunctionCall","src":"3013:37:30"},"nodeType":"YulExpressionStatement","src":"3013:37:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3070:1:30","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3073:4:30","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3063:6:30"},"nodeType":"YulFunctionCall","src":"3063:15:30"},"nodeType":"YulExpressionStatement","src":"3063:15:30"},{"expression":{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"3098:7:30"},{"kind":"number","nodeType":"YulLiteral","src":"3107:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3091:6:30"},"nodeType":"YulFunctionCall","src":"3091:21:30"},"nodeType":"YulExpressionStatement","src":"3091:21:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2963:1:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2956:6:30"},"nodeType":"YulFunctionCall","src":"2956:9:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2949:6:30"},"nodeType":"YulFunctionCall","src":"2949:17:30"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"2971:1:30"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2982:1:30","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2978:3:30"},"nodeType":"YulFunctionCall","src":"2978:6:30"},{"name":"x","nodeType":"YulIdentifier","src":"2986:1:30"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2974:3:30"},"nodeType":"YulFunctionCall","src":"2974:14:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2968:2:30"},"nodeType":"YulFunctionCall","src":"2968:21:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2945:3:30"},"nodeType":"YulFunctionCall","src":"2945:45:30"},"nodeType":"YulIf","src":"2942:2:30"},{"nodeType":"YulAssignment","src":"3131:20:30","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3146:1:30"},{"name":"y","nodeType":"YulIdentifier","src":"3149:1:30"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3142:3:30"},"nodeType":"YulFunctionCall","src":"3142:9:30"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"3131:7:30"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2911:1:30","type":""},{"name":"y","nodeType":"YulTypedName","src":"2914:1:30","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"2920:7:30","type":""}],"src":"2880:277:30"},{"body":{"nodeType":"YulBlock","src":"3194:95:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3211:1:30","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3218:3:30","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3223:10:30","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3214:3:30"},"nodeType":"YulFunctionCall","src":"3214:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3204:6:30"},"nodeType":"YulFunctionCall","src":"3204:31:30"},"nodeType":"YulExpressionStatement","src":"3204:31:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3251:1:30","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3254:4:30","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3244:6:30"},"nodeType":"YulFunctionCall","src":"3244:15:30"},"nodeType":"YulExpressionStatement","src":"3244:15:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3275:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3278:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3268:6:30"},"nodeType":"YulFunctionCall","src":"3268:15:30"},"nodeType":"YulExpressionStatement","src":"3268:15:30"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3162:127:30"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n        let _1 := 32\n        let offset := calldataload(add(headStart, _1))\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(value1, value1) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value1, value1) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := mul(_4, _1)\n        let memPtr := mload(64)\n        let newFreePtr := add(add(memPtr, _5), _1)\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let src := add(_3, _1)\n        if gt(add(add(_3, _5), _1), dataEnd) { revert(value1, value1) }\n        let i := value1\n        for { } lt(i, _4) { i := add(i, 1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _1)\n            src := add(src, _1)\n        }\n        value1 := memPtr\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8_t_uint256__to_t_uint8_t_uint256__fromStack_library_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xff))\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x)))\n        {\n            mstore(product, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(product, 0x24)\n        }\n        product := mul(x, y)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}","id":30,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{"contracts/oracles/libs/vMath.sol":{"vMath":[{"length":20,"start":235},{"length":20,"start":374}]}},"object":"608060405234801561001057600080fd5b506004361061002b5760003560e01c80636dcb6a3214610030575b600080fd5b61004361003e366004610234565b610059565b604051610050919061036a565b60405180910390f35b600080836001600160a01b031663bb7b8b806040518163ffffffff1660e01b815260040160206040518083038186803b15801561009557600080fd5b505afa1580156100a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100cd919061030e565b905060006100dd845183866100e6565b95945050505050565b60008073__$fc961522ee25e21dc45bf9241cf35e1d80$__638e5fede8846040518263ffffffff1660e01b81526004016101209190610326565b60206040518083038186803b15801561013857600080fd5b505af415801561014c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610170919061030e565b9050600073__$fc961522ee25e21dc45bf9241cf35e1d80$__63f43b9abe87846040518363ffffffff1660e01b81526004016101ad929190610373565b60206040518083038186803b1580156101c557600080fd5b505af41580156101d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101fd919061030e565b9050670de0b6b3a7640000816102168760ff8a166103a6565b61022091906103a6565b61022a9190610386565b9695505050505050565b60008060408385031215610246578182fd5b82356001600160a01b038116811461025c578283fd5b915060208381013567ffffffffffffffff80821115610279578384fd5b818601915086601f83011261028c578384fd5b81358181111561029e5761029e6103d1565b838102604051858282010181811085821117156102bd576102bd6103d1565b604052828152858101935084860182860187018b10156102db578788fd5b8795505b838610156102fd5780358552600195909501949386019386016102df565b508096505050505050509250929050565b60006020828403121561031f578081fd5b5051919050565b6020808252825182820181905260009190848201906040850190845b8181101561035e57835183529284019291840191600101610342565b50909695505050505050565b90815260200190565b60ff929092168252602082015260400190565b6000826103a157634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156103cc57634e487b7160e01b81526011600452602481fd5b500290565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220c648a395119d1a2d73bcf69c7e327c1d1f246d001f88426d16c8f0f19b808df864736f6c63430008000033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6DCB6A32 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0x234 JUMP JUMPDEST PUSH2 0x59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x36A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBB7B8B80 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x30E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xDD DUP5 MLOAD DUP4 DUP7 PUSH2 0xE6 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0x0 PUSH4 0x8E5FEDE8 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120 SWAP2 SWAP1 PUSH2 0x326 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x14C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x30E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0x0 PUSH4 0xF43B9ABE DUP8 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AD SWAP3 SWAP2 SWAP1 PUSH2 0x373 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x30E JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x216 DUP8 PUSH1 0xFF DUP11 AND PUSH2 0x3A6 JUMP JUMPDEST PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x3A6 JUMP JUMPDEST PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x386 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x246 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x25C JUMPI DUP3 DUP4 REVERT JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 DUP2 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x279 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x28C JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x29E JUMPI PUSH2 0x29E PUSH2 0x3D1 JUMP JUMPDEST DUP4 DUP2 MUL PUSH1 0x40 MLOAD DUP6 DUP3 DUP3 ADD ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x2BD JUMPI PUSH2 0x2BD PUSH2 0x3D1 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP6 DUP2 ADD SWAP4 POP DUP5 DUP7 ADD DUP3 DUP7 ADD DUP8 ADD DUP12 LT ISZERO PUSH2 0x2DB JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP6 POP JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x2FD JUMPI DUP1 CALLDATALOAD DUP6 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP7 ADD SWAP4 DUP7 ADD PUSH2 0x2DF JUMP JUMPDEST POP DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31F JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x35E JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x342 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3A1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3CC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 0x48 LOG3 SWAP6 GT SWAP14 BYTE 0x2D PUSH20 0xBCF69C7E327C1D1F246D001F88426D16C8F0F19B DUP1 DUP14 0xF8 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ","sourceMap":"224:965:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;269:395;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;397:7;420:21;455:10;-1:-1:-1;;;;;444:40:20;;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;420:66;;497:16;516:115;560:6;:13;588;615:6;516:24;:115::i;:::-;497:134;269:395;-1:-1:-1;;;;;269:395:20:o;823:364::-;967:7;986:15;1004:5;:13;1018:6;1004:21;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;986:39;;1035:16;1054:5;:20;1075:1;1078:7;1054:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1035:51;-1:-1:-1;1136:6:20;1035:51;1104:17;1108:13;1104:17;;;;:::i;:::-;:28;;;;:::i;:::-;1103:39;;;;:::i;:::-;1096:46;823:364;-1:-1:-1;;;;;;823:364:20:o;14:1342:30:-;;;168:2;156:9;147:7;143:23;139:32;136:2;;;189:6;181;174:22;136:2;220:23;;-1:-1:-1;;;;;272:31:30;;262:42;;252:2;;323:6;315;308:22;252:2;351:5;-1:-1:-1;375:2:30;413:18;;;400:32;451:18;481:14;;;478:2;;;513:6;505;498:22;478:2;556:6;545:9;541:22;531:32;;601:7;594:4;590:2;586:13;582:27;572:2;;628:6;620;613:22;572:2;669;656:16;691:2;687;684:10;681:2;;;697:18;;:::i;:::-;744:2;740;736:11;776:2;770:9;827:2;822;814:6;810:15;806:24;880:6;868:10;865:22;860:2;848:10;845:18;842:46;839:2;;;891:18;;:::i;:::-;927:2;920:22;977:18;;;1011:15;;;;-1:-1:-1;1046:11:30;;;1076;;;1072:20;;1069:33;-1:-1:-1;1066:2:30;;;1120:6;1112;1105:22;1066:2;1147:6;1138:15;;1162:163;1176:2;1173:1;1170:9;1162:163;;;1233:17;;1221:30;;1194:1;1187:9;;;;;1271:12;;;;1303;;1162:163;;;1166:3;1344:6;1334:16;;;;;;;;126:1230;;;;;:::o;1361:194::-;;1484:2;1472:9;1463:7;1459:23;1455:32;1452:2;;;1505:6;1497;1490:22;1452:2;-1:-1:-1;1533:16:30;;1442:113;-1:-1:-1;1442:113:30:o;1560:643::-;1739:2;1791:21;;;1861:13;;1764:18;;;1883:22;;;1560:643;;1739:2;1962:15;;;;1936:2;1921:18;;;1560:643;2008:169;2022:6;2019:1;2016:13;2008:169;;;2083:13;;2071:26;;2152:15;;;;2117:12;;;;2044:1;2037:9;2008:169;;;-1:-1:-1;2194:3:30;;1719:484;-1:-1:-1;;;;;;1719:484:30:o;2208:177::-;2354:25;;;2342:2;2327:18;;2309:76::o;2390:263::-;2598:4;2586:17;;;;2568:36;;2635:2;2620:18;;2613:34;2556:2;2541:18;;2523:130::o;2658:217::-;;2724:1;2714:2;;-1:-1:-1;;;2749:31:30;;2803:4;2800:1;2793:15;2831:4;2756:1;2821:15;2714:2;-1:-1:-1;2860:9:30;;2704:171::o;2880:277::-;;2986:1;2982;2978:6;2974:14;2971:1;2968:21;2963:1;2956:9;2949:17;2945:45;2942:2;;;-1:-1:-1;;;3013:37:30;;3073:4;3070:1;3063:15;3107:4;3020:7;3091:21;2942:2;-1:-1:-1;3142:9:30;;2932:225::o;3162:127::-;3223:10;3218:3;3214:20;3211:1;3204:31;3254:4;3251:1;3244:15;3278:4;3275:1;3268:15"},"gasEstimates":{"creation":{"codeDepositCost":"210600","executionCost":"251","totalCost":"210851"},"external":{"get_price(address,uint256[])":"infinite"},"internal":{"calculate_v2_token_price(uint8,uint256,uint256[] memory)":"infinite"}},"methodIdentifiers":{"get_price(address,uint256[])":"6dcb6a32"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"curve_pool\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"prices\",\"type\":\"uint256[]\"}],\"name\":\"get_price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracles/CurveOracleV2.sol\":\"CurveOracleV2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/oracles/CurveOracleV2.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity >=0.8.0;\\n\\nimport {ICurvePool} from \\\"./interfaces/ICurvePoolV1.sol\\\";\\nimport {ICurveOracle} from \\\"./interfaces/ICurveOracle.sol\\\";\\nimport {vMath} from \\\"./libs/vMath.sol\\\";\\n\\ncontract CurveOracleV2 is ICurveOracle {\\n    function get_price(address curve_pool, uint256[] memory prices)\\n        external\\n        view\\n        override\\n        returns (uint256)\\n    {\\n        uint256 virtual_price = ICurvePool(curve_pool).get_virtual_price();\\n\\n        uint256 lp_price = calculate_v2_token_price(\\n            uint8(prices.length),\\n            virtual_price,\\n            prices\\n        );\\n\\n        return lp_price;\\n    }\\n\\n    //returns n_token * vp * (p1 * p2 * p3) ^1/n\\n    //n should only ever be 2, 3, or 4\\n    //returns the lp_price scaled by 1e36, so scale down by 1e36\\n    function calculate_v2_token_price(\\n        uint8 n,\\n        uint256 virtual_price,\\n        uint256[] memory prices\\n    ) internal pure returns (uint256) {\\n        uint256 product = vMath.product(prices);\\n        uint256 geo_mean = vMath.geometric_mean(n, product);\\n        return (n * virtual_price * geo_mean) / 10**18; //since virtual price has 18 decimals\\n    }\\n}\\n\",\"keccak256\":\"0x16811fe57c7083b8deb7831136e1fa0db6a4ef3aa4c66aa0a74cbb87f9a69e9f\",\"license\":\"UNLICENSED\"},\"contracts/oracles/interfaces/ICurveOracle.sol\":{\"content\":\"pragma solidity >=0.8.0;\\n\\ninterface ICurveOracle {\\n    function get_price(address curve_pool, uint256[] memory prices)\\n        external\\n        view\\n        returns (uint256);\\n}\\n\",\"keccak256\":\"0xdda871f8372f09487237b4047dbbcc88810eb55c357b2e91e13a068e043d4179\"},\"contracts/oracles/interfaces/ICurvePoolV1.sol\":{\"content\":\"pragma solidity >=0.8.0;\\n\\ninterface ICurvePool {\\n    function get_virtual_price() external view returns (uint256);\\n\\n    function coins(uint256 n) external view returns (address);\\n}\\n\",\"keccak256\":\"0xb4e7352cd3099cce79a810654c7433e0386b47f364bb5c4f75be5afb8a32b19c\"},\"contracts/oracles/libs/FixedPointMathLib.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Arithmetic library with operations for fixed-point numbers.\\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/utils/FixedPointMathLib.sol)\\n/// @author Inspired by USM (https://github.com/usmfum/USM/blob/master/contracts/WadMath.sol)\\nlibrary FixedPointMathLib {\\n    /*//////////////////////////////////////////////////////////////\\n                    SIMPLIFIED FIXED POINT OPERATIONS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 internal constant WAD = 1e18; // The scalar of ETH and most ERC20s.\\n\\n    function mulWadDown(uint256 x, uint256 y) internal pure returns (uint256) {\\n        return mulDivDown(x, y, WAD); // Equivalent to (x * y) / WAD rounded down.\\n    }\\n\\n    function mulWadUp(uint256 x, uint256 y) internal pure returns (uint256) {\\n        return mulDivUp(x, y, WAD); // Equivalent to (x * y) / WAD rounded up.\\n    }\\n\\n    function divWadDown(uint256 x, uint256 y) internal pure returns (uint256) {\\n        return mulDivDown(x, WAD, y); // Equivalent to (x * WAD) / y rounded down.\\n    }\\n\\n    function divWadUp(uint256 x, uint256 y) internal pure returns (uint256) {\\n        return mulDivUp(x, WAD, y); // Equivalent to (x * WAD) / y rounded up.\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                    LOW LEVEL FIXED POINT OPERATIONS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function mulDivDown(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 z) {\\n        assembly {\\n            // Store x * y in z for now.\\n            z := mul(x, y)\\n\\n            // Equivalent to require(denominator != 0 && (x == 0 || (x * y) / x == y))\\n            if iszero(\\n                and(\\n                    iszero(iszero(denominator)),\\n                    or(iszero(x), eq(div(z, x), y))\\n                )\\n            ) {\\n                revert(0, 0)\\n            }\\n\\n            // Divide z by the denominator.\\n            z := div(z, denominator)\\n        }\\n    }\\n\\n    function mulDivUp(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 z) {\\n        assembly {\\n            // Store x * y in z for now.\\n            z := mul(x, y)\\n\\n            // Equivalent to require(denominator != 0 && (x == 0 || (x * y) / x == y))\\n            if iszero(\\n                and(\\n                    iszero(iszero(denominator)),\\n                    or(iszero(x), eq(div(z, x), y))\\n                )\\n            ) {\\n                revert(0, 0)\\n            }\\n\\n            // First, divide z - 1 by the denominator and add 1.\\n            // We allow z - 1 to underflow if z is 0, because we multiply the\\n            // end result by 0 if z is zero, ensuring we return 0 if z is zero.\\n            z := mul(iszero(iszero(z)), add(div(sub(z, 1), denominator), 1))\\n        }\\n    }\\n\\n    function rpow(\\n        uint256 x,\\n        uint256 n,\\n        uint256 scalar\\n    ) internal pure returns (uint256 z) {\\n        assembly {\\n            switch x\\n            case 0 {\\n                switch n\\n                case 0 {\\n                    // 0 ** 0 = 1\\n                    z := scalar\\n                }\\n                default {\\n                    // 0 ** n = 0\\n                    z := 0\\n                }\\n            }\\n            default {\\n                switch mod(n, 2)\\n                case 0 {\\n                    // If n is even, store scalar in z for now.\\n                    z := scalar\\n                }\\n                default {\\n                    // If n is odd, store x in z for now.\\n                    z := x\\n                }\\n\\n                // Shifting right by 1 is like dividing by 2.\\n                let half := shr(1, scalar)\\n\\n                for {\\n                    // Shift n right by 1 before looping to halve it.\\n                    n := shr(1, n)\\n                } n {\\n                    // Shift n right by 1 each iteration to halve it.\\n                    n := shr(1, n)\\n                } {\\n                    // Revert immediately if x ** 2 would overflow.\\n                    // Equivalent to iszero(eq(div(xx, x), x)) here.\\n                    if shr(128, x) {\\n                        revert(0, 0)\\n                    }\\n\\n                    // Store x squared.\\n                    let xx := mul(x, x)\\n\\n                    // Round to the nearest number.\\n                    let xxRound := add(xx, half)\\n\\n                    // Revert if xx + half overflowed.\\n                    if lt(xxRound, xx) {\\n                        revert(0, 0)\\n                    }\\n\\n                    // Set x to scaled xxRound.\\n                    x := div(xxRound, scalar)\\n\\n                    // If n is even:\\n                    if mod(n, 2) {\\n                        // Compute z * x.\\n                        let zx := mul(z, x)\\n\\n                        // If z * x overflowed:\\n                        if iszero(eq(div(zx, x), z)) {\\n                            // Revert if x is non-zero.\\n                            if iszero(iszero(x)) {\\n                                revert(0, 0)\\n                            }\\n                        }\\n\\n                        // Round to the nearest number.\\n                        let zxRound := add(zx, half)\\n\\n                        // Revert if zx + half overflowed.\\n                        if lt(zxRound, zx) {\\n                            revert(0, 0)\\n                        }\\n\\n                        // Return properly scaled zxRound.\\n                        z := div(zxRound, scalar)\\n                    }\\n                }\\n            }\\n        }\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                        GENERAL NUMBER UTILITIES\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function sqrt(uint256 x) internal pure returns (uint256 z) {\\n        assembly {\\n            // Start off with z at 1.\\n            z := 1\\n\\n            // Used below to help find a nearby power of 2.\\n            let y := x\\n\\n            // Find the lowest power of 2 that is at least sqrt(x).\\n            if iszero(lt(y, 0x100000000000000000000000000000000)) {\\n                y := shr(128, y) // Like dividing by 2 ** 128.\\n                z := shl(64, z) // Like multiplying by 2 ** 64.\\n            }\\n            if iszero(lt(y, 0x10000000000000000)) {\\n                y := shr(64, y) // Like dividing by 2 ** 64.\\n                z := shl(32, z) // Like multiplying by 2 ** 32.\\n            }\\n            if iszero(lt(y, 0x100000000)) {\\n                y := shr(32, y) // Like dividing by 2 ** 32.\\n                z := shl(16, z) // Like multiplying by 2 ** 16.\\n            }\\n            if iszero(lt(y, 0x10000)) {\\n                y := shr(16, y) // Like dividing by 2 ** 16.\\n                z := shl(8, z) // Like multiplying by 2 ** 8.\\n            }\\n            if iszero(lt(y, 0x100)) {\\n                y := shr(8, y) // Like dividing by 2 ** 8.\\n                z := shl(4, z) // Like multiplying by 2 ** 4.\\n            }\\n            if iszero(lt(y, 0x10)) {\\n                y := shr(4, y) // Like dividing by 2 ** 4.\\n                z := shl(2, z) // Like multiplying by 2 ** 2.\\n            }\\n            if iszero(lt(y, 0x8)) {\\n                // Equivalent to 2 ** z.\\n                z := shl(1, z)\\n            }\\n\\n            // Shifting right by 1 is like dividing by 2.\\n            z := shr(1, add(z, div(x, z)))\\n            z := shr(1, add(z, div(x, z)))\\n            z := shr(1, add(z, div(x, z)))\\n            z := shr(1, add(z, div(x, z)))\\n            z := shr(1, add(z, div(x, z)))\\n            z := shr(1, add(z, div(x, z)))\\n            z := shr(1, add(z, div(x, z)))\\n\\n            // Compute a rounded down version of z.\\n            let zRoundDown := div(x, z)\\n\\n            // If zRoundDown is smaller, use it.\\n            if lt(zRoundDown, z) {\\n                z := zRoundDown\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xcc1552fe037c973c1ab30f607708735de7626eb22dcf6b2a02f2a39fa5d2b965\",\"license\":\"AGPL-3.0-only\"},\"contracts/oracles/libs/IntegralMath.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity >=0.8.0;\\n\\nimport \\\"./Uint.sol\\\";\\n\\nlibrary IntegralMath {\\n    /**\\n     * @dev Compute the largest integer smaller than or equal to the binary logarithm of `n`\\n     */\\n    function floorLog2(uint256 n) internal pure returns (uint8) {\\n        unchecked {\\n            uint8 res = 0;\\n\\n            if (n < 256) {\\n                // at most 8 iterations\\n                while (n > 1) {\\n                    n >>= 1;\\n                    res += 1;\\n                }\\n            } else {\\n                // exactly 8 iterations\\n                for (uint8 s = 128; s > 0; s >>= 1) {\\n                    if (n >= 1 << s) {\\n                        n >>= s;\\n                        res |= s;\\n                    }\\n                }\\n            }\\n\\n            return res;\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the largest integer smaller than or equal to the square root of `n`\\n     */\\n    function floorSqrt(uint256 n) internal pure returns (uint256) {\\n        unchecked {\\n            if (n > 0) {\\n                uint256 x = n / 2 + 1;\\n                uint256 y = (x + n / x) / 2;\\n                while (x > y) {\\n                    x = y;\\n                    y = (x + n / x) / 2;\\n                }\\n                return x;\\n            }\\n            return 0;\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the smallest integer larger than or equal to the square root of `n`\\n     */\\n    function ceilSqrt(uint256 n) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 x = floorSqrt(n);\\n            return x**2 == n ? x : x + 1;\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the largest integer smaller than or equal to the cubic root of `n`\\n     */\\n    function floorCbrt(uint256 n) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 x = 0;\\n            for (uint256 y = 1 << 255; y > 0; y >>= 3) {\\n                x <<= 1;\\n                uint256 z = 3 * x * (x + 1) + 1;\\n                if (n / y >= z) {\\n                    n -= y * z;\\n                    x += 1;\\n                }\\n            }\\n            return x;\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the smallest integer larger than or equal to the cubic root of `n`\\n     */\\n    function ceilCbrt(uint256 n) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 x = floorCbrt(n);\\n            return x**3 == n ? x : x + 1;\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the nearest integer to the quotient of `n` and `d` (or `n / d`)\\n     */\\n    function roundDiv(uint256 n, uint256 d) internal pure returns (uint256) {\\n        unchecked {\\n            return n / d + (n % d) / (d - d / 2);\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the largest integer smaller than or equal to `x * y / z`\\n     */\\n    function mulDivF(\\n        uint256 x,\\n        uint256 y,\\n        uint256 z\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            (uint256 xyh, uint256 xyl) = mul512(x, y);\\n            if (xyh == 0) {\\n                // `x * y < 2 ^ 256`\\n                return xyl / z;\\n            }\\n            if (xyh < z) {\\n                // `x * y / z < 2 ^ 256`\\n                uint256 m = mulMod(x, y, z); // `m = x * y % z`\\n                (uint256 nh, uint256 nl) = sub512(xyh, xyl, m); // `n = x * y - m` hence `n / z = floor(x * y / z)`\\n                if (nh == 0) {\\n                    // `n < 2 ^ 256`\\n                    return nl / z;\\n                }\\n                uint256 p = unsafeSub(0, z) & z; // `p` is the largest power of 2 which `z` is divisible by\\n                uint256 q = div512(nh, nl, p); // `n` is divisible by `p` because `n` is divisible by `z` and `z` is divisible by `p`\\n                uint256 r = inv256(z / p); // `z / p = 1 mod 2` hence `inverse(z / p) = 1 mod 2 ^ 256`\\n                return unsafeMul(q, r); // `q * r = (n / p) * inverse(z / p) = n / z`\\n            }\\n            revert(); // `x * y / z >= 2 ^ 256`\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the smallest integer larger than or equal to `x * y / z`\\n     */\\n    function mulDivC(\\n        uint256 x,\\n        uint256 y,\\n        uint256 z\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 w = mulDivF(x, y, z);\\n            if (mulMod(x, y, z) > 0) return safeAdd(w, 1);\\n            return w;\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the value of `x * y`\\n     */\\n    function mul512(uint256 x, uint256 y)\\n        private\\n        pure\\n        returns (uint256, uint256)\\n    {\\n        unchecked {\\n            uint256 p = mulModMax(x, y);\\n            uint256 q = unsafeMul(x, y);\\n            if (p >= q) return (p - q, q);\\n            return (unsafeSub(p, q) - 1, q);\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the value of `2 ^ 256 * xh + xl - y`, where `2 ^ 256 * xh + xl >= y`\\n     */\\n    function sub512(\\n        uint256 xh,\\n        uint256 xl,\\n        uint256 y\\n    ) private pure returns (uint256, uint256) {\\n        unchecked {\\n            if (xl >= y) return (xh, xl - y);\\n            return (xh - 1, unsafeSub(xl, y));\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the value of `(2 ^ 256 * xh + xl) / pow2n`, where `xl` is divisible by `pow2n`\\n     */\\n    function div512(\\n        uint256 xh,\\n        uint256 xl,\\n        uint256 pow2n\\n    ) private pure returns (uint256) {\\n        unchecked {\\n            uint256 pow2nInv = unsafeAdd(unsafeSub(0, pow2n) / pow2n, 1); // `1 << (256 - n)`\\n            return unsafeMul(xh, pow2nInv) | (xl / pow2n); // `(xh << (256 - n)) | (xl >> n)`\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the inverse of `d` modulo `2 ^ 256`, where `d` is congruent to `1` modulo `2`\\n     */\\n    function inv256(uint256 d) private pure returns (uint256) {\\n        unchecked {\\n            // approximate the root of `f(x) = 1 / x - d` using the newton\\u2013raphson convergence method\\n            uint256 x = 1;\\n            for (uint256 i = 0; i < 8; ++i)\\n                x = unsafeMul(x, unsafeSub(2, unsafeMul(x, d))); // `x = x * (2 - x * d) mod 2 ^ 256`\\n            return x;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2433205309bedeec21e98639f6e1b9ae4b72bddfd16d3c7caa23f0bedd74c07a\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/oracles/libs/Uint.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity >=0.8.0;\\n\\nuint256 constant MAX_VAL = type(uint256).max;\\n\\n// reverts on overflow\\nfunction safeAdd(uint256 x, uint256 y) pure returns (uint256) {\\n    return x + y;\\n}\\n\\n// does not revert on overflow\\nfunction unsafeAdd(uint256 x, uint256 y) pure returns (uint256) {\\n    unchecked {\\n        return x + y;\\n    }\\n}\\n\\n// does not revert on overflow\\nfunction unsafeSub(uint256 x, uint256 y) pure returns (uint256) {\\n    unchecked {\\n        return x - y;\\n    }\\n}\\n\\n// does not revert on overflow\\nfunction unsafeMul(uint256 x, uint256 y) pure returns (uint256) {\\n    unchecked {\\n        return x * y;\\n    }\\n}\\n\\n// does not overflow\\nfunction mulModMax(uint256 x, uint256 y) pure returns (uint256) {\\n    unchecked {\\n        return mulmod(x, y, MAX_VAL);\\n    }\\n}\\n\\n// does not overflow\\nfunction mulMod(\\n    uint256 x,\\n    uint256 y,\\n    uint256 z\\n) pure returns (uint256) {\\n    unchecked {\\n        return mulmod(x, y, z);\\n    }\\n}\\n\",\"keccak256\":\"0x998fcec9a910b59ed67db5af0939b271f062585a8c16a614b529197ed86d0a8d\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/oracles/libs/vMath.sol\":{\"content\":\"pragma solidity >=0.8.0;\\n\\nimport {FixedPointMathLib} from \\\"./FixedPointMathLib.sol\\\";\\nimport {IntegralMath} from \\\"./IntegralMath.sol\\\";\\n\\nlibrary vMath {\\n    uint256 internal constant WAD = 1e18; // The scalar of ETH and most ERC20s.\\n\\n    function min(uint256[] calldata array) external pure returns (uint256) {\\n        uint256 min = array[0];\\n        for (uint8 i = 1; i < array.length; i++) {\\n            if (min > array[i]) {\\n                min = array[i];\\n            }\\n        }\\n        return min;\\n    }\\n\\n    function product(uint256[] calldata nums) external pure returns (uint256) {\\n        uint256 product = nums[0];\\n        for (uint256 i = 1; i < nums.length; i++) {\\n            product *= nums[i];\\n        }\\n        return product;\\n    }\\n\\n    //limited to curve pools only, either 2 or 3 assets (mostly 2)\\n    function geometric_mean(uint8 n, uint256 product)\\n        external\\n        pure\\n        returns (uint256)\\n    {\\n        if (n == 2) {\\n            return FixedPointMathLib.sqrt(product);\\n        } else {\\n            //n == 3\\n            return IntegralMath.floorCbrt(product);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x771260414afb50c4937cc8185436eadf2292162955a4ea25cb1b8405d9a0e0fb\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/oracles/CurveWrapper.sol":{"CurveWrapper":{"abi":[{"inputs":[{"internalType":"address","name":"addressProvider","type":"address"},{"internalType":"address","name":"fallbackOracle","type":"address"},{"internalType":"address","name":"baseCurrency","type":"address"},{"internalType":"uint256","name":"baseCurrencyUnit","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"asset","type":"address"},{"indexed":true,"internalType":"address","name":"source","type":"address"}],"name":"AssetSourceUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"baseCurrency","type":"address"},{"indexed":false,"internalType":"uint256","name":"baseCurrencyUnit","type":"uint256"}],"name":"BaseCurrencySet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"fallbackOracle","type":"address"}],"name":"FallbackOracleUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"BASE_CURRENCY","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"BASE_CURRENCY_UNIT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getAssetPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"assets","type":"address[]"}],"name":"getAssetsPrices","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getFallbackOracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"addressProvider","type":"address"}],"name":"setAddressProvider","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"fallbackOracle","type":"address"}],"name":"setFallbackOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Aave","kind":"dev","methods":{"constructor":{"params":{"addressProvider":"The address of the vmex address provider (not the curve address provider)","baseCurrency":"the base currency used for the price quotes. If USD is used, base currency is 0x0","baseCurrencyUnit":"the unit of the base currency","fallbackOracle":"The address of the fallback oracle to use if the data of an        aggregator is not consistent"}},"getAssetPrice(address)":{"params":{"asset":"The asset address"}},"getAssetsPrices(address[])":{"params":{"assets":"The list of assets addresses"}},"getFallbackOracle()":{"returns":{"_0":"address The addres of the fallback oracle"}},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setFallbackOracle(address)":{"params":{"fallbackOracle":"The address of the fallbackOracle"}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"title":"AaveOracle","version":1},"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:838:30","statements":[{"nodeType":"YulBlock","src":"6:3:30","statements":[]},{"body":{"nodeType":"YulBlock","src":"76:117:30","statements":[{"nodeType":"YulAssignment","src":"86:22:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"101:6:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"95:5:30"},"nodeType":"YulFunctionCall","src":"95:13:30"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"86:5:30"}]},{"body":{"nodeType":"YulBlock","src":"171:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"180:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"183:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"173:6:30"},"nodeType":"YulFunctionCall","src":"173:12:30"},"nodeType":"YulExpressionStatement","src":"173:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"130:5:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"141:5:30"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"156:3:30","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"161:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"152:3:30"},"nodeType":"YulFunctionCall","src":"152:11:30"},{"kind":"number","nodeType":"YulLiteral","src":"165:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"148:3:30"},"nodeType":"YulFunctionCall","src":"148:19:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"137:3:30"},"nodeType":"YulFunctionCall","src":"137:31:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"127:2:30"},"nodeType":"YulFunctionCall","src":"127:42:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"120:6:30"},"nodeType":"YulFunctionCall","src":"120:50:30"},"nodeType":"YulIf","src":"117:2:30"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"55:6:30","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"66:5:30","type":""}],"src":"14:179:30"},{"body":{"nodeType":"YulBlock","src":"330:324:30","statements":[{"body":{"nodeType":"YulBlock","src":"377:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"386:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"394:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"379:6:30"},"nodeType":"YulFunctionCall","src":"379:22:30"},"nodeType":"YulExpressionStatement","src":"379:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"351:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"360:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"347:3:30"},"nodeType":"YulFunctionCall","src":"347:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"372:3:30","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"343:3:30"},"nodeType":"YulFunctionCall","src":"343:33:30"},"nodeType":"YulIf","src":"340:2:30"},{"nodeType":"YulAssignment","src":"412:52:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"454:9:30"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"422:31:30"},"nodeType":"YulFunctionCall","src":"422:42:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"412:6:30"}]},{"nodeType":"YulAssignment","src":"473:61:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"519:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"530:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"515:3:30"},"nodeType":"YulFunctionCall","src":"515:18:30"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"483:31:30"},"nodeType":"YulFunctionCall","src":"483:51:30"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"473:6:30"}]},{"nodeType":"YulAssignment","src":"543:61:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"589:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"600:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"585:3:30"},"nodeType":"YulFunctionCall","src":"585:18:30"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"553:31:30"},"nodeType":"YulFunctionCall","src":"553:51:30"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"543:6:30"}]},{"nodeType":"YulAssignment","src":"613:35:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"633:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"644:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"629:3:30"},"nodeType":"YulFunctionCall","src":"629:18:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"623:5:30"},"nodeType":"YulFunctionCall","src":"623:25:30"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"613:6:30"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_addresst_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"272:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"283:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"295:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"303:6:30","type":""},{"name":"value2","nodeType":"YulTypedName","src":"311:6:30","type":""},{"name":"value3","nodeType":"YulTypedName","src":"319:6:30","type":""}],"src":"198:456:30"},{"body":{"nodeType":"YulBlock","src":"760:76:30","statements":[{"nodeType":"YulAssignment","src":"770:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"782:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"793:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"778:3:30"},"nodeType":"YulFunctionCall","src":"778:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"770:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"812:9:30"},{"name":"value0","nodeType":"YulIdentifier","src":"823:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"805:6:30"},"nodeType":"YulFunctionCall","src":"805:25:30"},"nodeType":"YulExpressionStatement","src":"805:25:30"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"729:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"740:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"751:4:30","type":""}],"src":"659:177:30"}]},"contents":"{\n    { }\n    function abi_decode_t_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value0, value0) }\n        value0 := abi_decode_t_address_fromMemory(headStart)\n        value1 := abi_decode_t_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_t_address_fromMemory(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}","id":30,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1337 CODESIZE SUB DUP1 PUSH3 0x1337 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x64A JUMP JUMPDEST PUSH1 0x0 PUSH3 0x40 PUSH3 0x11E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE PUSH3 0xB0 DUP4 PUSH3 0x122 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP4 SWAP1 SHL AND PUSH1 0x80 MSTORE PUSH1 0xA0 DUP2 SWAP1 MSTORE PUSH3 0xD1 PUSH3 0x16C JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xE27C4C1372396A3D15A9922F74F9DFC7C72B1AD6D63868470787249C356454C1 DUP3 PUSH1 0x40 MLOAD PUSH3 0x10C SWAP2 SWAP1 PUSH3 0x69B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP PUSH3 0x6A4 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xCE7A780D33665B1EA097AF5F155E3821B809ECBAA839D3B33AA83BA28168CEFB SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH32 0xC3F53DCDAF6E9F09B7534871D74ADB7C316F2D5E2CCD5623414ACED1DA2F9F44 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH20 0xD51A44D3FAE010294C616388B506ACDA1BFAAE46 OR SWAP1 SWAP2 SSTORE PUSH1 0x3 PUSH32 0x62B955E340611B83592F98955871459FFF5F39282C44606EE6F2A2140AF6F8C9 DUP2 SWAP1 SSTORE PUSH32 0x86294D2E5AFAD0C29F0AD45ECBDAE58CA55370C9282CA6D63287A852438095C5 DUP1 SLOAD DUP4 AND PUSH20 0xDAC17F958D2EE523A2206206994597C13D831EC7 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH32 0x7CC2DDA6F7CDA3893CB4CC6A15536AD333B3750E1237F0AB29E1EE723E18C485 DUP1 SLOAD DUP5 AND PUSH20 0x2260FAC5E5542A773AA44FBCFEDF7C193BC2C599 OR SWAP1 SSTORE PUSH32 0xAA4623DC8891093A66BF7581D4882714E260FDA60112EBB8FF4D6A8DBDCF3289 DUP1 SLOAD DUP5 AND PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH32 0xEAC489D5FCE2CAC016EE12CFECD5EEB23412AA5D77CDB3E1D0FAB0572ADBA7B2 DUP1 SLOAD DUP6 AND PUSH20 0xBEBC44782C7DB0A1A60CB6FE97D0B483032FF1C7 OR SWAP1 SSTORE PUSH32 0xA558D2E0CB48601F95B0BA016A54413646F7BD87E0574DB8B5CC52669CE871F6 SWAP3 SWAP1 SWAP3 SSTORE PUSH32 0x907A72421B781B2D8BE6F368FF319E90649F710DA35E370CF38CCC89A836EDD7 DUP1 SLOAD DUP5 AND PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F OR SWAP1 SSTORE PUSH32 0xF0C1D9E17C06EC2B3AE0ADE62FF92FB5F71EE7060E179D0F83A99547D9411A1A DUP1 SLOAD DUP5 AND PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH32 0xAF5FEB388A4A88F587603820DBF5FD61666F9C0DEE4A6935D11A387F39631BD0 DUP1 SLOAD DUP6 AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH32 0x72445ED47EDB5A6F1596ED0C5DC5BCD49D978815A8DC26762A075571DA59C6F8 DUP1 SLOAD DUP5 AND PUSH20 0xDC24316B9AE028F1497C275EB9192A3EA0F67022 OR SWAP1 SSTORE PUSH1 0x2 PUSH32 0xD208599A79E4B42287C0ABA37622F691D3E1FC65F54FE860E8C52C0B3D5604AE DUP2 SWAP1 SSTORE PUSH32 0x759C8CEA8769272877F76187A5B92B46073AA4AE92B0618FB1BA5CC3905719FC DUP1 SLOAD DUP6 AND SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH32 0x8E4C7F9F8F15C1265E3E67750B71FFE46408A2E14C150704B63101E2DC4AE124 DUP1 SLOAD DUP5 AND PUSH20 0xAE7AB96520DE3A18E5E111B5EAAB095312D7FE84 OR SWAP1 SSTORE PUSH32 0x50BF76CF255373293B554A43AC97E1E70B2DCA69950F42D85074429A1AB62477 DUP1 SLOAD DUP5 AND PUSH20 0xDCEF968D416A41CDAC0ED8702FAC8128A64241A2 OR SWAP1 SSTORE PUSH32 0xBA7C7BD2090C0B49132B3494F1B0BD1C2BD144CB80276A316856F331A3D8EF60 DUP3 SWAP1 SSTORE PUSH32 0x215E56E5EAFBA1958EB24C778E66FF58589728BEABC1BBB5D34BA3310A114801 DUP1 SLOAD DUP5 AND PUSH20 0x853D955ACEF822DB058EB8505911ED77F175B99E SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH32 0xD68BB98672E61AD04960BA7FDD14536F9D4194181582CA7D52233F3E3A77E0B4 DUP1 SLOAD DUP6 AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH32 0x340CE4A8456F78870587AEB8275089E022FADBE52ACE37EC52CDB90EAC37FF9D DUP1 SLOAD DUP5 AND PUSH20 0xD632F22692FAC7611D2AA1C0D552930D43CAED3B OR SWAP1 SSTORE PUSH32 0x6AE3E7F728ADF7BB4FEFAEB091819807B4CABAE4C2C30A14AB4919537CE1E70 SWAP2 SWAP1 SWAP2 SSTORE PUSH32 0x2F563FA6DEDB524451ACD2A600DF0A1BC53DE2143885FE665B0DEA9DDBF7E033 DUP1 SLOAD DUP4 AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x0 MSTORE PUSH32 0xEF09C0AFA8293B6365C94A4CAE7F7D1D0BB0E6799CB71432802535D057CF21B3 PUSH1 0x20 MSTORE PUSH32 0xCD85238F8628312D0889356089E2CF5982CD9F6FF4302B6ECF53A2F2623E62FB DUP1 SLOAD SWAP1 SWAP2 AND PUSH20 0x6C3F90F043A72FA612CBAC8115EE7E52BDE6E490 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x645 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x660 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH3 0x66B DUP6 PUSH3 0x62D JUMP JUMPDEST SWAP4 POP PUSH3 0x67B PUSH1 0x20 DUP7 ADD PUSH3 0x62D JUMP JUMPDEST SWAP3 POP PUSH3 0x68B PUSH1 0x40 DUP7 ADD PUSH3 0x62D JUMP JUMPDEST PUSH1 0x60 SWAP6 SWAP1 SWAP6 ADD MLOAD SWAP4 SWAP7 SWAP3 SWAP6 POP POP POP JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH2 0xC5C PUSH3 0x6DB PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x28D ADD MSTORE PUSH2 0x3DC ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x3A1 ADD MSTORE PUSH2 0x840 ADD MSTORE PUSH2 0xC5C PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x9D23D9F2 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0xB3596F07 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0xE19F4700 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x149 JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x170AEE73 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x1A5FA2E3 EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x6210308C EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x8C89B64F EQ PUSH2 0xF1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0xB1 CALLDATASIZE PUSH1 0x4 PUSH2 0x966 JUMP JUMPDEST PUSH2 0x15C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB6 PUSH2 0xC6 CALLDATASIZE PUSH1 0x4 PUSH2 0x966 JUMP JUMPDEST PUSH2 0x1A6 JUMP JUMPDEST PUSH2 0xD3 PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0xA66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB6 PUSH2 0x20C JUMP JUMPDEST PUSH2 0xF9 PUSH2 0x28B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0xBE1 JUMP JUMPDEST PUSH2 0xD3 PUSH2 0x2AF JUMP JUMPDEST PUSH2 0x121 PUSH2 0x11C CALLDATASIZE PUSH1 0x4 PUSH2 0x9A5 JUMP JUMPDEST PUSH2 0x2BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0xAA6 JUMP JUMPDEST PUSH2 0xF9 PUSH2 0x13C CALLDATASIZE PUSH1 0x4 PUSH2 0x966 JUMP JUMPDEST PUSH2 0x39D JUMP JUMPDEST PUSH2 0xD3 PUSH2 0x83E JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x157 CALLDATASIZE PUSH1 0x4 PUSH2 0x966 JUMP JUMPDEST PUSH2 0x862 JUMP JUMPDEST PUSH2 0x164 PUSH2 0x918 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x19A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x191 SWAP1 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A3 DUP2 PUSH2 0x91C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1AE PUSH2 0x918 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x191 SWAP1 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x214 PUSH2 0x918 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x241 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x191 SWAP1 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x312 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x395 JUMPI PUSH2 0x358 DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x343 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x966 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x378 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x38D DUP2 PUSH2 0xBEA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x318 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x400 JUMPI POP PUSH32 0x0 PUSH2 0x839 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD SWAP1 SWAP4 AND DUP1 DUP4 MSTORE PUSH1 0x4 SWAP1 SWAP2 MSTORE SWAP2 DUP2 KECCAK256 SLOAD SWAP1 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x454 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x47D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x710 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND SWAP1 PUSH20 0x6C3F90F043A72FA612CBAC8115EE7E52BDE6E490 DUP3 EQ ISZERO PUSH2 0x55D JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x992ECAE7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x51E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x532 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x556 SWAP2 SWAP1 PUSH2 0x989 JUMP JUMPDEST SWAP1 POP PUSH2 0x5E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF139DC81 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5E3 SWAP2 SWAP1 PUSH2 0x989 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x60C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x191 SWAP1 PUSH2 0xBAA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB3596F07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xB3596F07 SWAP1 PUSH2 0x638 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0xA66 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x650 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x664 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x688 SWAP2 SWAP1 PUSH2 0xA14 JUMP JUMPDEST DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x6A8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x6D6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT PUSH2 0x6FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x191 SWAP1 PUSH2 0xAFF JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x708 SWAP1 PUSH2 0xBEA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x483 JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xBA61FE31 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xBA61FE31 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x756 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x76A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x78E SWAP2 SWAP1 PUSH2 0x989 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6DCB6A32 DUP7 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C0 SWAP3 SWAP2 SWAP1 PUSH2 0xA7A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x810 SWAP2 SWAP1 PUSH2 0xA14 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x832 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x191 SWAP1 PUSH2 0xB34 JUMP JUMPDEST SWAP5 POP POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x86A PUSH2 0x918 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x897 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x191 SWAP1 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x8BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x191 SWAP1 PUSH2 0xAB9 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xCE7A780D33665B1EA097AF5F155E3821B809ECBAA839D3B33AA83BA28168CEFB SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x977 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x982 DUP2 PUSH2 0xC11 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x99A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x982 DUP2 PUSH2 0xC11 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9B7 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x9CE JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x9E1 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x9EF JUMPI DUP4 DUP5 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP1 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0xA02 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA25 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA5B JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xA3F JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xA9E SWAP1 DUP4 ADD DUP5 PUSH2 0xA2C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x982 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA2C JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x61617665206F7261636C6520656E636F756E746572656420616E206572726F72 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x4375727665206F7261636C6520656E636F756E746572656420616E206572726F PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x756E6465726C79696E6720746F6B656E206973206E756C6C0000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0xC0A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1A3 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV DUP1 0x2D 0x48 0x4C 0x2C SWAP12 DUP16 SWAP9 EXP EXP MOD 0xCF DUP2 0xAD 0xE4 SELFBALANCE PUSH11 0xFFC1B58E7DA6E0FDD71CF1 DIFFICULTY 0xE PUSH6 0x64736F6C6343 STOP ADDMOD STOP STOP CALLER ","sourceMap":"1362:8923:21:-:0;;;2657:676;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;873:17:9;893:12;:10;:12::i;:::-;915:6;:18;;-1:-1:-1;;;;;;915:18:9;-1:-1:-1;;;;;915:18:9;;;;;;;948:43;;915:18;;-1:-1:-1;915:18:9;948:43;;915:6;;948:43;-1:-1:-1;3037:18:21;:67;;-1:-1:-1;;;;;;3037:67:21;-1:-1:-1;;;;;3037:67:21;;;;;3114:34;3133:14;3114:18;:34::i;:::-;-1:-1:-1;;;;;;3158:28:21;;;;;;;3196:37;;;;3243:20;:18;:20::i;:::-;3295:12;-1:-1:-1;;;;;3279:47:21;;3309:16;3279:47;;;;;;:::i;:::-;;;;;;;;2657:676;;;;1362:8923;;590:96:6;669:10;590:96;:::o;7267:182:21:-;7338:15;:52;;-1:-1:-1;;;;;;7338:52:21;-1:-1:-1;;;;;7338:52:21;;;;;;;;7405:37;;;;-1:-1:-1;;7405:37:21;7267:182;:::o;3501:3358::-;3571:79;:124;;-1:-1:-1;;;;;;3571:124:21;;;3653:42;3571:124;;;;:13;3718:52;:56;;;3808:84;:129;;;;3895:42;3808:129;;;;;;3979:84;:129;;;;4066:42;3979:129;;;4150:84;:129;;;;4237:42;4150:129;;;;;;4338:79;:124;;;;4420:42;4338:124;;;4472:52;:56;;;;4562:84;:129;;;;4649:42;4562:129;;;4732:84;:129;;;;4819:42;4732:129;;;;;;4903:84;:129;;;;;;;;;;5094:79;:124;;;;5176:42;5094:124;;;4223:1;5228:52;:56;;;5316:84;:129;;;;;;;;;;5487:84;:129;;;;5574:42;5487:129;;;5679:79;:124;;;;5761:42;5679:124;;;5813:52;:56;;;5901:84;:129;;;;5988:42;5901:129;;;;;;6072:84;:129;;;;;;;;;;6263:79;:124;;;;6345:42;6263:124;;;6429:52;:56;;;;6520:84;:129;;;;;;;;;3571:124;:79;6691:84;6520:59;3571:79;6691:84;;:129;;;;;4365:42;6691:129;;;3501:3358::o;14:179:30:-;95:13;;-1:-1:-1;;;;;137:31:30;;127:42;;117:2;;183:1;180;173:12;117:2;76:117;;;:::o;198:456::-;;;;;372:3;360:9;351:7;347:23;343:33;340:2;;;394:6;386;379:22;340:2;422:42;454:9;422:42;:::i;:::-;412:52;;483:51;530:2;519:9;515:18;483:51;:::i;:::-;473:61;;553:51;600:2;589:9;585:18;553:51;:::i;:::-;644:2;629:18;;;;623:25;330:324;;;;-1:-1:-1;;;330:324:30:o;659:177::-;805:25;;;793:2;778:18;;760:76::o;:::-;1362:8923:21;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5155:30","statements":[{"nodeType":"YulBlock","src":"6:3:30","statements":[]},{"body":{"nodeType":"YulBlock","src":"84:189:30","statements":[{"body":{"nodeType":"YulBlock","src":"130:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"139:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"147:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"132:6:30"},"nodeType":"YulFunctionCall","src":"132:22:30"},"nodeType":"YulExpressionStatement","src":"132:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"105:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"114:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"101:3:30"},"nodeType":"YulFunctionCall","src":"101:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"126:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"97:3:30"},"nodeType":"YulFunctionCall","src":"97:32:30"},"nodeType":"YulIf","src":"94:2:30"},{"nodeType":"YulVariableDeclaration","src":"165:36:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"191:9:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"178:12:30"},"nodeType":"YulFunctionCall","src":"178:23:30"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"169:5:30","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"237:5:30"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"210:26:30"},"nodeType":"YulFunctionCall","src":"210:33:30"},"nodeType":"YulExpressionStatement","src":"210:33:30"},{"nodeType":"YulAssignment","src":"252:15:30","value":{"name":"value","nodeType":"YulIdentifier","src":"262:5:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"252:6:30"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"50:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"61:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"73:6:30","type":""}],"src":"14:259:30"},{"body":{"nodeType":"YulBlock","src":"359:182:30","statements":[{"body":{"nodeType":"YulBlock","src":"405:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"414:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"422:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"407:6:30"},"nodeType":"YulFunctionCall","src":"407:22:30"},"nodeType":"YulExpressionStatement","src":"407:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"380:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"389:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"376:3:30"},"nodeType":"YulFunctionCall","src":"376:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"401:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"372:3:30"},"nodeType":"YulFunctionCall","src":"372:32:30"},"nodeType":"YulIf","src":"369:2:30"},{"nodeType":"YulVariableDeclaration","src":"440:29:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"459:9:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"453:5:30"},"nodeType":"YulFunctionCall","src":"453:16:30"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"444:5:30","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"505:5:30"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"478:26:30"},"nodeType":"YulFunctionCall","src":"478:33:30"},"nodeType":"YulExpressionStatement","src":"478:33:30"},{"nodeType":"YulAssignment","src":"520:15:30","value":{"name":"value","nodeType":"YulIdentifier","src":"530:5:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"520:6:30"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"325:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"336:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"348:6:30","type":""}],"src":"278:263:30"},{"body":{"nodeType":"YulBlock","src":"651:561:30","statements":[{"body":{"nodeType":"YulBlock","src":"697:26:30","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"706:6:30"},{"name":"value1","nodeType":"YulIdentifier","src":"714:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"699:6:30"},"nodeType":"YulFunctionCall","src":"699:22:30"},"nodeType":"YulExpressionStatement","src":"699:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"672:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"681:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"668:3:30"},"nodeType":"YulFunctionCall","src":"668:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"693:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"664:3:30"},"nodeType":"YulFunctionCall","src":"664:32:30"},"nodeType":"YulIf","src":"661:2:30"},{"nodeType":"YulVariableDeclaration","src":"732:37:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"759:9:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"746:12:30"},"nodeType":"YulFunctionCall","src":"746:23:30"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"736:6:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"778:28:30","value":{"kind":"number","nodeType":"YulLiteral","src":"788:18:30","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"782:2:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"833:26:30","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"842:6:30"},{"name":"value1","nodeType":"YulIdentifier","src":"850:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"835:6:30"},"nodeType":"YulFunctionCall","src":"835:22:30"},"nodeType":"YulExpressionStatement","src":"835:22:30"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"821:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"829:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"818:2:30"},"nodeType":"YulFunctionCall","src":"818:14:30"},"nodeType":"YulIf","src":"815:2:30"},{"nodeType":"YulVariableDeclaration","src":"868:32:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"882:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"893:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"878:3:30"},"nodeType":"YulFunctionCall","src":"878:22:30"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"872:2:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"948:26:30","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"957:6:30"},{"name":"value1","nodeType":"YulIdentifier","src":"965:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"950:6:30"},"nodeType":"YulFunctionCall","src":"950:22:30"},"nodeType":"YulExpressionStatement","src":"950:22:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"927:2:30"},{"kind":"number","nodeType":"YulLiteral","src":"931:4:30","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"923:3:30"},"nodeType":"YulFunctionCall","src":"923:13:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"938:7:30"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"919:3:30"},"nodeType":"YulFunctionCall","src":"919:27:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"912:6:30"},"nodeType":"YulFunctionCall","src":"912:35:30"},"nodeType":"YulIf","src":"909:2:30"},{"nodeType":"YulVariableDeclaration","src":"983:30:30","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1010:2:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"997:12:30"},"nodeType":"YulFunctionCall","src":"997:16:30"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"987:6:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"1040:26:30","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1049:6:30"},{"name":"value1","nodeType":"YulIdentifier","src":"1057:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1042:6:30"},"nodeType":"YulFunctionCall","src":"1042:22:30"},"nodeType":"YulExpressionStatement","src":"1042:22:30"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1028:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"1036:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1025:2:30"},"nodeType":"YulFunctionCall","src":"1025:14:30"},"nodeType":"YulIf","src":"1022:2:30"},{"body":{"nodeType":"YulBlock","src":"1125:26:30","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1134:6:30"},{"name":"value1","nodeType":"YulIdentifier","src":"1142:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1127:6:30"},"nodeType":"YulFunctionCall","src":"1127:22:30"},"nodeType":"YulExpressionStatement","src":"1127:22:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1089:2:30"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1097:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"1105:2:30","type":"","value":"32"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1093:3:30"},"nodeType":"YulFunctionCall","src":"1093:15:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1085:3:30"},"nodeType":"YulFunctionCall","src":"1085:24:30"},{"kind":"number","nodeType":"YulLiteral","src":"1111:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1081:3:30"},"nodeType":"YulFunctionCall","src":"1081:33:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1116:7:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1078:2:30"},"nodeType":"YulFunctionCall","src":"1078:46:30"},"nodeType":"YulIf","src":"1075:2:30"},{"nodeType":"YulAssignment","src":"1160:21:30","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1174:2:30"},{"kind":"number","nodeType":"YulLiteral","src":"1178:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1170:3:30"},"nodeType":"YulFunctionCall","src":"1170:11:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1160:6:30"}]},{"nodeType":"YulAssignment","src":"1190:16:30","value":{"name":"length","nodeType":"YulIdentifier","src":"1200:6:30"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1190:6:30"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"609:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"620:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"632:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"640:6:30","type":""}],"src":"546:666:30"},{"body":{"nodeType":"YulBlock","src":"1298:113:30","statements":[{"body":{"nodeType":"YulBlock","src":"1344:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1353:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"1361:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1346:6:30"},"nodeType":"YulFunctionCall","src":"1346:22:30"},"nodeType":"YulExpressionStatement","src":"1346:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1319:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"1328:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1315:3:30"},"nodeType":"YulFunctionCall","src":"1315:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"1340:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1311:3:30"},"nodeType":"YulFunctionCall","src":"1311:32:30"},"nodeType":"YulIf","src":"1308:2:30"},{"nodeType":"YulAssignment","src":"1379:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1395:9:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1389:5:30"},"nodeType":"YulFunctionCall","src":"1389:16:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1379:6:30"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1264:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1275:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1287:6:30","type":""}],"src":"1217:194:30"},{"body":{"nodeType":"YulBlock","src":"1483:376:30","statements":[{"nodeType":"YulVariableDeclaration","src":"1493:26:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1513:5:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1507:5:30"},"nodeType":"YulFunctionCall","src":"1507:12:30"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1497:6:30","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1535:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"1540:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1528:6:30"},"nodeType":"YulFunctionCall","src":"1528:19:30"},"nodeType":"YulExpressionStatement","src":"1528:19:30"},{"nodeType":"YulVariableDeclaration","src":"1556:14:30","value":{"kind":"number","nodeType":"YulLiteral","src":"1566:4:30","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1560:2:30","type":""}]},{"nodeType":"YulAssignment","src":"1579:19:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1590:3:30"},{"name":"_1","nodeType":"YulIdentifier","src":"1595:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1586:3:30"},"nodeType":"YulFunctionCall","src":"1586:12:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1579:3:30"}]},{"nodeType":"YulVariableDeclaration","src":"1607:28:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1625:5:30"},{"name":"_1","nodeType":"YulIdentifier","src":"1632:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1621:3:30"},"nodeType":"YulFunctionCall","src":"1621:14:30"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"1611:6:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1644:12:30","value":{"name":"end","nodeType":"YulIdentifier","src":"1653:3:30"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1648:1:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"1714:120:30","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1735:3:30"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"1746:6:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1740:5:30"},"nodeType":"YulFunctionCall","src":"1740:13:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1728:6:30"},"nodeType":"YulFunctionCall","src":"1728:26:30"},"nodeType":"YulExpressionStatement","src":"1728:26:30"},{"nodeType":"YulAssignment","src":"1767:19:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1778:3:30"},{"name":"_1","nodeType":"YulIdentifier","src":"1783:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1774:3:30"},"nodeType":"YulFunctionCall","src":"1774:12:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1767:3:30"}]},{"nodeType":"YulAssignment","src":"1799:25:30","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"1813:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"1821:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1809:3:30"},"nodeType":"YulFunctionCall","src":"1809:15:30"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"1799:6:30"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1676:1:30"},{"name":"length","nodeType":"YulIdentifier","src":"1679:6:30"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1673:2:30"},"nodeType":"YulFunctionCall","src":"1673:13:30"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1687:18:30","statements":[{"nodeType":"YulAssignment","src":"1689:14:30","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1698:1:30"},{"kind":"number","nodeType":"YulLiteral","src":"1701:1:30","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1694:3:30"},"nodeType":"YulFunctionCall","src":"1694:9:30"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1689:1:30"}]}]},"pre":{"nodeType":"YulBlock","src":"1669:3:30","statements":[]},"src":"1665:169:30"},{"nodeType":"YulAssignment","src":"1843:10:30","value":{"name":"pos","nodeType":"YulIdentifier","src":"1850:3:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1843:3:30"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1460:5:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1467:3:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1475:3:30","type":""}],"src":"1416:443:30"},{"body":{"nodeType":"YulBlock","src":"1965:102:30","statements":[{"nodeType":"YulAssignment","src":"1975:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1987:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"1998:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1983:3:30"},"nodeType":"YulFunctionCall","src":"1983:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1975:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2017:9:30"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2032:6:30"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2048:3:30","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2053:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2044:3:30"},"nodeType":"YulFunctionCall","src":"2044:11:30"},{"kind":"number","nodeType":"YulLiteral","src":"2057:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2040:3:30"},"nodeType":"YulFunctionCall","src":"2040:19:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2028:3:30"},"nodeType":"YulFunctionCall","src":"2028:32:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2010:6:30"},"nodeType":"YulFunctionCall","src":"2010:51:30"},"nodeType":"YulExpressionStatement","src":"2010:51:30"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1934:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1945:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1956:4:30","type":""}],"src":"1864:203:30"},{"body":{"nodeType":"YulBlock","src":"2251:185:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2268:9:30"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2283:6:30"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2299:3:30","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2304:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2295:3:30"},"nodeType":"YulFunctionCall","src":"2295:11:30"},{"kind":"number","nodeType":"YulLiteral","src":"2308:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2291:3:30"},"nodeType":"YulFunctionCall","src":"2291:19:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2279:3:30"},"nodeType":"YulFunctionCall","src":"2279:32:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2261:6:30"},"nodeType":"YulFunctionCall","src":"2261:51:30"},"nodeType":"YulExpressionStatement","src":"2261:51:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2332:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2343:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2328:3:30"},"nodeType":"YulFunctionCall","src":"2328:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"2348:2:30","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2321:6:30"},"nodeType":"YulFunctionCall","src":"2321:30:30"},"nodeType":"YulExpressionStatement","src":"2321:30:30"},{"nodeType":"YulAssignment","src":"2360:70:30","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2403:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2415:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2426:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2411:3:30"},"nodeType":"YulFunctionCall","src":"2411:18:30"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn","nodeType":"YulIdentifier","src":"2368:34:30"},"nodeType":"YulFunctionCall","src":"2368:62:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2360:4:30"}]}]},"name":"abi_encode_tuple_t_address_t_array$_t_uint256_$dyn_memory_ptr__to_t_address_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2212:9:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2223:6:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2231:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2242:4:30","type":""}],"src":"2072:364:30"},{"body":{"nodeType":"YulBlock","src":"2592:116:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2609:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2620:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2602:6:30"},"nodeType":"YulFunctionCall","src":"2602:21:30"},"nodeType":"YulExpressionStatement","src":"2602:21:30"},{"nodeType":"YulAssignment","src":"2632:70:30","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2675:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2687:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2698:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2683:3:30"},"nodeType":"YulFunctionCall","src":"2683:18:30"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn","nodeType":"YulIdentifier","src":"2640:34:30"},"nodeType":"YulFunctionCall","src":"2640:62:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2632:4:30"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2561:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2572:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2583:4:30","type":""}],"src":"2441:267:30"},{"body":{"nodeType":"YulBlock","src":"2887:228:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2904:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2915:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2897:6:30"},"nodeType":"YulFunctionCall","src":"2897:21:30"},"nodeType":"YulExpressionStatement","src":"2897:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2938:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2949:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2934:3:30"},"nodeType":"YulFunctionCall","src":"2934:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"2954:2:30","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2927:6:30"},"nodeType":"YulFunctionCall","src":"2927:30:30"},"nodeType":"YulExpressionStatement","src":"2927:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2977:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2988:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2973:3:30"},"nodeType":"YulFunctionCall","src":"2973:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"2993:34:30","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2966:6:30"},"nodeType":"YulFunctionCall","src":"2966:62:30"},"nodeType":"YulExpressionStatement","src":"2966:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3048:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3059:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3044:3:30"},"nodeType":"YulFunctionCall","src":"3044:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"3064:8:30","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3037:6:30"},"nodeType":"YulFunctionCall","src":"3037:36:30"},"nodeType":"YulExpressionStatement","src":"3037:36:30"},{"nodeType":"YulAssignment","src":"3082:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3094:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3105:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3090:3:30"},"nodeType":"YulFunctionCall","src":"3090:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3082:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2864:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2878:4:30","type":""}],"src":"2713:402:30"},{"body":{"nodeType":"YulBlock","src":"3294:182:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3311:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3322:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3304:6:30"},"nodeType":"YulFunctionCall","src":"3304:21:30"},"nodeType":"YulExpressionStatement","src":"3304:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3345:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3356:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3341:3:30"},"nodeType":"YulFunctionCall","src":"3341:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"3361:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3334:6:30"},"nodeType":"YulFunctionCall","src":"3334:30:30"},"nodeType":"YulExpressionStatement","src":"3334:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3384:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3395:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3380:3:30"},"nodeType":"YulFunctionCall","src":"3380:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"3400:34:30","type":"","value":"aave oracle encountered an error"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3373:6:30"},"nodeType":"YulFunctionCall","src":"3373:62:30"},"nodeType":"YulExpressionStatement","src":"3373:62:30"},{"nodeType":"YulAssignment","src":"3444:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3456:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3467:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3452:3:30"},"nodeType":"YulFunctionCall","src":"3452:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3444:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_49a2bac861dd4380d6fd0d823ee0721ff11ba3d1e715eb7ddae8f9170b277ab1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3271:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3285:4:30","type":""}],"src":"3120:356:30"},{"body":{"nodeType":"YulBlock","src":"3655:223:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3672:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3683:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3665:6:30"},"nodeType":"YulFunctionCall","src":"3665:21:30"},"nodeType":"YulExpressionStatement","src":"3665:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3706:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3717:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3702:3:30"},"nodeType":"YulFunctionCall","src":"3702:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"3722:2:30","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3695:6:30"},"nodeType":"YulFunctionCall","src":"3695:30:30"},"nodeType":"YulExpressionStatement","src":"3695:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3745:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3756:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3741:3:30"},"nodeType":"YulFunctionCall","src":"3741:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"3761:34:30","type":"","value":"Curve oracle encountered an erro"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3734:6:30"},"nodeType":"YulFunctionCall","src":"3734:62:30"},"nodeType":"YulExpressionStatement","src":"3734:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3816:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3827:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3812:3:30"},"nodeType":"YulFunctionCall","src":"3812:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"3832:3:30","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3805:6:30"},"nodeType":"YulFunctionCall","src":"3805:31:30"},"nodeType":"YulExpressionStatement","src":"3805:31:30"},{"nodeType":"YulAssignment","src":"3845:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3857:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3868:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3853:3:30"},"nodeType":"YulFunctionCall","src":"3853:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3845:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_8f9e5358d341b51c97b2a3f93978ab3e848c05bfd7a5c6e7622242ad80967edf__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3632:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3646:4:30","type":""}],"src":"3481:397:30"},{"body":{"nodeType":"YulBlock","src":"4057:182:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4074:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"4085:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4067:6:30"},"nodeType":"YulFunctionCall","src":"4067:21:30"},"nodeType":"YulExpressionStatement","src":"4067:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4108:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"4119:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4104:3:30"},"nodeType":"YulFunctionCall","src":"4104:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"4124:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4097:6:30"},"nodeType":"YulFunctionCall","src":"4097:30:30"},"nodeType":"YulExpressionStatement","src":"4097:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4147:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"4158:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4143:3:30"},"nodeType":"YulFunctionCall","src":"4143:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"4163:34:30","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4136:6:30"},"nodeType":"YulFunctionCall","src":"4136:62:30"},"nodeType":"YulExpressionStatement","src":"4136:62:30"},{"nodeType":"YulAssignment","src":"4207:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4219:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"4230:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4215:3:30"},"nodeType":"YulFunctionCall","src":"4215:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4207:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4034:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4048:4:30","type":""}],"src":"3883:356:30"},{"body":{"nodeType":"YulBlock","src":"4418:174:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4435:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"4446:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4428:6:30"},"nodeType":"YulFunctionCall","src":"4428:21:30"},"nodeType":"YulExpressionStatement","src":"4428:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4469:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"4480:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4465:3:30"},"nodeType":"YulFunctionCall","src":"4465:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"4485:2:30","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4458:6:30"},"nodeType":"YulFunctionCall","src":"4458:30:30"},"nodeType":"YulExpressionStatement","src":"4458:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4508:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"4519:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4504:3:30"},"nodeType":"YulFunctionCall","src":"4504:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"4524:26:30","type":"","value":"underlying token is null"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4497:6:30"},"nodeType":"YulFunctionCall","src":"4497:54:30"},"nodeType":"YulExpressionStatement","src":"4497:54:30"},{"nodeType":"YulAssignment","src":"4560:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4572:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"4583:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4568:3:30"},"nodeType":"YulFunctionCall","src":"4568:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4560:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_b4e8d318e521cf88468394cc0c9b8c9007ea07e1e8e63b993c5168c9f567f309__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4395:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4409:4:30","type":""}],"src":"4244:348:30"},{"body":{"nodeType":"YulBlock","src":"4698:76:30","statements":[{"nodeType":"YulAssignment","src":"4708:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4720:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"4731:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4716:3:30"},"nodeType":"YulFunctionCall","src":"4716:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4708:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4750:9:30"},{"name":"value0","nodeType":"YulIdentifier","src":"4761:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4743:6:30"},"nodeType":"YulFunctionCall","src":"4743:25:30"},"nodeType":"YulExpressionStatement","src":"4743:25:30"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4667:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4678:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4689:4:30","type":""}],"src":"4597:177:30"},{"body":{"nodeType":"YulBlock","src":"4826:189:30","statements":[{"body":{"nodeType":"YulBlock","src":"4865:115:30","statements":[{"expression":{"arguments":[{"name":"ret","nodeType":"YulIdentifier","src":"4886:3:30"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4895:3:30","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4900:10:30","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4891:3:30"},"nodeType":"YulFunctionCall","src":"4891:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4879:6:30"},"nodeType":"YulFunctionCall","src":"4879:33:30"},"nodeType":"YulExpressionStatement","src":"4879:33:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4932:1:30","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4935:4:30","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4925:6:30"},"nodeType":"YulFunctionCall","src":"4925:15:30"},"nodeType":"YulExpressionStatement","src":"4925:15:30"},{"expression":{"arguments":[{"name":"ret","nodeType":"YulIdentifier","src":"4960:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"4965:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4953:6:30"},"nodeType":"YulFunctionCall","src":"4953:17:30"},"nodeType":"YulExpressionStatement","src":"4953:17:30"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4842:5:30"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4853:1:30","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4849:3:30"},"nodeType":"YulFunctionCall","src":"4849:6:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4839:2:30"},"nodeType":"YulFunctionCall","src":"4839:17:30"},"nodeType":"YulIf","src":"4836:2:30"},{"nodeType":"YulAssignment","src":"4989:20:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5000:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"5007:1:30","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4996:3:30"},"nodeType":"YulFunctionCall","src":"4996:13:30"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"4989:3:30"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4808:5:30","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"4818:3:30","type":""}],"src":"4779:236:30"},{"body":{"nodeType":"YulBlock","src":"5067:86:30","statements":[{"body":{"nodeType":"YulBlock","src":"5131:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5140:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5143:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5133:6:30"},"nodeType":"YulFunctionCall","src":"5133:12:30"},"nodeType":"YulExpressionStatement","src":"5133:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5090:5:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5101:5:30"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5116:3:30","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5121:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5112:3:30"},"nodeType":"YulFunctionCall","src":"5112:11:30"},{"kind":"number","nodeType":"YulLiteral","src":"5125:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5108:3:30"},"nodeType":"YulFunctionCall","src":"5108:19:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5097:3:30"},"nodeType":"YulFunctionCall","src":"5097:31:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5087:2:30"},"nodeType":"YulFunctionCall","src":"5087:42:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5080:6:30"},"nodeType":"YulFunctionCall","src":"5080:50:30"},"nodeType":"YulIf","src":"5077:2:30"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5056:5:30","type":""}],"src":"5020:133:30"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value1, value1) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value1, value1) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value1, value1) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(value1, value1) }\n        if gt(add(add(_2, mul(length, 32)), 32), dataEnd) { revert(value1, value1) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_t_array$_t_uint256_$dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := end\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_array$_t_uint256_$dyn_memory_ptr__to_t_address_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_t_array$_t_uint256_$dyn(value1, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_t_array$_t_uint256_$dyn(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_49a2bac861dd4380d6fd0d823ee0721ff11ba3d1e715eb7ddae8f9170b277ab1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"aave oracle encountered an error\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8f9e5358d341b51c97b2a3f93978ab3e848c05bfd7a5c6e7622242ad80967edf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Curve oracle encountered an erro\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b4e8d318e521cf88468394cc0c9b8c9007ea07e1e8e63b993c5168c9f567f309__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"underlying token is null\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(ret, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(ret, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}","id":30,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"2576":[{"length":32,"start":929},{"length":32,"start":2112}],"2578":[{"length":32,"start":653},{"length":32,"start":988}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b146101065780639d23d9f21461010e578063b3596f071461012e578063e19f470014610141578063f2fde38b146101495761009e565b8063170aee73146100a35780631a5fa2e3146100b85780636210308c146100cb578063715018a6146100e95780638c89b64f146100f1575b600080fd5b6100b66100b1366004610966565b61015c565b005b6100b66100c6366004610966565b6101a6565b6100d36101fd565b6040516100e09190610a66565b60405180910390f35b6100b661020c565b6100f961028b565b6040516100e09190610be1565b6100d36102af565b61012161011c3660046109a5565b6102be565b6040516100e09190610aa6565b6100f961013c366004610966565b61039d565b6100d361083e565b6100b6610157366004610966565b610862565b610164610918565b6000546001600160a01b0390811691161461019a5760405162461bcd60e51b815260040161019190610b75565b60405180910390fd5b6101a38161091c565b50565b6101ae610918565b6000546001600160a01b039081169116146101db5760405162461bcd60e51b815260040161019190610b75565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6002546001600160a01b031690565b610214610918565b6000546001600160a01b039081169116146102415760405162461bcd60e51b815260040161019190610b75565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b031690565b606060008267ffffffffffffffff8111156102e957634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610312578160200160208202803683370190505b50905060005b838110156103955761035885858381811061034357634e487b7160e01b600052603260045260246000fd5b905060200201602081019061013c9190610966565b82828151811061037857634e487b7160e01b600052603260045260246000fd5b60209081029190910101528061038d81610bea565b915050610318565b509392505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316141561040057507f0000000000000000000000000000000000000000000000000000000000000000610839565b6001600160a01b03808316600090815260036020908152604080832054909316808352600490915291812054908167ffffffffffffffff81111561045457634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561047d578160200160208202803683370190505b50905060005b82811015610710576001600160a01b03808516600090815260056020908152604080832085845290915281205490911690736c3f90f043a72fa612cbac8115ee7e52bde6e49082141561055d57600160009054906101000a90046001600160a01b03166001600160a01b031663992ecae76040518163ffffffff1660e01b815260040160206040518083038186803b15801561051e57600080fd5b505afa158015610532573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105569190610989565b90506105e6565b600160009054906101000a90046001600160a01b03166001600160a01b031663f139dc816040518163ffffffff1660e01b815260040160206040518083038186803b1580156105ab57600080fd5b505afa1580156105bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e39190610989565b90505b6001600160a01b03821661060c5760405162461bcd60e51b815260040161019190610baa565b60405163b3596f0760e01b81526001600160a01b0382169063b3596f0790610638908590600401610a66565b60206040518083038186803b15801561065057600080fd5b505afa158015610664573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106889190610a14565b8484815181106106a857634e487b7160e01b600052603260045260246000fd5b60200260200101818152505060008484815181106106d657634e487b7160e01b600052603260045260246000fd5b6020026020010151116106fb5760405162461bcd60e51b815260040161019190610aff565b5050808061070890610bea565b915050610483565b506001546040805163ba61fe3160e01b815290516000926001600160a01b03169163ba61fe31916004808301926020929190829003018186803b15801561075657600080fd5b505afa15801561076a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078e9190610989565b90506000816001600160a01b0316636dcb6a3286856040518363ffffffff1660e01b81526004016107c0929190610a7a565b60206040518083038186803b1580156107d857600080fd5b505afa1580156107ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108109190610a14565b9050600081116108325760405162461bcd60e51b815260040161019190610b34565b9450505050505b919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b61086a610918565b6000546001600160a01b039081169116146108975760405162461bcd60e51b815260040161019190610b75565b6001600160a01b0381166108bd5760405162461bcd60e51b815260040161019190610ab9565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b600280546001600160a01b0319166001600160a01b0383169081179091556040517fce7a780d33665b1ea097af5f155e3821b809ecbaa839d3b33aa83ba28168cefb90600090a250565b600060208284031215610977578081fd5b813561098281610c11565b9392505050565b60006020828403121561099a578081fd5b815161098281610c11565b600080602083850312156109b7578081fd5b823567ffffffffffffffff808211156109ce578283fd5b818501915085601f8301126109e1578283fd5b8135818111156109ef578384fd5b8660208083028501011115610a02578384fd5b60209290920196919550909350505050565b600060208284031215610a25578081fd5b5051919050565b6000815180845260208085019450808401835b83811015610a5b57815187529582019590820190600101610a3f565b509495945050505050565b6001600160a01b0391909116815260200190565b6001600160a01b0383168152604060208201819052600090610a9e90830184610a2c565b949350505050565b6000602082526109826020830184610a2c565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f61617665206f7261636c6520656e636f756e746572656420616e206572726f72604082015260600190565b60208082526021908201527f4375727665206f7261636c6520656e636f756e746572656420616e206572726f6040820152603960f91b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526018908201527f756e6465726c79696e6720746f6b656e206973206e756c6c0000000000000000604082015260600190565b90815260200190565b6000600019821415610c0a57634e487b7160e01b81526011600452602481fd5b5060010190565b6001600160a01b03811681146101a357600080fdfea264697066735822122005802d484c2c9b8f980a0a06cf81ade4476affc1b58e7da6e0fdd71cf1440e6564736f6c63430008000033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x9D23D9F2 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0xB3596F07 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0xE19F4700 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x149 JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x170AEE73 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x1A5FA2E3 EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x6210308C EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x8C89B64F EQ PUSH2 0xF1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0xB1 CALLDATASIZE PUSH1 0x4 PUSH2 0x966 JUMP JUMPDEST PUSH2 0x15C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB6 PUSH2 0xC6 CALLDATASIZE PUSH1 0x4 PUSH2 0x966 JUMP JUMPDEST PUSH2 0x1A6 JUMP JUMPDEST PUSH2 0xD3 PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0xA66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB6 PUSH2 0x20C JUMP JUMPDEST PUSH2 0xF9 PUSH2 0x28B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0xBE1 JUMP JUMPDEST PUSH2 0xD3 PUSH2 0x2AF JUMP JUMPDEST PUSH2 0x121 PUSH2 0x11C CALLDATASIZE PUSH1 0x4 PUSH2 0x9A5 JUMP JUMPDEST PUSH2 0x2BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0xAA6 JUMP JUMPDEST PUSH2 0xF9 PUSH2 0x13C CALLDATASIZE PUSH1 0x4 PUSH2 0x966 JUMP JUMPDEST PUSH2 0x39D JUMP JUMPDEST PUSH2 0xD3 PUSH2 0x83E JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x157 CALLDATASIZE PUSH1 0x4 PUSH2 0x966 JUMP JUMPDEST PUSH2 0x862 JUMP JUMPDEST PUSH2 0x164 PUSH2 0x918 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x19A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x191 SWAP1 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A3 DUP2 PUSH2 0x91C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1AE PUSH2 0x918 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x191 SWAP1 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x214 PUSH2 0x918 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x241 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x191 SWAP1 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x312 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x395 JUMPI PUSH2 0x358 DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x343 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x966 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x378 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x38D DUP2 PUSH2 0xBEA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x318 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x400 JUMPI POP PUSH32 0x0 PUSH2 0x839 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD SWAP1 SWAP4 AND DUP1 DUP4 MSTORE PUSH1 0x4 SWAP1 SWAP2 MSTORE SWAP2 DUP2 KECCAK256 SLOAD SWAP1 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x454 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x47D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x710 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND SWAP1 PUSH20 0x6C3F90F043A72FA612CBAC8115EE7E52BDE6E490 DUP3 EQ ISZERO PUSH2 0x55D JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x992ECAE7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x51E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x532 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x556 SWAP2 SWAP1 PUSH2 0x989 JUMP JUMPDEST SWAP1 POP PUSH2 0x5E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF139DC81 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5E3 SWAP2 SWAP1 PUSH2 0x989 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x60C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x191 SWAP1 PUSH2 0xBAA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB3596F07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xB3596F07 SWAP1 PUSH2 0x638 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0xA66 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x650 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x664 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x688 SWAP2 SWAP1 PUSH2 0xA14 JUMP JUMPDEST DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x6A8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x6D6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT PUSH2 0x6FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x191 SWAP1 PUSH2 0xAFF JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x708 SWAP1 PUSH2 0xBEA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x483 JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xBA61FE31 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xBA61FE31 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x756 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x76A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x78E SWAP2 SWAP1 PUSH2 0x989 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6DCB6A32 DUP7 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C0 SWAP3 SWAP2 SWAP1 PUSH2 0xA7A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x810 SWAP2 SWAP1 PUSH2 0xA14 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x832 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x191 SWAP1 PUSH2 0xB34 JUMP JUMPDEST SWAP5 POP POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x86A PUSH2 0x918 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x897 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x191 SWAP1 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x8BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x191 SWAP1 PUSH2 0xAB9 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xCE7A780D33665B1EA097AF5F155E3821B809ECBAA839D3B33AA83BA28168CEFB SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x977 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x982 DUP2 PUSH2 0xC11 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x99A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x982 DUP2 PUSH2 0xC11 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9B7 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x9CE JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x9E1 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x9EF JUMPI DUP4 DUP5 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP1 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0xA02 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA25 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA5B JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xA3F JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xA9E SWAP1 DUP4 ADD DUP5 PUSH2 0xA2C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x982 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA2C JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x61617665206F7261636C6520656E636F756E746572656420616E206572726F72 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x4375727665206F7261636C6520656E636F756E746572656420616E206572726F PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x756E6465726C79696E6720746F6B656E206973206E756C6C0000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0xC0A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1A3 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV DUP1 0x2D 0x48 0x4C 0x2C SWAP12 DUP16 SWAP9 EXP EXP MOD 0xCF DUP2 0xAD 0xE4 SELFBALANCE PUSH11 0xFFC1B58E7DA6E0FDD71CF1 DIFFICULTY 0xE PUSH6 0x64736F6C6343 STOP ADDMOD STOP STOP CALLER ","sourceMap":"1362:8923:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7016:121;;;;;;:::i;:::-;;:::i;:::-;;3339:156;;;;;;:::i;:::-;;:::i;10174:109::-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1697:145:9;;;:::i;1857:43:21:-;;;:::i;:::-;;;;;;;:::i;1074:77:9:-;;;:::i;9725:329:21:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;7541:2057::-;;;;;;:::i;:::-;;:::i;1813:38::-;;;:::i;1991:274:9:-;;;;;;:::i;:::-;;:::i;7016:121:21:-;1288:12:9;:10;:12::i;:::-;1278:6;;-1:-1:-1;;;;;1278:6:9;;;:22;;;1270:67;;;;-1:-1:-1;;;1270:67:9;;;;;;;:::i;:::-;;;;;;;;;7096:34:21::1;7115:14;7096:18;:34::i;:::-;7016:121:::0;:::o;3339:156::-;1288:12:9;:10;:12::i;:::-;1278:6;;-1:-1:-1;;;;;1278:6:9;;;:22;;;1270:67;;;;-1:-1:-1;;;1270:67:9;;;;;;;:::i;:::-;3421:18:21::1;:67:::0;;-1:-1:-1;;;;;;3421:67:21::1;-1:-1:-1::0;;;;;3421:67:21;;;::::1;::::0;;;::::1;::::0;;3339:156::o;10174:109::-;10260:15;;-1:-1:-1;;;;;10260:15:21;10174:109;:::o;1697:145:9:-;1288:12;:10;:12::i;:::-;1278:6;;-1:-1:-1;;;;;1278:6:9;;;:22;;;1270:67;;;;-1:-1:-1;;;1270:67:9;;;;;;;:::i;:::-;1803:1:::1;1787:6:::0;;1766:40:::1;::::0;-1:-1:-1;;;;;1787:6:9;;::::1;::::0;1766:40:::1;::::0;1803:1;;1766:40:::1;1833:1;1816:19:::0;;-1:-1:-1;;;;;;1816:19:9::1;::::0;;1697:145::o;1857:43:21:-;;;:::o;1074:77:9:-;1112:7;1138:6;-1:-1:-1;;;;;1138:6:9;1074:77;:::o;9725:329:21:-;9824:16;9856:23;9896:6;9882:28;;;;;;-1:-1:-1;;;9882:28:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9882:28:21;;9856:54;;9925:9;9920:105;9940:17;;;9920:105;;;9990:24;10004:6;;10011:1;10004:9;;;;;-1:-1:-1;;;10004:9:21;;;;;;;;;;;;;;;;;;;;;;:::i;9990:24::-;9978:6;9985:1;9978:9;;;;;;-1:-1:-1;;;9978:9:21;;;;;;;;;;;;;;;;;;:36;9959:3;;;;:::i;:::-;;;;9920:105;;;-1:-1:-1;10041:6:21;9725:329;-1:-1:-1;;;9725:329:21:o;7541:2057::-;7678:7;7710:13;-1:-1:-1;;;;;7701:22:21;:5;-1:-1:-1;;;;;7701:22:21;;7697:78;;;-1:-1:-1;7746:18:21;7739:25;;7697:78;-1:-1:-1;;;;;8168:20:21;;;8153:12;8168:20;;;:13;:20;;;;;;;;;;;;8348:14;;;:8;:14;;;;;;;;;8399:24;;;;;;-1:-1:-1;;;8399:24:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8399:24:21;;8373:50;;8439:9;8434:856;8458:9;8454:1;:13;8434:856;;;-1:-1:-1;;;;;8509:21:21;;;8488:18;8509:21;;;:15;:21;;;;;;;;:24;;;;;;;;;;;;;8609:42;8595:56;;8591:478;;;8839:18;;;;;;;;;-1:-1:-1;;;;;8839:18:21;-1:-1:-1;;;;;8839:45:21;;:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8785:119;;8591:478;;;8997:18;;;;;;;;;-1:-1:-1;;;;;8997:18:21;-1:-1:-1;;;;;8997:37:21;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8943:111;;8591:478;-1:-1:-1;;;;;9091:24:21;;9083:61;;;;-1:-1:-1;;;9083:61:21;;;;;;;:::i;:::-;9170:37;;-1:-1:-1;;;9170:37:21;;-1:-1:-1;;;;;9170:25:21;;;;;:37;;9196:10;;9170:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9158:6;9165:1;9158:9;;;;;;-1:-1:-1;;;9158:9:21;;;;;;;;;;;;;;:49;;;;;9241:1;9229:6;9236:1;9229:9;;;;;;-1:-1:-1;;;9229:9:21;;;;;;;;;;;;;;;:13;9221:58;;;;-1:-1:-1;;;9221:58:21;;;;;;;:::i;:::-;8434:856;;8469:3;;;;;:::i;:::-;;;;8434:856;;;-1:-1:-1;9348:18:21;;:40;;;-1:-1:-1;;;9348:40:21;;;;9300:19;;-1:-1:-1;;;;;9348:18:21;;:38;;:40;;;;;;;;;;;;;;:18;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9300:98;;9409:13;9425:6;-1:-1:-1;;;;;9425:16:21;;9442:4;9448:6;9425:30;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9409:46;;9530:1;9522:5;:9;9514:55;;;;-1:-1:-1;;;9514:55:21;;;;;;;:::i;:::-;9586:5;-1:-1:-1;;;;;7541:2057:21;;;;:::o;1813:38::-;;;:::o;1991:274:9:-;1288:12;:10;:12::i;:::-;1278:6;;-1:-1:-1;;;;;1278:6:9;;;:22;;;1270:67;;;;-1:-1:-1;;;1270:67:9;;;;;;;:::i;:::-;-1:-1:-1;;;;;2092:22:9;::::1;2071:107;;;;-1:-1:-1::0;;;2071:107:9::1;;;;;;;:::i;:::-;2214:6;::::0;;2193:38:::1;::::0;-1:-1:-1;;;;;2193:38:9;;::::1;::::0;2214:6;::::1;::::0;2193:38:::1;::::0;::::1;2241:6;:17:::0;;-1:-1:-1;;;;;;2241:17:9::1;-1:-1:-1::0;;;;;2241:17:9;;;::::1;::::0;;;::::1;::::0;;1991:274::o;590:96:6:-;669:10;590:96;:::o;7267:182:21:-;7338:15;:52;;-1:-1:-1;;;;;;7338:52:21;-1:-1:-1;;;;;7338:52:21;;;;;;;;7405:37;;;;-1:-1:-1;;7405:37:21;7267:182;:::o;14:259:30:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:33;237:5;210:33;:::i;:::-;262:5;84:189;-1:-1:-1;;;84:189:30:o;278:263::-;;401:2;389:9;380:7;376:23;372:32;369:2;;;422:6;414;407:22;369:2;459:9;453:16;478:33;505:5;478:33;:::i;546:666::-;;;693:2;681:9;672:7;668:23;664:32;661:2;;;714:6;706;699:22;661:2;759:9;746:23;788:18;829:2;821:6;818:14;815:2;;;850:6;842;835:22;815:2;893:6;882:9;878:22;868:32;;938:7;931:4;927:2;923:13;919:27;909:2;;965:6;957;950:22;909:2;1010;997:16;1036:2;1028:6;1025:14;1022:2;;;1057:6;1049;1042:22;1022:2;1116:7;1111:2;1105;1097:6;1093:15;1089:2;1085:24;1081:33;1078:46;1075:2;;;1142:6;1134;1127:22;1075:2;1178;1170:11;;;;;1200:6;;-1:-1:-1;651:561:30;;-1:-1:-1;;;;651:561:30:o;1217:194::-;;1340:2;1328:9;1319:7;1315:23;1311:32;1308:2;;;1361:6;1353;1346:22;1308:2;-1:-1:-1;1389:16:30;;1298:113;-1:-1:-1;1298:113:30:o;1416:443::-;;1513:5;1507:12;1540:6;1535:3;1528:19;1566:4;1595:2;1590:3;1586:12;1579:19;;1632:2;1625:5;1621:14;1653:3;1665:169;1679:6;1676:1;1673:13;1665:169;;;1740:13;;1728:26;;1774:12;;;;1809:15;;;;1701:1;1694:9;1665:169;;;-1:-1:-1;1850:3:30;;1483:376;-1:-1:-1;;;;;1483:376:30:o;1864:203::-;-1:-1:-1;;;;;2028:32:30;;;;2010:51;;1998:2;1983:18;;1965:102::o;2072:364::-;-1:-1:-1;;;;;2279:32:30;;2261:51;;2348:2;2343;2328:18;;2321:30;;;2072:364;;2368:62;;2411:18;;2403:6;2368:62;:::i;:::-;2360:70;2251:185;-1:-1:-1;;;;2251:185:30:o;2441:267::-;;2620:2;2609:9;2602:21;2640:62;2698:2;2687:9;2683:18;2675:6;2640:62;:::i;2713:402::-;2915:2;2897:21;;;2954:2;2934:18;;;2927:30;2993:34;2988:2;2973:18;;2966:62;-1:-1:-1;;;3059:2:30;3044:18;;3037:36;3105:3;3090:19;;2887:228::o;3120:356::-;3322:2;3304:21;;;3341:18;;;3334:30;3400:34;3395:2;3380:18;;3373:62;3467:2;3452:18;;3294:182::o;3481:397::-;3683:2;3665:21;;;3722:2;3702:18;;;3695:30;3761:34;3756:2;3741:18;;3734:62;-1:-1:-1;;;3827:2:30;3812:18;;3805:31;3868:3;3853:19;;3655:223::o;3883:356::-;4085:2;4067:21;;;4104:18;;;4097:30;4163:34;4158:2;4143:18;;4136:62;4230:2;4215:18;;4057:182::o;4244:348::-;4446:2;4428:21;;;4485:2;4465:18;;;4458:30;4524:26;4519:2;4504:18;;4497:54;4583:2;4568:18;;4418:174::o;4597:177::-;4743:25;;;4731:2;4716:18;;4698:76::o;4779:236::-;;-1:-1:-1;;4839:17:30;;4836:2;;;-1:-1:-1;;;4879:33:30;;4935:4;4932:1;4925:15;4965:4;4886:3;4953:17;4836:2;-1:-1:-1;5007:1:30;4996:13;;4826:189::o;5020:133::-;-1:-1:-1;;;;;5097:31:30;;5087:42;;5077:2;;5143:1;5140;5133:12"},"gasEstimates":{"creation":{"codeDepositCost":"632800","executionCost":"infinite","totalCost":"infinite"},"external":{"BASE_CURRENCY()":"infinite","BASE_CURRENCY_UNIT()":"infinite","getAssetPrice(address)":"infinite","getAssetsPrices(address[])":"infinite","getFallbackOracle()":"1115","owner()":"1070","renounceOwnership()":"24271","setAddressProvider(address)":"22067","setFallbackOracle(address)":"infinite","transferOwnership(address)":"24521"},"internal":{"_setFallbackOracle(address)":"22026","initializeMappings()":"infinite"}},"methodIdentifiers":{"BASE_CURRENCY()":"e19f4700","BASE_CURRENCY_UNIT()":"8c89b64f","getAssetPrice(address)":"b3596f07","getAssetsPrices(address[])":"9d23d9f2","getFallbackOracle()":"6210308c","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setAddressProvider(address)":"1a5fa2e3","setFallbackOracle(address)":"170aee73","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressProvider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fallbackOracle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseCurrency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"baseCurrencyUnit\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"AssetSourceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"baseCurrency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseCurrencyUnit\",\"type\":\"uint256\"}],\"name\":\"BaseCurrencySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fallbackOracle\",\"type\":\"address\"}],\"name\":\"FallbackOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BASE_CURRENCY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BASE_CURRENCY_UNIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"name\":\"getAssetsPrices\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFallbackOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressProvider\",\"type\":\"address\"}],\"name\":\"setAddressProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fallbackOracle\",\"type\":\"address\"}],\"name\":\"setFallbackOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"addressProvider\":\"The address of the vmex address provider (not the curve address provider)\",\"baseCurrency\":\"the base currency used for the price quotes. If USD is used, base currency is 0x0\",\"baseCurrencyUnit\":\"the unit of the base currency\",\"fallbackOracle\":\"The address of the fallback oracle to use if the data of an        aggregator is not consistent\"}},\"getAssetPrice(address)\":{\"params\":{\"asset\":\"The asset address\"}},\"getAssetsPrices(address[])\":{\"params\":{\"assets\":\"The list of assets addresses\"}},\"getFallbackOracle()\":{\"returns\":{\"_0\":\"address The addres of the fallback oracle\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setFallbackOracle(address)\":{\"params\":{\"fallbackOracle\":\"The address of the fallbackOracle\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"AaveOracle\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor\"},\"getAssetPrice(address)\":{\"notice\":\"Gets an asset price by address\"},\"getAssetsPrices(address[])\":{\"notice\":\"Gets a list of prices from a list of assets addresses\"},\"getFallbackOracle()\":{\"notice\":\"Gets the address of the fallback oracle\"},\"setFallbackOracle(address)\":{\"notice\":\"Sets the fallbackOracle - Callable only by the Aave governance\"}},\"notice\":\"Proxy smart contract to get the price of an asset from a price source, with Chainlink Aggregator         smart contracts as primary option - If the returned price by a Chainlink aggregator is <= 0, the call is forwarded to a fallbackOracle - Owned by the Aave governance system, allowed to add sources for assets, replace them   and change the fallbackOracle\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracles/CurveWrapper.sol\":\"CurveWrapper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/Address.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\\n        // for accounts without code, i.e. `keccak256('')`\\n        // bytes32 codehash;\\n        // bytes32 accountHash =\\n        //     0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\n        // // solhint-disable-next-line no-inline-assembly\\n        // assembly {\\n        //     codehash := extcodehash(account)\\n        // }\\n        // return (codehash != accountHash && codehash != 0x0);\\n        return account.code.length > 0; //updated\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(\\n            address(this).balance >= amount,\\n            \\\"Address: insufficient balance\\\"\\n        );\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(\\n            success,\\n            \\\"Address: unable to send value, recipient may have reverted\\\"\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x37523692d5b121789b70f518a1639d6a978d5f863ae026b16cc45b823eecf157\",\"license\":\"agpl-3.0\"},\"contracts/dependencies/openzeppelin/contracts/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x68bfa0a768a2c75bcc8ea4588200f8f78d5b20a785189855b4b301770db578cf\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount)\\n        external\\n        returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n}\\n\",\"keccak256\":\"0x6a0e7bdec11b28b6b88f25301cd51477bd0025846062465a158eee1144f10bd3\",\"license\":\"agpl-3.0\"},\"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0;\\n\\nimport \\\"./Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\ncontract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(\\n        address indexed previousOwner,\\n        address indexed newOwner\\n    );\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(\\n            newOwner != address(0),\\n            \\\"Ownable: new owner is the zero address\\\"\\n        );\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x27577f376012a863c1c6f74048b33a256a5521baa56167d27bc52d90a87fb1cb\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/contracts/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {SafeMath} from \\\"./SafeMath.sol\\\";\\nimport {Address} from \\\"./Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        callOptionalReturn(\\n            token,\\n            abi.encodeWithSelector(token.transfer.selector, to, value)\\n        );\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        callOptionalReturn(\\n            token,\\n            abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\\n        );\\n    }\\n\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        callOptionalReturn(\\n            token,\\n            abi.encodeWithSelector(token.approve.selector, spender, value)\\n        );\\n    }\\n\\n    function callOptionalReturn(IERC20 token, bytes memory data) private {\\n        require(address(token).isContract(), \\\"SafeERC20: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        require(success, \\\"SafeERC20: low-level call failed\\\");\\n\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(\\n                abi.decode(returndata, (bool)),\\n                \\\"SafeERC20: ERC20 operation did not succeed\\\"\\n            );\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xb4f0a6930495daa6a124f1183b6caee5dc8283b230fa0d51ae90322f7ba24aad\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b)\\n        internal\\n        pure\\n        returns (bool, uint256)\\n    {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b)\\n        internal\\n        pure\\n        returns (bool, uint256)\\n    {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b)\\n        internal\\n        pure\\n        returns (bool, uint256)\\n    {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b)\\n        internal\\n        pure\\n        returns (bool, uint256)\\n    {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b)\\n        internal\\n        pure\\n        returns (bool, uint256)\\n    {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x92977dbde9b82328cac05a270258b1e93c9a0e1d4851786aac4d86e916bd54ca\",\"license\":\"MIT\"},\"contracts/interfaces/IChainlinkAggregator.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\ninterface IChainlinkAggregator {\\n    function decimals() external view returns (uint8);\\n\\n    function latestAnswer() external view returns (int256);\\n\\n    function latestTimestamp() external view returns (uint256);\\n\\n    function latestRound() external view returns (uint256);\\n\\n    function getAnswer(uint256 roundId) external view returns (int256);\\n\\n    function getTimestamp(uint256 roundId) external view returns (uint256);\\n\\n    event AnswerUpdated(\\n        int256 indexed current,\\n        uint256 indexed roundId,\\n        uint256 timestamp\\n    );\\n    event NewRound(uint256 indexed roundId, address indexed startedBy);\\n}\\n\",\"keccak256\":\"0xe9b6c1724de16518dadf10284718004691a351a25b5348b81867f5ec58f67642\",\"license\":\"agpl-3.0\"},\"contracts/interfaces/ILendingPoolAddressesProvider.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\nimport {DataTypes} from \\\"../protocol/libraries/types/DataTypes.sol\\\";\\n\\n/**\\n * @title LendingPoolAddressesProvider contract\\n * @dev Main registry of addresses part of or connected to the protocol, including permissioned roles\\n * - Acting also as factory of proxies and admin of those, so with right to change its implementations\\n * - Owned by the Aave Governance\\n * @author Aave\\n **/\\ninterface ILendingPoolAddressesProvider {\\n    event MarketIdSet(string newMarketId);\\n    event LendingPoolUpdated(address indexed newAddress);\\n    event ConfigurationAdminUpdated(address indexed newAddress);\\n    event EmergencyAdminUpdated(address indexed newAddress);\\n    event LendingPoolConfiguratorUpdated(address indexed newAddress);\\n    event LendingPoolCollateralManagerUpdated(address indexed newAddress);\\n    event PriceOracleUpdated(address indexed newAddress);\\n    event CurvePriceOracleUpdated(address indexed newAddress);\\n    event CurvePriceOracleWrapperUpdated(address indexed newAddress);\\n    event CurveAddressProviderUpdated(address indexed newAddress);\\n    event LendingRateOracleUpdated(address indexed newAddress);\\n    event ProxyCreated(bytes32 id, address indexed newAddress);\\n    event AddressSet(bytes32 id, address indexed newAddress, bool hasProxy);\\n\\n    function getMarketId() external view returns (string memory);\\n\\n    function setMarketId(string calldata marketId) external;\\n\\n    function setAddress(bytes32 id, address newAddress) external;\\n\\n    function setAddressAsProxy(bytes32 id, address impl) external;\\n\\n    function getAddress(bytes32 id) external view returns (address);\\n\\n    function getLendingPool() external view returns (address);\\n\\n    function setLendingPoolImpl(address pool) external;\\n\\n    function getLendingPoolConfigurator() external view returns (address);\\n\\n    function setLendingPoolConfiguratorImpl(address configurator) external;\\n\\n    function getLendingPoolCollateralManager() external view returns (address);\\n\\n    function setLendingPoolCollateralManager(address manager) external;\\n\\n    function getPoolAdmin() external view returns (address);\\n\\n    function setPoolAdmin(address admin) external;\\n\\n    function getEmergencyAdmin() external view returns (address);\\n\\n    function setEmergencyAdmin(address admin) external;\\n\\n    function getPriceOracle(DataTypes.ReserveAssetType assetType)\\n        external\\n        view\\n        returns (address);\\n\\n    function getAavePriceOracle() external view returns (address);\\n\\n    function getCurvePriceOracle() external view returns (address);\\n\\n    function getCurvePriceOracleWrapper() external view returns (address);\\n\\n    function getCurveAddressProvider() external view returns (address);\\n\\n    function setAavePriceOracle(address priceOracle) external;\\n\\n    function setCurveAddressProvider(address addressProvider) external;\\n\\n    function setCurvePriceOracle(address priceOracle) external;\\n\\n    function setCurvePriceOracleWrapper(address priceOracle) external;\\n\\n    function getLendingRateOracle() external view returns (address);\\n\\n    function setLendingRateOracle(address lendingRateOracle) external;\\n}\\n\",\"keccak256\":\"0xd05a545a54108bcf8be808763206cadbceefbfdc9d3e0ceff97fbe7e767cfe5e\",\"license\":\"agpl-3.0\"},\"contracts/interfaces/IPriceOracleGetter.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\n/**\\n * @title IPriceOracleGetter interface\\n * @notice Interface for the Aave price oracle.\\n **/\\n\\ninterface IPriceOracleGetter {\\n    /**\\n     * @dev returns the asset price in ETH\\n     * @param asset the address of the asset\\n     * @return the ETH price of the asset\\n     **/\\n    function getAssetPrice(address asset) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xd0ddd343f94683ab5210c629a098a2d306433543e9ac0d6d3841672f8166f260\",\"license\":\"agpl-3.0\"},\"contracts/misc/AaveOracle.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\nimport {Ownable} from \\\"../dependencies/openzeppelin/contracts/Ownable.sol\\\";\\nimport {IERC20} from \\\"../dependencies/openzeppelin/contracts/IERC20.sol\\\";\\n\\nimport {IPriceOracleGetter} from \\\"../interfaces/IPriceOracleGetter.sol\\\";\\nimport {IChainlinkAggregator} from \\\"../interfaces/IChainlinkAggregator.sol\\\";\\nimport {SafeERC20} from \\\"../dependencies/openzeppelin/contracts/SafeERC20.sol\\\";\\n\\n/// @title AaveOracle\\n/// @author Aave\\n/// @notice Proxy smart contract to get the price of an asset from a price source, with Chainlink Aggregator\\n///         smart contracts as primary option\\n/// - If the returned price by a Chainlink aggregator is <= 0, the call is forwarded to a fallbackOracle\\n/// - Owned by the Aave governance system, allowed to add sources for assets, replace them\\n///   and change the fallbackOracle\\ncontract AaveOracle is IPriceOracleGetter, Ownable {\\n    using SafeERC20 for IERC20;\\n\\n    event BaseCurrencySet(\\n        address indexed baseCurrency,\\n        uint256 baseCurrencyUnit\\n    );\\n    event AssetSourceUpdated(address indexed asset, address indexed source);\\n    event FallbackOracleUpdated(address indexed fallbackOracle);\\n\\n    mapping(address => IChainlinkAggregator) private assetsSources;\\n    IPriceOracleGetter private _fallbackOracle;\\n    address public immutable BASE_CURRENCY;\\n    uint256 public immutable BASE_CURRENCY_UNIT;\\n\\n    /// @notice Constructor\\n    /// @param assets The addresses of the assets\\n    /// @param sources The address of the source of each asset\\n    /// @param fallbackOracle The address of the fallback oracle to use if the data of an\\n    ///        aggregator is not consistent\\n    /// @param baseCurrency the base currency used for the price quotes. If USD is used, base currency is 0x0\\n    /// @param baseCurrencyUnit the unit of the base currency\\n    constructor(\\n        address[] memory assets,\\n        address[] memory sources,\\n        address fallbackOracle,\\n        address baseCurrency,\\n        uint256 baseCurrencyUnit\\n    ) public {\\n        _setFallbackOracle(fallbackOracle);\\n        _setAssetsSources(assets, sources);\\n        BASE_CURRENCY = baseCurrency;\\n        BASE_CURRENCY_UNIT = baseCurrencyUnit;\\n        emit BaseCurrencySet(baseCurrency, baseCurrencyUnit);\\n    }\\n\\n    /// @notice External function called by the Aave governance to set or replace sources of assets\\n    /// @param assets The addresses of the assets\\n    /// @param sources The address of the source of each asset\\n    function setAssetSources(\\n        address[] calldata assets,\\n        address[] calldata sources\\n    ) external onlyOwner {\\n        _setAssetsSources(assets, sources);\\n    }\\n\\n    /// @notice Sets the fallbackOracle\\n    /// - Callable only by the Aave governance\\n    /// @param fallbackOracle The address of the fallbackOracle\\n    function setFallbackOracle(address fallbackOracle) external onlyOwner {\\n        _setFallbackOracle(fallbackOracle);\\n    }\\n\\n    /// @notice Internal function to set the sources for each asset\\n    /// @param assets The addresses of the assets\\n    /// @param sources The address of the source of each asset\\n    function _setAssetsSources(\\n        address[] memory assets,\\n        address[] memory sources\\n    ) internal {\\n        require(assets.length == sources.length, \\\"INCONSISTENT_PARAMS_LENGTH\\\");\\n        for (uint256 i = 0; i < assets.length; i++) {\\n            assetsSources[assets[i]] = IChainlinkAggregator(sources[i]);\\n            emit AssetSourceUpdated(assets[i], sources[i]);\\n        }\\n    }\\n\\n    /// @notice Internal function to set the fallbackOracle\\n    /// @param fallbackOracle The address of the fallbackOracle\\n    function _setFallbackOracle(address fallbackOracle) internal {\\n        _fallbackOracle = IPriceOracleGetter(fallbackOracle);\\n        emit FallbackOracleUpdated(fallbackOracle);\\n    }\\n\\n    /// @notice Gets an asset price by address\\n    /// @param asset The asset address\\n    function getAssetPrice(address asset)\\n        public\\n        view\\n        override\\n        returns (uint256)\\n    {\\n        IChainlinkAggregator source = assetsSources[asset];\\n\\n        if (asset == BASE_CURRENCY) {\\n            return BASE_CURRENCY_UNIT;\\n        } else if (address(source) == address(0)) {\\n            return _fallbackOracle.getAssetPrice(asset);\\n        } else {\\n            int256 price = IChainlinkAggregator(source).latestAnswer();\\n            if (price > 0) {\\n                return uint256(price);\\n            } else {\\n                return _fallbackOracle.getAssetPrice(asset);\\n            }\\n        }\\n    }\\n\\n    /// @notice Gets a list of prices from a list of assets addresses\\n    /// @param assets The list of assets addresses\\n    function getAssetsPrices(address[] calldata assets)\\n        external\\n        view\\n        returns (uint256[] memory)\\n    {\\n        uint256[] memory prices = new uint256[](assets.length);\\n        for (uint256 i = 0; i < assets.length; i++) {\\n            prices[i] = getAssetPrice(assets[i]);\\n        }\\n        return prices;\\n    }\\n\\n    /// @notice Gets the address of the source for an asset address\\n    /// @param asset The address of the asset\\n    /// @return address The address of the source\\n    function getSourceOfAsset(address asset) external view returns (address) {\\n        return address(assetsSources[asset]);\\n    }\\n\\n    /// @notice Gets the address of the fallback oracle\\n    /// @return address The addres of the fallback oracle\\n    function getFallbackOracle() external view returns (address) {\\n        return address(_fallbackOracle);\\n    }\\n}\\n\",\"keccak256\":\"0xd6b51453891793a3bdfadfa9dbac1514e5b2eef1ec903cf2ee84cb38f254682a\",\"license\":\"agpl-3.0\"},\"contracts/oracles/CurveWrapper.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\nimport {Ownable} from \\\"../dependencies/openzeppelin/contracts/Ownable.sol\\\";\\nimport {IERC20} from \\\"../dependencies/openzeppelin/contracts/IERC20.sol\\\";\\n\\nimport {IPriceOracleGetter} from \\\"../interfaces/IPriceOracleGetter.sol\\\";\\nimport {SafeERC20} from \\\"../dependencies/openzeppelin/contracts/SafeERC20.sol\\\";\\nimport {AaveOracle} from \\\"../misc/AaveOracle.sol\\\";\\nimport {ILendingPoolAddressesProvider} from \\\"../interfaces/ILendingPoolAddressesProvider.sol\\\";\\nimport {ICurveOracle} from \\\"./interfaces/ICurveOracle.sol\\\";\\n\\n// import {IPriceOracleGetter} from \\\"../interfaces/IPriceOracleGetter.sol\\\";\\n// import {ICurveAddressProvider} from \\\"./interfaces/ICurveAddressProvider.sol\\\";\\n// import {ICurveRegistry} from \\\"./interfaces/ICurveRegistry.sol\\\";\\n\\n/// @title AaveOracle\\n/// @author Aave\\n/// @notice Proxy smart contract to get the price of an asset from a price source, with Chainlink Aggregator\\n///         smart contracts as primary option\\n/// - If the returned price by a Chainlink aggregator is <= 0, the call is forwarded to a fallbackOracle\\n/// - Owned by the Aave governance system, allowed to add sources for assets, replace them\\n///   and change the fallbackOracle\\n\\n//TODO: this contract needs the addressprovider contract to get the addressprovider of the Curve pools (we don't know what network yet)\\ncontract CurveWrapper is IPriceOracleGetter, Ownable {\\n    using SafeERC20 for IERC20;\\n\\n    event BaseCurrencySet(\\n        address indexed baseCurrency,\\n        uint256 baseCurrencyUnit\\n    );\\n    event AssetSourceUpdated(address indexed asset, address indexed source);\\n    event FallbackOracleUpdated(address indexed fallbackOracle);\\n\\n    ILendingPoolAddressesProvider internal _addressesProvider;\\n    IPriceOracleGetter private _fallbackOracle;\\n    address public immutable BASE_CURRENCY;\\n    uint256 public immutable BASE_CURRENCY_UNIT;\\n    mapping(address => address) internal lpTokenToPool;\\n    mapping(address => uint256) internal numCoins; //pool address to number of coins\\n    //underlyingCoins[tricrypto2 pool add][0] gets the address of the first underlying coin\\n    mapping(address => mapping(uint256 => address)) internal underlyingCoins;\\n\\n    /// @notice Constructor\\n    /// @param addressProvider The address of the vmex address provider (not the curve address provider)\\n    /// @param fallbackOracle The address of the fallback oracle to use if the data of an\\n    ///        aggregator is not consistent\\n    /// @param baseCurrency the base currency used for the price quotes. If USD is used, base currency is 0x0\\n    /// @param baseCurrencyUnit the unit of the base currency\\n    constructor(\\n        address addressProvider,\\n        address fallbackOracle, //this will likely not be set for the Curve wrappers, maybe can use the fallback oracles from AaveOracle, but if the pool price cannot be determined then it doesn't matter if the other asset prices can be determined\\n        address baseCurrency,\\n        uint256 baseCurrencyUnit\\n    ) public {\\n        _addressesProvider = ILendingPoolAddressesProvider(addressProvider);\\n        _setFallbackOracle(fallbackOracle);\\n        BASE_CURRENCY = baseCurrency;\\n        BASE_CURRENCY_UNIT = baseCurrencyUnit;\\n        initializeMappings();\\n\\n        emit BaseCurrencySet(baseCurrency, baseCurrencyUnit);\\n    }\\n\\n    function setAddressProvider(address addressProvider) external onlyOwner {\\n        _addressesProvider = ILendingPoolAddressesProvider(addressProvider);\\n    }\\n\\n    function initializeMappings() internal {\\n        //Tricrypto2\\n        lpTokenToPool[\\n            0xc4AD29ba4B3c580e6D59105FFf484999997675Ff\\n        ] = 0xD51a44d3FaE010294C616388b506AcdA1bfAAE46; //Tricrypto2\\n        numCoins[0xD51a44d3FaE010294C616388b506AcdA1bfAAE46] = 3; //3 coins in tricrypto2\\n        underlyingCoins[0xD51a44d3FaE010294C616388b506AcdA1bfAAE46][\\n            0\\n        ] = 0xdAC17F958D2ee523a2206206994597C13D831ec7; //first underlying coin is USDT\\n        underlyingCoins[0xD51a44d3FaE010294C616388b506AcdA1bfAAE46][\\n            1\\n        ] = 0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599; //first underlying coin is WBTC\\n        underlyingCoins[0xD51a44d3FaE010294C616388b506AcdA1bfAAE46][\\n            2\\n        ] = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2; //first underlying coin is WETH\\n\\n        //3pool\\n        lpTokenToPool[\\n            0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490\\n        ] = 0xbEbc44782C7dB0a1A60Cb6fe97d0b483032FF1C7;\\n        numCoins[0xbEbc44782C7dB0a1A60Cb6fe97d0b483032FF1C7] = 3; //3 coins in tricrypto2\\n        underlyingCoins[0xbEbc44782C7dB0a1A60Cb6fe97d0b483032FF1C7][\\n            0\\n        ] = 0x6B175474E89094C44Da98b954EedeAC495271d0F; //first underlying coin is DAI\\n        underlyingCoins[0xbEbc44782C7dB0a1A60Cb6fe97d0b483032FF1C7][\\n            1\\n        ] = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48; //first underlying coin is USDC\\n        underlyingCoins[0xbEbc44782C7dB0a1A60Cb6fe97d0b483032FF1C7][\\n            2\\n        ] = 0xdAC17F958D2ee523a2206206994597C13D831ec7; //first underlying coin is USDT\\n\\n        //StethEth\\n        lpTokenToPool[\\n            0x06325440D014e39736583c165C2963BA99fAf14E\\n        ] = 0xDC24316b9AE028F1497c275EB9192a3Ea0f67022;\\n        numCoins[0xDC24316b9AE028F1497c275EB9192a3Ea0f67022] = 2; //2 coins in StethEth\\n        underlyingCoins[0xDC24316b9AE028F1497c275EB9192a3Ea0f67022][\\n            0\\n        ] = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2; //first underlying coin is WETH\\n        underlyingCoins[0xDC24316b9AE028F1497c275EB9192a3Ea0f67022][\\n            1\\n        ] = 0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84; //first underlying coin is Steth\\n\\n        //fraxusdc\\n        lpTokenToPool[\\n            0x3175Df0976dFA876431C2E9eE6Bc45b65d3473CC\\n        ] = 0xDcEF968d416a41Cdac0ED8702fAC8128A64241A2;\\n        numCoins[0xDcEF968d416a41Cdac0ED8702fAC8128A64241A2] = 2; //2 coins in fraxusdc\\n        underlyingCoins[0xDcEF968d416a41Cdac0ED8702fAC8128A64241A2][\\n            0\\n        ] = 0x853d955aCEf822Db058eb8505911ED77F175b99e; //first underlying coin is frax\\n        underlyingCoins[0xDcEF968d416a41Cdac0ED8702fAC8128A64241A2][\\n            1\\n        ] = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48; //first underlying coin is usdc\\n\\n        //frax3crv\\n        lpTokenToPool[\\n            0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B\\n        ] = 0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B; //same pool and token addresses\\n        numCoins[0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B] = 2; //2 coins in frax + 3crv\\n        underlyingCoins[0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B][\\n            0\\n        ] = 0x853d955aCEf822Db058eb8505911ED77F175b99e; //first underlying coin is frax\\n        underlyingCoins[0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B][\\n            1\\n        ] = 0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490; //first underlying coin is 3crv\\n    }\\n\\n    /// @notice Sets the fallbackOracle\\n    /// - Callable only by the Aave governance\\n    /// @param fallbackOracle The address of the fallbackOracle\\n    function setFallbackOracle(address fallbackOracle) external onlyOwner {\\n        _setFallbackOracle(fallbackOracle);\\n    }\\n\\n    /// @notice Internal function to set the fallbackOracle\\n    /// @param fallbackOracle The address of the fallbackOracle\\n    function _setFallbackOracle(address fallbackOracle) internal {\\n        _fallbackOracle = IPriceOracleGetter(fallbackOracle);\\n        emit FallbackOracleUpdated(fallbackOracle);\\n    }\\n\\n    /// @notice Gets an asset price by address\\n    /// @param asset The asset address\\n    function getAssetPrice(\\n        address asset //this will be the token address, not the pool address\\n    ) public view override returns (uint256) {\\n        if (asset == BASE_CURRENCY) {\\n            return BASE_CURRENCY_UNIT;\\n        }\\n        //need to import the curve address provider interface X\\n        // ICurveAddressProvider provider =\\n        //     ICurveAddressProvider(_addressesProvider.getCurveAddressProvider());\\n        //need to import the registry interface Y\\n        // ICurveRegistry registry = ICurveRegistry(provider.get_registry()); //registry contains the addresses for the pools\\n\\n        address pool = lpTokenToPool[asset]; //asset is the LP token\\n\\n        //TODO: check if we should use underlying or not. [0] is not underlying, [1] includes underlying\\n        uint256 num_coins = numCoins[pool];\\n\\n        uint256[] memory prices = new uint256[](num_coins);\\n\\n        for (uint256 i = 0; i < num_coins; i++) {\\n            address underlying = underlyingCoins[pool][i];\\n            IPriceOracleGetter aave_oracle;\\n            if (underlying == 0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490) {\\n                //this is the only underlying in our supported assets that is a curve token instead of aave token\\n                aave_oracle = IPriceOracleGetter(\\n                    _addressesProvider.getCurvePriceOracleWrapper()\\n                );\\n            } else {\\n                aave_oracle = IPriceOracleGetter(\\n                    _addressesProvider.getAavePriceOracle()\\n                );\\n            }\\n\\n            require(underlying != address(0), \\\"underlying token is null\\\");\\n            prices[i] = aave_oracle.getAssetPrice(underlying);\\n            require(prices[i] > 0, \\\"aave oracle encountered an error\\\");\\n        }\\n\\n        ICurveOracle oracle = ICurveOracle(\\n            _addressesProvider.getCurvePriceOracle()\\n        );\\n\\n        uint256 price = oracle.get_price(pool, prices);\\n        //TODO: incorporate backup oracles here?\\n        require(price > 0, \\\"Curve oracle encountered an error\\\");\\n        return price;\\n    }\\n\\n    /// @notice Gets a list of prices from a list of assets addresses\\n    /// @param assets The list of assets addresses\\n    function getAssetsPrices(address[] calldata assets)\\n        external\\n        view\\n        returns (uint256[] memory)\\n    {\\n        uint256[] memory prices = new uint256[](assets.length);\\n        for (uint256 i = 0; i < assets.length; i++) {\\n            prices[i] = getAssetPrice(assets[i]);\\n        }\\n        return prices;\\n    }\\n\\n    /// @notice Gets the address of the fallback oracle\\n    /// @return address The addres of the fallback oracle\\n    function getFallbackOracle() external view returns (address) {\\n        return address(_fallbackOracle);\\n    }\\n}\\n\",\"keccak256\":\"0x687f53241e016be21f8ec539071154fa9c69fc8113712da1327d40fa312a5ac0\",\"license\":\"agpl-3.0\"},\"contracts/oracles/interfaces/ICurveOracle.sol\":{\"content\":\"pragma solidity >=0.8.0;\\n\\ninterface ICurveOracle {\\n    function get_price(address curve_pool, uint256[] memory prices)\\n        external\\n        view\\n        returns (uint256);\\n}\\n\",\"keccak256\":\"0xdda871f8372f09487237b4047dbbcc88810eb55c357b2e91e13a068e043d4179\"},\"contracts/protocol/libraries/types/DataTypes.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\nlibrary DataTypes {\\n    // refer to the whitepaper, section 1.1 basic concepts for a formal description of these properties.\\n\\n    enum ReserveAssetType {\\n        AAVE,\\n        CURVE\\n    } //update with other possible types of the underlying asset\\n    //AAVE is the original assets in the aave protocol\\n    //CURVE is the new LP tokens we are providing support for\\n\\n    struct AssetData {\\n        uint8 collateralRisk;\\n        bool isLendable;\\n        bool isAllowedCollateralInHigherTranches;\\n        ReserveAssetType assetType;\\n    }\\n\\n    struct TrancheAddress {\\n        uint8 tranche;\\n        address asset;\\n    }\\n    struct ReserveData {\\n        //stores the reserve configuration\\n        ReserveConfigurationMap configuration;\\n        //the liquidity index. Expressed in ray\\n        uint128 liquidityIndex; //not used for nonlendable assets\\n        //variable borrow index. Expressed in ray\\n        uint128 variableBorrowIndex; //not used for nonlendable assets\\n        //the current supply rate. Expressed in ray\\n        uint128 currentLiquidityRate; //deposit APR is defined as liquidityRate / RAY //not used for nonlendable assets\\n        //the current variable borrow rate. Expressed in ray\\n        uint128 currentVariableBorrowRate; //not used for nonlendable assets\\n        //the current stable borrow rate. Expressed in ray\\n        uint128 currentStableBorrowRate; //not used for nonlendable assets\\n        uint40 lastUpdateTimestamp;\\n        //tokens addresses\\n        address aTokenAddress;\\n        address stableDebtTokenAddress; //not used for nonlendable assets\\n        address variableDebtTokenAddress; //not used for nonlendable assets\\n        //address of the interest rate strategy\\n        address interestRateStrategyAddress; //not used for nonlendable assets\\n        //the id of the reserve. Represents the position in the list of the active reserves\\n        uint8 id;\\n        uint8 tranche; //I think this will be used for nonlendable assets, cause your collateral only asset can be placed in higher tranche if necessary\\n    }\\n\\n    struct TrancheMultiplier {\\n        uint256 liquidityRateMultiplier;\\n        uint256 variableBorrowRateMultiplier;\\n        uint256 stableBorrowRateMultiplier;\\n    }\\n\\n    uint8 constant NUM_TRANCHES = 3;\\n\\n    struct ReserveConfigurationMap {\\n        //bit 0-15: LTV\\n        //bit 16-31: Liq. threshold\\n        //bit 32-47: Liq. bonus\\n        //bit 48-55: Decimals\\n        //bit 56: Reserve is active\\n        //bit 57: reserve is frozen\\n        //bit 58: borrowing is enabled\\n        //bit 59: stable rate borrowing enabled\\n        //bit 60-63: reserved\\n        //bit 64-79: reserve factor\\n        uint256 data;\\n    }\\n\\n    struct UserConfigurationMap {\\n        uint256 data;\\n    }\\n\\n    enum InterestRateMode {\\n        NONE,\\n        STABLE,\\n        VARIABLE\\n    }\\n\\n    struct AcctTranche {\\n        address user;\\n        uint8 tranche;\\n    }\\n\\n    struct DepositVars {\\n        address asset;\\n        uint8 tranche;\\n        uint8 risk;\\n        bool allowHigherTranche;\\n        bool isLendable;\\n        TrancheMultiplier t;\\n    }\\n\\n    struct ExecuteBorrowParams {\\n        address asset;\\n        uint8 tranche; //tranche the user wants to borrow out of\\n        address user;\\n        address onBehalfOf;\\n        uint256 amount;\\n        uint256 interestRateMode;\\n        address aTokenAddress;\\n        uint16 referralCode;\\n        bool releaseUnderlying;\\n        uint256 _maxStableRateBorrowSizePercent;\\n        uint256 _reservesCount;\\n        TrancheMultiplier t;\\n    }\\n\\n    struct WithdrawParams {\\n        uint256 _reservesCount;\\n        address asset;\\n        uint8 tranche;\\n        uint256 amount;\\n        address to;\\n        TrancheMultiplier t;\\n    }\\n\\n    struct ValidateSetUseReserveAsCollateralParams {\\n        uint8 risk;\\n        bool allowHigherTranche;\\n    }\\n\\n    struct calculateInterestRatesVars {\\n        address reserve;\\n        address aToken;\\n        uint256 liquidityAdded;\\n        uint256 liquidityTaken;\\n        uint256 reserveFactor;\\n    }\\n\\n    struct flashLoanVars {\\n        address receiverAddress;\\n        DataTypes.TrancheAddress[] assets;\\n        uint256[] amounts;\\n        uint256[] modes;\\n        address onBehalfOf;\\n        bytes params;\\n        uint16 referralCode;\\n        uint256 _flashLoanPremiumTotal;\\n        address oracle;\\n        uint256 _maxStableRateBorrowSizePercent;\\n        uint256 _reservesCount;\\n    }\\n}\\n\",\"keccak256\":\"0x7302b5b5775a9a0019bd062c95d5a94a0b7bfa4553ae872968cf8ecf7c35fc8f\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[{"astId":610,"contract":"contracts/oracles/CurveWrapper.sol:CurveWrapper","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":2571,"contract":"contracts/oracles/CurveWrapper.sol:CurveWrapper","label":"_addressesProvider","offset":0,"slot":"1","type":"t_contract(ILendingPoolAddressesProvider)1879"},{"astId":2574,"contract":"contracts/oracles/CurveWrapper.sol:CurveWrapper","label":"_fallbackOracle","offset":0,"slot":"2","type":"t_contract(IPriceOracleGetter)1891"},{"astId":2582,"contract":"contracts/oracles/CurveWrapper.sol:CurveWrapper","label":"lpTokenToPool","offset":0,"slot":"3","type":"t_mapping(t_address,t_address)"},{"astId":2586,"contract":"contracts/oracles/CurveWrapper.sol:CurveWrapper","label":"numCoins","offset":0,"slot":"4","type":"t_mapping(t_address,t_uint256)"},{"astId":2592,"contract":"contracts/oracles/CurveWrapper.sol:CurveWrapper","label":"underlyingCoins","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_uint256,t_address))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_contract(ILendingPoolAddressesProvider)1879":{"encoding":"inplace","label":"contract ILendingPoolAddressesProvider","numberOfBytes":"20"},"t_contract(IPriceOracleGetter)1891":{"encoding":"inplace","label":"contract IPriceOracleGetter","numberOfBytes":"20"},"t_mapping(t_address,t_address)":{"encoding":"mapping","key":"t_address","label":"mapping(address => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_address,t_mapping(t_uint256,t_address))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => address))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_address)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{"constructor":{"notice":"Constructor"},"getAssetPrice(address)":{"notice":"Gets an asset price by address"},"getAssetsPrices(address[])":{"notice":"Gets a list of prices from a list of assets addresses"},"getFallbackOracle()":{"notice":"Gets the address of the fallback oracle"},"setFallbackOracle(address)":{"notice":"Sets the fallbackOracle - Callable only by the Aave governance"}},"notice":"Proxy smart contract to get the price of an asset from a price source, with Chainlink Aggregator         smart contracts as primary option - If the returned price by a Chainlink aggregator is <= 0, the call is forwarded to a fallbackOracle - Owned by the Aave governance system, allowed to add sources for assets, replace them   and change the fallbackOracle","version":1}}},"contracts/oracles/interfaces/ICurveOracle.sol":{"ICurveOracle":{"abi":[{"inputs":[{"internalType":"address","name":"curve_pool","type":"address"},{"internalType":"uint256[]","name":"prices","type":"uint256[]"}],"name":"get_price","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"get_price(address,uint256[])":"6dcb6a32"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"curve_pool\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"prices\",\"type\":\"uint256[]\"}],\"name\":\"get_price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracles/interfaces/ICurveOracle.sol\":\"ICurveOracle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/oracles/interfaces/ICurveOracle.sol\":{\"content\":\"pragma solidity >=0.8.0;\\n\\ninterface ICurveOracle {\\n    function get_price(address curve_pool, uint256[] memory prices)\\n        external\\n        view\\n        returns (uint256);\\n}\\n\",\"keccak256\":\"0xdda871f8372f09487237b4047dbbcc88810eb55c357b2e91e13a068e043d4179\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/oracles/interfaces/ICurvePoolV1.sol":{"ICurvePool":{"abi":[{"inputs":[{"internalType":"uint256","name":"n","type":"uint256"}],"name":"coins","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"get_virtual_price","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"coins(uint256)":"c6610657","get_virtual_price()":"bb7b8b80"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"n\",\"type\":\"uint256\"}],\"name\":\"coins\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_virtual_price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracles/interfaces/ICurvePoolV1.sol\":\"ICurvePool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/oracles/interfaces/ICurvePoolV1.sol\":{\"content\":\"pragma solidity >=0.8.0;\\n\\ninterface ICurvePool {\\n    function get_virtual_price() external view returns (uint256);\\n\\n    function coins(uint256 n) external view returns (address);\\n}\\n\",\"keccak256\":\"0xb4e7352cd3099cce79a810654c7433e0386b47f364bb5c4f75be5afb8a32b19c\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/oracles/interfaces/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"decimals()":{"details":"Returns the token decimals."},"getOwner()":{"details":"Returns the bep token owner."},"name()":{"details":"Returns the token name."},"symbol()":{"details":"Returns the token symbol."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","getOwner()":"893d20e8","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracles/interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/oracles/interfaces/IERC20.sol\":{\"content\":\"pragma solidity >=0.8.0;\\n\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the token decimals.\\n     */\\n    function decimals() external view returns (uint8);\\n\\n    /**\\n     * @dev Returns the token symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the bep token owner.\\n     */\\n    function getOwner() external view returns (address);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount)\\n        external\\n        returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address _owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n}\\n\",\"keccak256\":\"0x647c6703e37aa5feb0eac5d74f41edb481254bc120e470e336561297b47999a8\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/oracles/libs/FixedPointMathLib.sol":{"FixedPointMathLib":{"abi":[],"devdoc":{"author":"Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/utils/FixedPointMathLib.sol)Inspired by USM (https://github.com/usmfum/USM/blob/master/contracts/WadMath.sol)","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202e20bfde21414dfb255a704c16abb1718d0f80e57300c22a7e4508c11a2bc6d164736f6c63430008000033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E KECCAK256 0xBF 0xDE 0x21 COINBASE 0x4D 0xFB 0x25 GAS PUSH17 0x4C16ABB1718D0F80E57300C22A7E4508C1 BYTE 0x2B 0xC6 0xD1 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ","sourceMap":"338:7688:25:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;338:7688:25;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202e20bfde21414dfb255a704c16abb1718d0f80e57300c22a7e4508c11a2bc6d164736f6c63430008000033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E KECCAK256 0xBF 0xDE 0x21 COINBASE 0x4D 0xFB 0x25 GAS PUSH17 0x4C16ABB1718D0F80E57300C22A7E4508C1 BYTE 0x2B 0xC6 0xD1 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ","sourceMap":"338:7688:25:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"divWadDown(uint256,uint256)":"infinite","divWadUp(uint256,uint256)":"infinite","mulDivDown(uint256,uint256,uint256)":"infinite","mulDivUp(uint256,uint256,uint256)":"infinite","mulWadDown(uint256,uint256)":"infinite","mulWadUp(uint256,uint256)":"infinite","rpow(uint256,uint256,uint256)":"infinite","sqrt(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/utils/FixedPointMathLib.sol)Inspired by USM (https://github.com/usmfum/USM/blob/master/contracts/WadMath.sol)\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Arithmetic library with operations for fixed-point numbers.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracles/libs/FixedPointMathLib.sol\":\"FixedPointMathLib\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/oracles/libs/FixedPointMathLib.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Arithmetic library with operations for fixed-point numbers.\\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/utils/FixedPointMathLib.sol)\\n/// @author Inspired by USM (https://github.com/usmfum/USM/blob/master/contracts/WadMath.sol)\\nlibrary FixedPointMathLib {\\n    /*//////////////////////////////////////////////////////////////\\n                    SIMPLIFIED FIXED POINT OPERATIONS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 internal constant WAD = 1e18; // The scalar of ETH and most ERC20s.\\n\\n    function mulWadDown(uint256 x, uint256 y) internal pure returns (uint256) {\\n        return mulDivDown(x, y, WAD); // Equivalent to (x * y) / WAD rounded down.\\n    }\\n\\n    function mulWadUp(uint256 x, uint256 y) internal pure returns (uint256) {\\n        return mulDivUp(x, y, WAD); // Equivalent to (x * y) / WAD rounded up.\\n    }\\n\\n    function divWadDown(uint256 x, uint256 y) internal pure returns (uint256) {\\n        return mulDivDown(x, WAD, y); // Equivalent to (x * WAD) / y rounded down.\\n    }\\n\\n    function divWadUp(uint256 x, uint256 y) internal pure returns (uint256) {\\n        return mulDivUp(x, WAD, y); // Equivalent to (x * WAD) / y rounded up.\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                    LOW LEVEL FIXED POINT OPERATIONS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function mulDivDown(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 z) {\\n        assembly {\\n            // Store x * y in z for now.\\n            z := mul(x, y)\\n\\n            // Equivalent to require(denominator != 0 && (x == 0 || (x * y) / x == y))\\n            if iszero(\\n                and(\\n                    iszero(iszero(denominator)),\\n                    or(iszero(x), eq(div(z, x), y))\\n                )\\n            ) {\\n                revert(0, 0)\\n            }\\n\\n            // Divide z by the denominator.\\n            z := div(z, denominator)\\n        }\\n    }\\n\\n    function mulDivUp(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 z) {\\n        assembly {\\n            // Store x * y in z for now.\\n            z := mul(x, y)\\n\\n            // Equivalent to require(denominator != 0 && (x == 0 || (x * y) / x == y))\\n            if iszero(\\n                and(\\n                    iszero(iszero(denominator)),\\n                    or(iszero(x), eq(div(z, x), y))\\n                )\\n            ) {\\n                revert(0, 0)\\n            }\\n\\n            // First, divide z - 1 by the denominator and add 1.\\n            // We allow z - 1 to underflow if z is 0, because we multiply the\\n            // end result by 0 if z is zero, ensuring we return 0 if z is zero.\\n            z := mul(iszero(iszero(z)), add(div(sub(z, 1), denominator), 1))\\n        }\\n    }\\n\\n    function rpow(\\n        uint256 x,\\n        uint256 n,\\n        uint256 scalar\\n    ) internal pure returns (uint256 z) {\\n        assembly {\\n            switch x\\n            case 0 {\\n                switch n\\n                case 0 {\\n                    // 0 ** 0 = 1\\n                    z := scalar\\n                }\\n                default {\\n                    // 0 ** n = 0\\n                    z := 0\\n                }\\n            }\\n            default {\\n                switch mod(n, 2)\\n                case 0 {\\n                    // If n is even, store scalar in z for now.\\n                    z := scalar\\n                }\\n                default {\\n                    // If n is odd, store x in z for now.\\n                    z := x\\n                }\\n\\n                // Shifting right by 1 is like dividing by 2.\\n                let half := shr(1, scalar)\\n\\n                for {\\n                    // Shift n right by 1 before looping to halve it.\\n                    n := shr(1, n)\\n                } n {\\n                    // Shift n right by 1 each iteration to halve it.\\n                    n := shr(1, n)\\n                } {\\n                    // Revert immediately if x ** 2 would overflow.\\n                    // Equivalent to iszero(eq(div(xx, x), x)) here.\\n                    if shr(128, x) {\\n                        revert(0, 0)\\n                    }\\n\\n                    // Store x squared.\\n                    let xx := mul(x, x)\\n\\n                    // Round to the nearest number.\\n                    let xxRound := add(xx, half)\\n\\n                    // Revert if xx + half overflowed.\\n                    if lt(xxRound, xx) {\\n                        revert(0, 0)\\n                    }\\n\\n                    // Set x to scaled xxRound.\\n                    x := div(xxRound, scalar)\\n\\n                    // If n is even:\\n                    if mod(n, 2) {\\n                        // Compute z * x.\\n                        let zx := mul(z, x)\\n\\n                        // If z * x overflowed:\\n                        if iszero(eq(div(zx, x), z)) {\\n                            // Revert if x is non-zero.\\n                            if iszero(iszero(x)) {\\n                                revert(0, 0)\\n                            }\\n                        }\\n\\n                        // Round to the nearest number.\\n                        let zxRound := add(zx, half)\\n\\n                        // Revert if zx + half overflowed.\\n                        if lt(zxRound, zx) {\\n                            revert(0, 0)\\n                        }\\n\\n                        // Return properly scaled zxRound.\\n                        z := div(zxRound, scalar)\\n                    }\\n                }\\n            }\\n        }\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                        GENERAL NUMBER UTILITIES\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function sqrt(uint256 x) internal pure returns (uint256 z) {\\n        assembly {\\n            // Start off with z at 1.\\n            z := 1\\n\\n            // Used below to help find a nearby power of 2.\\n            let y := x\\n\\n            // Find the lowest power of 2 that is at least sqrt(x).\\n            if iszero(lt(y, 0x100000000000000000000000000000000)) {\\n                y := shr(128, y) // Like dividing by 2 ** 128.\\n                z := shl(64, z) // Like multiplying by 2 ** 64.\\n            }\\n            if iszero(lt(y, 0x10000000000000000)) {\\n                y := shr(64, y) // Like dividing by 2 ** 64.\\n                z := shl(32, z) // Like multiplying by 2 ** 32.\\n            }\\n            if iszero(lt(y, 0x100000000)) {\\n                y := shr(32, y) // Like dividing by 2 ** 32.\\n                z := shl(16, z) // Like multiplying by 2 ** 16.\\n            }\\n            if iszero(lt(y, 0x10000)) {\\n                y := shr(16, y) // Like dividing by 2 ** 16.\\n                z := shl(8, z) // Like multiplying by 2 ** 8.\\n            }\\n            if iszero(lt(y, 0x100)) {\\n                y := shr(8, y) // Like dividing by 2 ** 8.\\n                z := shl(4, z) // Like multiplying by 2 ** 4.\\n            }\\n            if iszero(lt(y, 0x10)) {\\n                y := shr(4, y) // Like dividing by 2 ** 4.\\n                z := shl(2, z) // Like multiplying by 2 ** 2.\\n            }\\n            if iszero(lt(y, 0x8)) {\\n                // Equivalent to 2 ** z.\\n                z := shl(1, z)\\n            }\\n\\n            // Shifting right by 1 is like dividing by 2.\\n            z := shr(1, add(z, div(x, z)))\\n            z := shr(1, add(z, div(x, z)))\\n            z := shr(1, add(z, div(x, z)))\\n            z := shr(1, add(z, div(x, z)))\\n            z := shr(1, add(z, div(x, z)))\\n            z := shr(1, add(z, div(x, z)))\\n            z := shr(1, add(z, div(x, z)))\\n\\n            // Compute a rounded down version of z.\\n            let zRoundDown := div(x, z)\\n\\n            // If zRoundDown is smaller, use it.\\n            if lt(zRoundDown, z) {\\n                z := zRoundDown\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xcc1552fe037c973c1ab30f607708735de7626eb22dcf6b2a02f2a39fa5d2b965\",\"license\":\"AGPL-3.0-only\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"Arithmetic library with operations for fixed-point numbers.","version":1}}},"contracts/oracles/libs/IntegralMath.sol":{"IntegralMath":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e97615149fe09ecb2ccaa29667e8c1d7873d089867c0adc7be6701c595e2bf9b64736f6c63430008000033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 PUSH23 0x15149FE09ECB2CCAA29667E8C1D7873D089867C0ADC7BE PUSH8 0x1C595E2BF9B6473 PUSH16 0x6C634300080000330000000000000000 ","sourceMap":"99:5952:26:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;99:5952:26;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e97615149fe09ecb2ccaa29667e8c1d7873d089867c0adc7be6701c595e2bf9b64736f6c63430008000033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 PUSH23 0x15149FE09ECB2CCAA29667E8C1D7873D089867C0ADC7BE PUSH8 0x1C595E2BF9B6473 PUSH16 0x6C634300080000330000000000000000 ","sourceMap":"99:5952:26:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"ceilCbrt(uint256)":"infinite","ceilSqrt(uint256)":"infinite","div512(uint256,uint256,uint256)":"infinite","floorCbrt(uint256)":"infinite","floorLog2(uint256)":"infinite","floorSqrt(uint256)":"infinite","inv256(uint256)":"infinite","mul512(uint256,uint256)":"infinite","mulDivC(uint256,uint256,uint256)":"infinite","mulDivF(uint256,uint256,uint256)":"infinite","roundDiv(uint256,uint256)":"infinite","sub512(uint256,uint256,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracles/libs/IntegralMath.sol\":\"IntegralMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/oracles/libs/IntegralMath.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity >=0.8.0;\\n\\nimport \\\"./Uint.sol\\\";\\n\\nlibrary IntegralMath {\\n    /**\\n     * @dev Compute the largest integer smaller than or equal to the binary logarithm of `n`\\n     */\\n    function floorLog2(uint256 n) internal pure returns (uint8) {\\n        unchecked {\\n            uint8 res = 0;\\n\\n            if (n < 256) {\\n                // at most 8 iterations\\n                while (n > 1) {\\n                    n >>= 1;\\n                    res += 1;\\n                }\\n            } else {\\n                // exactly 8 iterations\\n                for (uint8 s = 128; s > 0; s >>= 1) {\\n                    if (n >= 1 << s) {\\n                        n >>= s;\\n                        res |= s;\\n                    }\\n                }\\n            }\\n\\n            return res;\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the largest integer smaller than or equal to the square root of `n`\\n     */\\n    function floorSqrt(uint256 n) internal pure returns (uint256) {\\n        unchecked {\\n            if (n > 0) {\\n                uint256 x = n / 2 + 1;\\n                uint256 y = (x + n / x) / 2;\\n                while (x > y) {\\n                    x = y;\\n                    y = (x + n / x) / 2;\\n                }\\n                return x;\\n            }\\n            return 0;\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the smallest integer larger than or equal to the square root of `n`\\n     */\\n    function ceilSqrt(uint256 n) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 x = floorSqrt(n);\\n            return x**2 == n ? x : x + 1;\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the largest integer smaller than or equal to the cubic root of `n`\\n     */\\n    function floorCbrt(uint256 n) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 x = 0;\\n            for (uint256 y = 1 << 255; y > 0; y >>= 3) {\\n                x <<= 1;\\n                uint256 z = 3 * x * (x + 1) + 1;\\n                if (n / y >= z) {\\n                    n -= y * z;\\n                    x += 1;\\n                }\\n            }\\n            return x;\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the smallest integer larger than or equal to the cubic root of `n`\\n     */\\n    function ceilCbrt(uint256 n) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 x = floorCbrt(n);\\n            return x**3 == n ? x : x + 1;\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the nearest integer to the quotient of `n` and `d` (or `n / d`)\\n     */\\n    function roundDiv(uint256 n, uint256 d) internal pure returns (uint256) {\\n        unchecked {\\n            return n / d + (n % d) / (d - d / 2);\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the largest integer smaller than or equal to `x * y / z`\\n     */\\n    function mulDivF(\\n        uint256 x,\\n        uint256 y,\\n        uint256 z\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            (uint256 xyh, uint256 xyl) = mul512(x, y);\\n            if (xyh == 0) {\\n                // `x * y < 2 ^ 256`\\n                return xyl / z;\\n            }\\n            if (xyh < z) {\\n                // `x * y / z < 2 ^ 256`\\n                uint256 m = mulMod(x, y, z); // `m = x * y % z`\\n                (uint256 nh, uint256 nl) = sub512(xyh, xyl, m); // `n = x * y - m` hence `n / z = floor(x * y / z)`\\n                if (nh == 0) {\\n                    // `n < 2 ^ 256`\\n                    return nl / z;\\n                }\\n                uint256 p = unsafeSub(0, z) & z; // `p` is the largest power of 2 which `z` is divisible by\\n                uint256 q = div512(nh, nl, p); // `n` is divisible by `p` because `n` is divisible by `z` and `z` is divisible by `p`\\n                uint256 r = inv256(z / p); // `z / p = 1 mod 2` hence `inverse(z / p) = 1 mod 2 ^ 256`\\n                return unsafeMul(q, r); // `q * r = (n / p) * inverse(z / p) = n / z`\\n            }\\n            revert(); // `x * y / z >= 2 ^ 256`\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the smallest integer larger than or equal to `x * y / z`\\n     */\\n    function mulDivC(\\n        uint256 x,\\n        uint256 y,\\n        uint256 z\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 w = mulDivF(x, y, z);\\n            if (mulMod(x, y, z) > 0) return safeAdd(w, 1);\\n            return w;\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the value of `x * y`\\n     */\\n    function mul512(uint256 x, uint256 y)\\n        private\\n        pure\\n        returns (uint256, uint256)\\n    {\\n        unchecked {\\n            uint256 p = mulModMax(x, y);\\n            uint256 q = unsafeMul(x, y);\\n            if (p >= q) return (p - q, q);\\n            return (unsafeSub(p, q) - 1, q);\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the value of `2 ^ 256 * xh + xl - y`, where `2 ^ 256 * xh + xl >= y`\\n     */\\n    function sub512(\\n        uint256 xh,\\n        uint256 xl,\\n        uint256 y\\n    ) private pure returns (uint256, uint256) {\\n        unchecked {\\n            if (xl >= y) return (xh, xl - y);\\n            return (xh - 1, unsafeSub(xl, y));\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the value of `(2 ^ 256 * xh + xl) / pow2n`, where `xl` is divisible by `pow2n`\\n     */\\n    function div512(\\n        uint256 xh,\\n        uint256 xl,\\n        uint256 pow2n\\n    ) private pure returns (uint256) {\\n        unchecked {\\n            uint256 pow2nInv = unsafeAdd(unsafeSub(0, pow2n) / pow2n, 1); // `1 << (256 - n)`\\n            return unsafeMul(xh, pow2nInv) | (xl / pow2n); // `(xh << (256 - n)) | (xl >> n)`\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the inverse of `d` modulo `2 ^ 256`, where `d` is congruent to `1` modulo `2`\\n     */\\n    function inv256(uint256 d) private pure returns (uint256) {\\n        unchecked {\\n            // approximate the root of `f(x) = 1 / x - d` using the newton\\u2013raphson convergence method\\n            uint256 x = 1;\\n            for (uint256 i = 0; i < 8; ++i)\\n                x = unsafeMul(x, unsafeSub(2, unsafeMul(x, d))); // `x = x * (2 - x * d) mod 2 ^ 256`\\n            return x;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2433205309bedeec21e98639f6e1b9ae4b72bddfd16d3c7caa23f0bedd74c07a\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/oracles/libs/Uint.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity >=0.8.0;\\n\\nuint256 constant MAX_VAL = type(uint256).max;\\n\\n// reverts on overflow\\nfunction safeAdd(uint256 x, uint256 y) pure returns (uint256) {\\n    return x + y;\\n}\\n\\n// does not revert on overflow\\nfunction unsafeAdd(uint256 x, uint256 y) pure returns (uint256) {\\n    unchecked {\\n        return x + y;\\n    }\\n}\\n\\n// does not revert on overflow\\nfunction unsafeSub(uint256 x, uint256 y) pure returns (uint256) {\\n    unchecked {\\n        return x - y;\\n    }\\n}\\n\\n// does not revert on overflow\\nfunction unsafeMul(uint256 x, uint256 y) pure returns (uint256) {\\n    unchecked {\\n        return x * y;\\n    }\\n}\\n\\n// does not overflow\\nfunction mulModMax(uint256 x, uint256 y) pure returns (uint256) {\\n    unchecked {\\n        return mulmod(x, y, MAX_VAL);\\n    }\\n}\\n\\n// does not overflow\\nfunction mulMod(\\n    uint256 x,\\n    uint256 y,\\n    uint256 z\\n) pure returns (uint256) {\\n    unchecked {\\n        return mulmod(x, y, z);\\n    }\\n}\\n\",\"keccak256\":\"0x998fcec9a910b59ed67db5af0939b271f062585a8c16a614b529197ed86d0a8d\",\"license\":\"SEE LICENSE IN LICENSE\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/oracles/libs/vMath.sol":{"vMath":{"abi":[{"inputs":[{"internalType":"uint8","name":"n","type":"uint8"},{"internalType":"uint256","name":"product","type":"uint256"}],"name":"geometric_mean","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"array","type":"uint256[]"}],"name":"min","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"nums","type":"uint256[]"}],"name":"product","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"61048861003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c80638e5fede814610050578063d834e61914610079578063f43b9abe1461008c575b600080fd5b61006361005e36600461033a565b61009f565b60405161007091906103d9565b60405180910390f35b61006361008736600461033a565b61012b565b61006361009a3660046103a9565b6101da565b600080838360008181106100c357634e487b7160e01b600052603260045260246000fd5b9050602002013590506000600190505b83811015610121578484828181106100fb57634e487b7160e01b600052603260045260246000fd5b905060200201358261010d91906103e2565b91508061011981610401565b9150506100d3565b5090505b92915050565b6000808383600081811061014f57634e487b7160e01b600052603260045260246000fd5b9050602002013590506000600190505b60ff81168411156101215784848260ff1681811061018d57634e487b7160e01b600052603260045260246000fd5b905060200201358211156101c85784848260ff168181106101be57634e487b7160e01b600052603260045260246000fd5b9050602002013591505b806101d28161041c565b91505061015f565b60008260ff16600214156101f8576101f182610201565b9050610125565b6101f1826102da565b600181600160801b811061021a5760409190911b9060801c5b6801000000000000000081106102355760209190911b9060401c5b640100000000811061024c5760109190911b9060201c5b6201000081106102615760089190911b9060101c5b61010081106102755760049190911b9060081c5b601081106102885760029190911b9060041c5b60088110610297578160011b91505b5080820401600190811c80830401811c80830401811c80830401811c80830401811c80830401811c80830401901c808204818110156102d4578091505b50919050565b600080600160ff1b5b801561033357600191821b918281018302600302018082868161031657634e487b7160e01b600052601260045260246000fd5b041061032a57808202850394506001830192505b5060031c6102e3565b5092915050565b6000806020838503121561034c578182fd5b823567ffffffffffffffff80821115610363578384fd5b818501915085601f830112610376578384fd5b813581811115610384578485fd5b8660208083028501011115610397578485fd5b60209290920196919550909350505050565b600080604083850312156103bb578081fd5b823560ff811681146103cb578182fd5b946020939093013593505050565b90815260200190565b60008160001904831182151516156103fc576103fc61043c565b500290565b60006000198214156104155761041561043c565b5060010190565b600060ff821660ff8114156104335761043361043c565b60010192915050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220546a8d78aae6409dd6fb516754d5b05b208459d12e15e1c22a8c186b030bc55764736f6c63430008000033","opcodes":"PUSH2 0x488 PUSH2 0x3A PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x2D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8E5FEDE8 EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xD834E619 EQ PUSH2 0x79 JUMPI DUP1 PUSH4 0xF43B9ABE EQ PUSH2 0x8C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x63 PUSH2 0x5E CALLDATASIZE PUSH1 0x4 PUSH2 0x33A JUMP JUMPDEST PUSH2 0x9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x70 SWAP2 SWAP1 PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x63 PUSH2 0x87 CALLDATASIZE PUSH1 0x4 PUSH2 0x33A JUMP JUMPDEST PUSH2 0x12B JUMP JUMPDEST PUSH2 0x63 PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0x3A9 JUMP JUMPDEST PUSH2 0x1DA JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0xC3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x121 JUMPI DUP5 DUP5 DUP3 DUP2 DUP2 LT PUSH2 0xFB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 PUSH2 0x10D SWAP2 SWAP1 PUSH2 0x3E2 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x119 DUP2 PUSH2 0x401 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD3 JUMP JUMPDEST POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x14F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0xFF DUP2 AND DUP5 GT ISZERO PUSH2 0x121 JUMPI DUP5 DUP5 DUP3 PUSH1 0xFF AND DUP2 DUP2 LT PUSH2 0x18D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 GT ISZERO PUSH2 0x1C8 JUMPI DUP5 DUP5 DUP3 PUSH1 0xFF AND DUP2 DUP2 LT PUSH2 0x1BE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP2 POP JUMPDEST DUP1 PUSH2 0x1D2 DUP2 PUSH2 0x41C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x15F JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0xFF AND PUSH1 0x2 EQ ISZERO PUSH2 0x1F8 JUMPI PUSH2 0x1F1 DUP3 PUSH2 0x201 JUMP JUMPDEST SWAP1 POP PUSH2 0x125 JUMP JUMPDEST PUSH2 0x1F1 DUP3 PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 PUSH1 0x80 SHL DUP2 LT PUSH2 0x21A JUMPI PUSH1 0x40 SWAP2 SWAP1 SWAP2 SHL SWAP1 PUSH1 0x80 SHR JUMPDEST PUSH9 0x10000000000000000 DUP2 LT PUSH2 0x235 JUMPI PUSH1 0x20 SWAP2 SWAP1 SWAP2 SHL SWAP1 PUSH1 0x40 SHR JUMPDEST PUSH5 0x100000000 DUP2 LT PUSH2 0x24C JUMPI PUSH1 0x10 SWAP2 SWAP1 SWAP2 SHL SWAP1 PUSH1 0x20 SHR JUMPDEST PUSH3 0x10000 DUP2 LT PUSH2 0x261 JUMPI PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHL SWAP1 PUSH1 0x10 SHR JUMPDEST PUSH2 0x100 DUP2 LT PUSH2 0x275 JUMPI PUSH1 0x4 SWAP2 SWAP1 SWAP2 SHL SWAP1 PUSH1 0x8 SHR JUMPDEST PUSH1 0x10 DUP2 LT PUSH2 0x288 JUMPI PUSH1 0x2 SWAP2 SWAP1 SWAP2 SHL SWAP1 PUSH1 0x4 SHR JUMPDEST PUSH1 0x8 DUP2 LT PUSH2 0x297 JUMPI DUP2 PUSH1 0x1 SHL SWAP2 POP JUMPDEST POP DUP1 DUP3 DIV ADD PUSH1 0x1 SWAP1 DUP2 SHR DUP1 DUP4 DIV ADD DUP2 SHR DUP1 DUP4 DIV ADD DUP2 SHR DUP1 DUP4 DIV ADD DUP2 SHR DUP1 DUP4 DIV ADD DUP2 SHR DUP1 DUP4 DIV ADD DUP2 SHR DUP1 DUP4 DIV ADD SWAP1 SHR DUP1 DUP3 DIV DUP2 DUP2 LT ISZERO PUSH2 0x2D4 JUMPI DUP1 SWAP2 POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0xFF SHL JUMPDEST DUP1 ISZERO PUSH2 0x333 JUMPI PUSH1 0x1 SWAP2 DUP3 SHL SWAP2 DUP3 DUP2 ADD DUP4 MUL PUSH1 0x3 MUL ADD DUP1 DUP3 DUP7 DUP2 PUSH2 0x316 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV LT PUSH2 0x32A JUMPI DUP1 DUP3 MUL DUP6 SUB SWAP5 POP PUSH1 0x1 DUP4 ADD SWAP3 POP JUMPDEST POP PUSH1 0x3 SHR PUSH2 0x2E3 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x34C JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x363 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x376 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x384 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP1 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x397 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3BB JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x3CB JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3FC JUMPI PUSH2 0x3FC PUSH2 0x43C JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x415 JUMPI PUSH2 0x415 PUSH2 0x43C JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x433 JUMPI PUSH2 0x433 PUSH2 0x43C JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD PUSH11 0x8D78AAE6409DD6FB516754 0xD5 0xB0 JUMPDEST KECCAK256 DUP5 MSIZE 0xD1 0x2E ISZERO 0xE1 0xC2 0x2A DUP13 XOR PUSH12 0x30BC55764736F6C63430008 STOP STOP CALLER ","sourceMap":"135:978:28:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;135:978:28;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1859:30","statements":[{"nodeType":"YulBlock","src":"6:3:30","statements":[]},{"body":{"nodeType":"YulBlock","src":"119:561:30","statements":[{"body":{"nodeType":"YulBlock","src":"165:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"174:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"182:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"167:6:30"},"nodeType":"YulFunctionCall","src":"167:22:30"},"nodeType":"YulExpressionStatement","src":"167:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"140:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"149:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"136:3:30"},"nodeType":"YulFunctionCall","src":"136:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"161:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"132:3:30"},"nodeType":"YulFunctionCall","src":"132:32:30"},"nodeType":"YulIf","src":"129:2:30"},{"nodeType":"YulVariableDeclaration","src":"200:37:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"227:9:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"214:12:30"},"nodeType":"YulFunctionCall","src":"214:23:30"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"204:6:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"246:28:30","value":{"kind":"number","nodeType":"YulLiteral","src":"256:18:30","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"250:2:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"301:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"310:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"318:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"303:6:30"},"nodeType":"YulFunctionCall","src":"303:22:30"},"nodeType":"YulExpressionStatement","src":"303:22:30"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"289:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"297:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"286:2:30"},"nodeType":"YulFunctionCall","src":"286:14:30"},"nodeType":"YulIf","src":"283:2:30"},{"nodeType":"YulVariableDeclaration","src":"336:32:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"350:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"361:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"346:3:30"},"nodeType":"YulFunctionCall","src":"346:22:30"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"340:2:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"416:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"425:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"433:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"418:6:30"},"nodeType":"YulFunctionCall","src":"418:22:30"},"nodeType":"YulExpressionStatement","src":"418:22:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"395:2:30"},{"kind":"number","nodeType":"YulLiteral","src":"399:4:30","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"391:3:30"},"nodeType":"YulFunctionCall","src":"391:13:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"406:7:30"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"387:3:30"},"nodeType":"YulFunctionCall","src":"387:27:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"380:6:30"},"nodeType":"YulFunctionCall","src":"380:35:30"},"nodeType":"YulIf","src":"377:2:30"},{"nodeType":"YulVariableDeclaration","src":"451:30:30","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"478:2:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"465:12:30"},"nodeType":"YulFunctionCall","src":"465:16:30"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"455:6:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"508:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"517:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"525:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"510:6:30"},"nodeType":"YulFunctionCall","src":"510:22:30"},"nodeType":"YulExpressionStatement","src":"510:22:30"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"496:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"504:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"493:2:30"},"nodeType":"YulFunctionCall","src":"493:14:30"},"nodeType":"YulIf","src":"490:2:30"},{"body":{"nodeType":"YulBlock","src":"593:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"602:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"610:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"595:6:30"},"nodeType":"YulFunctionCall","src":"595:22:30"},"nodeType":"YulExpressionStatement","src":"595:22:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"557:2:30"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"565:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"573:2:30","type":"","value":"32"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"561:3:30"},"nodeType":"YulFunctionCall","src":"561:15:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"553:3:30"},"nodeType":"YulFunctionCall","src":"553:24:30"},{"kind":"number","nodeType":"YulLiteral","src":"579:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"549:3:30"},"nodeType":"YulFunctionCall","src":"549:33:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"584:7:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"546:2:30"},"nodeType":"YulFunctionCall","src":"546:46:30"},"nodeType":"YulIf","src":"543:2:30"},{"nodeType":"YulAssignment","src":"628:21:30","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"642:2:30"},{"kind":"number","nodeType":"YulLiteral","src":"646:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"638:3:30"},"nodeType":"YulFunctionCall","src":"638:11:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"628:6:30"}]},{"nodeType":"YulAssignment","src":"658:16:30","value":{"name":"length","nodeType":"YulIdentifier","src":"668:6:30"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"658:6:30"}]}]},"name":"abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"77:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"88:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"100:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"108:6:30","type":""}],"src":"14:666:30"},{"body":{"nodeType":"YulBlock","src":"770:272:30","statements":[{"body":{"nodeType":"YulBlock","src":"816:26:30","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"825:6:30"},{"name":"value1","nodeType":"YulIdentifier","src":"833:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"818:6:30"},"nodeType":"YulFunctionCall","src":"818:22:30"},"nodeType":"YulExpressionStatement","src":"818:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"791:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"800:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"787:3:30"},"nodeType":"YulFunctionCall","src":"787:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"812:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"783:3:30"},"nodeType":"YulFunctionCall","src":"783:32:30"},"nodeType":"YulIf","src":"780:2:30"},{"nodeType":"YulVariableDeclaration","src":"851:36:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"877:9:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"864:12:30"},"nodeType":"YulFunctionCall","src":"864:23:30"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"855:5:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"935:26:30","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"944:6:30"},{"name":"value1","nodeType":"YulIdentifier","src":"952:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"937:6:30"},"nodeType":"YulFunctionCall","src":"937:22:30"},"nodeType":"YulExpressionStatement","src":"937:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"909:5:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"920:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"927:4:30","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"916:3:30"},"nodeType":"YulFunctionCall","src":"916:16:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"906:2:30"},"nodeType":"YulFunctionCall","src":"906:27:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"899:6:30"},"nodeType":"YulFunctionCall","src":"899:35:30"},"nodeType":"YulIf","src":"896:2:30"},{"nodeType":"YulAssignment","src":"970:15:30","value":{"name":"value","nodeType":"YulIdentifier","src":"980:5:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"970:6:30"}]},{"nodeType":"YulAssignment","src":"994:42:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1021:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"1032:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1017:3:30"},"nodeType":"YulFunctionCall","src":"1017:18:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1004:12:30"},"nodeType":"YulFunctionCall","src":"1004:32:30"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"994:6:30"}]}]},"name":"abi_decode_tuple_t_uint8t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"728:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"739:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"751:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"759:6:30","type":""}],"src":"685:357:30"},{"body":{"nodeType":"YulBlock","src":"1156:76:30","statements":[{"nodeType":"YulAssignment","src":"1166:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1178:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"1189:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1174:3:30"},"nodeType":"YulFunctionCall","src":"1174:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1166:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1208:9:30"},{"name":"value0","nodeType":"YulIdentifier","src":"1219:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1201:6:30"},"nodeType":"YulFunctionCall","src":"1201:25:30"},"nodeType":"YulExpressionStatement","src":"1201:25:30"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1125:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1136:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1147:4:30","type":""}],"src":"1047:185:30"},{"body":{"nodeType":"YulBlock","src":"1289:116:30","statements":[{"body":{"nodeType":"YulBlock","src":"1348:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"1350:16:30"},"nodeType":"YulFunctionCall","src":"1350:18:30"},"nodeType":"YulExpressionStatement","src":"1350:18:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"1320:1:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1313:6:30"},"nodeType":"YulFunctionCall","src":"1313:9:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1306:6:30"},"nodeType":"YulFunctionCall","src":"1306:17:30"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"1328:1:30"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1339:1:30","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1335:3:30"},"nodeType":"YulFunctionCall","src":"1335:6:30"},{"name":"x","nodeType":"YulIdentifier","src":"1343:1:30"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1331:3:30"},"nodeType":"YulFunctionCall","src":"1331:14:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1325:2:30"},"nodeType":"YulFunctionCall","src":"1325:21:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1302:3:30"},"nodeType":"YulFunctionCall","src":"1302:45:30"},"nodeType":"YulIf","src":"1299:2:30"},{"nodeType":"YulAssignment","src":"1379:20:30","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"1394:1:30"},{"name":"y","nodeType":"YulIdentifier","src":"1397:1:30"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1390:3:30"},"nodeType":"YulFunctionCall","src":"1390:9:30"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"1379:7:30"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"1268:1:30","type":""},{"name":"y","nodeType":"YulTypedName","src":"1271:1:30","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"1277:7:30","type":""}],"src":"1237:168:30"},{"body":{"nodeType":"YulBlock","src":"1457:88:30","statements":[{"body":{"nodeType":"YulBlock","src":"1488:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"1490:16:30"},"nodeType":"YulFunctionCall","src":"1490:18:30"},"nodeType":"YulExpressionStatement","src":"1490:18:30"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1473:5:30"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1484:1:30","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1480:3:30"},"nodeType":"YulFunctionCall","src":"1480:6:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1470:2:30"},"nodeType":"YulFunctionCall","src":"1470:17:30"},"nodeType":"YulIf","src":"1467:2:30"},{"nodeType":"YulAssignment","src":"1519:20:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1530:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"1537:1:30","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1526:3:30"},"nodeType":"YulFunctionCall","src":"1526:13:30"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1519:3:30"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1439:5:30","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1449:3:30","type":""}],"src":"1410:135:30"},{"body":{"nodeType":"YulBlock","src":"1595:130:30","statements":[{"nodeType":"YulVariableDeclaration","src":"1605:31:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1624:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"1631:4:30","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1620:3:30"},"nodeType":"YulFunctionCall","src":"1620:16:30"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"1609:7:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"1666:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"1668:16:30"},"nodeType":"YulFunctionCall","src":"1668:18:30"},"nodeType":"YulExpressionStatement","src":"1668:18:30"}]},"condition":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"1651:7:30"},{"kind":"number","nodeType":"YulLiteral","src":"1660:4:30","type":"","value":"0xff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1648:2:30"},"nodeType":"YulFunctionCall","src":"1648:17:30"},"nodeType":"YulIf","src":"1645:2:30"},{"nodeType":"YulAssignment","src":"1697:22:30","value":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"1708:7:30"},{"kind":"number","nodeType":"YulLiteral","src":"1717:1:30","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1704:3:30"},"nodeType":"YulFunctionCall","src":"1704:15:30"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1697:3:30"}]}]},"name":"increment_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1577:5:30","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1587:3:30","type":""}],"src":"1550:175:30"},{"body":{"nodeType":"YulBlock","src":"1762:95:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1779:1:30","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1786:3:30","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1791:10:30","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1782:3:30"},"nodeType":"YulFunctionCall","src":"1782:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1772:6:30"},"nodeType":"YulFunctionCall","src":"1772:31:30"},"nodeType":"YulExpressionStatement","src":"1772:31:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1819:1:30","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1822:4:30","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1812:6:30"},"nodeType":"YulFunctionCall","src":"1812:15:30"},"nodeType":"YulExpressionStatement","src":"1812:15:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1843:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1846:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1836:6:30"},"nodeType":"YulFunctionCall","src":"1836:15:30"},"nodeType":"YulExpressionStatement","src":"1836:15:30"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"1730:127:30"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value0, value0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value0, value0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(value0, value0) }\n        if gt(add(add(_2, mul(length, 32)), 32), dataEnd) { revert(value0, value0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_decode_tuple_t_uint8t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(value1, value1) }\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function increment_t_uint8(value) -> ret\n    {\n        let value_1 := and(value, 0xff)\n        if eq(value_1, 0xff) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}","id":30,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c80638e5fede814610050578063d834e61914610079578063f43b9abe1461008c575b600080fd5b61006361005e36600461033a565b61009f565b60405161007091906103d9565b60405180910390f35b61006361008736600461033a565b61012b565b61006361009a3660046103a9565b6101da565b600080838360008181106100c357634e487b7160e01b600052603260045260246000fd5b9050602002013590506000600190505b83811015610121578484828181106100fb57634e487b7160e01b600052603260045260246000fd5b905060200201358261010d91906103e2565b91508061011981610401565b9150506100d3565b5090505b92915050565b6000808383600081811061014f57634e487b7160e01b600052603260045260246000fd5b9050602002013590506000600190505b60ff81168411156101215784848260ff1681811061018d57634e487b7160e01b600052603260045260246000fd5b905060200201358211156101c85784848260ff168181106101be57634e487b7160e01b600052603260045260246000fd5b9050602002013591505b806101d28161041c565b91505061015f565b60008260ff16600214156101f8576101f182610201565b9050610125565b6101f1826102da565b600181600160801b811061021a5760409190911b9060801c5b6801000000000000000081106102355760209190911b9060401c5b640100000000811061024c5760109190911b9060201c5b6201000081106102615760089190911b9060101c5b61010081106102755760049190911b9060081c5b601081106102885760029190911b9060041c5b60088110610297578160011b91505b5080820401600190811c80830401811c80830401811c80830401811c80830401811c80830401811c80830401901c808204818110156102d4578091505b50919050565b600080600160ff1b5b801561033357600191821b918281018302600302018082868161031657634e487b7160e01b600052601260045260246000fd5b041061032a57808202850394506001830192505b5060031c6102e3565b5092915050565b6000806020838503121561034c578182fd5b823567ffffffffffffffff80821115610363578384fd5b818501915085601f830112610376578384fd5b813581811115610384578485fd5b8660208083028501011115610397578485fd5b60209290920196919550909350505050565b600080604083850312156103bb578081fd5b823560ff811681146103cb578182fd5b946020939093013593505050565b90815260200190565b60008160001904831182151516156103fc576103fc61043c565b500290565b60006000198214156104155761041561043c565b5060010190565b600060ff821660ff8114156104335761043361043c565b60010192915050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220546a8d78aae6409dd6fb516754d5b05b208459d12e15e1c22a8c186b030bc55764736f6c63430008000033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8E5FEDE8 EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xD834E619 EQ PUSH2 0x79 JUMPI DUP1 PUSH4 0xF43B9ABE EQ PUSH2 0x8C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x63 PUSH2 0x5E CALLDATASIZE PUSH1 0x4 PUSH2 0x33A JUMP JUMPDEST PUSH2 0x9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x70 SWAP2 SWAP1 PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x63 PUSH2 0x87 CALLDATASIZE PUSH1 0x4 PUSH2 0x33A JUMP JUMPDEST PUSH2 0x12B JUMP JUMPDEST PUSH2 0x63 PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0x3A9 JUMP JUMPDEST PUSH2 0x1DA JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0xC3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x121 JUMPI DUP5 DUP5 DUP3 DUP2 DUP2 LT PUSH2 0xFB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 PUSH2 0x10D SWAP2 SWAP1 PUSH2 0x3E2 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x119 DUP2 PUSH2 0x401 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD3 JUMP JUMPDEST POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x14F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0xFF DUP2 AND DUP5 GT ISZERO PUSH2 0x121 JUMPI DUP5 DUP5 DUP3 PUSH1 0xFF AND DUP2 DUP2 LT PUSH2 0x18D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 GT ISZERO PUSH2 0x1C8 JUMPI DUP5 DUP5 DUP3 PUSH1 0xFF AND DUP2 DUP2 LT PUSH2 0x1BE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP2 POP JUMPDEST DUP1 PUSH2 0x1D2 DUP2 PUSH2 0x41C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x15F JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0xFF AND PUSH1 0x2 EQ ISZERO PUSH2 0x1F8 JUMPI PUSH2 0x1F1 DUP3 PUSH2 0x201 JUMP JUMPDEST SWAP1 POP PUSH2 0x125 JUMP JUMPDEST PUSH2 0x1F1 DUP3 PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 PUSH1 0x80 SHL DUP2 LT PUSH2 0x21A JUMPI PUSH1 0x40 SWAP2 SWAP1 SWAP2 SHL SWAP1 PUSH1 0x80 SHR JUMPDEST PUSH9 0x10000000000000000 DUP2 LT PUSH2 0x235 JUMPI PUSH1 0x20 SWAP2 SWAP1 SWAP2 SHL SWAP1 PUSH1 0x40 SHR JUMPDEST PUSH5 0x100000000 DUP2 LT PUSH2 0x24C JUMPI PUSH1 0x10 SWAP2 SWAP1 SWAP2 SHL SWAP1 PUSH1 0x20 SHR JUMPDEST PUSH3 0x10000 DUP2 LT PUSH2 0x261 JUMPI PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHL SWAP1 PUSH1 0x10 SHR JUMPDEST PUSH2 0x100 DUP2 LT PUSH2 0x275 JUMPI PUSH1 0x4 SWAP2 SWAP1 SWAP2 SHL SWAP1 PUSH1 0x8 SHR JUMPDEST PUSH1 0x10 DUP2 LT PUSH2 0x288 JUMPI PUSH1 0x2 SWAP2 SWAP1 SWAP2 SHL SWAP1 PUSH1 0x4 SHR JUMPDEST PUSH1 0x8 DUP2 LT PUSH2 0x297 JUMPI DUP2 PUSH1 0x1 SHL SWAP2 POP JUMPDEST POP DUP1 DUP3 DIV ADD PUSH1 0x1 SWAP1 DUP2 SHR DUP1 DUP4 DIV ADD DUP2 SHR DUP1 DUP4 DIV ADD DUP2 SHR DUP1 DUP4 DIV ADD DUP2 SHR DUP1 DUP4 DIV ADD DUP2 SHR DUP1 DUP4 DIV ADD DUP2 SHR DUP1 DUP4 DIV ADD SWAP1 SHR DUP1 DUP3 DIV DUP2 DUP2 LT ISZERO PUSH2 0x2D4 JUMPI DUP1 SWAP2 POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0xFF SHL JUMPDEST DUP1 ISZERO PUSH2 0x333 JUMPI PUSH1 0x1 SWAP2 DUP3 SHL SWAP2 DUP3 DUP2 ADD DUP4 MUL PUSH1 0x3 MUL ADD DUP1 DUP3 DUP7 DUP2 PUSH2 0x316 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV LT PUSH2 0x32A JUMPI DUP1 DUP3 MUL DUP6 SUB SWAP5 POP PUSH1 0x1 DUP4 ADD SWAP3 POP JUMPDEST POP PUSH1 0x3 SHR PUSH2 0x2E3 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x34C JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x363 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x376 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x384 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP1 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x397 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3BB JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x3CB JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3FC JUMPI PUSH2 0x3FC PUSH2 0x43C JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x415 JUMPI PUSH2 0x415 PUSH2 0x43C JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x433 JUMPI PUSH2 0x433 PUSH2 0x43C JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD PUSH11 0x8D78AAE6409DD6FB516754 0xD5 0xB0 JUMPDEST KECCAK256 DUP5 MSIZE 0xD1 0x2E ISZERO 0xE1 0xC2 0x2A DUP13 XOR PUSH12 0x30BC55764736F6C63430008 STOP STOP CALLER ","sourceMap":"135:978:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;513:234;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;236:271;;;;;;:::i;:::-;;:::i;820:291::-;;;;;;:::i;:::-;;:::i;513:234::-;578:7;597:15;615:4;;620:1;615:7;;;;;-1:-1:-1;;;615:7:28;;;;;;;;;;;;;;;597:25;;637:9;649:1;637:13;;632:85;652:15;;;632:85;;;699:4;;704:1;699:7;;;;;-1:-1:-1;;;699:7:28;;;;;;;;;;;;;;;688:18;;;;;:::i;:::-;;-1:-1:-1;669:3:28;;;;:::i;:::-;;;;632:85;;;-1:-1:-1;733:7:28;-1:-1:-1;513:234:28;;;;;:::o;236:271::-;298:7;317:11;331:5;;337:1;331:8;;;;;-1:-1:-1;;;331:8:28;;;;;;;;;;;;;;;317:22;;354:7;364:1;354:11;;349:132;367:16;;;;-1:-1:-1;349:132:28;;;414:5;;420:1;414:8;;;;;;;-1:-1:-1;;;414:8:28;;;;;;;;;;;;;;;408:3;:14;404:67;;;448:5;;454:1;448:8;;;;;;;-1:-1:-1;;;448:8:28;;;;;;;;;;;;;;;442:14;;404:67;385:3;;;;:::i;:::-;;;;349:132;;820:291;917:7;944:1;:6;;949:1;944:6;940:165;;;973:31;996:7;973:22;:31::i;:::-;966:38;;;;940:165;1063:31;1086:7;1063:22;:31::i;5908:2116:25:-;6043:1;6127;-1:-1:-1;;;6220:42:25;;6210:2;;6354;6350:10;;;;;6291:3;6287:11;6210:2;6435:19;6432:1;6429:26;6419:2;;6545;6541:10;;;;;6484:2;6480:10;6419:2;6626:11;6623:1;6620:18;6610:2;;6728;6724:10;;;;;6667:2;6663:10;6610:2;6809:7;6806:1;6803:14;6793:2;;6907:1;6903:9;;;;;6846:2;6842:10;6793:2;6986:5;6983:1;6980:12;6970:2;;7080:1;7076:9;;;;;7021:1;7017:9;6970:2;7159:4;7156:1;7153:11;7143:2;;7252:1;7248:9;;;;;7193:1;7189:9;7143:2;7331:3;7328:1;7325:10;7315:2;;7408:1;7405;7401:9;7396:14;;7315:2;-1:-1:-1;7515:9:25;;;7508:17;7505:1;7501:25;;;7558:9;;;7551:17;7544:25;;7601:9;;;7594:17;7587:25;;7644:9;;;7637:17;7630:25;;7687:9;;;7680:17;7673:25;;7730:9;;;7723:17;7716:25;;7773:9;;;7766:17;7759:25;;7868:9;;;7943:17;;;7940:2;;;7984:10;7979:15;;7940:2;;5986:2032;;;:::o;1731:405:26:-;1784:7;;-1:-1:-1;;;1854:244:26;1881:5;;1854:244;;1921:1;1915:7;;;;1961:5;;;1952:15;;:1;:15;:19;;1997:1;1993;1997;1993:5;;-1:-1:-1;;;1993:5:26;;;;;;;;;;:10;1989:95;;2036:1;2032;:5;2027:10;;;;2064:1;2059:6;;;;1989:95;-1:-1:-1;1894:1:26;1888:7;1854:244;;;-1:-1:-1;2118:1:26;1731:405;-1:-1:-1;;1731:405:26:o;14:666:30:-;;;161:2;149:9;140:7;136:23;132:32;129:2;;;182:6;174;167:22;129:2;227:9;214:23;256:18;297:2;289:6;286:14;283:2;;;318:6;310;303:22;283:2;361:6;350:9;346:22;336:32;;406:7;399:4;395:2;391:13;387:27;377:2;;433:6;425;418:22;377:2;478;465:16;504:2;496:6;493:14;490:2;;;525:6;517;510:22;490:2;584:7;579:2;573;565:6;561:15;557:2;553:24;549:33;546:46;543:2;;;610:6;602;595:22;543:2;646;638:11;;;;;668:6;;-1:-1:-1;119:561:30;;-1:-1:-1;;;;119:561:30:o;685:357::-;;;812:2;800:9;791:7;787:23;783:32;780:2;;;833:6;825;818:22;780:2;877:9;864:23;927:4;920:5;916:16;909:5;906:27;896:2;;952:6;944;937:22;896:2;980:5;1032:2;1017:18;;;;1004:32;;-1:-1:-1;;;770:272:30:o;1047:185::-;1201:25;;;1189:2;1174:18;;1156:76::o;1237:168::-;;1343:1;1339;1335:6;1331:14;1328:1;1325:21;1320:1;1313:9;1306:17;1302:45;1299:2;;;1350:18;;:::i;:::-;-1:-1:-1;1390:9:30;;1289:116::o;1410:135::-;;-1:-1:-1;;1470:17:30;;1467:2;;;1490:18;;:::i;:::-;-1:-1:-1;1537:1:30;1526:13;;1457:88::o;1550:175::-;;1631:4;1624:5;1620:16;1660:4;1651:7;1648:17;1645:2;;;1668:18;;:::i;:::-;1717:1;1704:15;;1595:130;-1:-1:-1;;1595:130:30:o;1730:127::-;1791:10;1786:3;1782:20;1779:1;1772:31;1822:4;1819:1;1812:15;1846:4;1843:1;1836:15"},"gasEstimates":{"creation":{"codeDepositCost":"232000","executionCost":"306","totalCost":"232306"},"external":{"geometric_mean(uint8,uint256)":"infinite","min(uint256[])":"infinite","product(uint256[])":"infinite"}},"methodIdentifiers":{"geometric_mean(uint8,uint256)":"f43b9abe","min(uint256[])":"d834e619","product(uint256[])":"8e5fede8"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"n\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"product\",\"type\":\"uint256\"}],\"name\":\"geometric_mean\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"array\",\"type\":\"uint256[]\"}],\"name\":\"min\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"nums\",\"type\":\"uint256[]\"}],\"name\":\"product\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracles/libs/vMath.sol\":\"vMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/oracles/libs/FixedPointMathLib.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Arithmetic library with operations for fixed-point numbers.\\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/utils/FixedPointMathLib.sol)\\n/// @author Inspired by USM (https://github.com/usmfum/USM/blob/master/contracts/WadMath.sol)\\nlibrary FixedPointMathLib {\\n    /*//////////////////////////////////////////////////////////////\\n                    SIMPLIFIED FIXED POINT OPERATIONS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 internal constant WAD = 1e18; // The scalar of ETH and most ERC20s.\\n\\n    function mulWadDown(uint256 x, uint256 y) internal pure returns (uint256) {\\n        return mulDivDown(x, y, WAD); // Equivalent to (x * y) / WAD rounded down.\\n    }\\n\\n    function mulWadUp(uint256 x, uint256 y) internal pure returns (uint256) {\\n        return mulDivUp(x, y, WAD); // Equivalent to (x * y) / WAD rounded up.\\n    }\\n\\n    function divWadDown(uint256 x, uint256 y) internal pure returns (uint256) {\\n        return mulDivDown(x, WAD, y); // Equivalent to (x * WAD) / y rounded down.\\n    }\\n\\n    function divWadUp(uint256 x, uint256 y) internal pure returns (uint256) {\\n        return mulDivUp(x, WAD, y); // Equivalent to (x * WAD) / y rounded up.\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                    LOW LEVEL FIXED POINT OPERATIONS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function mulDivDown(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 z) {\\n        assembly {\\n            // Store x * y in z for now.\\n            z := mul(x, y)\\n\\n            // Equivalent to require(denominator != 0 && (x == 0 || (x * y) / x == y))\\n            if iszero(\\n                and(\\n                    iszero(iszero(denominator)),\\n                    or(iszero(x), eq(div(z, x), y))\\n                )\\n            ) {\\n                revert(0, 0)\\n            }\\n\\n            // Divide z by the denominator.\\n            z := div(z, denominator)\\n        }\\n    }\\n\\n    function mulDivUp(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 z) {\\n        assembly {\\n            // Store x * y in z for now.\\n            z := mul(x, y)\\n\\n            // Equivalent to require(denominator != 0 && (x == 0 || (x * y) / x == y))\\n            if iszero(\\n                and(\\n                    iszero(iszero(denominator)),\\n                    or(iszero(x), eq(div(z, x), y))\\n                )\\n            ) {\\n                revert(0, 0)\\n            }\\n\\n            // First, divide z - 1 by the denominator and add 1.\\n            // We allow z - 1 to underflow if z is 0, because we multiply the\\n            // end result by 0 if z is zero, ensuring we return 0 if z is zero.\\n            z := mul(iszero(iszero(z)), add(div(sub(z, 1), denominator), 1))\\n        }\\n    }\\n\\n    function rpow(\\n        uint256 x,\\n        uint256 n,\\n        uint256 scalar\\n    ) internal pure returns (uint256 z) {\\n        assembly {\\n            switch x\\n            case 0 {\\n                switch n\\n                case 0 {\\n                    // 0 ** 0 = 1\\n                    z := scalar\\n                }\\n                default {\\n                    // 0 ** n = 0\\n                    z := 0\\n                }\\n            }\\n            default {\\n                switch mod(n, 2)\\n                case 0 {\\n                    // If n is even, store scalar in z for now.\\n                    z := scalar\\n                }\\n                default {\\n                    // If n is odd, store x in z for now.\\n                    z := x\\n                }\\n\\n                // Shifting right by 1 is like dividing by 2.\\n                let half := shr(1, scalar)\\n\\n                for {\\n                    // Shift n right by 1 before looping to halve it.\\n                    n := shr(1, n)\\n                } n {\\n                    // Shift n right by 1 each iteration to halve it.\\n                    n := shr(1, n)\\n                } {\\n                    // Revert immediately if x ** 2 would overflow.\\n                    // Equivalent to iszero(eq(div(xx, x), x)) here.\\n                    if shr(128, x) {\\n                        revert(0, 0)\\n                    }\\n\\n                    // Store x squared.\\n                    let xx := mul(x, x)\\n\\n                    // Round to the nearest number.\\n                    let xxRound := add(xx, half)\\n\\n                    // Revert if xx + half overflowed.\\n                    if lt(xxRound, xx) {\\n                        revert(0, 0)\\n                    }\\n\\n                    // Set x to scaled xxRound.\\n                    x := div(xxRound, scalar)\\n\\n                    // If n is even:\\n                    if mod(n, 2) {\\n                        // Compute z * x.\\n                        let zx := mul(z, x)\\n\\n                        // If z * x overflowed:\\n                        if iszero(eq(div(zx, x), z)) {\\n                            // Revert if x is non-zero.\\n                            if iszero(iszero(x)) {\\n                                revert(0, 0)\\n                            }\\n                        }\\n\\n                        // Round to the nearest number.\\n                        let zxRound := add(zx, half)\\n\\n                        // Revert if zx + half overflowed.\\n                        if lt(zxRound, zx) {\\n                            revert(0, 0)\\n                        }\\n\\n                        // Return properly scaled zxRound.\\n                        z := div(zxRound, scalar)\\n                    }\\n                }\\n            }\\n        }\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                        GENERAL NUMBER UTILITIES\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function sqrt(uint256 x) internal pure returns (uint256 z) {\\n        assembly {\\n            // Start off with z at 1.\\n            z := 1\\n\\n            // Used below to help find a nearby power of 2.\\n            let y := x\\n\\n            // Find the lowest power of 2 that is at least sqrt(x).\\n            if iszero(lt(y, 0x100000000000000000000000000000000)) {\\n                y := shr(128, y) // Like dividing by 2 ** 128.\\n                z := shl(64, z) // Like multiplying by 2 ** 64.\\n            }\\n            if iszero(lt(y, 0x10000000000000000)) {\\n                y := shr(64, y) // Like dividing by 2 ** 64.\\n                z := shl(32, z) // Like multiplying by 2 ** 32.\\n            }\\n            if iszero(lt(y, 0x100000000)) {\\n                y := shr(32, y) // Like dividing by 2 ** 32.\\n                z := shl(16, z) // Like multiplying by 2 ** 16.\\n            }\\n            if iszero(lt(y, 0x10000)) {\\n                y := shr(16, y) // Like dividing by 2 ** 16.\\n                z := shl(8, z) // Like multiplying by 2 ** 8.\\n            }\\n            if iszero(lt(y, 0x100)) {\\n                y := shr(8, y) // Like dividing by 2 ** 8.\\n                z := shl(4, z) // Like multiplying by 2 ** 4.\\n            }\\n            if iszero(lt(y, 0x10)) {\\n                y := shr(4, y) // Like dividing by 2 ** 4.\\n                z := shl(2, z) // Like multiplying by 2 ** 2.\\n            }\\n            if iszero(lt(y, 0x8)) {\\n                // Equivalent to 2 ** z.\\n                z := shl(1, z)\\n            }\\n\\n            // Shifting right by 1 is like dividing by 2.\\n            z := shr(1, add(z, div(x, z)))\\n            z := shr(1, add(z, div(x, z)))\\n            z := shr(1, add(z, div(x, z)))\\n            z := shr(1, add(z, div(x, z)))\\n            z := shr(1, add(z, div(x, z)))\\n            z := shr(1, add(z, div(x, z)))\\n            z := shr(1, add(z, div(x, z)))\\n\\n            // Compute a rounded down version of z.\\n            let zRoundDown := div(x, z)\\n\\n            // If zRoundDown is smaller, use it.\\n            if lt(zRoundDown, z) {\\n                z := zRoundDown\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xcc1552fe037c973c1ab30f607708735de7626eb22dcf6b2a02f2a39fa5d2b965\",\"license\":\"AGPL-3.0-only\"},\"contracts/oracles/libs/IntegralMath.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity >=0.8.0;\\n\\nimport \\\"./Uint.sol\\\";\\n\\nlibrary IntegralMath {\\n    /**\\n     * @dev Compute the largest integer smaller than or equal to the binary logarithm of `n`\\n     */\\n    function floorLog2(uint256 n) internal pure returns (uint8) {\\n        unchecked {\\n            uint8 res = 0;\\n\\n            if (n < 256) {\\n                // at most 8 iterations\\n                while (n > 1) {\\n                    n >>= 1;\\n                    res += 1;\\n                }\\n            } else {\\n                // exactly 8 iterations\\n                for (uint8 s = 128; s > 0; s >>= 1) {\\n                    if (n >= 1 << s) {\\n                        n >>= s;\\n                        res |= s;\\n                    }\\n                }\\n            }\\n\\n            return res;\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the largest integer smaller than or equal to the square root of `n`\\n     */\\n    function floorSqrt(uint256 n) internal pure returns (uint256) {\\n        unchecked {\\n            if (n > 0) {\\n                uint256 x = n / 2 + 1;\\n                uint256 y = (x + n / x) / 2;\\n                while (x > y) {\\n                    x = y;\\n                    y = (x + n / x) / 2;\\n                }\\n                return x;\\n            }\\n            return 0;\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the smallest integer larger than or equal to the square root of `n`\\n     */\\n    function ceilSqrt(uint256 n) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 x = floorSqrt(n);\\n            return x**2 == n ? x : x + 1;\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the largest integer smaller than or equal to the cubic root of `n`\\n     */\\n    function floorCbrt(uint256 n) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 x = 0;\\n            for (uint256 y = 1 << 255; y > 0; y >>= 3) {\\n                x <<= 1;\\n                uint256 z = 3 * x * (x + 1) + 1;\\n                if (n / y >= z) {\\n                    n -= y * z;\\n                    x += 1;\\n                }\\n            }\\n            return x;\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the smallest integer larger than or equal to the cubic root of `n`\\n     */\\n    function ceilCbrt(uint256 n) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 x = floorCbrt(n);\\n            return x**3 == n ? x : x + 1;\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the nearest integer to the quotient of `n` and `d` (or `n / d`)\\n     */\\n    function roundDiv(uint256 n, uint256 d) internal pure returns (uint256) {\\n        unchecked {\\n            return n / d + (n % d) / (d - d / 2);\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the largest integer smaller than or equal to `x * y / z`\\n     */\\n    function mulDivF(\\n        uint256 x,\\n        uint256 y,\\n        uint256 z\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            (uint256 xyh, uint256 xyl) = mul512(x, y);\\n            if (xyh == 0) {\\n                // `x * y < 2 ^ 256`\\n                return xyl / z;\\n            }\\n            if (xyh < z) {\\n                // `x * y / z < 2 ^ 256`\\n                uint256 m = mulMod(x, y, z); // `m = x * y % z`\\n                (uint256 nh, uint256 nl) = sub512(xyh, xyl, m); // `n = x * y - m` hence `n / z = floor(x * y / z)`\\n                if (nh == 0) {\\n                    // `n < 2 ^ 256`\\n                    return nl / z;\\n                }\\n                uint256 p = unsafeSub(0, z) & z; // `p` is the largest power of 2 which `z` is divisible by\\n                uint256 q = div512(nh, nl, p); // `n` is divisible by `p` because `n` is divisible by `z` and `z` is divisible by `p`\\n                uint256 r = inv256(z / p); // `z / p = 1 mod 2` hence `inverse(z / p) = 1 mod 2 ^ 256`\\n                return unsafeMul(q, r); // `q * r = (n / p) * inverse(z / p) = n / z`\\n            }\\n            revert(); // `x * y / z >= 2 ^ 256`\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the smallest integer larger than or equal to `x * y / z`\\n     */\\n    function mulDivC(\\n        uint256 x,\\n        uint256 y,\\n        uint256 z\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 w = mulDivF(x, y, z);\\n            if (mulMod(x, y, z) > 0) return safeAdd(w, 1);\\n            return w;\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the value of `x * y`\\n     */\\n    function mul512(uint256 x, uint256 y)\\n        private\\n        pure\\n        returns (uint256, uint256)\\n    {\\n        unchecked {\\n            uint256 p = mulModMax(x, y);\\n            uint256 q = unsafeMul(x, y);\\n            if (p >= q) return (p - q, q);\\n            return (unsafeSub(p, q) - 1, q);\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the value of `2 ^ 256 * xh + xl - y`, where `2 ^ 256 * xh + xl >= y`\\n     */\\n    function sub512(\\n        uint256 xh,\\n        uint256 xl,\\n        uint256 y\\n    ) private pure returns (uint256, uint256) {\\n        unchecked {\\n            if (xl >= y) return (xh, xl - y);\\n            return (xh - 1, unsafeSub(xl, y));\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the value of `(2 ^ 256 * xh + xl) / pow2n`, where `xl` is divisible by `pow2n`\\n     */\\n    function div512(\\n        uint256 xh,\\n        uint256 xl,\\n        uint256 pow2n\\n    ) private pure returns (uint256) {\\n        unchecked {\\n            uint256 pow2nInv = unsafeAdd(unsafeSub(0, pow2n) / pow2n, 1); // `1 << (256 - n)`\\n            return unsafeMul(xh, pow2nInv) | (xl / pow2n); // `(xh << (256 - n)) | (xl >> n)`\\n        }\\n    }\\n\\n    /**\\n     * @dev Compute the inverse of `d` modulo `2 ^ 256`, where `d` is congruent to `1` modulo `2`\\n     */\\n    function inv256(uint256 d) private pure returns (uint256) {\\n        unchecked {\\n            // approximate the root of `f(x) = 1 / x - d` using the newton\\u2013raphson convergence method\\n            uint256 x = 1;\\n            for (uint256 i = 0; i < 8; ++i)\\n                x = unsafeMul(x, unsafeSub(2, unsafeMul(x, d))); // `x = x * (2 - x * d) mod 2 ^ 256`\\n            return x;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2433205309bedeec21e98639f6e1b9ae4b72bddfd16d3c7caa23f0bedd74c07a\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/oracles/libs/Uint.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity >=0.8.0;\\n\\nuint256 constant MAX_VAL = type(uint256).max;\\n\\n// reverts on overflow\\nfunction safeAdd(uint256 x, uint256 y) pure returns (uint256) {\\n    return x + y;\\n}\\n\\n// does not revert on overflow\\nfunction unsafeAdd(uint256 x, uint256 y) pure returns (uint256) {\\n    unchecked {\\n        return x + y;\\n    }\\n}\\n\\n// does not revert on overflow\\nfunction unsafeSub(uint256 x, uint256 y) pure returns (uint256) {\\n    unchecked {\\n        return x - y;\\n    }\\n}\\n\\n// does not revert on overflow\\nfunction unsafeMul(uint256 x, uint256 y) pure returns (uint256) {\\n    unchecked {\\n        return x * y;\\n    }\\n}\\n\\n// does not overflow\\nfunction mulModMax(uint256 x, uint256 y) pure returns (uint256) {\\n    unchecked {\\n        return mulmod(x, y, MAX_VAL);\\n    }\\n}\\n\\n// does not overflow\\nfunction mulMod(\\n    uint256 x,\\n    uint256 y,\\n    uint256 z\\n) pure returns (uint256) {\\n    unchecked {\\n        return mulmod(x, y, z);\\n    }\\n}\\n\",\"keccak256\":\"0x998fcec9a910b59ed67db5af0939b271f062585a8c16a614b529197ed86d0a8d\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/oracles/libs/vMath.sol\":{\"content\":\"pragma solidity >=0.8.0;\\n\\nimport {FixedPointMathLib} from \\\"./FixedPointMathLib.sol\\\";\\nimport {IntegralMath} from \\\"./IntegralMath.sol\\\";\\n\\nlibrary vMath {\\n    uint256 internal constant WAD = 1e18; // The scalar of ETH and most ERC20s.\\n\\n    function min(uint256[] calldata array) external pure returns (uint256) {\\n        uint256 min = array[0];\\n        for (uint8 i = 1; i < array.length; i++) {\\n            if (min > array[i]) {\\n                min = array[i];\\n            }\\n        }\\n        return min;\\n    }\\n\\n    function product(uint256[] calldata nums) external pure returns (uint256) {\\n        uint256 product = nums[0];\\n        for (uint256 i = 1; i < nums.length; i++) {\\n            product *= nums[i];\\n        }\\n        return product;\\n    }\\n\\n    //limited to curve pools only, either 2 or 3 assets (mostly 2)\\n    function geometric_mean(uint8 n, uint256 product)\\n        external\\n        pure\\n        returns (uint256)\\n    {\\n        if (n == 2) {\\n            return FixedPointMathLib.sqrt(product);\\n        } else {\\n            //n == 3\\n            return IntegralMath.floorCbrt(product);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x771260414afb50c4937cc8185436eadf2292162955a4ea25cb1b8405d9a0e0fb\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/protocol/libraries/types/DataTypes.sol":{"DataTypes":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d6f5ea1b7545b0ab0f713103a7996c42753c25a811d36d8ab0abbb43cf295b2964736f6c63430008000033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 CREATE2 0xEA SHL PUSH22 0x45B0AB0F713103A7996C42753C25A811D36D8AB0ABBB NUMBER 0xCF 0x29 JUMPDEST 0x29 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ","sourceMap":"63:4392:29:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;63:4392:29;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d6f5ea1b7545b0ab0f713103a7996c42753c25a811d36d8ab0abbb43cf295b2964736f6c63430008000033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 CREATE2 0xEA SHL PUSH22 0x45B0AB0F713103A7996C42753C25A811D36D8AB0ABBB NUMBER 0xCF 0x29 JUMPDEST 0x29 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ","sourceMap":"63:4392:29:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/protocol/libraries/types/DataTypes.sol\":\"DataTypes\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/protocol/libraries/types/DataTypes.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity >=0.8.0;\\n\\nlibrary DataTypes {\\n    // refer to the whitepaper, section 1.1 basic concepts for a formal description of these properties.\\n\\n    enum ReserveAssetType {\\n        AAVE,\\n        CURVE\\n    } //update with other possible types of the underlying asset\\n    //AAVE is the original assets in the aave protocol\\n    //CURVE is the new LP tokens we are providing support for\\n\\n    struct AssetData {\\n        uint8 collateralRisk;\\n        bool isLendable;\\n        bool isAllowedCollateralInHigherTranches;\\n        ReserveAssetType assetType;\\n    }\\n\\n    struct TrancheAddress {\\n        uint8 tranche;\\n        address asset;\\n    }\\n    struct ReserveData {\\n        //stores the reserve configuration\\n        ReserveConfigurationMap configuration;\\n        //the liquidity index. Expressed in ray\\n        uint128 liquidityIndex; //not used for nonlendable assets\\n        //variable borrow index. Expressed in ray\\n        uint128 variableBorrowIndex; //not used for nonlendable assets\\n        //the current supply rate. Expressed in ray\\n        uint128 currentLiquidityRate; //deposit APR is defined as liquidityRate / RAY //not used for nonlendable assets\\n        //the current variable borrow rate. Expressed in ray\\n        uint128 currentVariableBorrowRate; //not used for nonlendable assets\\n        //the current stable borrow rate. Expressed in ray\\n        uint128 currentStableBorrowRate; //not used for nonlendable assets\\n        uint40 lastUpdateTimestamp;\\n        //tokens addresses\\n        address aTokenAddress;\\n        address stableDebtTokenAddress; //not used for nonlendable assets\\n        address variableDebtTokenAddress; //not used for nonlendable assets\\n        //address of the interest rate strategy\\n        address interestRateStrategyAddress; //not used for nonlendable assets\\n        //the id of the reserve. Represents the position in the list of the active reserves\\n        uint8 id;\\n        uint8 tranche; //I think this will be used for nonlendable assets, cause your collateral only asset can be placed in higher tranche if necessary\\n    }\\n\\n    struct TrancheMultiplier {\\n        uint256 liquidityRateMultiplier;\\n        uint256 variableBorrowRateMultiplier;\\n        uint256 stableBorrowRateMultiplier;\\n    }\\n\\n    uint8 constant NUM_TRANCHES = 3;\\n\\n    struct ReserveConfigurationMap {\\n        //bit 0-15: LTV\\n        //bit 16-31: Liq. threshold\\n        //bit 32-47: Liq. bonus\\n        //bit 48-55: Decimals\\n        //bit 56: Reserve is active\\n        //bit 57: reserve is frozen\\n        //bit 58: borrowing is enabled\\n        //bit 59: stable rate borrowing enabled\\n        //bit 60-63: reserved\\n        //bit 64-79: reserve factor\\n        uint256 data;\\n    }\\n\\n    struct UserConfigurationMap {\\n        uint256 data;\\n    }\\n\\n    enum InterestRateMode {\\n        NONE,\\n        STABLE,\\n        VARIABLE\\n    }\\n\\n    struct AcctTranche {\\n        address user;\\n        uint8 tranche;\\n    }\\n\\n    struct DepositVars {\\n        address asset;\\n        uint8 tranche;\\n        uint8 risk;\\n        bool allowHigherTranche;\\n        bool isLendable;\\n        TrancheMultiplier t;\\n    }\\n\\n    struct ExecuteBorrowParams {\\n        address asset;\\n        uint8 tranche; //tranche the user wants to borrow out of\\n        address user;\\n        address onBehalfOf;\\n        uint256 amount;\\n        uint256 interestRateMode;\\n        address aTokenAddress;\\n        uint16 referralCode;\\n        bool releaseUnderlying;\\n        uint256 _maxStableRateBorrowSizePercent;\\n        uint256 _reservesCount;\\n        TrancheMultiplier t;\\n    }\\n\\n    struct WithdrawParams {\\n        uint256 _reservesCount;\\n        address asset;\\n        uint8 tranche;\\n        uint256 amount;\\n        address to;\\n        TrancheMultiplier t;\\n    }\\n\\n    struct ValidateSetUseReserveAsCollateralParams {\\n        uint8 risk;\\n        bool allowHigherTranche;\\n    }\\n\\n    struct calculateInterestRatesVars {\\n        address reserve;\\n        address aToken;\\n        uint256 liquidityAdded;\\n        uint256 liquidityTaken;\\n        uint256 reserveFactor;\\n    }\\n\\n    struct flashLoanVars {\\n        address receiverAddress;\\n        DataTypes.TrancheAddress[] assets;\\n        uint256[] amounts;\\n        uint256[] modes;\\n        address onBehalfOf;\\n        bytes params;\\n        uint16 referralCode;\\n        uint256 _flashLoanPremiumTotal;\\n        address oracle;\\n        uint256 _maxStableRateBorrowSizePercent;\\n        uint256 _reservesCount;\\n    }\\n}\\n\",\"keccak256\":\"0x7302b5b5775a9a0019bd062c95d5a94a0b7bfa4553ae872968cf8ecf7c35fc8f\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}