/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { InitializableImmutableAdminUpgradeabilityProxy } from "./InitializableImmutableAdminUpgradeabilityProxy";

export class InitializableImmutableAdminUpgradeabilityProxyFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    admin: string,
    overrides?: Overrides
  ): Promise<InitializableImmutableAdminUpgradeabilityProxy> {
    return super.deploy(
      admin,
      overrides || {}
    ) as Promise<InitializableImmutableAdminUpgradeabilityProxy>;
  }
  getDeployTransaction(
    admin: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(admin, overrides || {});
  }
  attach(address: string): InitializableImmutableAdminUpgradeabilityProxy {
    return super.attach(
      address
    ) as InitializableImmutableAdminUpgradeabilityProxy;
  }
  connect(
    signer: Signer
  ): InitializableImmutableAdminUpgradeabilityProxyFactory {
    return super.connect(
      signer
    ) as InitializableImmutableAdminUpgradeabilityProxyFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): InitializableImmutableAdminUpgradeabilityProxy {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as InitializableImmutableAdminUpgradeabilityProxy;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_logic",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161089a38038061089a83398101604081905261002f91610044565b60601b6001600160601b031916608052610072565b600060208284031215610055578081fd5b81516001600160a01b038116811461006b578182fd5b9392505050565b60805160601c6107e86100b26000396000818160ff01528181610149015281816102020152818161034f01528181610378015261048a01526107e86000f3fe60806040526004361061004a5760003560e01c80633659cfe6146100545780634f1ef286146100745780635c60da1b14610087578063d1f57894146100b2578063f851a440146100c5575b6100526100da565b005b34801561006057600080fd5b5061005261006f36600461051a565b6100f4565b61005261008236600461053b565b61013e565b34801561009357600080fd5b5061009c6101f5565b6040516100a991906106b6565b60405180910390f35b6100526100c03660046105b9565b610242565b3480156100d157600080fd5b5061009c610342565b6100e261039c565b6100f26100ed6103a4565b6103c9565b565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156101335761012e816103ed565b61013b565b61013b6100da565b50565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156101e857610178836103ed565b6000836001600160a01b0316838360405161019492919061066d565b600060405180830381855af49150503d80600081146101cf576040519150601f19603f3d011682016040523d82523d6000602084013e6101d4565b606091505b50509050806101e257600080fd5b506101f0565b6101f06100da565b505050565b6000336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161415610237576102306103a4565b905061023f565b61023f6100da565b90565b600061024c6103a4565b6001600160a01b03161461025f57600080fd5b61028a60017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd610779565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc146102c657634e487b7160e01b600052600160045260246000fd5b6102cf8261042d565b80511561033e576000826001600160a01b0316826040516102f0919061067d565b600060405180830381855af49150503d806000811461032b576040519150601f19603f3d011682016040523d82523d6000602084013e610330565b606091505b50509050806101f057600080fd5b5050565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561023757507f000000000000000000000000000000000000000000000000000000000000000061023f565b6100f261047f565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b3660008037600080366000845af43d6000803e8080156103e8573d6000f35b3d6000fd5b6103f68161042d565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b610436816104d0565b61045b5760405162461bcd60e51b81526004016104529061071c565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156104c85760405162461bcd60e51b8152600401610452906106ca565b6100f26100f2565b600080826001600160a01b0316803b806020016040519081016040528181526000908060200190933c511190505b919050565b80356001600160a01b03811681146104fe57600080fd5b60006020828403121561052b578081fd5b61053482610503565b9392505050565b60008060006040848603121561054f578182fd5b61055884610503565b9250602084013567ffffffffffffffff80821115610574578384fd5b818601915086601f830112610587578384fd5b813581811115610595578485fd5b8760208285010111156105a6578485fd5b6020830194508093505050509250925092565b600080604083850312156105cb578182fd5b6105d483610503565b915060208084013567ffffffffffffffff808211156105f1578384fd5b818601915086601f830112610604578384fd5b8135818111156106165761061661079c565b604051601f8201601f19168101850183811182821017156106395761063961079c565b604052818152838201850189101561064f578586fd5b81858501868301378585838301015280955050505050509250929050565b6000828483379101908152919050565b60008251815b8181101561069d5760208186018101518583015201610683565b818111156106ab5782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b60208082526032908201527f43616e6e6f742063616c6c2066616c6c6261636b2066756e6374696f6e20667260408201527137b6903a343290383937bc3c9030b236b4b760711b606082015260800190565b6020808252603b908201527f43616e6e6f742073657420612070726f787920696d706c656d656e746174696f60408201527f6e20746f2061206e6f6e2d636f6e747261637420616464726573730000000000606082015260800190565b60008282101561079757634e487b7160e01b81526011600452602481fd5b500390565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220b6a7a859ff3946b0cc43269438fa4ca5171736127e5799775fffab8b5195306064736f6c63430008000033";
