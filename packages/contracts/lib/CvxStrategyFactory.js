"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CvxStrategyFactory = void 0;
const contracts_1 = require("@ethersproject/contracts");
class CvxStrategyFactory extends contracts_1.ContractFactory {
    constructor(linkLibraryAddresses, signer) {
        super(_abi, CvxStrategyFactory.linkBytecode(linkLibraryAddresses), signer);
    }
    static linkBytecode(linkLibraryAddresses) {
        let linkedBytecode = _bytecode;
        linkedBytecode = linkedBytecode.replace(new RegExp("__\\$7512de7f1b86abca670bc1676b640da4fd\\$__", "g"), linkLibraryAddresses["__$7512de7f1b86abca670bc1676b640da4fd$__"]
            .replace(/^0x/, "")
            .toLowerCase());
        return linkedBytecode;
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static connect(address, signerOrProvider) {
        return new contracts_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.CvxStrategyFactory = CvxStrategyFactory;
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint8",
                name: "version",
                type: "uint8",
            },
        ],
        name: "Initialized",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "Paused",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint256",
                name: "newMaxDeviationThreshold",
                type: "uint256",
            },
        ],
        name: "SetWithdrawalMaxDeviationThreshold",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "lendingPool",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "StrategyPullFromLendingPool",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "Unpaused",
        type: "event",
    },
    {
        inputs: [],
        name: "LEFTOVER",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "MAX_BPS",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_addressProvider",
                type: "address",
            },
            {
                internalType: "address",
                name: "_underlying",
                type: "address",
            },
            {
                internalType: "uint64",
                name: "_tranche",
                type: "uint64",
            },
        ],
        name: "__BaseStrategy_init",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "addressProvider",
        outputs: [
            {
                internalType: "contract ILendingPoolAddressesProvider",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "autoCompoundRatio",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        name: "averageR",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "balanceOf",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "balanceOfPool",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "balanceOfRewards",
        outputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "token",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                ],
                internalType: "struct IBaseStrategy.TokenAmount[]",
                name: "rewards",
                type: "tuple[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "balanceOfWant",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "baseStrategyVersion",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [],
        name: "calculateAverageRate",
        outputs: [
            {
                internalType: "uint256",
                name: "r",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "crvToken",
        outputs: [
            {
                internalType: "contract IERC20",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "cvxRewardsPool",
        outputs: [
            {
                internalType: "contract ICvxRewardsPool",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "cvxToken",
        outputs: [
            {
                internalType: "contract IERC20",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_token",
                type: "address",
            },
        ],
        name: "emitNonProtectedToken",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "extraRewardsTended",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getName",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [],
        name: "getProtectedTokens",
        outputs: [
            {
                internalType: "address[]",
                name: "",
                type: "address[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "governance",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "harvest",
        outputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "token",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                ],
                internalType: "struct IBaseStrategy.TokenAmount[]",
                name: "harvested",
                type: "tuple[]",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_addressProvider",
                type: "address",
            },
            {
                internalType: "uint64",
                name: "_tranche",
                type: "uint64",
            },
        ],
        name: "initialize",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "token",
                type: "address",
            },
        ],
        name: "isProtectedToken",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "isTendable",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [],
        name: "lastHarvestTime",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "lendingPool",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "pause",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "paused",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "pull",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_threshold",
                type: "uint256",
            },
        ],
        name: "setWithdrawalMaxDeviationThreshold",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "tend",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "crvTended",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "cvxTended",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "cvxCrvTended",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "extraRewardsTended",
                        type: "uint256",
                    },
                ],
                internalType: "struct IBaseStrategy.TendData",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "tranche",
        outputs: [
            {
                internalType: "uint64",
                name: "",
                type: "uint64",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "treasury",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "underlying",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "unpause",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "vToken",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_amount",
                type: "uint256",
            },
        ],
        name: "withdraw",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "withdrawAll",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_asset",
                type: "address",
            },
        ],
        name: "withdrawOther",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "withdrawalMaxDeviationThreshold",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x608060405260a180546001600160a01b03191673d9e1ce17f2641f24ae83637ab66a2cca9c378b9f17905534801561003657600080fd5b50612913806100466000396000f3fe608060405234801561001057600080fd5b50600436106102475760003560e01c80636ebc0af11161013b578063a0fd55e4116100b8578063e066ca131161007c578063e066ca131461041a578063ed4bdce114610422578063f935b78514610437578063fb883d0c1461043f578063fd967f471461044757610247565b8063a0fd55e4146102bc578063a59a9973146103ef578063c1a3d44c146103f7578063ceb0f626146103ff578063d704ba9b1461040757610247565b8063853828b6116100ff578063853828b6146103c757806394112dba146103cf5780639bb1a99c146103d75780639e356a04146103df5780639f934c70146103e757610247565b80636ebc0af1146103925780636f307dc3146103a7578063722713f7146103af5780637e744eea146103b75780638456cb59146103bf57610247565b806337e43d37116101c9578063549a72cf1161018d578063549a72cf1461035f5780635874a48e146103725780635aa6e6751461037a5780635c975abb1461038257806361d027b31461038a57610247565b806337e43d371461030757806338734bf0146103275780633f4ba83a1461033a578063440368a3146103425780634641257d1461035757610247565b80631bd43be3116102105780631bd43be3146102bc5780632954018c146102cf5780632e1a7d4d146102e4578063329eb839146102f757806332d7d66d146102ff57610247565b806284fc3c1461024c57806303bef16e1461026a578063115880861461028a5780631798de811461029257806317d7de7c146102a7575b600080fd5b61025461044f565b604051610261919061230a565b60405180910390f35b61027d610278366004611f1a565b6104d3565b6040516102619190612723565b61027d6104e5565b6102a56102a0366004611fa3565b610574565b005b6102af6106b2565b604051610261919061237b565b6102a56102ca366004611f1a565b6106dd565b6102d761070f565b6040516102619190612269565b6102a56102f23660046121da565b61071e565b61027d6108dc565b6102d7610ae1565b61031a610315366004611f1a565b610af9565b6040516102619190612362565b61027d61033536600461220a565b610ba3565b6102a5610bb5565b61034a610bc7565b60405161026191906126f8565b610254610bdf565b6102a561036d366004611f59565b610bf1565b6102d7610eb8565b6102d7610ed0565b61031a610f64565b6102d7610f6d565b61039a610f7c565b604051610261919061278f565b6102d7610f93565b61027d610fa2565b61031a610fbe565b6102a5610fc8565b6102a5610fd8565b6102d7611077565b6102d761108f565b61027d61109e565b61027d6110a4565b6102d7611102565b61027d611111565b61027d611142565b6102a56104153660046121da565b611148565b6102af6111b2565b61042a6111cf565b60405161026191906122f7565b61027d611240565b61027d611246565b61027d61124c565b604080516001808252818301909252606091816020015b61046e611e3d565b815260200190600190039081610466575050604080518082019091526068546001600160a01b03168152600060208201819052825192935090918391906104c557634e487b7160e01b600052603260045260246000fd5b602002602001018190525090565b606c6020526000908152604090205481565b6040516370a0823160e01b815260009073cf50b810e57ac33b91dcf525c6ddd9881b139332906370a082319061051f903090600401612269565b60206040518083038186803b15801561053757600080fd5b505afa15801561054b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056f91906121f2565b905090565b61059382734e3fbd56cd56c3e72c1403e103b45db9da5b9d2b83610bf1565b60a154604051639ce25b6d60e01b815273__$7512de7f1b86abca670bc1676b640da4fd$__91639ce25b6d916105ed917362b9c7356a2dc64a1969e19c23e4f579f9810aa7916001600160a01b039091169060040161227d565b60006040518083038186803b15801561060557600080fd5b505af4158015610619573d6000803e3d6000fd5b5050604051639ce25b6d60e01b815273__$7512de7f1b86abca670bc1676b640da4fd$__9250639ce25b6d915061067e90734e3fbd56cd56c3e72c1403e103b45db9da5b9d2b9073cf50b810e57ac33b91dcf525c6ddd9881b1393329060040161227d565b60006040518083038186803b15801561069657600080fd5b505af41580156106aa573d6000803e3d6000fd5b505050505050565b604080518082019091526011815270564d45582043565820537472617465677960781b602082015290565b6106e5611252565b6106ee8161127c565b60405162461bcd60e51b815260040161070690612616565b60405180910390fd5b6065546001600160a01b031681565b6107266112a2565b61072e611252565b8061074b5760405162461bcd60e51b81526004016107069061269f565b6068546040516370a0823160e01b81526000916001600160a01b0316906370a082319061077c903090600401612269565b60206040518083038186803b15801561079457600080fd5b505afa1580156107a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107cc91906121f2565b9050818110156107ea576107e86107e38284612825565b6112c7565b505b6068546040516370a0823160e01b81526000916001600160a01b0316906370a082319061081b903090600401612269565b60206040518083038186803b15801561083357600080fd5b505afa158015610847573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086b91906121f2565b9050828110156108bf576000610881848361133c565b9050612710606a54856108949190612806565b61089e91906127e6565b8111156108bd5760405162461bcd60e51b8152600401610706906124ce565b505b60006108cb8285611371565b90506108d681611387565b50505050565b60006108e66112a2565b6068546069546040516370a0823160e01b81526000926001600160a01b03908116926370a082319261091e9290911690600401612269565b60206040518083038186803b15801561093657600080fd5b505afa15801561094a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096e91906121f2565b90508015610a49576068546069546040516323b872dd60e01b81526001600160a01b03928316926323b872dd926109ae9291169030908690600401612297565b602060405180830381600087803b1580156109c857600080fd5b505af11580156109dc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a009190612082565b506066546040517f41c094631609360e5ddcb088ddb35d457392d95f374b7ee930a381e37c64949891610a40916001600160a01b039091169084906122bb565b60405180910390a15b6068546040516370a0823160e01b81526000916001600160a01b0316906370a0823190610a7a903090600401612269565b60206040518083038186803b158015610a9257600080fd5b505afa158015610aa6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aca91906121f2565b90508015610adb57610adb81611419565b50905090565b73d533a949740bb3306d119cc777fa900ba034cd5281565b60006001600160a01b038216610b215760405162461bcd60e51b8152600401610706906123fc565b6000610b2b6111cf565b905060005b8151811015610b9757818181518110610b5957634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b0316846001600160a01b03161415610b8557600192505050610b9e565b80610b8f8161283c565b915050610b30565b5060009150505b919050565b606e6020526000908152604090205481565b610bbd61150d565b610bc5611545565b565b610bcf611e54565b610bd76112a2565b61056f611597565b6060610be96112a2565b61056f611978565b600054610100900460ff1615808015610c115750600054600160ff909116105b80610c325750610c2030611992565b158015610c32575060005460ff166001145b610c4e5760405162461bcd60e51b815260040161070690612480565b6000805460ff191660011790558015610c71576000805461ff0019166101001790555b610c796112a2565b6001600160a01b038416610c9f5760405162461bcd60e51b8152600401610706906123fc565b610ca76119c3565b606580546001600160a01b0319166001600160a01b03868116919091179182905560408051630261bf8b60e01b815290519290911691630261bf8b91600480820192602092909190829003018186803b158015610d0357600080fd5b505afa158015610d17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3b9190611f3d565b606680546001600160a01b03199081166001600160a01b039384161791829055606880549091168684161767ffffffffffffffff60a01b1916600160a01b67ffffffffffffffff87811682029290921792839055604051633dd24bff60e11b815293851694637ba497fe94610dbe949182169392909104909116906004016122d4565b6102206040518083038186803b158015610dd757600080fd5b505afa158015610deb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e0f919061209c565b60e00151606980546001600160a01b0319166001600160a01b03928316179081905516610e4e5760405162461bcd60e51b815260040161070690612594565b6032606a55612710606b55606f805461ffff191661070017905580156108d6576000805461ff00191690556040517f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890610eaa9060019061236d565b60405180910390a150505050565b73cf50b810e57ac33b91dcf525c6ddd9881b13933281565b606554606854604051630847b4a360e01b81526000926001600160a01b031691630847b4a391610f1491600160a01b900467ffffffffffffffff169060040161278f565b60206040518083038186803b158015610f2c57600080fd5b505afa158015610f40573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056f9190611f3d565b60335460ff1690565b6067546001600160a01b031681565b606854600160a01b900467ffffffffffffffff1681565b6068546001600160a01b031681565b6000610fac6104e5565b610fb4611111565b61056f91906127ce565b600061056f6119f2565b610fd06119f7565b610bc5611a2f565b610fe0611252565b610fe8611a6d565b6068546040516370a0823160e01b81526000916001600160a01b0316906370a0823190611019903090600401612269565b60206040518083038186803b15801561103157600080fd5b505afa158015611045573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106991906121f2565b905061107481611387565b50565b734e3fbd56cd56c3e72c1403e103b45db9da5b9d2b81565b6069546001600160a01b031681565b606b5481565b600080805b60078160ff1610156110e65760ff81166000908152606e60205260409020546110d290836127ce565b9150806110de81612857565b9150506110a9565b50606f546110fc90610100900460ff16826127e6565b91505090565b6066546001600160a01b031681565b6068546040516370a0823160e01b81526000916001600160a01b0316906370a082319061051f903090600401612269565b606d5481565b61115061150d565b6127108111156111725760405162461bcd60e51b8152600401610706906126c1565b606a8190556040517f8ecea8428a8421d1b7c9bccc8078372994cca08df3683fa652c0d3d453e9281b906111a7908390612723565b60405180910390a150565b6040805180820190915260038152620312e360ec1b602082015290565b6040805160018082528183019092526060916000919060208083019080368337505060685482519293506001600160a01b03169183915060009061122357634e487b7160e01b600052603260045260246000fd5b6001600160a01b0390921660209283029190910190910152905090565b6103e881565b606a5481565b61271081565b6069546001600160a01b03163314610bc55760405162461bcd60e51b81526004016107069061253a565b61128581610af9565b156110745760405162461bcd60e51b81526004016107069061255d565b6112aa610f64565b15610bc55760405162461bcd60e51b815260040161070690612456565b604051631c683a1b60e11b815260009073cf50b810e57ac33b91dcf525c6ddd9881b139332906338d074369061130490859060019060040161272c565b600060405180830381600087803b15801561131e57600080fd5b505af1158015611332573d6000803e3d6000fd5b5093949350505050565b60008183101561135e5760405162461bcd60e51b815260040161070690612675565b6113688284612825565b90505b92915050565b60008183106113805781611368565b5090919050565b80156110745760685460695460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb926113c39291169085906004016122bb565b602060405180830381600087803b1580156113dd57600080fd5b505af11580156113f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114159190612082565b5050565b6040516370a0823160e01b815273cf50b810e57ac33b91dcf525c6ddd9881b1393329063a694fc3a90734e3fbd56cd56c3e72c1403e103b45db9da5b9d2b906370a082319061146c903090600401612269565b60206040518083038186803b15801561148457600080fd5b505afa158015611498573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114bc91906121f2565b6040518263ffffffff1660e01b81526004016114d89190612723565b600060405180830381600087803b1580156114f257600080fd5b505af1158015611506573d6000803e3d6000fd5b5050505050565b611515610ed0565b6001600160a01b0316336001600160a01b031614610bc55760405162461bcd60e51b81526004016107069061264d565b61154d611adc565b6033805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611580611b00565b60405161158d9190612269565b60405180910390a1565b61159f611e54565b60006115a96104e5565b90506115b3611e54565b60405163a4698feb60e01b815273cf50b810e57ac33b91dcf525c6ddd9881b1393329063a4698feb906115eb90600090600401612362565b600060405180830381600087803b15801561160557600080fd5b505af1158015611619573d6000803e3d6000fd5b50506040516370a0823160e01b81527362b9c7356a2dc64a1969e19c23e4f579f9810aa792506370a082319150611654903090600401612269565b60206040518083038186803b15801561166c57600080fd5b505afa158015611680573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116a491906121f2565b6040828101919091528051600480825260a08201909252600091602082016080803683370190505090507362b9c7356a2dc64a1969e19c23e4f579f9810aa78160008151811061170457634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b03168152505073d533a949740bb3306d119cc777fa900ba034cd528160018151811061175a57634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b03168152505073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2816002815181106117b057634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b031681525050734e3fbd56cd56c3e72c1403e103b45db9da5b9d2b8160038151811061180657634e487b7160e01b600052603260045260246000fd5b6001600160a01b03928316602091820292909201015260a15460408085015190516338ed173960e01b815291909216916338ed173991611852919060009086903090429060040161273c565b600060405180830381600087803b15801561186c57600080fd5b505af1158015611880573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526118a89190810190611fdb565b506040516370a0823160e01b815261193990734e3fbd56cd56c3e72c1403e103b45db9da5b9d2b906370a08231906118e4903090600401612269565b60206040518083038186803b1580156118fc57600080fd5b505afa158015611910573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061193491906121f2565b611419565b60006119436104e5565b90506119586119528583612825565b85611b04565b5042606d5561196f61196a8583612825565b611b96565b50909250505090565b606060405162461bcd60e51b81526004016107069061241f565b600080826001600160a01b0316803b806020016040519081016040528181526000908060200190933c511192915050565b600054610100900460ff166119ea5760405162461bcd60e51b8152600401610706906125cb565b610bc5611d49565b600190565b6119ff610ed0565b6001600160a01b0316336001600160a01b031614610bc55760405162461bcd60e51b815260040161070690612515565b611a376112a2565b6033805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611580611b00565b73cf50b810e57ac33b91dcf525c6ddd9881b1393326338d07436611a8f6104e5565b60006040518363ffffffff1660e01b8152600401611aae92919061272c565b600060405180830381600087803b158015611ac857600080fd5b505af11580156108d6573d6000803e3d6000fd5b611ae4610f64565b610bc55760405162461bcd60e51b8152600401610706906123ce565b3390565b600081611b0f611d7c565b611b199085612806565b611b2391906127e6565b611b2f9061016d612806565b606f805460ff9081166000908152606e602052604081208490558254939450921691611b5a83612857565b825460ff91821661010093840a9081029083021990911617909255606f549081048216911610905061136b57606f805460ff1916905592915050565b606654606854604051633dd24bff60e11b81526000926001600160a01b0390811692637ba497fe92611bdf92821691600160a01b900467ffffffffffffffff16906004016122d4565b6102206040518083038186803b158015611bf857600080fd5b505afa158015611c0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c30919061209c565b515190506000611c49611c4283611d8c565b8490611d96565b606954606654606854604051633dd24bff60e11b81529394506001600160a01b039283169363e2f024aa938693811692637ba497fe92611ca092821691600160a01b900467ffffffffffffffff16906004016122d4565b6102206040518083038186803b158015611cb957600080fd5b505afa158015611ccd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cf1919061209c565b602001516040518363ffffffff1660e01b8152600401611d12929190612778565b600060405180830381600087803b158015611d2c57600080fd5b505af1158015611d40573d6000803e3d6000fd5b50505050505050565b600054610100900460ff16611d705760405162461bcd60e51b8152600401610706906125cb565b6033805460ff19169055565b6b033b2e3c9fd0803ce800000090565b60501c61ffff1690565b6000821580611da3575081155b15611db05750600061136b565b81611dbe60026127106127e6565b611dca90600019612825565b611dd491906127e6565b83111560405180604001604052806002815260200161068760f31b81525090611e105760405162461bcd60e51b8152600401610706919061237b565b50612710611e1f6002826127e6565b611e298486612806565b611e3391906127ce565b61136891906127e6565b604080518082019091526000808252602082015290565b6040518060800160405280600081526020016000815260200160008152602001600081525090565b8051610b9e816128a3565b80518015158114610b9e57600080fd5b600060208284031215611ea8578081fd5b6040516020810181811067ffffffffffffffff82111715611ecb57611ecb61288d565b6040529151825250919050565b80516001600160801b0381168114610b9e57600080fd5b805164ffffffffff81168114610b9e57600080fd5b8051610b9e816128b8565b8051610b9e816128ce565b600060208284031215611f2b578081fd5b8135611f36816128a3565b9392505050565b600060208284031215611f4e578081fd5b8151611f36816128a3565b600080600060608486031215611f6d578182fd5b8335611f78816128a3565b92506020840135611f88816128a3565b91506040840135611f98816128b8565b809150509250925092565b60008060408385031215611fb5578182fd5b8235611fc0816128a3565b91506020830135611fd0816128b8565b809150509250929050565b60006020808385031215611fed578182fd5b825167ffffffffffffffff80821115612004578384fd5b818501915085601f830112612017578384fd5b8151818111156120295761202961288d565b83810291506120398483016127a4565b8181528481019084860184860187018a1015612053578788fd5b8795505b83861015612075578051835260019590950194918601918601612057565b5098975050505050505050565b600060208284031215612093578081fd5b61136882611e87565b60006102208083850312156120af578182fd5b6120b8816127a4565b90506120c48484611e97565b81526120d260208401611ed8565b60208201526120e360408401611ed8565b60408201526120f460608401611ed8565b606082015261210560808401611ed8565b608082015261211660a08401611ed8565b60a082015261212760c08401611eef565b60c082015261213860e08401611e7c565b60e082015261010061214b818501611e7c565b9082015261012061215d848201611e7c565b9082015261014061216f848201611e7c565b90820152610160612181848201611f0f565b90820152610180612193848201611f04565b908201526101a083810151908201526101c06121b0818501611e87565b908201526101e06121c2848201611e87565b90820152610200928301519281019290925250919050565b6000602082840312156121eb578081fd5b5035919050565b600060208284031215612203578081fd5b5051919050565b60006020828403121561221b578081fd5b8135611f36816128ce565b6000815180845260208085019450808401835b8381101561225e5781516001600160a01b031687529582019590820190600101612239565b509495945050505050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0392909216825267ffffffffffffffff16602082015260400190565b6000602082526113686020830184612226565b602080825282518282018190526000919060409081850190868401855b8281101561235557815180516001600160a01b03168552860151868501529284019290850190600101612327565b5091979650505050505050565b901515815260200190565b60ff91909116815260200190565b6000602080835283518082850152825b818110156123a75785810183015185820160400152820161238b565b818111156123b85783604083870101525b50601f01601f1916929092016040019392505050565b60208082526014908201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604082015260600190565b60208082526009908201526804164647265737320360bc1b604082015260600190565b60208082526017908201527f68617276657374206e6f7420696d706c656d656e746564000000000000000000604082015260600190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60208082526027908201527f77697468647261772d6578636565642d6d61782d646576696174696f6e2d74686040820152661c995cda1bdb1960ca1b606082015260800190565b6020808252600b908201526a6f6e6c795061757365727360a81b604082015260600190565b6020808252600990820152681bdb9b1e55985d5b1d60ba1b604082015260600190565b60208082526017908201527f5f6f6e6c794e6f7450726f746563746564546f6b656e73000000000000000000604082015260600190565b6020808252601e908201527f76546f6b656e20616464726573732063616e206e6f74206265207a65726f0000604082015260600190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6020808252601d908201527f45787472612072657761726473206e6f7420696d706c656d656e746564000000604082015260600190565b6020808252600e908201526d6f6e6c79476f7665726e616e636560901b604082015260600190565b60208082526010908201526f309039b437bab632103132901f1e903160811b604082015260600190565b6020808252600890820152670416d6f756e7420360c41b604082015260600190565b6020808252601f908201527f5f7468726573686f6c642073686f756c64206265203c3d204d41585f42505300604082015260600190565b8151815260208083015190820152604080830151908201526060918201519181019190915260800190565b90815260200190565b9182521515602082015260400190565b600086825285602083015260a0604083015261275b60a0830186612226565b6001600160a01b0394909416606083015250608001529392505050565b9182526001600160801b0316602082015260400190565b67ffffffffffffffff91909116815260200190565b60405181810167ffffffffffffffff811182821017156127c6576127c661288d565b604052919050565b600082198211156127e1576127e1612877565b500190565b60008261280157634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561282057612820612877565b500290565b60008282101561283757612837612877565b500390565b600060001982141561285057612850612877565b5060010190565b600060ff821660ff81141561286e5761286e612877565b60010192915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461107457600080fd5b67ffffffffffffffff8116811461107457600080fd5b60ff8116811461107457600080fdfea2646970667358221220f4be5e9d2ba9ffb75e0ff1807aeedf95bb1a2cdb31cdc75969979037501c4d6d64736f6c63430008000033";
//# sourceMappingURL=CvxStrategyFactory.js.map