"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.DefaultReserveInterestRateStrategyFactory = void 0;
const contracts_1 = require("@ethersproject/contracts");
class DefaultReserveInterestRateStrategyFactory extends contracts_1.ContractFactory {
    constructor(signer) {
        super(_abi, _bytecode, signer);
    }
    deploy(provider, optimalUtilizationRate, baseVariableBorrowRate, variableRateSlope1, variableRateSlope2, stableRateSlope1, stableRateSlope2, overrides) {
        return super.deploy(provider, optimalUtilizationRate, baseVariableBorrowRate, variableRateSlope1, variableRateSlope2, stableRateSlope1, stableRateSlope2, overrides || {});
    }
    getDeployTransaction(provider, optimalUtilizationRate, baseVariableBorrowRate, variableRateSlope1, variableRateSlope2, stableRateSlope1, stableRateSlope2, overrides) {
        return super.getDeployTransaction(provider, optimalUtilizationRate, baseVariableBorrowRate, variableRateSlope1, variableRateSlope2, stableRateSlope1, stableRateSlope2, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static connect(address, signerOrProvider) {
        return new contracts_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.DefaultReserveInterestRateStrategyFactory = DefaultReserveInterestRateStrategyFactory;
const _abi = [
    {
        inputs: [
            {
                internalType: "contract ILendingPoolAddressesProvider",
                name: "provider",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "optimalUtilizationRate",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "baseVariableBorrowRate",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "variableRateSlope1",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "variableRateSlope2",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "stableRateSlope1",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "stableRateSlope2",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "EXCESS_UTILIZATION_RATE",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "OPTIMAL_UTILIZATION_RATE",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "addressesProvider",
        outputs: [
            {
                internalType: "contract ILendingPoolAddressesProvider",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "baseVariableBorrowRate",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "reserve",
                type: "address",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "liquidityRateMultiplier",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "variableBorrowRateMultiplier",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "stableBorrowRateMultiplier",
                        type: "uint256",
                    },
                ],
                internalType: "struct DataTypes.TrancheMultiplier",
                name: "multiplier",
                type: "tuple",
            },
            {
                internalType: "address",
                name: "aToken",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "liquidityAdded",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "liquidityTaken",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "totalStableDebt",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "totalVariableDebt",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "averageStableBorrowRate",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "reserveFactor",
                type: "uint256",
            },
        ],
        name: "calculateInterestRates",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "reserve",
                type: "address",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "liquidityRateMultiplier",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "variableBorrowRateMultiplier",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "stableBorrowRateMultiplier",
                        type: "uint256",
                    },
                ],
                internalType: "struct DataTypes.TrancheMultiplier",
                name: "multiplier",
                type: "tuple",
            },
            {
                internalType: "uint256",
                name: "availableLiquidity",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "totalStableDebt",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "totalVariableDebt",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "averageStableBorrowRate",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "reserveFactor",
                type: "uint256",
            },
        ],
        name: "calculateInterestRates",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getMaxVariableBorrowRate",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "stableRateSlope1",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "stableRateSlope2",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "variableRateSlope1",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "variableRateSlope2",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x61018060405234801561001157600080fd5b50604051611070380380611070833981016040819052610030916100b8565b85608081815250506100608661004e61009560201b61081f1760201c565b6100a560201b61082f1790919060201c565b60a05260609690961b6001600160601b03191660c05260e0939093526101009190915261012052610140525061016052610142565b6b033b2e3c9fd0803ce800000090565b60006100b1828461011f565b9392505050565b600080600080600080600060e0888a0312156100d2578283fd5b87516001600160a01b03811681146100e8578384fd5b602089015160408a015160608b015160808c015160a08d015160c0909d0151949e939d50919b909a50909850965090945092505050565b60008282101561013d57634e487b7160e01b81526011600452602481fd5b500390565b60805160a05160c05160601c60e05161010051610120516101405161016051610e4f6102216000396000818161056801526107fd015260008181610150015281816105980152610682015260008181610198015281816102a401526105c901526000818161027b015281816102e90152818161061401526106ec0152600081816102c80152818161033e015281816105f301526107120152600081816103c001526107d9015260008181610174015261050201526000818161031a015281816104d6015281816105260152818161064e01526106c60152610e4f6000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806380031e371161007157806380031e3714610106578063a15f30ac1461010e578063b258954414610116578063ba29fcfb1461011e578063c72c4d1014610131578063ccab01a314610146576100a9565b80630bdf953f146100ae57806317319873146100cc57806365614f81146100d457806374c2e91a146100dc5780637b832f58146100fe575b600080fd5b6100b661014e565b6040516100c39190610d5e565b60405180910390f35b6100b6610172565b6100b6610196565b6100ef6100ea366004610bfc565b6101ba565b6040516100c393929190610d67565b6100b6610279565b6100b661029d565b6100b6610318565b6100b661033c565b6100ef61012c366004610c7d565b610360565b6101396107d7565b6040516100c39190610cf7565b6100b66107fb565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000090565b6000806000808c6001600160a01b03166370a082318c6040518263ffffffff1660e01b81526004016101ec9190610cf7565b60206040518083038186803b15801561020457600080fd5b505afa158015610218573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023c9190610cdf565b90506102528961024c838d610844565b9061082f565b90506102638d8d838b8b8b8b610360565b9350935093505099509950999650505050505050565b7f000000000000000000000000000000000000000000000000000000000000000090565b60006103137f000000000000000000000000000000000000000000000000000000000000000061030d7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610844565b90610844565b905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000090565b600080600061036d610b43565b6103778888610844565b808252600060208301819052604083018190526060830152156103b25780516103ad906103a5908b90610844565b825190610850565b6103b5565b60005b8160800181815250507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633618abba6040518163ffffffff1660e01b815260040160206040518083038186803b15801561041757600080fd5b505afa15801561042b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044f9190610bd9565b6001600160a01b031663bb85c0bb8c6040518263ffffffff1660e01b815260040161047a9190610cf7565b60206040518083038186803b15801561049257600080fd5b505afa1580156104a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ca9190610cdf565b604082015260808101517f0000000000000000000000000000000000000000000000000000000000000000101561064357600061055e7f00000000000000000000000000000000000000000000000000000000000000006105587f0000000000000000000000000000000000000000000000000000000000000000856080015161082f90919063ffffffff16565b90610850565b90506105bc61058d7f000000000000000000000000000000000000000000000000000000000000000083610937565b604084015161030d907f0000000000000000000000000000000000000000000000000000000000000000610844565b60408301526106386105ee7f000000000000000000000000000000000000000000000000000000000000000083610937565b61030d7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610844565b60208301525061073d565b6106b26106a76106807f0000000000000000000000000000000000000000000000000000000000000000846080015161085090919063ffffffff16565b7f000000000000000000000000000000000000000000000000000000000000000090610937565b604083015190610844565b6040820152608081015161073790610710907f000000000000000000000000000000000000000000000000000000000000000090610558907f0000000000000000000000000000000000000000000000000000000000000000610937565b7f000000000000000000000000000000000000000000000000000000000000000090610844565b60208201525b61077061074c6127108761082f565b61076a83608001516107648c8c87602001518d6109f2565b90610937565b90610a57565b606082018190528a516107839190610937565b60608201526040808b01519082015161079b91610937565b60408201526020808b0151908201516107b391610937565b602082018190526060820151604090920151919c919b509950975050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000090565b6b033b2e3c9fd0803ce800000090565b600061083b8284610dd4565b90505b92915050565b600061083b8284610d7d565b604080518082019091526002815261035360f41b6020820152600090826108935760405162461bcd60e51b815260040161088a9190610d0b565b60405180910390fd5b5060006108a1600284610d95565b90506b033b2e3c9fd0803ce80000006108bc82600019610dd4565b6108c69190610d95565b84111560405180604001604052806002815260200161068760f31b815250906109025760405162461bcd60e51b815260040161088a9190610d0b565b50828161091b6b033b2e3c9fd0803ce800000087610db5565b6109259190610d7d565b61092f9190610d95565b949350505050565b6000821580610944575081155b156109515750600061083e565b8161096960026b033b2e3c9fd0803ce8000000610d95565b61097590600019610dd4565b61097f9190610d95565b83111560405180604001604052806002815260200161068760f31b815250906109bb5760405162461bcd60e51b815260040161088a9190610d0b565b506b033b2e3c9fd0803ce80000006109d4600282610d95565b6109de8486610db5565b6109e89190610d7d565b61083b9190610d95565b6000806109ff8686610844565b905080610a1057600091505061092f565b6000610a1f8561076488610ae0565b90506000610a30856107648a610ae0565b90506000610a4a610a4085610ae0565b6105588585610844565b9998505050505050505050565b6000821580610a64575081155b15610a715750600061083e565b81610a7f6002612710610d95565b610a8b90600019610dd4565b610a959190610d95565b83111560405180604001604052806002815260200161068760f31b81525090610ad15760405162461bcd60e51b815260040161088a9190610d0b565b506127106109d4600282610d95565b600080610af1633b9aca0084610db5565b905082610b02633b9aca0083610d95565b1460405180604001604052806002815260200161068760f31b81525090610b3c5760405162461bcd60e51b815260040161088a9190610d0b565b5092915050565b6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b600060608284031215610b83578081fd5b6040516060810181811067ffffffffffffffff82111715610bb257634e487b7160e01b83526041600452602483fd5b80604052508091508235815260208301356020820152604083013560408201525092915050565b600060208284031215610bea578081fd5b8151610bf581610e01565b9392505050565b60008060008060008060008060006101608a8c031215610c1a578485fd5b8935610c2581610e01565b9850610c348b60208c01610b72565b975060808a0135610c4481610e01565b989b979a50979860a0810135985060c08101359760e0820135975061010082013596506101208201359550610140909101359350915050565b6000806000806000806000610120888a031215610c98578283fd5b8735610ca381610e01565b9650610cb28960208a01610b72565b969996985050505060808501359460a08101359460c0820135945060e08201359350610100909101359150565b600060208284031215610cf0578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6000602080835283518082850152825b81811015610d3757858101830151858201604001528201610d1b565b81811115610d485783604083870101525b50601f01601f1916929092016040019392505050565b90815260200190565b9283526020830191909152604082015260600190565b60008219821115610d9057610d90610deb565b500190565b600082610db057634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610dcf57610dcf610deb565b500290565b600082821015610de657610de6610deb565b500390565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114610e1657600080fd5b5056fea264697066735822122096cfe4a40140c3c9f157c222484be1744a2007e90e56e4a4e4273599f4a75d7364736f6c63430008000033";
