import { MockTokenMap } from "./contracts-helpers";
import { PoolConfiguration, tEthereumAddress } from "./types";
export declare const getFirstSigner: () => Promise<import("ethers").Signer>;
export declare const getEmergencyAdmin: () => Promise<import("ethers").Signer>;
export declare const getLendingPoolAddressesProvider: (address?: tEthereumAddress) => Promise<import("../types").LendingPoolAddressesProvider>;
export declare const getLendingPoolConfiguratorProxy: (address?: tEthereumAddress) => Promise<import("../types").LendingPoolConfigurator>;
export declare const getLendingPool: (address?: tEthereumAddress) => Promise<import("../types").LendingPool>;
export declare const getPriceOracle: (address?: tEthereumAddress) => Promise<import("../types").PriceOracle>;
export declare const getCurvePriceOracleWrapper: (address?: tEthereumAddress) => Promise<import("../types").CurveWrapper>;
export declare const getAToken: (address?: tEthereumAddress) => Promise<import("../types").AToken>;
export declare const getStableDebtToken: (address?: tEthereumAddress) => Promise<import("../types").StableDebtToken>;
export declare const getVariableDebtToken: (address?: tEthereumAddress) => Promise<import("../types").VariableDebtToken>;
export declare const getMintableERC20: (address: tEthereumAddress) => Promise<import("../types").MintableERC20>;
export declare const getIErc20Detailed: (address: tEthereumAddress) => Promise<import("../types/IERC20Detailed").IERC20Detailed>;
export declare const getAaveProtocolDataProvider: (address?: tEthereumAddress) => Promise<import("../types").AaveProtocolDataProvider>;
export declare const getInterestRateStrategy: (address?: tEthereumAddress) => Promise<import("../types").DefaultReserveInterestRateStrategy>;
export declare const getMockFlashLoanReceiver: (address?: tEthereumAddress) => Promise<import("../types").MockFlashLoanReceiver>;
export declare const getLendingRateOracle: (address?: tEthereumAddress) => Promise<import("../types").LendingRateOracle>;
export declare const getMockedTokens: (config: PoolConfiguration) => Promise<MockTokenMap>;
export declare const getAllMockedTokens: () => Promise<MockTokenMap>;
export declare const getQuoteCurrencies: (oracleQuoteCurrency: string) => string[];
export declare const getPairsTokenAggregator: (allAssetsAddresses: {
    [tokenSymbol: string]: string;
}, aggregatorsAddresses: {
    [tokenSymbol: string]: string;
}, oracleQuoteCurrency: string) => [string[], string[]];
export declare const getLendingPoolAddressesProviderRegistry: (address?: tEthereumAddress) => Promise<import("../types").LendingPoolAddressesProviderRegistry>;
export declare const getReserveLogic: (address?: tEthereumAddress) => Promise<import("../types").ReserveLogic>;
export declare const getGenericLogic: (address?: tEthereumAddress) => Promise<import("../types").GenericLogic>;
export declare const getStableAndVariableTokensHelper: (address?: tEthereumAddress) => Promise<import("../types").StableAndVariableTokensHelper>;
export declare const getATokensAndRatesHelper: (address?: tEthereumAddress) => Promise<import("../types").ATokensAndRatesHelper>;
export declare const getWETHGateway: (address?: tEthereumAddress) => Promise<import("../types").WETHGateway>;
export declare const getWETHMocked: (address?: tEthereumAddress) => Promise<import("../types").WETH9Mocked>;
export declare const getMockAToken: (address?: tEthereumAddress) => Promise<import("../types").MockAToken>;
export declare const getMockVariableDebtToken: (address?: tEthereumAddress) => Promise<import("../types").MockVariableDebtToken>;
export declare const getMockStableDebtToken: (address?: tEthereumAddress) => Promise<import("../types").MockStableDebtToken>;
export declare const getSelfdestructTransferMock: (address?: tEthereumAddress) => Promise<import("../types").SelfdestructTransfer>;
export declare const getProxy: (address: tEthereumAddress) => Promise<import("../types").InitializableAdminUpgradeabilityProxy>;
export declare const getLendingPoolImpl: (address?: tEthereumAddress) => Promise<import("../types").LendingPool>;
export declare const getLendingPoolConfiguratorImpl: (address?: tEthereumAddress) => Promise<import("../types").LendingPoolConfigurator>;
export declare const getLendingPoolCollateralManagerImpl: (address?: tEthereumAddress) => Promise<import("../types").LendingPoolCollateralManager>;
export declare const getWalletProvider: (address?: tEthereumAddress) => Promise<import("../types").WalletBalanceProvider>;
export declare const getLendingPoolCollateralManager: (address?: tEthereumAddress) => Promise<import("../types").LendingPoolCollateralManager>;
export declare const getAddressById: (id: string) => Promise<tEthereumAddress | undefined>;
export declare const getAaveOracle: (address?: tEthereumAddress) => Promise<import("../types").AaveOracle>;
export declare const getTricrypto2Strategy: (address?: tEthereumAddress) => Promise<any>;
export declare const getConvexBooster: (address?: tEthereumAddress) => Promise<any>;
export declare const getMockUniswapRouter: (address?: tEthereumAddress) => Promise<import("../types").MockUniswapV2Router02>;
export declare const getUniswapLiquiditySwapAdapter: (address?: tEthereumAddress) => Promise<import("../types").UniswapLiquiditySwapAdapter>;
export declare const getUniswapRepayAdapter: (address?: tEthereumAddress) => Promise<import("../types").UniswapRepayAdapter>;
export declare const getFlashLiquidationAdapter: (address?: tEthereumAddress) => Promise<import("../types").FlashLiquidationAdapter>;
export declare const getMockParaSwapAugustus: (address?: tEthereumAddress) => Promise<import("../types").MockParaSwapAugustus>;
export declare const getMockParaSwapAugustusRegistry: (address?: tEthereumAddress) => Promise<import("../types").MockParaSwapAugustusRegistry>;
export declare const getParaSwapLiquiditySwapAdapter: (address?: tEthereumAddress) => Promise<import("../types").ParaSwapLiquiditySwapAdapter>;
