/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { BaseAdminUpgradeabilityProxy } from "./BaseAdminUpgradeabilityProxy";

export class BaseAdminUpgradeabilityProxyFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<BaseAdminUpgradeabilityProxy> {
    return super.deploy(
      overrides || {}
    ) as Promise<BaseAdminUpgradeabilityProxy>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BaseAdminUpgradeabilityProxy {
    return super.attach(address) as BaseAdminUpgradeabilityProxy;
  }
  connect(signer: Signer): BaseAdminUpgradeabilityProxyFactory {
    return super.connect(signer) as BaseAdminUpgradeabilityProxyFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BaseAdminUpgradeabilityProxy {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as BaseAdminUpgradeabilityProxy;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "changeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506106ac806100206000396000f3fe60806040526004361061004a5760003560e01c80633659cfe6146100545780634f1ef286146100745780635c60da1b146100875780638f283970146100b2578063f851a440146100d2575b6100526100e7565b005b34801561006057600080fd5b5061005261006f366004610494565b610101565b6100526100823660046104b5565b61013b565b34801561009357600080fd5b5061009c6101e2565b6040516100a99190610543565b60405180910390f35b3480156100be57600080fd5b506100526100cd366004610494565b61021f565b3480156100de57600080fd5b5061009c6102b8565b6100ef6102e3565b6100ff6100fa610324565b610349565b565b61010961036d565b6001600160a01b0316336001600160a01b031614156101305761012b81610392565b610138565b6101386100e7565b50565b61014361036d565b6001600160a01b0316336001600160a01b031614156101d55761016583610392565b6000836001600160a01b03168383604051610181929190610533565b600060405180830381855af49150503d80600081146101bc576040519150601f19603f3d011682016040523d82523d6000602084013e6101c1565b606091505b50509050806101cf57600080fd5b506101dd565b6101dd6100e7565b505050565b60006101ec61036d565b6001600160a01b0316336001600160a01b031614156102145761020d610324565b905061021c565b61021c6100e7565b90565b61022761036d565b6001600160a01b0316336001600160a01b03161415610130576001600160a01b03811661026f5760405162461bcd60e51b8152600401610266906105c3565b60405180910390fd5b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f61029861036d565b826040516102a7929190610557565b60405180910390a161012b816103d2565b60006102c261036d565b6001600160a01b0316336001600160a01b031614156102145761020d61036d565b6102eb61036d565b6001600160a01b0316336001600160a01b0316141561031c5760405162461bcd60e51b815260040161026690610571565b6100ff6100ff565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b3660008037600080366000845af43d6000803e808015610368573d6000f35b3d6000fd5b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b61039b816103f6565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610355565b6103ff8161043f565b61041b5760405162461bcd60e51b815260040161026690610619565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061047357508115155b925050505b919050565b80356001600160a01b038116811461047857600080fd5b6000602082840312156104a5578081fd5b6104ae8261047d565b9392505050565b6000806000604084860312156104c9578182fd5b6104d28461047d565b9250602084013567ffffffffffffffff808211156104ee578384fd5b818601915086601f830112610501578384fd5b81358181111561050f578485fd5b876020828501011115610520578485fd5b6020830194508093505050509250925092565b6000828483379101908152919050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b60208082526032908201527f43616e6e6f742063616c6c2066616c6c6261636b2066756e6374696f6e20667260408201527137b6903a343290383937bc3c9030b236b4b760711b606082015260800190565b60208082526036908201527f43616e6e6f74206368616e6765207468652061646d696e206f6620612070726f604082015275787920746f20746865207a65726f206164647265737360501b606082015260800190565b6020808252603b908201527f43616e6e6f742073657420612070726f787920696d706c656d656e746174696f60408201527f6e20746f2061206e6f6e2d636f6e74726163742061646472657373000000000060608201526080019056fea26469706673582212205a9150a4781199c381cb31e6f28878305b13e505a2f2708ba0466c75d6f0da3464736f6c63430008000033";
