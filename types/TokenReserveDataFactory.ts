/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { TokenReserveData } from "./TokenReserveData";

export class TokenReserveDataFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    provider: string,
    token: string,
    overrides?: Overrides
  ): Promise<TokenReserveData> {
    return super.deploy(
      provider,
      token,
      overrides || {}
    ) as Promise<TokenReserveData>;
  }
  getDeployTransaction(
    provider: string,
    token: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(provider, token, overrides || {});
  }
  attach(address: string): TokenReserveData {
    return super.attach(address) as TokenReserveData;
  }
  connect(signer: Signer): TokenReserveDataFactory {
    return super.connect(signer) as TokenReserveDataFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenReserveData {
    return new Contract(address, _abi, signerOrProvider) as TokenReserveData;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getType",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "data",
                type: "uint256",
              },
            ],
            internalType: "struct DataTypes.ReserveConfigurationMap",
            name: "configuration",
            type: "tuple",
          },
          {
            internalType: "uint128",
            name: "liquidityIndex",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "variableBorrowIndex",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "currentLiquidityRate",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "currentVariableBorrowRate",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "currentStableBorrowRate",
            type: "uint128",
          },
          {
            internalType: "uint40",
            name: "lastUpdateTimestamp",
            type: "uint40",
          },
          {
            internalType: "address",
            name: "aTokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "stableDebtTokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "variableDebtTokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "interestRateStrategyAddress",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "id",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "tranche",
            type: "uint8",
          },
        ],
        internalType: "struct DataTypes.ReserveData[3]",
        name: "",
        type: "tuple[3]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516102c93803806102c983398101604081905261002f91610132565b610037610063565b60008160405160200161004a9190610195565b6040516020818303038152906040529050805181602001f35b60405180606001604052806003905b61007a610090565b8152602001906001900390816100725790505090565b604051806101a001604052806100a4610103565b815260006020820181905260408201819052606082018190526080820181905260a0820181905260c0820181905260e0820181905261010082018190526101208201819052610140820181905261016082018190526101809091015290565b6040518060200160405280600081525090565b80516001600160a01b038116811461012d57600080fd5b919050565b60008060408385031215610144578182fd5b61014d83610116565b915061015b60208401610116565b90509250929050565b6001600160a01b03169052565b519052565b6001600160801b03169052565b64ffffffffff169052565b60ff169052565b6104e08101818360005b60038110156102bf5781516101b5848251610171565b6020808201516101c782870182610176565b506040808301516101da82880182610176565b50506060808301516101ee82880182610176565b505060808083015161020282880182610176565b505060a08083015161021682880182610176565b505060c08083015161022a82880182610183565b505060e08083015161023e82880182610164565b50506101008083015161025382880182610164565b50506101208083015161026882880182610164565b50506101408083015161027d82880182610164565b5050610160808301516102928288018261018e565b505061018091820151916102a88682018461018e565b506101a0949094019392909201915060010161019f565b5050509291505056fe";
