/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BytesLike } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import {
  Contract,
  ContractFactory,
  PayableOverrides,
} from "@ethersproject/contracts";

import type { AdminUpgradeabilityProxy } from "./AdminUpgradeabilityProxy";

export class AdminUpgradeabilityProxyFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _logic: string,
    _admin: string,
    _data: BytesLike,
    overrides?: PayableOverrides
  ): Promise<AdminUpgradeabilityProxy> {
    return super.deploy(
      _logic,
      _admin,
      _data,
      overrides || {}
    ) as Promise<AdminUpgradeabilityProxy>;
  }
  getDeployTransaction(
    _logic: string,
    _admin: string,
    _data: BytesLike,
    overrides?: PayableOverrides
  ): TransactionRequest {
    return super.getDeployTransaction(_logic, _admin, _data, overrides || {});
  }
  attach(address: string): AdminUpgradeabilityProxy {
    return super.attach(address) as AdminUpgradeabilityProxy;
  }
  connect(signer: Signer): AdminUpgradeabilityProxyFactory {
    return super.connect(signer) as AdminUpgradeabilityProxyFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AdminUpgradeabilityProxy {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AdminUpgradeabilityProxy;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_logic",
        type: "address",
      },
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "changeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260405162000af038038062000af083398101604081905262000026916200022e565b82816200005560017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd6200037f565b60008051602062000ad0833981519152146200008157634e487b7160e01b600052600160045260246000fd5b6200008c8262000173565b80511562000103576000826001600160a01b031682604051620000b0919062000304565b600060405180830381855af49150503d8060008114620000ed576040519150601f19603f3d011682016040523d82523d6000602084013e620000f2565b606091505b50509050806200010157600080fd5b505b5062000133905060017fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61046200037f565b60008051602062000ab0833981519152146200015f57634e487b7160e01b600052600160045260246000fd5b6200016a82620001c4565b505050620003ec565b6200018981620001d760201b620002e31760201c565b620001b15760405162461bcd60e51b8152600401620001a89062000322565b60405180910390fd5b60008051602062000ad083398151915255565b60008051602062000ab083398151915255565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906200020c57508115155b925050505b919050565b80516001600160a01b03811681146200021157600080fd5b60008060006060848603121562000243578283fd5b6200024e8462000216565b92506200025e6020850162000216565b60408501519092506001600160401b03808211156200027b578283fd5b818601915086601f8301126200028f578283fd5b815181811115620002a457620002a4620003d6565b604051601f8201601f191681016020018381118282101715620002cb57620002cb620003d6565b604052818152838201602001891015620002e3578485fd5b620002f6826020830160208701620003a3565b809450505050509250925092565b6000825162000318818460208701620003a3565b9190910192915050565b6020808252603b908201527f43616e6e6f742073657420612070726f787920696d706c656d656e746174696f60408201527f6e20746f2061206e6f6e2d636f6e747261637420616464726573730000000000606082015260800190565b6000828210156200039e57634e487b7160e01b81526011600452602481fd5b500390565b60005b83811015620003c0578181015183820152602001620003a6565b83811115620003d0576000848401525b50505050565b634e487b7160e01b600052604160045260246000fd5b6106b480620003fc6000396000f3fe60806040526004361061004a5760003560e01c80633659cfe6146100545780634f1ef286146100745780635c60da1b146100875780638f283970146100b2578063f851a440146100d2575b6100526100e7565b005b34801561006057600080fd5b5061005261006f36600461049c565b610101565b6100526100823660046104bd565b61013b565b34801561009357600080fd5b5061009c6101e2565b6040516100a9919061054b565b60405180910390f35b3480156100be57600080fd5b506100526100cd36600461049c565b61021f565b3480156100de57600080fd5b5061009c6102b8565b6100ef610321565b6100ff6100fa610329565b61034e565b565b610109610372565b6001600160a01b0316336001600160a01b031614156101305761012b81610397565b610138565b6101386100e7565b50565b610143610372565b6001600160a01b0316336001600160a01b031614156101d55761016583610397565b6000836001600160a01b0316838360405161018192919061053b565b600060405180830381855af49150503d80600081146101bc576040519150601f19603f3d011682016040523d82523d6000602084013e6101c1565b606091505b50509050806101cf57600080fd5b506101dd565b6101dd6100e7565b505050565b60006101ec610372565b6001600160a01b0316336001600160a01b031614156102145761020d610329565b905061021c565b61021c6100e7565b90565b610227610372565b6001600160a01b0316336001600160a01b03161415610130576001600160a01b03811661026f5760405162461bcd60e51b8152600401610266906105cb565b60405180910390fd5b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f610298610372565b826040516102a792919061055f565b60405180910390a161012b816103d7565b60006102c2610372565b6001600160a01b0316336001600160a01b031614156102145761020d610372565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061031757508115155b925050505b919050565b6100ff6103fb565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b3660008037600080366000845af43d6000803e80801561036d573d6000f35b3d6000fd5b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b6103a08161043c565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610355565b610403610372565b6001600160a01b0316336001600160a01b031614156104345760405162461bcd60e51b815260040161026690610579565b6100ff6100ff565b610445816102e3565b6104615760405162461bcd60e51b815260040161026690610621565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b80356001600160a01b038116811461031c57600080fd5b6000602082840312156104ad578081fd5b6104b682610485565b9392505050565b6000806000604084860312156104d1578182fd5b6104da84610485565b9250602084013567ffffffffffffffff808211156104f6578384fd5b818601915086601f830112610509578384fd5b813581811115610517578485fd5b876020828501011115610528578485fd5b6020830194508093505050509250925092565b6000828483379101908152919050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b60208082526032908201527f43616e6e6f742063616c6c2066616c6c6261636b2066756e6374696f6e20667260408201527137b6903a343290383937bc3c9030b236b4b760711b606082015260800190565b60208082526036908201527f43616e6e6f74206368616e6765207468652061646d696e206f6620612070726f604082015275787920746f20746865207a65726f206164647265737360501b606082015260800190565b6020808252603b908201527f43616e6e6f742073657420612070726f787920696d706c656d656e746174696f60408201527f6e20746f2061206e6f6e2d636f6e74726163742061646472657373000000000060608201526080019056fea264697066735822122016caaac4041451574312e019b3e43420aa91c4be5a84645b25689033dbbf947564736f6c63430008000033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc";
