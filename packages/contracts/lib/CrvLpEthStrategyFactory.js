"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CrvLpEthStrategyFactory = void 0;
const contracts_1 = require("@ethersproject/contracts");
class CrvLpEthStrategyFactory extends contracts_1.ContractFactory {
    constructor(linkLibraryAddresses, signer) {
        super(_abi, CrvLpEthStrategyFactory.linkBytecode(linkLibraryAddresses), signer);
    }
    static linkBytecode(linkLibraryAddresses) {
        let linkedBytecode = _bytecode;
        linkedBytecode = linkedBytecode.replace(new RegExp("__\\$7512de7f1b86abca670bc1676b640da4fd\\$__", "g"), linkLibraryAddresses["__$7512de7f1b86abca670bc1676b640da4fd$__"]
            .replace(/^0x/, "")
            .toLowerCase());
        return linkedBytecode;
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static connect(address, signerOrProvider) {
        return new contracts_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.CrvLpEthStrategyFactory = CrvLpEthStrategyFactory;
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint8",
                name: "version",
                type: "uint8",
            },
        ],
        name: "Initialized",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "Paused",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint256",
                name: "newMaxDeviationThreshold",
                type: "uint256",
            },
        ],
        name: "SetWithdrawalMaxDeviationThreshold",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "lendingPool",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "StrategyPullFromLendingPool",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "Unpaused",
        type: "event",
    },
    {
        inputs: [],
        name: "LEFTOVER",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "MAX_BPS",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_addressProvider",
                type: "address",
            },
            {
                internalType: "address",
                name: "_underlying",
                type: "address",
            },
            {
                internalType: "uint64",
                name: "_tranche",
                type: "uint64",
            },
        ],
        name: "__BaseStrategy_init",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "addressProvider",
        outputs: [
            {
                internalType: "contract ILendingPoolAddressesProvider",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "autoCompoundRatio",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        name: "averageR",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "balanceOf",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "balanceOfPool",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "balanceOfRewards",
        outputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "token",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                ],
                internalType: "struct IBaseStrategy.TokenAmount[]",
                name: "rewards",
                type: "tuple[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "balanceOfWant",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "baseRewardsPool",
        outputs: [
            {
                internalType: "contract IBaseRewardsPool",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "baseStrategyVersion",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [],
        name: "booster",
        outputs: [
            {
                internalType: "contract IBooster",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "calculateAverageRate",
        outputs: [
            {
                internalType: "uint256",
                name: "r",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "crvToken",
        outputs: [
            {
                internalType: "contract IERC20",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "curvePool",
        outputs: [
            {
                internalType: "contract ICurveFi",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "curvePoolTokens",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "curveTokenBalances",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "cvxToken",
        outputs: [
            {
                internalType: "contract IERC20",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_token",
                type: "address",
            },
        ],
        name: "emitNonProtectedToken",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "ethNative",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "extraRewardsTended",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "extraTokens",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getName",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [],
        name: "getProtectedTokens",
        outputs: [
            {
                internalType: "address[]",
                name: "",
                type: "address[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "governance",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "harvest",
        outputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "token",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                ],
                internalType: "struct IBaseStrategy.TokenAmount[]",
                name: "harvested",
                type: "tuple[]",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_addressProvider",
                type: "address",
            },
            {
                internalType: "address",
                name: "_underlying",
                type: "address",
            },
            {
                internalType: "uint64",
                name: "_tranche",
                type: "uint64",
            },
            {
                internalType: "uint256",
                name: "_pid",
                type: "uint256",
            },
            {
                internalType: "uint8",
                name: "_poolSize",
                type: "uint8",
            },
            {
                internalType: "address",
                name: "_curvePool",
                type: "address",
            },
        ],
        name: "initialize",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "token",
                type: "address",
            },
        ],
        name: "isProtectedToken",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "isTendable",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [],
        name: "lastHarvestTime",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "lendingPool",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "pause",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "paused",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "pid",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "poolSize",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "pull",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_threshold",
                type: "uint256",
            },
        ],
        name: "setWithdrawalMaxDeviationThreshold",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "tend",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "crvTended",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "cvxTended",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "cvxCrvTended",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "extraRewardsTended",
                        type: "uint256",
                    },
                ],
                internalType: "struct IBaseStrategy.TendData",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "tranche",
        outputs: [
            {
                internalType: "uint64",
                name: "",
                type: "uint64",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "treasury",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "underlying",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "unpause",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "vToken",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_amount",
                type: "uint256",
            },
        ],
        name: "withdraw",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "withdrawAll",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_asset",
                type: "address",
            },
        ],
        name: "withdrawOther",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "withdrawalMaxDeviationThreshold",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        stateMutability: "payable",
        type: "receive",
    },
];
const _bytecode = "0x608060405260a680546001600160a01b03191673d9e1ce17f2641f24ae83637ab66a2cca9c378b9f17905534801561003657600080fd5b50613649806100466000396000f3fe6080604052600436106102965760003560e01c80636d27de3c1161015a578063a59a9973116100c1578063ed4bdce11161007a578063ed4bdce1146106e0578063f106845414610702578063f4337e6014610717578063f935b78514610737578063fb883d0c1461074c578063fd967f47146107615761029d565b8063a59a997314610657578063c1a3d44c1461066c578063c6def07614610681578063ceb0f62614610696578063d704ba9b146106ab578063e066ca13146106cb5761029d565b8063853828b611610113578063853828b6146105ee57806394112dba146106035780639bb1a99c146106185780639e356a041461062d5780639f934c7014610642578063a0fd55e4146103315761029d565b80636d27de3c146105585780636ebc0af1146105785780636f307dc31461059a578063722713f7146105af5780637e744eea146105c45780638456cb59146105d95761029d565b806338734bf0116101fe5780634ec18db9116101b75780634ec18db9146104c2578063524f5eeb146104e4578063549a72cf146104f95780635aa6e675146105195780635c975abb1461052e57806361d027b3146105435761029d565b806338734bf01461042157806339f60f86146104415780633f4ba83a14610456578063440368a31461046b5780634641257d1461048d578063479033d9146104a25761029d565b8063218751b211610250578063218751b2146103805780632954018c146103955780632e1a7d4d146103aa578063329eb839146103ca57806332d7d66d146103df57806337e43d37146103f45761029d565b806284fc3c146102a257806303bef16e146102cd57806311588086146102fa57806317d7de7c1461030f5780631bd43be3146103315780631d6e077a146103535761029d565b3661029d57005b600080fd5b3480156102ae57600080fd5b506102b7610776565b6040516102c49190612f86565b60405180910390f35b3480156102d957600080fd5b506102ed6102e83660046129aa565b61077b565b6040516102c4919061343e565b34801561030657600080fd5b506102ed61078d565b34801561031b57600080fd5b50610324610813565b6040516102c49190613067565b34801561033d57600080fd5b5061035161034c3660046129aa565b610833565b005b34801561035f57600080fd5b5061037361036e366004612e60565b610865565b6040516102c49190612eac565b34801561038c57600080fd5b5061037361088f565b3480156103a157600080fd5b5061037361089e565b3480156103b657600080fd5b506103516103c5366004612e60565b6108ad565b3480156103d657600080fd5b506102ed610a6b565b3480156103eb57600080fd5b50610373610c70565b34801561040057600080fd5b5061041461040f3660046129aa565b610c88565b6040516102c49190613016565b34801561042d57600080fd5b506102ed61043c366004612e90565b610d32565b34801561044d57600080fd5b50610373610d44565b34801561046257600080fd5b50610351610d53565b34801561047757600080fd5b50610480610d65565b6040516102c49190613413565b34801561049957600080fd5b506102b7610d7d565b3480156104ae57600080fd5b506103736104bd366004612e60565b610d8f565b3480156104ce57600080fd5b506104d7610d9f565b6040516102c49190613059565b3480156104f057600080fd5b50610373610da8565b34801561050557600080fd5b506103516105143660046129e9565b610dc0565b34801561052557600080fd5b50610373611086565b34801561053a57600080fd5b50610414611119565b34801561054f57600080fd5b50610373611122565b34801561056457600080fd5b50610351610573366004612a33565b611131565b34801561058457600080fd5b5061058d611935565b6040516102c49190613486565b3480156105a657600080fd5b5061037361194b565b3480156105bb57600080fd5b506102ed61195a565b3480156105d057600080fd5b50610414611976565b3480156105e557600080fd5b50610351611980565b3480156105fa57600080fd5b50610351611990565b34801561060f57600080fd5b50610373611a2f565b34801561062457600080fd5b50610373611a47565b34801561063957600080fd5b506102ed611a56565b34801561064e57600080fd5b506102ed611a5c565b34801561066357600080fd5b50610373611aba565b34801561067857600080fd5b506102ed611ac9565b34801561068d57600080fd5b50610373611afa565b3480156106a257600080fd5b506102ed611b12565b3480156106b757600080fd5b506103516106c6366004612e60565b611b18565b3480156106d757600080fd5b50610324611b82565b3480156106ec57600080fd5b506106f5611b9f565b6040516102c49190612f39565b34801561070e57600080fd5b506102ed611c10565b34801561072357600080fd5b506102ed610732366004612e60565b611c16565b34801561074357600080fd5b506102ed611c37565b34801561075857600080fd5b506102ed611c3d565b34801561076d57600080fd5b506102ed611c43565b606090565b606c6020526000908152604090205481565b60a1546040516370a0823160e01b81526000916001600160a01b0316906370a08231906107be903090600401612eac565b60206040518083038186803b1580156107d657600080fd5b505afa1580156107ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080e9190612e78565b905090565b60606040518060600160405280602781526020016135ed60279139905090565b61083b611c49565b61084481611c73565b60405162461bcd60e51b815260040161085c90613302565b60405180910390fd5b60a5818154811061087557600080fd5b6000918252602090912001546001600160a01b0316905081565b60a2546001600160a01b031681565b6065546001600160a01b031681565b6108b5611c99565b6108bd611c49565b806108da5760405162461bcd60e51b815260040161085c9061338b565b6068546040516370a0823160e01b81526000916001600160a01b0316906370a082319061090b903090600401612eac565b60206040518083038186803b15801561092357600080fd5b505afa158015610937573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095b9190612e78565b905081811015610979576109776109728284613535565b611cbe565b505b6068546040516370a0823160e01b81526000916001600160a01b0316906370a08231906109aa903090600401612eac565b60206040518083038186803b1580156109c257600080fd5b505afa1580156109d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fa9190612e78565b905082811015610a4e576000610a108483611d4b565b9050612710606a5485610a239190613516565b610a2d91906134f6565b811115610a4c5760405162461bcd60e51b815260040161085c906131ba565b505b6000610a5a8285611d80565b9050610a6581611d8f565b50505050565b6000610a75611c99565b6068546069546040516370a0823160e01b81526000926001600160a01b03908116926370a0823192610aad9290911690600401612eac565b60206040518083038186803b158015610ac557600080fd5b505afa158015610ad9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610afd9190612e78565b90508015610bd8576068546069546040516323b872dd60e01b81526001600160a01b03928316926323b872dd92610b3d9291169030908690600401612eda565b602060405180830381600087803b158015610b5757600080fd5b505af1158015610b6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8f9190612be0565b506066546040517f41c094631609360e5ddcb088ddb35d457392d95f374b7ee930a381e37c64949891610bcf916001600160a01b03909116908490612efe565b60405180910390a15b6068546040516370a0823160e01b81526000916001600160a01b0316906370a0823190610c09903090600401612eac565b60206040518083038186803b158015610c2157600080fd5b505afa158015610c35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c599190612e78565b90508015610c6a57610c6a81611e21565b50905090565b73d533a949740bb3306d119cc777fa900ba034cd5281565b60006001600160a01b038216610cb05760405162461bcd60e51b815260040161085c906130e8565b6000610cba611b9f565b905060005b8151811015610d2657818181518110610ce857634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b0316846001600160a01b03161415610d1457600192505050610d2d565b80610d1e8161354c565b915050610cbf565b5060009150505b919050565b606e6020526000908152604090205481565b60a1546001600160a01b031681565b610d5b611e5f565b610d63611e97565b565b610d6d612830565b610d75611c99565b61080e611ee9565b6060610d87611c99565b61080e61237d565b60a3818154811061087557600080fd5b60a85460ff1681565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b600054610100900460ff1615808015610de05750600054600160ff909116105b80610e015750610def30612397565b158015610e01575060005460ff166001145b610e1d5760405162461bcd60e51b815260040161085c9061316c565b6000805460ff191660011790558015610e40576000805461ff0019166101001790555b610e48611c99565b6001600160a01b038416610e6e5760405162461bcd60e51b815260040161085c906130e8565b610e766123c8565b606580546001600160a01b0319166001600160a01b03868116919091179182905560408051630261bf8b60e01b815290519290911691630261bf8b91600480820192602092909190829003018186803b158015610ed257600080fd5b505afa158015610ee6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0a91906129cd565b606680546001600160a01b03199081166001600160a01b039384161791829055606880549091168684161767ffffffffffffffff60a01b1916600160a01b6001600160401b0387811682029290921792839055604051633dd24bff60e11b815293851694637ba497fe94610f8c94918216939290910490911690600401612f17565b6102206040518083038186803b158015610fa557600080fd5b505afa158015610fb9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fdd9190612c9d565b60e00151606980546001600160a01b0319166001600160a01b0392831617908190551661101c5760405162461bcd60e51b815260040161085c90613280565b6032606a55612710606b55606f805461ffff19166107001790558015610a65576000805461ff00191690556040517f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989061107890600190613059565b60405180910390a150505050565b606554606854604051630847b4a360e01b81526000926001600160a01b031691630847b4a3916110c991600160a01b90046001600160401b031690600401613486565b60206040518083038186803b1580156110e157600080fd5b505afa1580156110f5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080e91906129cd565b60335460ff1690565b6067546001600160a01b031681565b61113c868686610dc0565b60a783905560a8805460ff191660ff8416179055604051631526fe2760e01b815260009073f403c135812408bfbe8713b5a23a04b3d48aae3190631526fe279061118a90879060040161343e565b60c06040518083038186803b1580156111a257600080fd5b505afa1580156111b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111da9190612bfa565b606081015160a180546001600160a01b03199081166001600160a01b039384161790915560a2805490911691851691909117905560a85490915060ff166001600160401b0381111561123c57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015611265578160200160208202803683370190505b50805161127a9160a391602090910190612858565b5060a85460ff166001600160401b038111156112a657634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156112cf578160200160208202803683370190505b5080516112e49160a4916020909101906128bd565b5060005b60a85460ff90811690821610156116155760a25460405163c661065760e01b81526001600160a01b039091169063c661065790611329908490600401613059565b60206040518083038186803b15801561134157600080fd5b505afa158015611355573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137991906129cd565b60a38260ff168154811061139d57634e487b7160e01b600052603260045260246000fd5b600091825260209091200180546001600160a01b0319166001600160a01b0392831617905560a254604051634903b0d160e01b8152911690634903b0d1906113e9908490600401613059565b60206040518083038186803b15801561140157600080fd5b505afa158015611415573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114399190612e78565b60a48260ff168154811061145d57634e487b7160e01b600052603260045260246000fd5b906000526020600020018190555073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6001600160a01b031660a38260ff16815481106114ad57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b031614156115575760a654604051639ce25b6d60e01b815273__$7512de7f1b86abca670bc1676b640da4fd$__91639ce25b6d916115229173c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2916001600160a01b0390911690600401612ec0565b60006040518083038186803b15801561153a57600080fd5b505af415801561154e573d6000803e3d6000fd5b50505050611603565b73__$7512de7f1b86abca670bc1676b640da4fd$__639ce25b6d60a38360ff168154811061159557634e487b7160e01b600052603260045260246000fd5b60009182526020909120015460a6546040516001600160e01b031960e085901b1681526115d2926001600160a01b03908116921690600401612ec0565b60006040518083038186803b1580156115ea57600080fd5b505af41580156115fe573d6000803e3d6000fd5b505050505b8061160d81613567565b9150506112e8565b50606854604051639ce25b6d60e01b815273__$7512de7f1b86abca670bc1676b640da4fd$__91639ce25b6d9161166e916001600160a01b03169073f403c135812408bfbe8713b5a23a04b3d48aae3190600401612ec0565b60006040518083038186803b15801561168657600080fd5b505af415801561169a573d6000803e3d6000fd5b505060a654604051639ce25b6d60e01b815273__$7512de7f1b86abca670bc1676b640da4fd$__9350639ce25b6d92506116f89173d533a949740bb3306d119cc777fa900ba034cd52916001600160a01b0390911690600401612ec0565b60006040518083038186803b15801561171057600080fd5b505af4158015611724573d6000803e3d6000fd5b505060a654604051639ce25b6d60e01b815273__$7512de7f1b86abca670bc1676b640da4fd$__9350639ce25b6d925061178291734e3fbd56cd56c3e72c1403e103b45db9da5b9d2b916001600160a01b0390911690600401612ec0565b60006040518083038186803b15801561179a57600080fd5b505af41580156117ae573d6000803e3d6000fd5b505060a154604051631ec4960760e31b815273__$7512de7f1b86abca670bc1676b640da4fd$__935063f624b03892506117f4916001600160a01b031690600401612eac565b60006040518083038186803b15801561180c57600080fd5b505af4158015611820573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526118489190810190612aab565b805161185c9160a591602090910190612858565b5060005b60a55460ff8216101561192b5773__$7512de7f1b86abca670bc1676b640da4fd$__639ce25b6d60a58360ff16815481106118ab57634e487b7160e01b600052603260045260246000fd5b60009182526020909120015460a6546040516001600160e01b031960e085901b1681526118e8926001600160a01b03908116921690600401612ec0565b60006040518083038186803b15801561190057600080fd5b505af4158015611914573d6000803e3d6000fd5b50505050808061192390613567565b915050611860565b5050505050505050565b606854600160a01b90046001600160401b031681565b6068546001600160a01b031681565b600061196461078d565b61196c611ac9565b61080e91906134de565b600061080e6123f7565b6119886123fc565b610d63612434565b611998611c49565b6119a0612472565b6068546040516370a0823160e01b81526000916001600160a01b0316906370a08231906119d1903090600401612eac565b60206040518083038186803b1580156119e957600080fd5b505afa1580156119fd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a219190612e78565b9050611a2c81611d8f565b50565b734e3fbd56cd56c3e72c1403e103b45db9da5b9d2b81565b6069546001600160a01b031681565b606b5481565b600080805b60078160ff161015611a9e5760ff81166000908152606e6020526040902054611a8a90836134de565b915080611a9681613567565b915050611a61565b50606f54611ab490610100900460ff16826134f6565b91505090565b6066546001600160a01b031681565b6068546040516370a0823160e01b81526000916001600160a01b0316906370a08231906107be903090600401612eac565b73f403c135812408bfbe8713b5a23a04b3d48aae3181565b606d5481565b611b20611e5f565b612710811115611b425760405162461bcd60e51b815260040161085c906133dc565b606a8190556040517f8ecea8428a8421d1b7c9bccc8078372994cca08df3683fa652c0d3d453e9281b90611b7790839061343e565b60405180910390a150565b6040805180820190915260038152620312e360ec1b602082015290565b6040805160018082528183019092526060916000919060208083019080368337505060685482519293506001600160a01b031691839150600090611bf357634e487b7160e01b600052603260045260246000fd5b6001600160a01b0390921660209283029190910190910152905090565b60a75481565b60a48181548110611c2657600080fd5b600091825260209091200154905081565b6103e881565b606a5481565b61271081565b6069546001600160a01b03163314610d635760405162461bcd60e51b815260040161085c90613226565b611c7c81610c88565b15611a2c5760405162461bcd60e51b815260040161085c90613249565b611ca1611119565b15610d635760405162461bcd60e51b815260040161085c90613142565b60a154604051636197390160e11b81526000916001600160a01b03169063c32e720290611cf2908590600190600401613447565b602060405180830381600087803b158015611d0c57600080fd5b505af1158015611d20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d449190612be0565b5090919050565b600081831015611d6d5760405162461bcd60e51b815260040161085c90613361565b611d778284613535565b90505b92915050565b6000818310611d445781611d77565b8015611a2c5760685460695460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb92611dcb929116908590600401612efe565b602060405180830381600087803b158015611de557600080fd5b505af1158015611df9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e1d9190612be0565b5050565b60a7546040516321d0683360e11b815273f403c135812408bfbe8713b5a23a04b3d48aae31916343a0d06691611dcb9190859060019060040161346e565b611e67611086565b6001600160a01b0316336001600160a01b031614610d635760405162461bcd60e51b815260040161085c90613339565b611e9f6124d1565b6033805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611ed26124f5565b604051611edf9190612eac565b60405180910390a1565b611ef1612830565b60a1546040516246613160e11b81526001600160a01b0390911690628cc26290611f1f903090600401612eac565b60206040518083038186803b158015611f3757600080fd5b505afa158015611f4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f6f9190612e78565b611f8b5760405162461bcd60e51b815260040161085c906133ad565b6000611f9561078d565b60a15460a65460405163157a8eff60e01b8152929350600092839273__$7512de7f1b86abca670bc1676b640da4fd$__9263157a8eff92611ff3926001600160a01b039081169260a39260a49260a592606c92911690600401613021565b60c06040518083038186803b15801561200b57600080fd5b505af415801561201f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120439190612ddb565b506040516370a0823160e01b8152919350915060009073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2906370a0823190612083903090600401612eac565b60206040518083038186803b15801561209b57600080fd5b505afa1580156120af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120d39190612e78565b11156121b7576040516370a0823160e01b815273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc290632e1a7d4d9082906370a0823190612118903090600401612eac565b60206040518083038186803b15801561213057600080fd5b505afa158015612144573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121689190612e78565b6040518263ffffffff1660e01b8152600401612184919061343e565b600060405180830381600087803b15801561219e57600080fd5b505af11580156121b2573d6000803e3d6000fd5b505050505b606f54604051636e76a9ed60e11b8152479160009173__$7512de7f1b86abca670bc1676b640da4fd$__9163dced53da916121fc9160ff16908690889060040161349a565b604080518083038186803b15801561221357600080fd5b505af4158015612227573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061224b9190612b5d565b60a254604051630b4c7e4d60e01b81529192506001600160a01b031690630b4c7e4d908490612281908590600090600401612fde565b6000604051808303818588803b15801561229a57600080fd5b505af11580156122ae573d6000803e3d6000fd5b50506068546040516370a0823160e01b815261233c94506001600160a01b0390911692506370a0823191506122e7903090600401612eac565b60206040518083038186803b1580156122ff57600080fd5b505afa158015612313573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123379190612e78565b611e21565b600061234661078d565b905061235b6123558783613535565b876124f9565b5042606d5561237261236d8783613535565b61258b565b509294505050505090565b606060405162461bcd60e51b815260040161085c9061310b565b600080826001600160a01b0316803b806020016040519081016040528181526000908060200190933c511192915050565b600054610100900460ff166123ef5760405162461bcd60e51b815260040161085c906132b7565b610d6361273c565b600190565b612404611086565b6001600160a01b0316336001600160a01b031614610d635760405162461bcd60e51b815260040161085c90613201565b61243c611c99565b6033805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611ed26124f5565b60a1546040516324f81cd160e11b81526001600160a01b03909116906349f039a2906124a390600190600401613016565b600060405180830381600087803b1580156124bd57600080fd5b505af1158015610a65573d6000803e3d6000fd5b6124d9611119565b610d635760405162461bcd60e51b815260040161085c906130ba565b3390565b60008161250461276f565b61250e9085613516565b61251891906134f6565b6125249061016d613516565b606f805460ff9081166000908152606e60205260408120849055825493945092169161254f83613567565b825460ff91821661010093840a9081029083021990911617909255606f5490810482169116109050611d7a57606f805460ff1916905592915050565b606654606854604051633dd24bff60e11b81526000926001600160a01b0390811692637ba497fe926125d392821691600160a01b90046001600160401b031690600401612f17565b6102206040518083038186803b1580156125ec57600080fd5b505afa158015612600573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126249190612c9d565b51519050600061263d6126368361277f565b8490612789565b606954606654606854604051633dd24bff60e11b81529394506001600160a01b039283169363e2f024aa938693811692637ba497fe9261269392821691600160a01b90046001600160401b031690600401612f17565b6102206040518083038186803b1580156126ac57600080fd5b505afa1580156126c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126e49190612c9d565b602001516040518363ffffffff1660e01b8152600401612705929190613457565b600060405180830381600087803b15801561271f57600080fd5b505af1158015612733573d6000803e3d6000fd5b50505050505050565b600054610100900460ff166127635760405162461bcd60e51b815260040161085c906132b7565b6033805460ff19169055565b6b033b2e3c9fd0803ce800000090565b60501c61ffff1690565b6000821580612796575081155b156127a357506000611d7a565b816127b160026127106134f6565b6127bd90600019613535565b6127c791906134f6565b83111560405180604001604052806002815260200161068760f31b815250906128035760405162461bcd60e51b815260040161085c9190613067565b506127106128126002826134f6565b61281c8486613516565b61282691906134de565b611d7791906134f6565b6040518060800160405280600081526020016000815260200160008152602001600081525090565b8280548282559060005260206000209081019282156128ad579160200282015b828111156128ad57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190612878565b506128b99291506128f8565b5090565b8280548282559060005260206000209081019282156128ad579160200282015b828111156128ad5782518255916020019190600101906128dd565b5b808211156128b957600081556001016128f9565b8051610d2d816135b3565b80518015158114610d2d57600080fd5b600060208284031215612939578081fd5b604051602081018181106001600160401b038211171561295b5761295b61359d565b6040529151825250919050565b80516001600160801b0381168114610d2d57600080fd5b805164ffffffffff81168114610d2d57600080fd5b8051610d2d816135c8565b8051610d2d816135dd565b6000602082840312156129bb578081fd5b81356129c6816135b3565b9392505050565b6000602082840312156129de578081fd5b81516129c6816135b3565b6000806000606084860312156129fd578182fd5b8335612a08816135b3565b92506020840135612a18816135b3565b91506040840135612a28816135c8565b809150509250925092565b60008060008060008060c08789031215612a4b578384fd5b8635612a56816135b3565b95506020870135612a66816135b3565b94506040870135612a76816135c8565b9350606087013592506080870135612a8d816135dd565b915060a0870135612a9d816135b3565b809150509295509295509295565b60006020808385031215612abd578182fd5b82516001600160401b0380821115612ad3578384fd5b818501915085601f830112612ae6578384fd5b815181811115612af857612af861359d565b8381029150612b088483016134b5565b8181528481019084860184860187018a1015612b22578788fd5b8795505b83861015612b505780519450612b3b856135b3565b84835260019590950194918601918601612b26565b5098975050505050505050565b600060408284031215612b6e578081fd5b82601f830112612b7c578081fd5b604051604081018181106001600160401b0382111715612b9e57612b9e61359d565b8060405250808385604086011115612bb4578384fd5b835b6002811015612bd5578151835260209283019290910190600101612bb6565b509195945050505050565b600060208284031215612bf1578081fd5b611d7782612918565b600060c08284031215612c0b578081fd5b60405160c081018181106001600160401b0382111715612c2d57612c2d61359d565b6040528251612c3b816135b3565b81526020830151612c4b816135b3565b60208201526040830151612c5e816135b3565b6040820152612c6f6060840161290d565b6060820152612c806080840161290d565b6080820152612c9160a08401612918565b60a08201529392505050565b6000610220808385031215612cb0578182fd5b612cb9816134b5565b9050612cc58484612928565b8152612cd360208401612968565b6020820152612ce460408401612968565b6040820152612cf560608401612968565b6060820152612d0660808401612968565b6080820152612d1760a08401612968565b60a0820152612d2860c0840161297f565b60c0820152612d3960e0840161290d565b60e0820152610100612d4c81850161290d565b90820152610120612d5e84820161290d565b90820152610140612d7084820161290d565b90820152610160612d8284820161299f565b90820152610180612d94848201612994565b908201526101a083810151908201526101c0612db1818501612918565b908201526101e0612dc3848201612918565b90820152610200928301519281019290925250919050565b600080600083850360c0811215612df0578182fd5b6080811215612dfd578182fd5b50604051608081018181106001600160401b0382111715612e2057612e2061359d565b806040525084518152602085015160208201526040850151604082015260608501516060820152809350506080840151915060a084015190509250925092565b600060208284031215612e71578081fd5b5035919050565b600060208284031215612e89578081fd5b5051919050565b600060208284031215612ea1578081fd5b81356129c6816135dd565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039290921682526001600160401b0316602082015260400190565b6020808252825182820181905260009190848201906040850190845b81811015612f7a5783516001600160a01b031683529284019291840191600101612f55565b50909695505050505050565b602080825282518282018190526000919060409081850190868401855b82811015612fd157815180516001600160a01b03168552860151868501529284019290850190600101612fa3565b5091979650505050505050565b60608101818460005b6002811015613006578151835260209283019290910190600101612fe7565b5050508260408301529392505050565b901515815260200190565b6001600160a01b039687168152602081019590955260408501939093526060840191909152608083015290911660a082015260c00190565b60ff91909116815260200190565b6000602080835283518082850152825b8181101561309357858101830151858201604001528201613077565b818111156130a45783604083870101525b50601f01601f1916929092016040019392505050565b60208082526014908201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604082015260600190565b60208082526009908201526804164647265737320360bc1b604082015260600190565b60208082526017908201527f68617276657374206e6f7420696d706c656d656e746564000000000000000000604082015260600190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60208082526027908201527f77697468647261772d6578636565642d6d61782d646576696174696f6e2d74686040820152661c995cda1bdb1960ca1b606082015260800190565b6020808252600b908201526a6f6e6c795061757365727360a81b604082015260600190565b6020808252600990820152681bdb9b1e55985d5b1d60ba1b604082015260600190565b60208082526017908201527f5f6f6e6c794e6f7450726f746563746564546f6b656e73000000000000000000604082015260600190565b6020808252601e908201527f76546f6b656e20616464726573732063616e206e6f74206265207a65726f0000604082015260600190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6020808252601d908201527f45787472612072657761726473206e6f7420696d706c656d656e746564000000604082015260600190565b6020808252600e908201526d6f6e6c79476f7665726e616e636560901b604082015260600190565b60208082526010908201526f309039b437bab632103132901f1e903160811b604082015260600190565b6020808252600890820152670416d6f756e7420360c41b604082015260600190565b60208082526015908201527472657761726473206e6f742073747265616d696e6760581b604082015260600190565b6020808252601f908201527f5f7468726573686f6c642073686f756c64206265203c3d204d41585f42505300604082015260600190565b8151815260208083015190820152604080830151908201526060918201519181019190915260800190565b90815260200190565b9182521515602082015260400190565b9182526001600160801b0316602082015260400190565b92835260208301919091521515604082015260600190565b6001600160401b0391909116815260200190565b60ff9390931683526020830191909152604082015260600190565b6040518181016001600160401b03811182821017156134d6576134d661359d565b604052919050565b600082198211156134f1576134f1613587565b500190565b60008261351157634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561353057613530613587565b500290565b60008282101561354757613547613587565b500390565b600060001982141561356057613560613587565b5060010190565b600060ff821660ff81141561357e5761357e613587565b60010192915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114611a2c57600080fd5b6001600160401b0381168114611a2c57600080fd5b60ff81168114611a2c57600080fdfe564d455820284c5020546f6b656e204e616d6520476f6573204865726529205374726174656779a2646970667358221220a42f1810c554cc475795f69f32768b4de8fe58b9f9a77c0bd5c7aea862b1ad8a64736f6c63430008000033";
//# sourceMappingURL=CrvLpEthStrategyFactory.js.map